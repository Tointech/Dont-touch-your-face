{"version":3,"sources":["../../../src/io/router_registry.ts","../../../src/io/indexed_db.ts","../../../src/io/local_storage.ts","../../../src/io/model_management.ts","../../../src/platforms/platform_browser.ts","../../src/base_side_effects.ts","../../../src/io/browser_files.ts","../../../src/io/progress.ts","../../../src/io/weights_loader.ts","../../../src/io/http.ts","../../../src/io/passthrough.ts","../../../src/ops/confusion_matrix.ts","../../../src/ops/browser.ts","../../../src/ops/gather_nd_util.ts","../../../src/ops/slice_util.ts","../../src/serialization.ts","../../src/version.ts","../../../src/optimizers/optimizer.ts","../../../src/optimizers/adadelta_optimizer.ts","../../../src/optimizers/adagrad_optimizer.ts","../../../src/optimizers/adam_optimizer.ts","../../../src/optimizers/adamax_optimizer.ts","../../../src/optimizers/sgd_optimizer.ts","../../../src/optimizers/momentum_optimizer.ts","../../../src/optimizers/rmsprop_optimizer.ts","../../../src/optimizers/optimizer_constructors.ts","../../src/train.ts","../../../src/ops/concat_util.ts","../../../src/ops/reduce_util.ts","../../../src/ops/rotate_util.ts","../../../src/ops/array_ops_util.ts","../../../src/ops/selu_util.ts","../../../src/ops/erf_util.ts","../../src/log.ts","../../../src/backends/complex_util.ts","../../../src/backends/einsum_util.ts","../../../src/ops/split_util.ts","../../../src/ops/segment_util.ts","../../../src/backends/backend_util.ts","../../../../src/operations/executors/utils.ts","../../src/tensor_util_env.ts","../../../src/ops/operation.ts","../../src/profiler.ts","../../src/tape.ts","../../src/engine.ts","../../src/kernel_names.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../../src/util_base.ts","../../../src/ops/reshape.ts","../../src/hash_util.ts","../../src/util.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../../../src/ops/mul.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../src/ops/add.ts","../../../src/ops/sub.ts","../../src/environment.ts","../../src/tensor_util.ts","../../../src/ops/scalar.ts","../../src/globals.ts","../../../src/ops/div.ts","../../src/tensor_format.ts","../../src/tensor.ts","../../../src/ops/cast.ts","../../../src/ops/mat_mul.ts","../../../src/ops/broadcast_util.ts","../../../src/ops/slice.ts","../../../src/ops/sum.ts","../../../src/io/io_utils.ts","../../src/gradients.ts","../../../src/ops/concat.ts","../../../src/ops/loss_ops_utils.ts","../../../src/ops/conv_util.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../../../src/ops/zeros_like.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../../../src/ops/square.ts","../../../src/ops/abs.ts","../../../src/ops/fused_util.ts","../../../src/ops/buffer.ts","../../../src/ops/tensor1d.ts","../../../src/ops/tensor_ops_util.ts","../../../src/ops/neg.ts","../node_modules/react/jsx-runtime.js","../../../src/operations/operation_mapper.ts","../../../src/ops/complex.ts","../../../src/ops/reverse.ts","../node_modules/webpack/buildin/amd-define.js","../../../src/ops/clone.ts","../../../src/ops/sqrt.ts","../../../src/ops/exp.ts","../node_modules/react/index.js","../../../src/ops/where.ts","../../src/kernel_registry.ts","../../../src/backends/non_max_suppression_util.ts","../../../src/backends/non_max_suppression_impl.ts","../../../src/ops/axis_util.ts","../../../src/ops/pad.ts","../../../src/ops/tensor.ts","../../../src/ops/sigmoid.ts","../../../src/ops/max.ts","../../../src/data/compiled_api.ts","../../../src/ops/pow.ts","../../../src/ops/log.ts","../../../src/ops/split.ts","../../../src/ops/stack.ts","../../../src/ops/ones.ts","../../../src/ops/expand_dims.ts","../../src/types.ts","../../../src/ops/fill.ts","../../../src/ops/conv2d.ts","../../../src/ops/zeros.ts","../../../src/ops/relu.ts","../../../src/ops/batchnorm.ts","../../../src/ops/batchnorm_util.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../src/ops/rand_util.ts","../../../src/ops/range.ts","../../../../src/operations/custom_op/register.ts","../../../src/ops/greater.ts","../../../src/ops/logical_and.ts","../../../src/ops/mean.ts","../../../src/ops/real.ts","../../../../src/ops/spectral/ifft.ts","../../../src/ops/transpose.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../../src/global_util.ts","../node_modules/webpack/buildin/module.js","../node_modules/webpack/buildin/amd-options.js","../../../src/ops/basic_lstm_cell.ts","../../../src/ops/batchnorm2d.ts","../../../src/ops/batchnorm3d.ts","../../../src/ops/batchnorm4d.ts","../../../src/ops/concat_1d.ts","../../../src/ops/concat_2d.ts","../../../src/ops/concat_3d.ts","../../../src/ops/concat_4d.ts","../../../src/ops/conv3d_backprop_input.ts","../../../src/ops/conv3d_transpose.ts","../../../src/ops/diag.ts","../../../src/ops/dot.ts","../../../src/ops/eye.ts","../../../src/ops/is_finite.ts","../../../src/ops/is_inf.ts","../../../src/ops/log_sigmoid.ts","../../../src/ops/log_sum_exp.ts","../../../src/ops/logical_xor.ts","../../../src/ops/meshgrid.ts","../../../src/ops/moments.ts","../../../src/ops/multi_rnn_cell.ts","../../../src/ops/outer_product.ts","../../../src/ops/pad1d.ts","../../../src/ops/pad2d.ts","../../../src/ops/pad3d.ts","../../../src/ops/pad4d.ts","../../../src/ops/pool.ts","../../../src/ops/rand.ts","../../../src/ops/random_gamma.ts","../../../src/ops/random_normal.ts","../../../src/ops/reverse_1d.ts","../../../src/ops/reverse_2d.ts","../../../src/ops/reverse_3d.ts","../../../src/ops/reverse_4d.ts","../../../src/ops/separable_conv2d.ts","../../../src/ops/slice1d.ts","../../../src/ops/slice2d.ts","../../../src/ops/slice3d.ts","../../../src/ops/slice4d.ts","../../../src/ops/tensor2d.ts","../../../src/ops/tensor4d.ts","../../../src/ops/tensor5d.ts","../../../src/ops/tensor6d.ts","../../../src/ops/unsorted_segment_sum.ts","../../../src/ops/variable.ts","../../../src/ops/boolean_mask.ts","../../../src/ops/norm.ts","../../../src/ops/moving_average.ts","../../../src/ops/dropout.ts","../../../src/ops/dropout_util.ts","../../../src/ops/signal_ops_util.ts","../../../src/ops/in_top_k.ts","../../../src/ops/conv2d_backprop_filter.ts","../../../../src/ops/fused/conv2d.ts","../../../src/ops/depthwise_conv2d_native_backprop_filter.ts","../../../src/ops/depthwise_conv2d_native_backprop_input.ts","../../../../src/ops/fused/depthwise_conv2d.ts","../../../../src/ops/fused/mat_mul.ts","../../../../src/ops/signal/hamming_window.ts","../../../../src/ops/signal/hann_window.ts","../../../../src/ops/signal/frame.ts","../../../../src/ops/signal/stft.ts","../../../../src/ops/image/crop_and_resize.ts","../../../../src/ops/image/flip_left_right.ts","../../../../src/ops/image/rotate_with_offset.ts","../../../src/ops/nonmax_util.ts","../../../../src/ops/image/non_max_suppression.ts","../../../../src/ops/image/non_max_suppression_async.ts","../../../../src/ops/image/non_max_suppression_with_score.ts","../../../../src/ops/image/non_max_suppression_with_score_async.ts","../../../../src/ops/image/non_max_suppression_padded.ts","../../../../src/ops/image/non_max_suppression_padded_async.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray.js","../../../../src/ops/image/resize_bilinear.ts","../../../../src/ops/image/resize_nearest_neighbor.ts","../../../../src/ops/image/threshold.ts","../../../../src/ops/image/transform.ts","../../../../src/ops/linalg/band_part.ts","../../../../src/ops/linalg/gram_schmidt.ts","../../../../src/ops/linalg/qr.ts","../../../../src/ops/losses/compute_weighted_loss.ts","../../../../src/ops/losses/absolute_difference.ts","../../../../src/ops/losses/cosine_distance.ts","../../../../src/ops/losses/hinge_loss.ts","../../../../src/ops/losses/huber_loss.ts","../../../../src/ops/losses/log_loss.ts","../../../../src/ops/losses/mean_squared_error.ts","../../../../src/ops/losses/sigmoid_cross_entropy.ts","../../../../src/ops/losses/softmax_cross_entropy.ts","../../../../src/ops/sparse/sparse_fill_empty_rows.ts","../../../../src/ops/sparse/sparse_reshape.ts","../../../../src/ops/sparse/sparse_segment_mean.ts","../../../../src/ops/sparse/sparse_segment_sum.ts","../../../../src/ops/string/string_n_grams.ts","../../../../src/ops/string/string_split.ts","../../../../src/ops/string/string_to_hash_bucket_fast.ts","../../../src/ops/ops.ts","../../../src/ops/scatter_nd_util.ts","../../../src/ops/depthwise_conv2d.ts","../../../src/ops/imag.ts","../../../src/ops/less_equal.ts","../../../../src/ops/spectral/fft.ts","../../../../src/ops/spectral/rfft.ts","../../../src/ops/squeeze.ts","../../../src/ops/unstack.ts","../../../src/ops/broadcast_to.ts","../../../src/ops/tile.ts","../../src/test_util.ts","../node_modules/seedrandom/index.js","../node_modules/webpack/buildin/global.js","../../src/flags.ts","../../../src/backends/backend.ts","../../../src/ops/tanh.ts","../../../src/ops/min.ts","../../../src/ops/one_hot.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../src/io/types.ts","../node_modules/process/browser.js","../../src/device_util.ts","../../../src/ops/print.ts","../../../src/ops/floorDiv.ts","../../../src/ops/maximum.ts","../../../src/ops/avg_pool.ts","../../../src/ops/batch_to_space_nd.ts","../../../src/ops/bincount.ts","../../../src/ops/equal.ts","../../../src/ops/elu.ts","../../../src/ops/floor.ts","../../../src/ops/gather.ts","../../../src/ops/greater_equal.ts","../../../src/ops/leaky_relu.ts","../../../src/ops/log1p.ts","../../../src/ops/softplus.ts","../../../src/ops/logical_not.ts","../../../src/ops/logical_or.ts","../../../src/ops/max_pool.ts","../../../src/ops/minimum.ts","../../../src/ops/not_equal.ts","../../../src/ops/space_to_batch_nd.ts","../../../src/ops/prelu.ts","../../../src/ops/random_uniform.ts","../../../src/ops/relu6.ts","../../../src/ops/round.ts","../../../../src/ops/spectral/irfft.ts","../../../src/ops/squared_difference.ts","../../../src/ops/step.ts","../../../src/ops/tensor3d.ts","../../../src/ops/where_async.ts","../../../src/backends/where_impl.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../../../src/ops/conv2d_backprop_input.ts","../node_modules/object-assign/index.js","../node_modules/long/src/long.js","../node_modules/@mycv/f8-notification/dist/index.es.js","../node_modules/buffer/index.js","../../../src/ops/acos.ts","../../../src/ops/acosh.ts","../../../src/ops/add_n.ts","../../../src/ops/all.ts","../../../src/ops/any.ts","../../../src/ops/arg_max.ts","../../../src/ops/arg_min.ts","../../../src/ops/asin.ts","../../../src/ops/asinh.ts","../../../src/ops/atan.ts","../../../src/ops/atan2.ts","../../../src/ops/atanh.ts","../../../src/ops/avg_pool_3d.ts","../../../src/ops/ceil.ts","../../../src/ops/clip_by_value.ts","../../../src/ops/conv1d.ts","../../../src/ops/conv2d_transpose.ts","../../../src/ops/conv3d.ts","../../../src/ops/cos.ts","../../../src/ops/cosh.ts","../../../src/ops/cumsum.ts","../../../src/ops/dense_bincount.ts","../../../src/ops/depth_to_space.ts","../../../src/ops/dilation2d.ts","../../../src/ops/div_no_nan.ts","../../../src/ops/einsum.ts","../../../src/ops/erf.ts","../../../src/ops/expm1.ts","../../../src/ops/is_nan.ts","../../../src/ops/less.ts","../../../src/ops/linspace.ts","../../../src/ops/local_response_normalization.ts","../../../src/ops/log_softmax.ts","../../../src/ops/max_pool_3d.ts","../../../src/ops/max_pool_with_argmax.ts","../../../src/ops/mirror_pad.ts","../../../src/ops/mod.ts","../../../src/ops/multinomial.ts","../../../src/ops/ones_like.ts","../../../src/ops/prod.ts","../../../src/ops/reciprocal.ts","../../../src/ops/rsqrt.ts","../../../src/ops/selu.ts","../../../src/ops/setdiff1d_async.ts","../../../src/ops/sign.ts","../../../src/ops/sin.ts","../../../src/ops/sinh.ts","../../../src/ops/softmax.ts","../../../src/ops/strided_slice.ts","../../../src/ops/tan.ts","../../../src/ops/topk.ts","../../../src/ops/truncated_normal.ts","../../../src/ops/unique.ts","../../../src/ops/scatter_nd.ts","../../../src/ops/gather_nd.ts","../../src/browser_util.ts","../../../src/ops/sparse_to_dense_util.ts","../../../src/ops/sparse_to_dense.ts","../node_modules/react-dom/index.js","../../../../src/operations/op_list/arithmetic.ts","../../../../src/operations/op_list/basic_math.ts","../../../../src/operations/op_list/control.ts","../../../../src/operations/op_list/convolution.ts","../../../../src/operations/op_list/creation.ts","../../../../src/operations/op_list/dynamic.ts","../../../../src/operations/op_list/evaluation.ts","../../../../src/operations/op_list/graph.ts","../../../../src/operations/op_list/hash_table.ts","../../../../src/operations/op_list/image.ts","../../../../src/operations/op_list/logical.ts","../../../../src/operations/op_list/matrices.ts","../../../../src/operations/op_list/normalization.ts","../../../../src/operations/op_list/reduction.ts","../../../../src/operations/op_list/slice_join.ts","../../../../src/operations/op_list/sparse.ts","../../../../src/operations/op_list/spectral.ts","../../../../src/operations/op_list/string.ts","../../../../src/operations/op_list/transformation.ts","../node_modules/@tensorflow-models/knn-classifier/dist/knn-classifier.esm.js","../node_modules/howler/dist/howler.js","../../../../src/operations/custom_op/node_value_impl.ts","../../../src/executor/tensor_utils.ts","../../../src/executor/tensor_array.ts","../../../src/executor/tensor_list.ts","../../../../src/operations/executors/control_executor.ts","../../../../src/operations/executors/convolution_executor.ts","../../../../src/operations/executors/dynamic_executor.ts","../../../src/executor/hash_table.ts","../../../../src/operations/executors/hash_table_executor.ts","../../../src/operations/operation_executor.ts","../../../../src/operations/executors/arithmetic_executor.ts","../../../../src/operations/executors/basic_math_executor.ts","../../../../src/operations/executors/creation_executor.ts","../../../../src/operations/executors/evaluation_executor.ts","../../../../src/operations/executors/image_executor.ts","../../../../src/operations/executors/graph_executor.ts","../../../../src/operations/executors/logical_executor.ts","../../../../src/operations/executors/matrices_executor.ts","../../../../src/operations/executors/normalization_executor.ts","../../../../src/operations/executors/reduction_executor.ts","../../../../src/operations/executors/slice_join_executor.ts","../../../../src/operations/executors/sparse_executor.ts","../../../../src/operations/executors/spectral_executor.ts","../../../../src/operations/executors/string_executor.ts","../../../../src/operations/executors/transformation_executor.ts","../../../src/executor/execution_context.ts","../../../src/executor/model_analysis.ts","../../../src/executor/graph_executor.ts","../../../src/executor/resource_manager.ts","../../../src/executor/graph_model.ts","../node_modules/@tensorflow-models/mobilenet/dist/mobilenet.esm.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/scheduler/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../../../src/platforms/platform_node.ts","../node_modules/seedrandom/lib/alea.js","../node_modules/seedrandom/lib/xor128.js","../node_modules/seedrandom/lib/xorwow.js","../node_modules/seedrandom/lib/xorshift7.js","../node_modules/seedrandom/lib/xor4096.js","../node_modules/seedrandom/lib/tychei.js","../node_modules/seedrandom/seedrandom.js","../node_modules/timers-browserify/main.js","../node_modules/setimmediate/setImmediate.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/superPropBase.js","../../src/cpu_util.ts","../../src/backend_cpu.ts","../../../src/utils/unary_utils.ts","../../src/base.ts","../../../src/kernels/Elu.ts","../../../src/kernels/Identity.ts","../../../src/kernels/LeakyRelu.ts","../../../src/utils/binary_impl.ts","../../../src/kernels/Prelu.ts","../../../src/kernels/Relu.ts","../../../src/kernels/Relu6.ts","../../../src/kernels/Sigmoid.ts","../../../src/utils/fused_utils.ts","../../../src/kernels/Complex.ts","../../../src/utils/zeros_impl.ts","../../../src/kernels/Real.ts","../../../src/kernels/Cast.ts","../../../src/utils/binary_utils.ts","../../../src/kernels/Add.ts","../../../src/kernels/Reshape.ts","../../../src/kernels/BatchMatMul.ts","../../../src/kernels/_FusedMatMul.ts","../../../src/kernels/Abs.ts","../../../src/kernels/Acos.ts","../../../src/kernels/Acosh.ts","../../../src/kernels/AddN.ts","../../../src/kernels/Transpose_impl.ts","../../../src/kernels/Transpose.ts","../../../src/kernels/All.ts","../../../src/kernels/Any.ts","../../../src/kernels/ArgMax.ts","../../../src/kernels/ArgMin.ts","../../../src/kernels/Asin.ts","../../../src/kernels/Asinh.ts","../../../src/kernels/Atan.ts","../../../src/kernels/Atan2.ts","../../../src/kernels/Atanh.ts","../../../src/utils/pool_utils.ts","../../../src/kernels/AvgPool.ts","../../../src/kernels/AvgPool3D.ts","../../../src/kernels/AvgPool3DGrad.ts","../../../src/kernels/AvgPoolGrad.ts","../../../src/kernels/BatchNorm.ts","../../../src/kernels/Slice.ts","../../../src/kernels/BatchToSpaceND.ts","../../../src/kernels/Bincount_impl.ts","../../../src/kernels/Bincount.ts","../../../src/utils/unary_impl.ts","../../../src/kernels/Ceil.ts","../../../src/kernels/Clip.ts","../../../src/kernels/ComplexAbs.ts","../../../src/kernels/Imag.ts","../../../src/kernels/Concat.ts","../../../src/kernels/Concat_impl.ts","../../../src/kernels/Conv2D.ts","../../../src/kernels/Conv2DBackpropFilter.ts","../../../src/kernels/Conv2DBackpropInput.ts","../../../src/kernels/Conv3D.ts","../../../src/kernels/Conv3DBackpropFilterV2.ts","../../../src/kernels/Conv3DBackpropInputV2.ts","../../../src/kernels/Cos.ts","../../../src/kernels/Cosh.ts","../../../src/kernels/CropAndResize.ts","../../../src/kernels/Cumsum.ts","../../../src/kernels/DenseBincount.ts","../../../src/kernels/DepthToSpace.ts","../../../src/kernels/DepthwiseConv2dNative.ts","../../../src/kernels/DepthwiseConv2dNativeBackpropFilter.ts","../../../src/kernels/DepthwiseConv2dNativeBackpropInput.ts","../../../src/kernels/Diag.ts","../../../src/kernels/Dilation2D.ts","../../../src/kernels/Dilation2DBackpropFilter.ts","../../../src/kernels/Dilation2DBackpropInput.ts","../../../src/kernels/Multiply.ts","../../../src/kernels/Sum.ts","../../../src/kernels/Einsum.ts","../../../src/kernels/EluGrad.ts","../../../src/kernels/Equal.ts","../../../src/kernels/Erf.ts","../../../src/kernels/Exp.ts","../../../src/kernels/ExpandDims.ts","../../../src/kernels/Expm1.ts","../../../src/kernels/RealDiv.ts","../../../src/kernels/Sub.ts","../../../src/utils/fft_utils.ts","../../../src/kernels/FFT.ts","../../../src/kernels/Fill.ts","../../../src/kernels/FlipLeftRight.ts","../../../src/kernels/Floor.ts","../../../src/kernels/FloorDiv.ts","../../../src/kernels/FusedConv2D.ts","../../../src/kernels/FusedDepthwiseConv2D.ts","../../../src/kernels/GatherNd.ts","../../../src/kernels/GatherNd_Impl.ts","../../../src/kernels/GatherV2.ts","../../../src/kernels/GatherV2_impl.ts","../../../src/kernels/Greater.ts","../../../src/kernels/GreaterEqual.ts","../../../src/kernels/IFFT.ts","../../../src/kernels/IsFinite.ts","../../../src/kernels/IsInf.ts","../../../src/kernels/IsNaN.ts","../../../src/kernels/Less.ts","../../../src/kernels/LessEqual.ts","../../../src/kernels/LinSpace.ts","../../../src/kernels/LinSpace_impl.ts","../../../src/kernels/Log.ts","../../../src/kernels/Log1p.ts","../../../src/kernels/LogicalAnd.ts","../../../src/kernels/LogicalNot.ts","../../../src/kernels/LogicalOr.ts","../../../src/kernels/LRN.ts","../../../src/kernels/LRNGrad.ts","../../../src/kernels/Max.ts","../../../src/kernels/Max_impl.ts","../../../src/kernels/Maximum.ts","../../../src/kernels/MaxPool.ts","../../../src/kernels/MaxPool3D.ts","../../../src/kernels/MaxPool3DGrad.ts","../../../src/kernels/MaxPoolGrad.ts","../../../src/kernels/MaxPoolWithArgmax.ts","../../../src/kernels/MaxPoolWithArgmax_impl.ts","../../../src/kernels/Mean.ts","../../../src/kernels/Min.ts","../../../src/kernels/Minimum.ts","../../../src/kernels/MirrorPad.ts","../../../src/kernels/Mod.ts","../../../src/kernels/Softmax.ts","../../../src/kernels/Multinomial.ts","../../../src/kernels/Neg.ts","../../../src/kernels/NonMaxSuppressionV3.ts","../../../src/kernels/NonMaxSuppressionV4.ts","../../../src/kernels/NonMaxSuppressionV5.ts","../../../src/kernels/NotEqual.ts","../../../src/kernels/OneHot.ts","../../../src/kernels/ZerosLike.ts","../../../src/kernels/OnesLike.ts","../../../src/kernels/Pack.ts","../../../src/kernels/PadV2.ts","../../../src/kernels/Pow.ts","../../../src/kernels/Prod.ts","../../../src/kernels/Range.ts","../../../src/kernels/Range_impl.ts","../../../src/kernels/Reciprocal.ts","../../../src/kernels/ResizeBilinear.ts","../../../src/kernels/ResizeBilinearGrad.ts","../../../src/kernels/ResizeNearestNeighbor.ts","../../../src/kernels/ResizeNearestNeighborGrad.ts","../../../src/kernels/Reverse.ts","../../../src/kernels/RotateWithOffset.ts","../../../src/kernels/Round.ts","../../../src/kernels/Rsqrt.ts","../../../src/kernels/Scatter_impl.ts","../../../src/kernels/ScatterNd.ts","../../../src/kernels/Select.ts","../../../src/kernels/Selu.ts","../../../src/kernels/Sign.ts","../../../src/kernels/Sin.ts","../../../src/kernels/Sinh.ts","../../../src/kernels/Softplus.ts","../../../src/kernels/SpaceToBatchND.ts","../../../src/kernels/SparseFillEmptyRows.ts","../../../src/kernels/SparseFillEmptyRows_impl.ts","../../../src/kernels/SparseReshape.ts","../../../src/kernels/SparseReshape_impl.ts","../../../src/kernels/SparseSegmentReduction_impl.ts","../../../src/kernels/SparseSegmentMean.ts","../../../src/kernels/SparseSegmentSum.ts","../../../src/kernels/SparseToDense.ts","../../../src/kernels/SplitV.ts","../../../src/kernels/Sqrt.ts","../../../src/kernels/Square.ts","../../../src/kernels/SquaredDifference.ts","../../../src/kernels/Step.ts","../../../src/kernels/StridedSlice.ts","../../../src/kernels/StridedSlice_impl.ts","../../../src/kernels/StringNGrams_impl.ts","../../../src/kernels/StringNGrams.ts","../../../src/kernels/StringSplit_impl.ts","../../../src/kernels/StringSplit.ts","../../../src/kernels/StringToHashBucketFast.ts","../../../src/kernels/StringToHashBucketFast_impl.ts","../../../src/kernels/Tan.ts","../../../src/kernels/Tanh.ts","../../../src/kernels/Tile.ts","../../../src/kernels/Tile_impl.ts","../../../src/kernels/TopK_impl.ts","../../../src/kernels/TopK.ts","../../../src/kernels/Transform.ts","../../../src/kernels/Unique.ts","../../../src/kernels/Unique_impl.ts","../../../src/kernels/Unpack.ts","../../src/register_all_kernels.ts","../../../src/kernels/UnsortedSegmentSum.ts"],"names":["this","saveRouters","loadRouters","IORouterRegistry","instance","saveRouter","getInstance","push","loadRouter","url","getHandlers","loadOptions","handlerType","validHandlers","forEach","router","handler","registerSaveRouter","loudRouter","registerLoadRouter","getSaveHandlers","getLoadHandlers","DATABASE_NAME","MODEL_STORE_NAME","INFO_STORE_NAME","getIndexedDBFactory","getBool","Error","theWindow","window","self","factory","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","shimIndexedDB","setUpDatabase","openRequest","db","result","createObjectStore","keyPath","modelPath","modelArtifacts","a","modelTopology","ArrayBuffer","databaseAction","Promise","resolve","reject","open","onupgradeneeded","onsuccess","modelTx","transaction","getRequest","objectStore","get","close","onerror","error","oncomplete","modelArtifactsInfo","infoTx","infoStore","putInfoRequest","put","putModelRequest","deleteInfoRequest","delete","URL_SCHEME","Array","isArray","startsWith","slice","length","tx","getAllInfoRequest","getAll","out","item","path","key","getInfoRequest","deleteModelData","deleteModelRequest","PATH_SEPARATOR","PATH_PREFIX","INFO_SUFFIX","MODEL_TOPOLOGY_SUFFIX","WEIGHT_SPECS_SUFFIX","WEIGHT_DATA_SUFFIX","MODEL_METADATA_SUFFIX","getModelKeys","info","join","topology","weightSpecs","weightData","modelMetadata","removeItems","keys","Object","values","localStorage","removeItem","getModelPathFromKey","items","split","LS","JSON","stringify","setItem","metadata","format","generatedBy","convertedBy","signature","undefined","userDefinedMetadata","modelInitializer","trainingConfig","modelTopologyBytes","weightSpecsBytes","weightDataBytes","parse","getItem","modelTopologyType","metadataString","weightDataBase64","prefix","suffix","i","endsWith","URL_SCHEME_SUFFIX","managers","ModelStoreManagerRegistry","scheme","manager","indexOf","registry","parseURL","getSchemes","cloneModelInternal","sourceURL","destURL","deleteSource","loadHandlers","loadHandler","saveHandlers","saveHandler","sourceScheme","sourcePath","sameMedium","load","getManager","removeModel","save","saveResult","schemes","listModels","schemeOut","schemeAndPath","copyModel","moveModel","init","fetch","performance","now","text","encoding","textEncoder","TextEncoder","encode","bytes","TextDecoder","decode","setPlatform","registerManager","err","opHandler","buffer","cast","clone","print","defer","f","setTimeout","then","fileNamePrefix","BrowserDownloads","modelJsonFileName","weightDataFileName","document","weightsURL","URL","createObjectURL","Blob","type","weightsManifest","paths","weights","modelJSON","modelJsonURL","jsonAnchor","modelJsonAnchor","createElement","download","href","dispatchEvent","MouseEvent","weightDataAnchor","files","jsonFile","weightsFiles","jsonReader","FileReader","onload","event","target","modelArtifactsPromise","loadWeights","name","readAsText","entry","pathToFile","checkManifestAndWeightFiles","promises","map","loadWeightsFile","all","buffers","file","weightFileReader","readAsArrayBuffer","manifest","basenames","fileNames","pathBasename","browserFiles","browserDownloads","monitorPromisesProgress","onProgress","startFraction","endFraction","checkPromises","checkFraction","resolvedPromise","promise","value","fraction","loadWeightsAsArrayBuffer","fetchURLs","fetchFunc","platform","requests","fetchURL","requestInit","isBinary","fetchStartFraction","fetchEndFraction","responses","bufferPromises","response","arrayBuffer","bufferStartFraction","bufferEndFraction","filePathPrefix","weightNames","weightsLoaderFactory","fetchUrls","fetchWeightsFunction","groupIndicesToFetchMap","groupWeightsToFetch","weightsFound","allManifestWeightNames","manifestGroupConfig","groupIndex","groupOffset","weightsEntry","rawDtype","quantization","dtype","weightsBytes","shape","enqueueWeightsForFetchingFn","manifestEntry","sizeBytes","weightName","weightIndex","every","found","weightsNotFound","filter","_","groupIndicesToFetch","reduce","accumulator","shouldFetch","filepath","fetchUrl","weightsTensorMap","bufferIndexOffset","numBuffers","groupBytes","byteLength","groupBuffer","groupByteBuffer","Uint8Array","groupBufferOffset","set","byteBuffer","nameToTensorMap","DEFAULT_METHOD","weightPathPrefix","weightUrlConverter","body","assign","method","FormData","modelTopologyAndWeightManifest","append","ok","status","modelConfigRequest","json","message","weightPath","parseUrl","pathPrefix","urlPromises","weightsGroup","lastSlash","lastIndexOf","lastSearchParam","substring","isHTTPScheme","match","URL_SCHEME_REGEX","httpRouter","urlItem","http","browserHTTPRequest","fromMemory","arguments","isModelArtifacts","console","warn","withSaveHandler","fromPixels2DContext","confusionMatrix","confusionMatrix_","labels","predictions","numClasses","$labels","$predictions","Number","isInteger","rank","oneHotLabels","oneHotPredictions","oneHotLabelsT","transpose","product","fromPixels_","pixels","numChannels","isPixelData","isImageData","isVideo","isImage","isCanvasLike","isImageBitmap","data","ImageData","HTMLVideoElement","HTMLImageElement","getContext","ImageBitmap","constructor","HAVE_CURRENT_DATA_READY_STATE","readyState","kernel","backendName","inputs","attrs","runKernel","vals","videoWidth","videoHeight","width","height","getImageData","canvas","drawImage","Int32Array","numPixels","channel","outShape","tensor3d","canWrapPixelsToImageBitmap","hasOwnProperty","isNonEmptyPixels","fromPixelsAsync","createImageBitmap","premultiplyAlpha","imageBitmap","toPixels","img","$img","originalImgTensor","dispose","depth","multiplier","Uint8ClampedArray","rgba","d","j","Math","round","ctx","imageData","putImageData","fromPixels","prepareAndValidate","tensor","indices","tensorRank","indicesRank","indicesShape","sliceRank","nResult","inputShape","resultShape","pop","sliceSize","strides","stride","assertParamsValid","input","begin","size","inputRank","maskToAxes","mask","axes","axis","computeOutShape","end","ceil","stridesWithElidedDims","ellipsisInsertionIndex","numElidedAxes","newStrides","splice","unnormalizeAxis","normalizedAxis","getElidedAxes","elidedAxes","getNormalizedAxes","ellipsisAxes","numInterpolatedAxes","beginMask","endMask","ellipsisMask","normalizedBegin","normalizedEnd","normalizedStrides","fullIndex","startIndicesWithElidedDims","stopIndicesWithElidedDims","startForAxis","stopForAxis","stridesForAxis","originalBegin","newIndices","originalAxis","originalValue","originalEnd","MAX_SAFE_INTEGER","axisSize","startIndices","start","MIN_SAFE_INTEGER","stopIndices","stop","isSliceContinous","firstNonOneAxis","computeFlatOffset","flatOffset","parseSliceParams","x","begin_","size_","xRank","fill","concat","sliceInfo","xShape","newAxisMask","shrinkAxisMask","$begin","$end","$strides","expandAxes","newShape","shrinkAxes","nonStrided","v","className","cls","config","classNameMap","SerializationMap","getMap","fromConfig","registerClass","register","version","returnCost","varList","computeGradients","grads","gradArray","applyGradients","iterations_","iterations","scalar","weightValues","getClassName","defineProperty","Symbol","hasInstance","minimize","learningRate","rho","epsilon","accumulatedGrads","accumulatedUpdates","backend","variableGradients","registeredVariables","originalName","variable","gradient","accumulatedGrad","accumulatedUpdate","newAccumulatedGrad","add","mul","square","updates","div","sqrt","newAccumulatedUpdate","newValue","incrementIterations","variables","saveIterations","extractIterations","variableCount","initialAccumulatorValue","beta1","beta2","accumulatedFirstMoment","accumulatedSecondMoment","accBeta1","accBeta2","varNames","oneMinusAccBeta1","sub","oneMinusAccBeta2","firstMoment","secondMoment","newFirstMoment","newSecondMoment","biasCorrectedFirstMoment","biasCorrectedSecondMoment","pow","decay","accumulatedWeightedInfNorm","iteration","variableNames","lr","weightedInfNorm","ut0","ut1","abs","newWeightedInfNorm","maximum","setLearningRate","c","momentum","useNesterov","accumulations","m","accumulation","newAccumulation","centered","accumulatedMeanSquares","accumulatedMoments","accumulatedMeanGrads","trainable","accumulatedMeanSquare","newAccumulatedMeanSquare","accumulatedMeanGrad","newAccumulatedMeanGrad","gradContribution","newAccumulatedMoments","train","sgd","adadelta","adagrad","rmsprop","adamax","adam","assertParamsConsistent","shapes","firstShape","r","outputShape","PARALLELIZE_THRESHOLD","computeOptimalWindowSize","inSize","floor","getImageCenter","center","imageHeight","imageWidth","getReshaped","blockShape","prod","batchToSpace","reshaped","spatialLength","getPermuted","reshapedRank","blockShapeRank","permuted","permutedBeforeBatch","permutedAfterBatch","getReshapedPermuted","reshapedPermuted","getSliceBeginCoords","crops","sliceBeginCoords","getSliceSize","uncroppedShape","SELU_SCALEALPHA","SELU_SCALE","ERF_P","ERF_A1","ERF_A2","ERF_A3","ERF_A4","ERF_A5","log","mergeRealAndImagArrays","real","imag","Float32Array","splitRealAndImagArrays","complex","complexWithEvenIndex","len","complexWithOddIndex","getComplexWithIndex","index","assignToTypedArray","exponents","n","inverse","PI","cos","sin","exponent","k","ARROW","ARROW_REGEX","decodeEinsumEquation","equation","numTensors","numArrows","replace","inputString","outputString","inputTerms","numInputs","allDims","dimName","some","inputTerm","idDims","Set","numDims","summedDims","getEinsumPermutation","nDims","permutationIndices","expandDims","checkEinsumDimSizes","tensors","dimSizes","getEinsumComputePath","nSteps","steps","computedTermIndices","termIndices","findTermsWithDim","termIndex","isIdentityPermutation","perm","dim","prepareSplitSize","numOrSizeSplits","splitSizes","numOfNegs","count","negIndex","total","b","segOpComputeOptimalWindowSize","numSegments","res","done","aShape","collectGatherOpShapeInfo","batchDims","dimSize","batchSize","outerSize","fromUint8ToStringArray","val","fromStringArrayToUint8","strings","s","getParamValue","paramName","node","tensorMap","context","resourceManager","inputParam","inputParams","inputIndexStart","inputIndexEnd","getTensor","inputNames","dataSync","toNestedArray","attrParam","attrParams","tensorsMap","parseNodeName","nodeName","getHashTableHandleByName","contextId","currentContextIds","find","getNodeNameWithContextId","getTensorsForCurrentContenxt","currentContextId","getNodeNameAndIndex","inputName","outputName","parts","getPadding","pad","explicitPadding","cloneTensor","kept","inferShape","firstElem","deepAssertShapeConsistency","subShape","assertDtype","expectedDtype","actualDType","argName","functionName","convertToTensor","parseAsDtype","inferredDtype","inferredShape","skipTypedArray","makeTensor","convertToTensorArray","arg","t","OP_SCOPE_SUFFIX","op","opName","fn","f2","startScope","endScope","ex","configurable","backendTimer","logger","kernelName","outputs","timer","holdResultWrapperFn","util","timerAvailable","time","kernelMs","output","tensorVals","num","isNaN","isFinite","checkComputationForErrors","timeMs","timing","extraInfo","getExtraProfileInfo","kernelProfile","valueContainer","logKernelProfile","paddedName","toString","inputShapesDescription","getFilteredNodesXToY","tape","xs","y","tensorsFromX","nodesFromX","id","nodeInputs","anyInputFromX","tensorsLeadToY","nodesToY","filteredTape","prunedInputs","nodeInput","prunedNode","backpropagateGradients","tensorAccumulatedGradientMap","tidy","dys","o","gradTensor","inputGradients","dx","curGradient","isRegisteredKernelInvocation","kernelInvocation","nextTapeNodeId","numBytes","numStringTensors","numDataBuffers","gradientDepth","kernelDepth","scopeStack","numDataMovesStack","nextScopeId","tensorInfo","WeakMap","profiling","activeProfile","newBytes","newTensors","peakBytes","kernels","from","variableName","ENV","registryFactory","pendingBackendInitId","state","pendingBackendInit","backendInstance","sortedBackends","getSortedBackends","initializeBackend","success","setBackend","initializeBackendsAndReturnBest","asyncInit","priority","setupRegisteredKernels","profiler","setupFunc","disposeFunc","registryFactoryEntry","promiseId","catch","stack","disposeRegisteredKernels","sort","dataId","srcBackend","readSync","refCount","disposeData","move","shouldCheckForMemLeaks","nameOrFn","String","scopedRun","Engine","nextTensorId","nextVariableId","ENGINE","addTapeNode","activeScope","dy","gradInputs","runKernelFunc","numDataIdsBefore","outInfos","numDataIdsAfter","numDataIds","numOutputDataIds","numMoves","dataIdsLeaked","kernelParams","kernelFunc","saved","isTapeOn","startingBytecount","startingNumTensors","kernelOrScopeName","checkKernelForMemLeak","outTensors","outInfo","makeTensorFromDataId","tensorsToSave","getTensorsForGradient","saveTensorsForBackwardMode","forwardFunc","saveFunc","keep","outs","backwardsFunc","profileKernel","bytesAdded","totalBytesSnapshot","tensorsAdded","totalTensorsSnapshot","inputShapes","outputShapes","kernelTimeMs","gradConfig","inputTensorsToSave","inputsToSave","outputsToSave","saveAllInputs","outputTensorsToSave","backendVals","write","trackTensor","initialValue","incRef","has","track","removeDataId","varName","disposeVariable","disposeTensor","memory","unreliable","reasons","query","startBytes","startNumTensors","max","gradientsFunc","tapeNode","gradFunc","activeTape","scopeInfo","tensorsToTrackInParent","tensorsToTrackInParentSet","oldScope","scopeId","allowNoGradients","startTape","endTape","accumulatedGradientMap","ones","inputMap","gradRes","gradMap","grad","read","timingInfo","wallMs","reset","getOrMakeEngine","ns","_tfengine","environment","Abs","Acos","Acosh","Add","AddN","All","Any","ArgMax","ArgMin","Asin","Asinh","Atan","Atanh","Atan2","AvgPool","AvgPoolGrad","AvgPool3D","AvgPool3DGrad","BatchMatMul","BatchToSpaceND","Bincount","BroadcastTo","Cast","Ceil","ClipByValue","Complex","ComplexAbs","Concat","Conv2D","Conv2DBackpropFilter","Conv2DBackpropInput","Conv3D","Conv3DBackpropFilterV2","Conv3DBackpropInputV2","Cos","Cosh","Cumsum","CropAndResize","DenseBincount","DepthToSpace","DepthwiseConv2dNative","DepthwiseConv2dNativeBackpropFilter","DepthwiseConv2dNativeBackpropInput","Diag","Dilation2D","Dilation2DBackpropInput","Dilation2DBackpropFilter","RealDiv","Einsum","Elu","EluGrad","Erf","Equal","Exp","ExpandDims","Expm1","FFT","Fill","FlipLeftRight","Floor","FloorDiv","FusedBatchNorm","GatherV2","GatherNd","Greater","GreaterEqual","Identity","IFFT","Imag","IsFinite","IsInf","IsNan","LeakyRelu","Less","LessEqual","LinSpace","Log","Log1p","LogicalAnd","LogicalNot","LogicalOr","LogSoftmax","LRN","LRNGrad","Max","Maximum","MaxPool","MaxPoolGrad","MaxPool3D","MaxPool3DGrad","MaxPoolWithArgmax","Mean","Min","Minimum","MirrorPad","Mod","Multinomial","Multiply","Neg","NotEqual","NonMaxSuppressionV3","NonMaxSuppressionV4","NonMaxSuppressionV5","OnesLike","OneHot","Pack","PadV2","Pool","Pow","Prelu","Prod","Range","Real","Reciprocal","Relu","Reshape","ResizeNearestNeighbor","ResizeNearestNeighborGrad","ResizeBilinear","ResizeBilinearGrad","Relu6","Reverse","Round","Rsqrt","ScatterNd","Select","Selu","Slice","Sin","Sinh","Sign","Sigmoid","Softplus","Sqrt","Sum","SpaceToBatchND","SplitV","Softmax","SparseFillEmptyRows","SparseReshape","SparseSegmentMean","SparseSegmentSum","SparseToDense","SquaredDifference","Square","StridedSlice","StringNGrams","StringSplit","StringToHashBucketFast","Sub","Tan","Tanh","Tile","TopK","Transform","Transpose","Unique","Unpack","UnsortedSegmentSum","ZerosLike","Step","FromPixels","RotateWithOffset","_FusedMatMul","FusedConv2D","FusedDepthwiseConv2D","_slicedToArray","arr","arrayWithHoles","iterator","_arr","_n","_d","_e","_s","_i","next","unsupportedIterableToArray","nonIterableRest","module","exports","shuffle","array","counter","random","swap","shuffleCombo","array2","clamp","min","nearestLargerEven","object","left","right","temp","sum","randUniform","distSquared","diff","assert","expr","msg","assertShapesMatch","shapeA","shapeB","errorMessagePrefix","arraysEqual","assertNonNull","flatten","isTypedArray","sizeFromShape","isScalarShape","n1","n2","isInt","tanh","Infinity","e2x","exp","sizeToSquarishShape","createShuffledIndices","shuffledIndices","Uint32Array","rightPad","repeat","repeatedTry","checkFn","delayFn","maxCounter","tryCount","tryFn","nextBackoff","inferFromImplicitShape","shapeProd","implicitIdx","parseAxisParam","ax","squeezeShape","keptDims","isEmptyArray","getTypedArrayFromDType","getArrayFromDType","checkConversionForErrors","isValidDtype","hasEncodingLoss","oldType","newType","bytesPerElement","bytesFromStringArray","isString","isBoolean","isNumber","inferDtype","isFunction","call","apply","nearestDivisor","computeStrides","createNestedArray","offset","isComplex","ret","rest","acc","makeOnesTypedArray","makeZerosTypedArray","makeZerosNestedTypedArray","prev","curr","assertNonNegativeIntegerDimensions","locToIndex","locs","indexToLoc","isPromise","reshape","reshape_","Long","hexToLong","hex","fromString","k0","k1","k2","shiftMix","xor","shru","fromBytes","fetch64","fetch32","rotate64","shift","or","shl","hashLen16","u","weakHashLen32WithSeedsStr","w","z","weakHashLen32WithSeeds","hashLen0to16","hashLen17to32","hashLen33to64","e","g","h","fingerPrint64","seed","fromNumber","UZERO","last64","and","createScalarValue","encodeString","toTypedArray","noConversionNeeded","bool","requestInits","decodeString","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","mul_","$a","$b","_classCallCheck","Constructor","TypeError","_defineProperties","props","descriptor","enumerable","writable","_createClass","protoProps","staticProps","prototype","_toConsumableArray","arrayLikeToArray","iterableToArray","add_","sub_","TENSORFLOWJS_FLAGS_PREFIX","Environment","global","flags","flagRegistry","urlFlags","getQueryParams","populateURLFlags","platformName","flagName","evaluationFn","setHook","flagValue","evaluateFlag","location","search","urlParams","keyValue","toLowerCase","parseValue","queryString","params","decodeParam","decodeURIComponent","env","setEnvironmentGlobal","makeTypesMatch","assertTypesMatch","isTensorInList","tensorList","getTensorsInContainer","list","walkTensorContainer","container","seen","obj","iterable","enableProdMode","enableDebugMode","disableDeprecationWarnings","deprecationWarn","disposeVariables","engine","profile","ready","getBackend","removeBackend","findBackend","findBackendFactory","registerBackend","div_","tensorToString","verbose","padPerCol","numCols","valuesOrTuples","createComplexTuples","row","valToString","computeMaxSizePerColumn","valsLines","subTensorToString","lines","l","valStr","parseFloat","toFixed","boolNumToString","isLast","storagePerElement","complexTuple","firstValsSize","firstVals","lastVals","displayVals","subshape","substrides","sep","newLineSep","complexTuples","loc","trackerFn","setTensorTracker","setOpHandler","setDeprecationWarningFn","isDisposedInternal","rankType","throwIfDisposed","isDisposed","makeVariable","tensorId","Function","cast_","$x","matMul","matMul_","transposeA","transposeB","getBroadcastDims","inShape","inRank","dims","unshift","getReductionAxes","inDim","outAxis","outDim","assertAndGetBroadcastShape","errMsg","slice_","sum_","keepDims","encodeWeights","group","specs","dataPromises","names","spec","utf8bytes","totalNumBytes","p","bytesOfLength","tensorValues","concatenateTypedArrays","decodeWeights","float16Decode","quantizationSizeFactor","quantizedArray","Uint16Array","scale","getFloat16Decoder","dtypeFactor","image","realTensor","imageTensor","totalByteLength","normalizedXs","useNodeBuffer","Buffer","atob","btoa","stringByteLength","str","arrayBufferToBase64String","buf","fromCharCode","base64StringToArrayBuffer","byteOffset","charCodeAt","concatenateArrayBuffers","basename","trim","getModelJSONForModelArtifacts","artifacts","getModelArtifactsForJSON","getModelArtifactsInfoForJSON","dateSaved","Date","mantisaTable","convertMantissa","computeFloat16MantisaTable","exponentTable","computeFloat16ExponentTable","offsetTable","computeFloat16OffsetTable","bufferUint32View","float16Bits","float32Bits","$dy","gradients","checkGrads","$args","valueAndGrad","valueAndGrads","variableGrads","specifiedVarList","specifiedNonTrainable","originalVarCount","namedGrads","customGrad","concat_","$tensors","attr","Reduction","computeDilation2DInfo","filterShape","dataFormat","dilations","inputChannels","$filterShape","$dataFormat","convertConv2DDataFormat","computeConv2DInfo","computePool2DInfo","filterSize","roundingMode","parseTupleParam","filterHeight","filterWidth","computePool3DInfo","parse3TupleParam","filterDepth","computeConv3DInfo","depthwise","inHeight","inWidth","inChannels","filterChannels","strideHeight","strideWidth","dilationHeight","dilationWidth","effectiveFilterHeight","getEffectiveFilterSize","effectiveFilterWidth","getPadAndOutInfo","padInfo","outHeight","outWidth","outChannels","inDepth","strideDepth","dilationDepth","effectiveFilterDepth","get3DPadAndOutInfo","outDepth","computeDefaultPad","fieldSize","dilation","effectiveFieldSize","param","top","bottom","zeroPad","inputRows","inputCols","computeOutputShape2D","padAlongHeight","padAlongWidth","front","back","inputDepth","computeOutputShape4D","padAlongDepth","trunc","tupleValuesAreOne","dimA","dimB","dimC","eitherStridesOrDilationsAreOne","_createForOfIteratorHelper","allowArrayLike","it","F","normalCompletion","didErr","step","_e2","zerosLike","zerosLike_","_typeof","_possibleConstructorReturn","assertThisInitialized","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Super","getPrototypeOf","NewTarget","_setPrototypeOf","setPrototypeOf","__proto__","_inherits","subClass","superClass","create","square_","abs_","getFusedDyActivation","activation","getFusedBiasGradient","bias","dyActivation","reduceAxes","applyActivation","preluActivationWeights","leakyreluAlpha","shouldFuse","tensor1d","providedSize","inferredSize","inferred","flatDimsDontMatch","neg","neg_","require","OperationMapper","ops","mappersJson","opMappers","mapper","tfOpName","graph","tfNodes","placeholders","initNodes","nodes","mapNode","inputNodeNameToKey","outputNodeNameToKey","mapSignatureEntries","allNodes","inputNode","outputIndex","children","signatureKey","functions","library","function","func","mapFunction","entries","newNode","category","substr","rawAttrs","getStringParam","tfName","defaultValue","tfDeprecatedName","getStringArrayParam","getNumberParam","getNumericArrayParam","getBoolParam","getBoolArrayParam","getTensorShapeParam","getTensorShapeArrayParam","getDtypeParam","getDtypeArrayParam","getFuncParam","functionDef","nodeDef","inputArg","parseDtypeParam","returnNodeMap","outputArg","defaultOutput","mapArgsToSignature","methodName","mapArgToTensorInfo","nameMap","_instance","parseStringParam","keepCase","decodeBase64","def","parseInt","DT_FLOAT","DT_INT32","DT_INT64","DT_INT8","DT_UINT8","DT_BOOL","DT_DOUBLE","DT_STRING","parseTensorShapeParam","unknownRank","complex_","$real","$imag","reverse","reverse_","clone_","sqrt_","exp_","where","where_","condition","$condition","broadcastShape","kernelRegistry","Map","gradRegistry","getKernel","makeKey","getGradient","getKernelsForBackend","registerKernel","registerGradient","unregisterKernel","unregisterGradient","copyRegisteredKernels","registeredBackendName","newBackendName","kernelConfig","binaryInsert","element","comparator","middle","compareResult","binarySearch_","defaultComparator","binarySearch","insertionPoint","nonMaxSuppressionV3Impl","boxes","scores","maxOutputSize","iouThreshold","scoreThreshold","nonMaxSuppressionImpl_","nonMaxSuppressionV4Impl","padToMaxOutputSize","nonMaxSuppressionV5Impl","softNmsSigma","returnScoresTensor","returnValidOutputs","candidates","score","boxIndex","suppressBeginIndex","ascendingComparator","selectedIndices","selectedScores","candidate","originalScore","ignoreCandidate","iou","intersectionOverUnion","suppressWeight","validOutputs","elemsToPad","iCoord","subarray","jCoord","yminI","xminI","ymaxI","xmaxI","yminJ","xminJ","ymaxJ","xmaxJ","areaI","areaJ","intersectionYmin","intersectionXmin","intersectionYmax","intersectionXmax","intersectionArea","weight","c1","c2","axesAreInnerMostDims","combineLocations","outputLoc","reduceLoc","outIdx","reduceIdx","computeOutAndReduceShapes","expandShapeToKeepDim","assertAxesAreInnerMostDims","getAxesPermutation","getUndoAxesPermutation","getInnerMostAxes","numAxes","pad_","paddings","constantValue","sigmoid","sigmoid_","max_","reductionIndices","DataType","SaverDef","CheckpointFormatVersion","pow_","base","$base","$exp","log_","split_","stack_","expandDims_","Rank","UpcastInt32AndMap","UpcastBoolAndMap","UpcastFloat32AndMap","UpcastComplex64AndMap","upcastTypeMap","upcastType","typeA","typeB","sumOutType","conv2d","conv2d_","dimRoundingMode","$filter","x4D","reshapedTo4D","zeros","relu","relu_","batchNorm","batchNorm_","mean","variance","varianceEpsilon","$scale","$offset","$mean","$variance","xAs4D","_unsupportedIterableToArray","minLen","test","MPRandGauss","stdDeviation","truncated","stdDev","nextVal","NaN","upper","lower","seedValue","resultX","resultY","isValid","v1","v2","isValidTruncated","convertValue","RandGamma","alpha","beta","randu","randn","x2","v0","nextValue","UniformRandom","canReturnFloat","range","CUSTOM_OPS","getRegisteredOp","greater","greater_","logicalAnd","logicalAnd_","mean_","real_","ifft","ifft_","transpose_","_getPrototypeOf","globalNameSpace","getGlobalNamespace","process","getGlobal","globalMap","_tfGlobals","getGlobalMap","singleton","webpackPolyfill","deprecate","__webpack_amd_options__","basicLSTMCell","basicLSTMCell_","forgetBias","lstmKernel","lstmBias","$forgetBias","$lstmKernel","$lstmBias","$data","$c","$h","combined","weighted","sliceCols","newC","batchNorm2d","batchNorm2d_","batchNorm3d","batchNorm3d_","batchNorm4d","batchNorm4d_","concat1d","concat1d_","concat2d","concat2d_","concat3d","concat3d_","concat4d","concat4d_","conv3DBackpropInput","conv3DBackpropInput_","xShape5D","dy5D","reshapedTo5D","conv3dTranspose","conv3dTranspose_","diag","diag_","dot","dot_","t1","t2","$t1","$t2","t1Inner","t2Inner","t12D","t22D","t1t2","eye","eye_","numRows","numColumns","batchShape","buff","toTensor","tile","isFinite_","isInf","isInf_","logSigmoid","logSigmoid_","softplus","customOp","logSumExp","logSumExp_","xMax","logicalXor","logicalXor_","meshgrid","indexing","$y","moments","moments_","xMean","keepDimsShape","devSquared","multiRNNCell","multiRNNCell_","lstmCells","newStates","newH","outerProduct","outerProduct_","$v1","$v2","v12D","v22D","pad1d","pad1d_","pad2d","pad2d_","pad3d","pad3d_","pad4d","pad4d_","pool","pool_","windowShape","poolingType","conv_util","basePadding","convInfo","padExtraShape","padExtraStart","padExtraEnd","withSpaceToBatchBasePaddings","isDilationOne","padStart","origPadEnd","fullInputShape","padEndExtra","padEnd","requiredSpaceToBatchPaddings","adjustedPadding","adjustedCrops","convertedPad","convertedX","rand","rand_","randFunction","randomGamma","randomGamma_","rgamma","randomNormal","randomNormal_","randGauss","reverse1d","reverse1d_","reverse2d","reverse2d_","reverse3d","reverse3d_","reverse4d","reverse4d_","separableConv2d","separableConv2d_","depthwiseFilter","pointwiseFilter","$depthwiseFilter","$pointwiseFilter","channelMultiplier","pointwiseStride","slice1d","slice1d_","slice2d","slice2d_","slice3d","slice3d_","slice4d","slice4d_","tensor2d","tensor4d","tensor5d","tensor6d","unsortedSegmentSum","unsortedSegmentSum_","segmentIds","$segmentIds","$tensor","$mask","axisFrom","maskDim","tensorShape","leadingSize","targetTensorShape","reshapedTensor","reshapedMask","positivePositions","squeeze","gather","booleanMaskAsync","normImpl","norm_","ord","norm","axis_util","movingAverage","movingAverage_","zeroDebias","$v","$decay","one","oneMinusDecay","update","$step","dropout","dropout_","rate","noiseShape","$noiseShape","newDimension","getNoiseShape","keepProb","enclosingPowerOfTwo","cosineWindow","windowLength","even","newValues","cosArg","targets","$targets","lastDim","predictionsVals","targetsVals","batch","precision","valAndInd","inTopKAsync","conv2DBackpropFilter","conv2DBackpropFilter_","dy4D","fusedConv2d_","$bias","$preluActivationWeights","broadcast_util","der","biasDer","customOpWithBias","depthwiseConv2dNativeBackpropFilter","depthwiseConv2dNativeBackpropFilter_","depthwiseConv2dNativeBackpropInput","depthwiseConv2dNativeBackpropInput_","depthwiseConv2d","fusedDepthwiseConv2d_","xDer","filterDer","fusedMatMul_","innerShapeA","innerShapeB","outerShapeA","outerShapeB","outerDimsA","outerDimsB","batchDimA","batchDimB","a3D","b3D","aDer","bDer","hammingWindow","hammingWindow_","hannWindow","hannWindow_","frame_","signal","frameLength","frameStep","padValue","padLen","stft","stft_","fftLength","windowFn","framedSignal","windowedSignal","rfft","cropAndResize","cropAndResize_","boxInd","cropSize","extrapolationValue","$image","$boxes","$boxInd","numBoxes","flipLeftRight","flipLeftRight_","rotateWithOffset","rotateWithOffset_","radians","fillValue","nonMaxSuppSanityCheck","NEGATIVE_INFINITY","nonMaxSuppression","nonMaxSuppression_","$scores","boxesAndScores","boxesVals","scoresVals","nonMaxSuppressionAsync","nonMaxSuppressionWithScore","nonMaxSuppressionWithScore_","nonMaxSuppressionWithScoreAsync","nonMaxSuppressionPadded","nonMaxSuppressionPadded_","$maxOutputSize","$iouThreshold","$scoreThreshold","nonMaxSuppressionPaddedAsync","_toArray","resizeBilinear","resizeBilinear_","images","alignCorners","halfPixelCenters","$images","batchImages","resizeNearestNeighbor","resizeNearestNeighbor_","otsu","histogram","classFirst","classSecond","meanFirst","meanSec","weightForeground","weightBack","bestThresh","bestInBetVar","cInBetVar","meanFirstDivA","meanSecFill","meanSecAdd","meanSecMul","cInBetVarSubA","cInBetVarSubB","cInBetVarMul","threshold","threshold_","grayscale","inverted","threshValue","RED_INTENCITY_COEF","GREEN_INTENCITY_COEF","BLUE_INTENCITY_COEF","totalPixelsInImage","$threshold","$r","$g","$histogram","bincount","invCondition","transform","transform_","transforms","interpolation","fillMode","$transforms","bandPart","bandPart_","numLower","numUpper","M","N","ij","inBand","zero","unstack","mat","gramSchmidt","gramSchmidt_","inputIsTensor2D","ys","xs1d","proj","qr2d","fullMatrices","q","one2D","iters","rTemp","wTemp","qTemp","rjEnd1","normX","rjj","u1","wPre","tau","rjEndAll","tauTimesW","wT","rTimesTau","tawTimesWT","qAllJEnd","qTimesTau","qr","qr_","outerDimsProd","x2ds","q2ds","r2ds","x2d","q2d","r2d","computeWeightedLoss","computeWeightedLoss_","losses","reduction","SUM_BY_NONZERO_WEIGHTS","$losses","$weights","weightedLoss","NONE","SUM","MEAN","broadcastFactor","broadcastedWeights","numNonZeros","absoluteDifference","absoluteDifference_","cosineDistance","cosineDistance_","hingeLoss","hingeLoss_","huberLoss","huberLoss_","delta","deltaScalar","quadratic","minimum","linear","logLoss","logLoss_","epsilonScalar","l1","l2","meanSquaredError","meanSquaredError_","sigmoidCrossEntropyWithLogits_","logits","$logits","maxOutput","outputXTarget","sigmoidOutput","log1p","sigmoidCrossEntropy","sigmoidCrossEntropy_","multiClassLabels","labelSmoothing","$multiClassLabels","labelSmoothingScalar","half","softmaxCrossEntropyWithLogits_","lse","logResult","costVector","dyShape","softmaxCrossEntropy","softmaxCrossEntropy_","onehotLabels","$onehotLabels","sparseFillEmptyRows","sparseFillEmptyRows_","denseShape","$indices","$values","$denseShape","$defaultValue","outputIndices","outputValues","emptyRowIndicator","reverseIndexMap","sparseReshape","sparseReshape_","inputIndices","$inputIndices","$inputShape","$newShape","sparseSegmentMean","sparseSegmentMean_","sparseSegmentSum","sparseSegmentSum_","stringNGrams","stringNGrams_","dataSplits","separator","nGramWidths","leftPad","padWidth","preserveShortSequences","$dataSplits","nGrams","nGramsSplits","stringSplit","stringSplit_","delimiter","skipEmpty","$input","$delimiter","stringToHashBucketFast","stringToHashBucketFast_","numBuckets","spectral","fft","irfft","frame","linalg","sparse","string","validateUpdateShape","sliceDim","batchDim","shapeError","validateInput","calculateShapes","totalNd","safeSliceDim","numUpdates","outputSize","depthwiseConv2d_","imag_","lessEqual","lessEqual_","fft_","rfft_","adjustedInput","innerDimensionSize","zerosShape","zerosInput","complexInput","realValues","imagValues","realComplexConjugate","imagComplexConjugate","squeeze_","unstack_","broadcastTo","broadcastTo_","reps","tile_","TEST_EPSILON_FLOAT16","expectArraysClose","actual","expected","testEpsilon","expectArraysPredicate","areClose","floatPrecision","predicate","checkClassType","aType","bType","actualShape","expectedShape","actualFlat","expectedFlat","expectPromiseToFail","fail","expectArraysEqual","expectNumbersClose","expectValuesInRange","low","high","expectArrayBuffersEqual","expect","toEqual","encodeStrings","alea","xor128","xorwow","xorshift7","xor4096","tychei","sr","registerFlag","debugValue","versions","navigator","userAgent","vendor","DataStorage","dataMover","dataIdsCount","moveData","KernelBackend","notYetImplemented","force","tanh_","min_","oneHot","oneHot_","onValue","offValue","_arrayLikeToArray","arr2","DTYPE_VALUE_SIZE_MAP","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","argv","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","isMobile","nav","opera","isBrowser","WorkerGlobalScope","floorDiv","floorDiv_","maximum_","avgPool","avgPool_","batchToSpaceND","batchToSpaceND_","bincount_","equal","equal_","elu","elu_","floor_","gather_","greaterEqual","greaterEqual_","leakyRelu","leakyRelu_","log1p_","softplus_","logicalNot","logicalNot_","logicalOr","logicalOr_","maxPool","maxPool_","minimum_","notEqual","notEqual_","spaceToBatchND","spaceToBatchND_","prelu","prelu_","randomUniform","randomUniform_","minval","maxval","relu6","relu6_","round_","irfft_","realInput","imagInput","realConjugate","imagConjugate","squaredDifference","squaredDifference_","step_","whereAsync","whereImpl","condShape","condVals","inBuffer","_arrayWithHoles","_nonIterableRest","_iterableToArray","iter","_assertThisInitialized","ReferenceError","conv2DBackpropInput","conv2DBackpropInput_","xShape4D","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","toObject","test1","getOwnPropertyNames","test2","test3","letter","shouldUseNative","source","symbols","to","wasm","WebAssembly","Instance","Module","unsigned","isLong","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","radix","RangeError","radixToPower","power","fromValue","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","toNumber","isZero","isNegative","eq","radixLong","rem1","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","equals","other","notEquals","neq","ne","lessThan","comp","lt","lessThanOrEqual","lte","le","greaterThan","gt","greaterThanOrEqual","gte","ge","compare","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","get_high","b00","divide","divisor","approx","div_u","div_s","toUnsigned","shr","log2","LN2","approxRes","approxRem","modulo","rem_u","rem_s","mod","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","hi","lo","fromBytesLE","fromBytesBE","settings","ignoreFocused","cooldown","available","cooldownActive","focused","initNotifications","options","onfocus","onblur","availablePromise","Notification","permission","requestPermission","notify","notifyOptions","notification","onclick","focus","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","encodingOrOffset","allocUnsafe","fromArrayLike","fromArrayBuffer","isEncoding","isBuffer","checked","copy","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","bidirectionalIndexOf","arrayIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","hexWrite","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","utf16leToBytes","fromByteArray","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","typedArraySupport","poolSize","_augment","species","allocUnsafeSlow","_isBuffer","pos","swap16","swap32","swap64","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","toJSON","toHex","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","code","INVALID_BASE64_RE","leadSurrogate","toByteArray","stringtrim","base64clean","src","dst","acos","acos_","acosh","acosh_","addN","addN_","firstTensor","all_","any","any_","argMax","argMax_","argMin","argMin_","asin","asin_","asinh","asinh_","atan","atan_","atan2","atan2_","atanh","atanh_","avgPool3d","avgPool3d_","x5D","ceil_","clipByValue","clipByValue_","clipValueMin","clipValueMax","conv1d","conv1d_","x3D","reshapedTo3D","filter4D","input4D","conv2dDataFormat","conv2dTranspose","conv2dTranspose_","conv3d","conv3d_","cos_","cosh","cosh_","cumsum","cumsum_","exclusive","denseBincount","denseBincount_","binaryOutput","depthToSpace","depthToSpace_","blockSize","inputHeight","inputWidth","dilation2d","dilation2d_","divNoNan","divNoNan_","divResult","bEqualsZero","einsum","einsum_","erf","erf_","expm1","expm1_","isNaN_","less","less_","linspace","localResponseNormalization","localResponseNormalization_","depthRadius","logSoftmax","logSoftmax_","shifted","softmax","maxPool3d","maxPool3d_","maxPoolWithArgmax","maxPoolWithArgmax_","includeBatchInIndex","indexes","mirrorPad","mirrorPad_","mode","shapeOffset","mod_","multinomial","multinomial_","numSamples","normalized","numOutcomes","origRank","logits2D","onesLike","onesLike_","prod_","reciprocal","reciprocal_","rsqrt","rsqrt_","selu","selu_","xVals","yVals","ySet","setdiff1dAsync","sign","sign_","sin_","sinh","sinh_","softmax_","stridedSlice","stridedSlice_","tan","tan_","topk","topk_","sorted","truncatedNormal","truncatedNormal_","unique","unique_","scatterND","scatterND_","$updates","gatherND","gatherND_","delayCallback","requestAnimationFrame","setImmediate","nextFrame","sparseIndices","sparseValues","defaultValues","numElems","numValues","sparseToDense","sparseToDense_","$sparseIndices","$sparseValues","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","concatWithNulls","topK","KNNClassifier","classDatasetMatrices","classExampleCount","labelToClassId","nextClassId","addExample","exampleShape","clearTrainDatasetMatrix","normalizeVectorToUnitLength","as2D","similarities","trainDatasetMatrix","getNumExamples","as1D","predictClass","throw","__awaiter","label","sent","trys","return","__generator","asType","calculateTopClass","clearClass","clearAllClasses","getClassExampleCount","getClassifierDataset","getNumClasses","setClassifierDataset","classIndex","confidences","HowlerGlobal","Howler","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","masterGain","noAudio","usingWebAudio","autoSuspend","autoUnlock","_setup","volume","vol","setupAudioContext","gain","setValueAtTime","currentTime","_webAudio","ids","_getSoundIds","sound","_soundById","_node","mute","muted","unload","codecs","_autoSuspend","Audio","oncanplaythrough","_setupCodecs","audioTest","canPlayType","mpegTest","ua","checkOpera","isOldOpera","checkSafari","safariVersion","isOldSafari","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","m4b","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","_autoResume","createBufferSource","connect","destination","noteOn","resume","onended","disconnect","removeEventListener","_emit","addEventListener","_obtainHtml5Audio","testPlay","play","audio","suspend","_sounds","_paused","_suspendTimer","handleSuspension","_resumeAfterSuspend","Howl","_autoplay","autoplay","_format","_html5","html5","_loop","loop","_pool","_preload","preload","_rate","_sprite","sprite","_src","_xhr","xhr","headers","withCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","_onfade","onfade","_onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","action","exec","protocol","Sound","loadBuffer","internal","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","_seek","duration","setParams","_start","_stop","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","bind","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","_clearSound","_interval","fade","linearRampToValueAtTime","_startFadeInterval","isGroup","stepLen","lastTick","_fadeTo","setInterval","tick","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","_endFn","remCache","events","isId","task","ended","_drain","cnt","_panner","isIOS","howl","_parent","parent","createGain","createGainNode","_errorListener","_loadListener","_endListener","__default","loadSound","dataView","decodeAudioData","XMLHttpRequest","responseType","setRequestHeader","safeXhrSend","send","arraybuffer","AudioContext","webkitAudioContext","iOS","appVersion","safari","_super","_pos","_orientation","stereo","pan","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","createPanner","getInput","getAttr","assertShapesMatchAllowUndefinedSize","dim0","dim1","fullDefinedShape","elementShape","inferElementShape","listElementShape","partialShape","mergeElementShape","notfullDefinedShape","elementShapeA","elementShapeB","maxSize","identicalElementShapes","dynamicSize","clearAfterRead","closed_","idTensor","keepIds","tensorWithState","cleared","written","readMany","maxIndex","writeMany","totalLength","cumulativeLengths","elementPerRow","sizes","elementDtype","maxNumElements","TensorList","numElements","outputElementShape","reshapedTensors","elementIndex","fromTensor","reserve","thenFunc","elseFunc","cond","functionMap","executeFunctionAsync","tensorArrayMap","tensorListMap","bodyFunc","condFunc","condResult","argIds","condValue","origResult","resultIds","pred","frameId","enterFrame","exitFrame","nextIteration","tensorArray","addTensorArray","writeTensor","writeTensorArray","getTensorArray","readId","readIndex","readTensorArray","gatherId","gatherIndices","gatherDtype","gatherTensorArray","scatterId","scatterIndices","scatterTensor","scatterTensorArray","scatter","concatId","concatTensorArray","concatDtype","splitId","splitTensor","lengths","splitTensorArray","sizeId","sizeTensorArray","closeId","closeTensorArray","clearAndClose","getTensorList","elementDType","addTensorList","numElementsParam","pushBack","popBack","fusedConvAndDepthWiseParams","extraOp","activationFunc","isBiasAdd","noBiasAdd","isPrelu","isBatchNorm","numArgs","toUpperCase","biasArg","preluArg","nmsParams","keyDType","valueDType","handle","clear","checkKeyAndValueTensor","$keys","keysLength","valuesLength","findWithDefault","hashTable","addHashTable","getHashTableById","import","tensorSize","kernelSize","snapshot","summarize","squeezedShape","mapped","sameShape","opMapper","customExecutor","weightMap","rootContext","frameName","iterationId","contexts","lastId","generateCurrentContextIds","_currentContextIds","contextIdforContexts","newFrame","getExecutionSubgraph","usedNodes","missingInputs","dynamicNode","syncInputs","inputNodeNames","initNodeNames","frontier","isControlFlow","isDynamicShape","isHashTable","child","CONTROL_FLOW_OPS","DYNAMIC_SHAPE_OPS","HASH_TABLE_OPS","compiledMap","_weightMap","SEPERATOR","_functions","_functionExecutorMap","_outputs","_inputs","_initNodes","_signature","GraphExecutor","weightIds","_weightIds","functionExecutorMap","_resourceManager","sortedInputs","sortedOutputs","executionInfo","outNames","inNames","inputNodes","orderedNodes","getNodesInTopologicalOrder","mapInputs","checkInputs","checkInputShapeAndType","mapOutputs","checkOutputs","outputNodeNames","outputNodes","compilationKey","getCompilationKey","compile","tensorsToKeep","getFrozenTensorIds","intermediateTensorConsumerCount","checkTensorForDisposal","outputNames","_executeAsync","isFunctionExecution","executeWithControlFlow","results","outputIds","inputIds","mappedInputs","currentContext","added","processStack","missingOutputs","alternativeMsg","processChildNodes","childNode","notInGraph","normalizedName","hashTableNameToHandle","hashTableMap","TFHUB_SEARCH_PARAM","DEFAULT_MODEL_NAME","modelUrl","executor","handlers","findIOHandler","loadSync","producer","minConsumer","transformGraph","convertTensorMapToTensorsMap","initializer","executeAsync","handlerOrURL","execute","normalizeInputs","normalizeOutputs","newMap","loadGraphModel","fromTFHub","model","IMAGENET_CLASSES","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794","795","796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","880","881","882","883","884","885","886","887","888","889","890","891","892","893","894","895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914","915","916","917","918","919","920","921","922","923","924","925","926","927","928","929","930","931","932","933","934","935","936","937","938","939","940","941","942","943","944","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959","960","961","962","963","964","965","966","967","968","969","970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987","988","989","990","991","992","993","994","995","996","997","998","999","IMAGE_SIZE","EMBEDDING_NODES","MODEL_INFO","inputRange","tf","MobileNetImpl","inputMin","inputMax","normalizationConstant","predict","infer","Tensor","classify","getTopKClasses","probability","Fragment","StrictMode","Profiler","Suspense","for","encodeURIComponent","A","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","B","C","refs","updater","D","E","isReactComponent","setState","forceUpdate","isPureReactComponent","G","current","H","I","ref","__self","__source","J","defaultProps","$$typeof","_owner","L","escape","O","K","P","Q","_status","_result","default","R","S","T","ReactCurrentDispatcher","ReactCurrentBatchConfig","transition","ReactCurrentOwner","IsSomeRendererActing","Children","toArray","only","Component","PureComponent","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","cloneElement","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","createFactory","createRef","forwardRef","render","isValidElement","lazy","_payload","_init","memo","useCallback","useContext","useDebugValue","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","aa","ba","ca","da","ea","fa","ha","ia","ja","ka","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","oa","qa","ma","na","la","removeAttribute","setAttribute","setAttributeNS","xlinkHref","ra","sa","ta","wa","xa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ma","Ka","La","Na","Oa","Pa","prepareStackTrace","displayName","Qa","tag","_render","Ra","Sa","Ta","Va","_valueTracker","getOwnPropertyDescriptor","getValue","setValue","stopTracking","Ua","Wa","Xa","activeElement","Ya","defaultChecked","_wrapperState","initialChecked","Za","controlled","ab","bb","cb","ownerDocument","eb","fb","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","hb","ib","jb","textContent","kb","lb","mb","nb","ob","namespaceURI","innerHTML","valueOf","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","pb","lastChild","nodeType","nodeValue","qb","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","rb","sb","tb","style","setProperty","charAt","ub","menuitem","area","br","col","embed","hr","keygen","link","meta","wbr","vb","wb","is","xb","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Ob","Pb","Qb","Rb","onError","Sb","Tb","Ub","Vb","Wb","Xb","Zb","alternate","memoizedState","dehydrated","ac","cc","sibling","bc","dc","ec","fc","gc","hc","ic","jc","kc","lc","mc","nc","oc","pc","qc","rc","blockedOn","domEventName","eventSystemFlags","nativeEvent","targetContainers","sc","pointerId","tc","vc","wc","lanePriority","unstable_runWithPriority","hydrate","containerInfo","xc","yc","zc","Ac","Bc","unstable_scheduleCallback","unstable_NormalPriority","Cc","Dc","Ec","animationend","animationiteration","animationstart","transitionend","Fc","Gc","Hc","animation","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Pc","Qc","unstable_now","Rc","Uc","pendingLanes","expiredLanes","suspendedLanes","pingedLanes","Vc","entangledLanes","entanglements","Wc","Xc","Yc","Zc","eventTimes","clz32","bd","cd","dd","unstable_UserBlockingPriority","ed","fd","gd","hd","uc","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","stopPropagation","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Jd","clipboardData","Ld","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Rd","locale","which","Td","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Zd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","$d","ae","be","documentMode","ce","de","ee","fe","he","ie","color","date","datetime","email","month","number","password","tel","week","me","oe","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","Le","nextSibling","Me","contains","compareDocumentPosition","Ne","HTMLIFrameElement","contentWindow","Oe","contentEditable","Pe","Qe","Re","Se","Te","Ue","selectionStart","selectionEnd","anchorNode","defaultView","getSelection","anchorOffset","focusNode","focusOffset","Ve","We","Xe","Ye","Ze","Yb","$e","af","bf","cf","df","capture","passive","Nb","ef","ff","parentWindow","gf","hf","je","char","ke","jf","kf","lf","mf","autoFocus","nf","__html","of","pf","qf","rf","sf","previousSibling","vf","wf","xf","yf","zf","Af","Bf","Cf","Df","Ef","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Ff","childContextTypes","Gf","Hf","If","getChildContext","Jf","__reactInternalMemoizedMergedChildContext","Kf","Lf","Mf","Nf","Of","Pf","unstable_cancelCallback","Qf","unstable_shouldYield","Rf","unstable_requestPaint","Sf","Tf","unstable_getCurrentPriorityLevel","Uf","unstable_ImmediatePriority","Vf","Wf","Xf","unstable_LowPriority","Yf","unstable_IdlePriority","Zf","$f","ag","bg","cg","dg","eg","fg","gg","hg","ig","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","childLanes","tg","dependencies","firstContext","lanes","ug","vg","observedBits","responders","wg","xg","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","yg","zg","eventTime","lane","payload","callback","Ag","Bg","Cg","Dg","Eg","Fg","Gg","Kg","_reactInternals","Hg","Ig","Jg","Lg","shouldComponentUpdate","Mg","contextType","Ng","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Og","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Pg","Qg","_stringRef","Rg","Sg","lastEffect","nextEffect","firstEffect","Tg","Ug","elementType","Vg","implementation","Wg","Xg","Yg","Zg","ah","bh","ch","dh","eh","documentElement","tagName","fh","gh","hh","ih","memoizedProps","revealOrder","jh","kh","lh","mh","nh","oh","pendingProps","ph","qh","rh","sh","th","uh","_workInProgressVersionPrimary","vh","wh","xh","yh","zh","Ah","Bh","Ch","Dh","Eh","Fh","Gh","Hh","baseQueue","Ih","Jh","Kh","lastRenderedReducer","eagerReducer","eagerState","lastRenderedState","dispatch","Lh","Mh","_getVersion","_source","mutableReadLanes","Nh","U","getSnapshot","subscribe","setSnapshot","Oh","Ph","Qh","Rh","destroy","deps","Sh","Th","Uh","Vh","Wh","Xh","Yh","Zh","ai","bi","ci","di","readContext","useDeferredValue","useTransition","useMutableSource","useOpaqueIdentifier","unstable_isNewReconciler","uf","ei","fi","gi","ii","ji","ki","li","mi","baseLanes","ni","oi","pi","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","qi","getDerivedStateFromError","ri","pendingContext","Bi","Di","Ei","si","retryLane","ti","fallback","unstable_avoidThisFallback","ui","unstable_expectedLoadTime","vi","wi","xi","yi","zi","isBackwards","rendering","renderingStartTime","last","tail","tailMode","Ai","Fi","Gi","wasMultiple","multiple","onClick","createElementNS","createTextNode","V","Hi","Ii","W","Ji","Ki","Li","Mi","Ni","Oi","Pi","Qi","Ri","Si","componentDidCatch","Ti","componentStack","Ui","WeakSet","Vi","Wi","Xi","__reactInternalSnapshotBeforeUpdate","Yi","Zi","$i","aj","display","bj","onCommitFiberUnmount","componentWillUnmount","cj","dj","ej","fj","gj","hj","insertBefore","_reactRootContainer","jj","kj","lj","mj","nj","oj","pj","X","Y","qj","rj","sj","tj","uj","vj","wj","ck","Z","xj","yj","zj","Aj","Bj","Cj","Dj","Ej","Fj","Gj","Hj","Ij","Jj","Sc","Kj","Lj","Mj","callbackNode","expirationTimes","callbackPriority","Tc","Nj","Oj","Pj","Qj","Rj","Sj","Tj","finishedWork","finishedLanes","Uj","timeoutHandle","Wj","Xj","pingCache","Yj","Zj","va","ak","bk","dk","rangeCount","focusedElem","selectionRange","ek","extend","createRange","setStart","removeAllRanges","addRange","setEnd","scrollLeft","scrollTop","onCommitFiberRoot","fk","gk","ik","pendingChildren","jk","mutableSourceEagerHydrationData","kk","lk","mk","nk","qk","hydrationOptions","mutableSources","_internalRoot","rk","tk","hasAttribute","sk","uk","hk","unstable_observedBits","unmount","querySelectorAll","form","Vj","vk","Events","wk","findFiberByHostInstance","bundleType","rendererPackageName","xk","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","yk","isDisabled","supportsFiber","inject","createPortal","findDOMNode","flushSync","unmountComponentAtNode","unstable_batchedUpdates","unstable_createPortal","unstable_renderSubtreeIntoContainer","MessageChannel","unstable_forceFrameRate","cancelAnimationFrame","port2","port1","onmessage","postMessage","sortIndex","startTime","expirationTime","priorityLevel","unstable_Profiling","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","delay","unstable_wrapCallback","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","_invoke","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iteratorMethod","isGeneratorFunction","genFun","ctor","mark","awrap","async","skipTempReset","rootRecord","rval","exception","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","maxChunkLength","len2","encodeChunk","lookup","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","systemFetch","getNodeFetch","PlatformNode","hrtime","Alea","mash","Mash","s0","s1","s2","impl","opts","prng","int32","double","quick","XorGen","strseed","math","nodecrypto","startdenom","significance","overflow","seedrandom","shortseed","mixkey","entropy","tostring","randomBytes","crypto","msCrypto","getRandomValues","plugins","screen","autoseed","arc4","ARC4","pass","is_math_call","keylen","prop","typ","smear","stringseed","scope","Timeout","clearFn","_clearFn","unref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","clearImmediate","registerImmediate","nextHandle","tasksByHandle","currentlyRunningATask","doc","attachTo","runIfPresent","importScripts","postMessageIsAsynchronous","oldOnMessage","canUsePostMessage","messagePrefix","onGlobalMessage","installPostMessageImplementation","installMessageChannelImplementation","html","script","onreadystatechange","installReadyStateChangeImplementation","jsx","jsxs","property","receiver","desc","assertNotComplex","firstUse","MathBackendCPU","nextDataId","outId","encodedValues","complexTensorInfos","decodedData","unaryKernelFunc","cpuBackend","xSize","$dtype","makeTensorInfo","unaryKernelFuncFromImpl","unaryImpl","eluConfig","identity","identityConfig","outVals","leakyReluConfig","createSimpleBinaryKernelImpl","bShape","aVals","bVals","resultRank","resultStrides","resultSize","aRank","bRank","aStrides","bStrides","aBroadcastDims","bBroadcastDims","aLoc","aIndex","bLoc","bIndex","preluImpl","xValue","aValue","resultData","preluConfig","reluConfig","relu6Config","sigmoidConfig","realVals","imagVals","complexInfo","complexConfig","realVal","realConfig","zerosTensorInfo","floatX","disposeIntermediateTensorInfo","realPart","resultValues","castConfig","binaryKernelFunc","simpleImpl","complexImpl","decodedAVals","decodedBVals","$aComplex","$aComplexVals","aReal","aImag","aRealVals","aImagVals","$bComplex","$bComplexVals","bReal","bImag","bRealVals","bImagVals","resultRealData","resultImagData","resultReal","resultImag","createComplexBinaryKernelImpl","resultRealVals","resultImagVals","aIdx","bIdx","opResult","addImpl","addComplexImpl","addConfig","$shape","$xSize","xData","reshapeConfig","batchMatMul","batchDimsCompatible","b3dShape","a3d","b3d","sharedDim","leftDim","rightDim","a3dValues","b3dValues","a3dStrides","b3dStrides","aBatch","aOuterStep","aInnerStep","bInnerStep","bOuterStep","bBatch","resVals","i0","j0","iBlock","jBlock","kBlock","batchOffsetA","batchOffsetB","batchMatMulConfig","_fusedMatMulConfig","addRes","activationRes","intermediates","absConfig","simpleAbsImpl","makeOutput","acosConfig","acoshConfig","addNConfig","outBuf","currVals","transposeImpl","xStrides","newLoc","transposeConfig","allConfig","origAxes","permutedAxes","reduceShape","reduceSize","reshapedResult","anyConfig","anyVal","argMaxConfig","intermediateTensorInfos","outSize","argMinConfig","minIndex","asinConfig","asinhConfig","atanConfig","atan2Impl","bValue","atan2Config","atanhConfig","xValues","poolType","padTop","padLeft","POSITIVE_INFINITY","outputVals","outputBatchStrides","outputRowStrides","outputColStrides","outputBatchOffset","inputBatchOffset","yR","xRCorner","xRMin","xRMax","outputRowOffset","yC","xCCorner","xCMin","xCMax","minMaxValue","avgValue","xR","xROffset","xC","pixel","maxPoolPositions","flattenPositions","maxPositions","xBuf","maxValue","maxPosition","wR","wC","pool3d","padFront","outputDepthStrides","yDepth","xDepthCorner","xDepthMin","xDepthMax","outputDepthOffset","yRow","xRowCorner","xRowMin","xRowMax","yCol","xColCorner","xColMin","xColMax","outputColOffset","xDepth","xDepthOffset","xRow","xRowOffset","xCol","avgPoolConfig","avgPool3DConfig","avgPool3DGradConfig","avgMultiplier","dyBuf","bufferSync","dxDepth","dxRow","dxCol","dyDepthCorner","dyRowCorner","dyColCorner","dotProd","wDepth","dyDepth","wRow","dyRow","wCol","dyCol","avgPoolGradConfig","dyData","dxR","dxC","dyRCorner","dyCCorner","dyR","dyC","batchNormConfig","mVals","varVals","sVals","offVals","offValsLength","sValsLength","varValsLength","mValsLength","offi","$size","isContinous","inBuf","outLoc","inLoc","idx","sliceImpl","sliceConfig","batchToSpaceNDConfig","xReshaped","xTransposed","xTransposedReshaped","bincountImpl","weightsVals","weightsDtype","weightsShape","weightsSize","bincountConfig","createSimpleUnaryImpl","ceilImpl","ceilConfig","clip","clipAttrs","clipConfig","complexAbsConfig","complexVals","hypot","imagVal","imagConfig","$axis","$inputs","reals","imags","realConcated","imagConcated","inputs2D","innerSize","inputsValShapes","simplyConcat","colOffset","tIdx","resIdx","concatImpl","finalOutShape","concatConfig","conv2D","isChannelsLast","filterStrides","xBatchStride","xRowStride","xColStride","xChannelStride","yBatchStride","yRowStride","yColStride","yChannelStride","wVals","xOffset1","yOffset1","yOffset2","wOffset1","xOffset2","yOffset3","xOffset3","wOffset3","d1","xVal","d2","conv2DConfig","conv2DBackpropFilterConfig","dW","topPad","dyVals","yRMin","yRMax","yCMin","yCMax","conv2DBackpropInputConfig","dyStrides","dxValues","dyValues","fltValues","fltS0","fltS1","fltS2","dyOffset","fltOffset","conv3DConfig","yF","xFCorner","wF","xF","wOffset2","yOffset4","xOffset4","wOffset4","conv3DBackpropFilterV2Config","dw","dwValues","dwS0","dwS1","dwS2","dwS3","dyS0","dyS1","dyS2","dyS3","xS0","xS1","xS2","xS3","frontPad","yFMin","yFMax","conv3DBackpropInputV2Config","dxS0","dxS1","dxS2","dxS3","fltS3","xFMin","cosConfig","coshConfig","cropAndResizeConfig","cropHeight","cropWidth","boxVals","boxIndVals","imageVals","inStride","outStride","startInd","y1","x1","y2","bInd","heightScale","widthScale","yInd","ind","topInd","bottomInd","yLerp","xInd","leftInd","rightInd","xLerp","topLeft","topRight","bottomLeft","closestX","closestY","inInd","outInd","cumsumConfig","permutation","permutedAxis","resultDtype","finalDim","indexAdjuster","prevIdx","reverseTransposedResult","denseBincountConfig","weightsBuf","bincountReduceImpl","depthToSpaceConfig","outputHeight","outputWidth","outputDepth","outputIdx","inH","offsetH","inW","offsetD","inputIdx","depthwiseConv2dNative","$dilations","chMul","depthwiseConv2dNativeConfig","depthwiseConv2dNativeBackpropFilterConfig","dm","depthwiseConv2dNativeBackpropInputConfig","diagConfig","dilation2dConfig","filterVals","filterRank","outRank","hOut","hBeg","wOut","wBeg","curVal","hIn","wIn","xIndex","filterIndex","dilation2dBackpropFilterConfig","hMax","wMax","dilation2dBackpropInputConfig","hInMax","wInMax","multiplyImpl","multiplyComplexImpl","multiplyConfig","reductionAxes","permutedX","oldResult","sumConfig","einsumConfig","numDimsRemaining","tensorsToDispose","idTerm","dimsToExpand","targetShape","eluGradConfig","equalImpl","equalConfig","a1","a2","a3","a4","a5","erfConfig","expImpl","expConfig","$dim","expandDimsConfig","expm1Impl","expm1Config","realDivImpl","realDivConfig","subImpl","subComplexImpl","subConfig","fftBatch","innerDim","inputVals","real2D","imag2D","fftImpl","$realInfo","$imagInfo","inputSize","fftRadix2","realInfo","imagInfo","sizeInfo","sizeInfoCopy","divRealInfo","divImagInfo","divRealVals","divImagVals","rawOutput","term","fourierTransformByMatmul","evenComplex","evenRealVals","evenImagVals","evenShape","evenRealInfo","evenImagInfo","evenTensorInfo","oddComplex","oddRealVals","oddImagVals","oddShape","oddRealInfo","oddImagInfo","oddTensorInfo","$evenComplex","$evenRealVals","$evenImagVals","$evenShape","$evenRealInfo","$evenImagInfo","$evenTensorInfo","$oddComplex","$oddRealVals","$oddImagVals","$oddShape","$oddRealInfo","$oddImagInfo","$oddTensorInfo","eShape","eRealInfo","eImagInfo","exponentInfo","addPart","subPart","addPartReal","subPartReal","addPartImag","subPartImag","$realVals","$imagVals","fftConfig","input2D","resultReshaped","fillValues","fillConfig","flipLeftRightConfig","batchIdx","batchOffset","rowOffset","coordX","outputValue","floorImpl","floorConfig","floorDivImpl","floorDivConfig","fusedConv2DConfig","resultOld","fusedDepthwiseConv2DConfig","gatherNdConfig","paramsSize","numSlices","indicesData","paramsBuf","paramsShape","flattenIndex","gatherNdImpl","gatherV2Config","$batchDims","indicesSize","parsedAxis","shapeInfo","segment_util","flattenX","flattenOutputShape","indicesBuf","originalLoc","indicesIdx","indicesIndex","originalIndex","gatherV2Impl","greaterImpl","greaterConfig","greaterEqualImpl","greaterEqualConfig","ifftConfig","isFiniteConfig","isInfConfig","isNaNConfig","lessImpl","lessConfig","lessEqualImpl","lessEqualConfig","linSpaceConfig","linSpaceImpl","logImpl","logConfig","log1pConfig","logicalAndImpl","logicalAndConfig","logicalNotConfig","logicalOrImpl","logicalOrConfig","lRNConfig","channels","maxD","sumAcrossChannels","currentChannel","beginSumOffset","endSumOffset","lRNGradConfig","dySize","yValues","depthBegin","depthEnd","dyi","maxOutShape","maxImpl","maxConfig","maximumImpl","maximumConfig","maxPoolConfig","maxPool3DConfig","maxPool3DGradConfig","maxPosBuf","maxPool3dPositions","maxPoolGradConfig","maxPoolWithArgmaxConfig","maxPools","maxPoolWithArgmaxImpl","pooled","pooledDataId","indexesDataId","meanConfig","toDispose","reduceSizeScalar","minConfig","minimumImpl","minimumConfig","mirrorPadConfig","coords","inIndex","modImpl","modConfig","logitsRank","maxLogit","expandedShape","maxLogitReshaped","sumExp","sumReshaped","softmaxConfig","multinomialConfig","probabilities","numEvents","probVals","resShape","cdf","outOffset","sampleId","negConfig","xDtype","minusOne","negImpl","nonMaxSuppressionV3Config","nonMaxSuppressionV4Config","nonMaxSuppressionV5Config","notEqualImpl","notEqualConfig","oneHotConfig","indicesVal","imagPart","zerosLikeConfig","onesLikeConfig","pack","expandedT","packConfig","padV2Config","outCoords","powImpl","powConfig","prodConfig","outDtype","prodImpl","rangeConfig","rangeImpl","reciprocalConfig","resizeBilinearConfig","imagesStrides","newHeight","newWidth","oldHeight","oldWidth","effectiveInputSize","effectiveOutputSize","effectiveRowSizeRatio","effectiveColSizeRatio","sourceFracRow","sourceRowFloor","rowFrac","sourceRowCeil","topRowOffset","botRowOffset","sourceFracCol","sourceColFloor","colFrac","sourceColCeil","topLeftOffest","botLeftOffset","topRightOffset","botRightOffest","resizeBilinearGradConfig","xHeight","xWidth","yHeight","yWidth","effectiveXSize","effectiveYSize","bOffset","topDxRIndex","bottomDxRIndex","topDxROffset","bottomDxROffset","dxRLerp","inverseDxRLerp","leftDxCIndex","rightDxCIndex","dxCLerp","inverseDxCLerp","topLeftRCOffset","topRightRCOffset","bottomLeftRCOffset","bottomRightRCOffset","inverseDxRLerpTimesInverseDxCLerp","inverseDxRLerpTimesDxCLerp","dxRLerpTimesInverseDxCLerp","dxRLerpTimesDxCLerp","dyVal","resizeNearestNeighborConfig","outputOffset","sourceNearestRow","sourceNearestCol","newVal","resizeNearestNeighborGradConfig","invHeightScale","invWidthScale","winHeight","winWidth","startRLerp","startDyR","startCLerp","startDyC","accum","dyRIndex","dyROffset","dyCIndex","dyCOffset","reverseConfig","$dims","rotateWithOffsetConfig","centerX","centerY","sinFactor","cosFactor","coordY","roundConfig","rsqrtImpl","rsqrtConfig","scatterImpl","sumDupeIndices","flattenShape","updatesData","scatterNdConfig","selectConfig","conditionRank","tValues","eValues","scaleAlpha","seluConfig","signConfig","sinConfig","sinhConfig","tooLarge","tooSmall","expX","softplusConfig","spaceToBatchNDConfig","completePaddings","paddedX","reshapedPaddedShape","permutedReshapedPaddedPermutation","paddedXReshaped","paddedXT","sparseFillEmptyRowsConfig","indicesDType","valuesDType","indicesCount","denseRows","rowsAreOrdered","lastIndicesRow","csrOffset","allRowsFull","rowEmpty","fullIndicesCount","filledCount","outputI","startingIndex","sparseFillEmptyRowsImpl","outputIndicesShape","sparseReshapeConfig","inputIndicesShape","inputDType","denseSize","nnz","outputRank","unknownIndex","missing","inputStrides","outputStrides","sparseReshapeImpl","sparseSegmentReductionImpl","isMean","numIndices","inputFlat","numCol","lastSegmentIdPlusOne","outputRows","outputLength","uninitializedIndex","outIndex","nextIndex","sparseSegmentMeanConfig","outputData","outputDataShape","sparseSegmentSumConfig","sparseToDenseConfig","splitVConfig","sliceT","sqrtConfig","squareConfig","squaredDifferenceImpl","squaredDifferenceConfig","stepAttrs","stepConfig","stridedSliceConfig","sliced","stridedSliceImpl","preserveShort","nGramWidth","getPadWidth","splitIndex","outputStartIndex","numNGrams","nGramIndex","leftPadding","rightPadding","numTokens","dataStartIndex","nGramSize","nGram","nextNGramIndex","appendToNGram","splits","inputDataSize","splitsSize","prevSplit","validSplits","numBatchItems","empty","getNumNGrams","outputStartIdx","createNGrams","dataLength","stringNGramsConfig","compute","stringNGramsImpl","delimiters","token","tokenStart","stringSplitConfig","tokens","maxNumEntries","nEntries","stringSplitImpl","stringToHashBucketFastConfig","stringToHashBucketFastImpl","tanConfig","tanhConfig","tileConfig","tileImpl","comparePair","valueDiff","newLeft","newRight","topKImpl","allTopKVals","allTopKIndices","topKVals","topKIndices","topKConfig","transformConfig","batchStride","rowStride","colStride","transformVals","outY","outX","projection","inX","inY","mapCoord","nearestInterpolation","bilinearInterpolation","outCoord","inCoord","sz2","mapCoordReflect","sz","mapCoordWrap","mapCoordNearest","mapCoordConstant","readWithFillValue","yFloor","xFloor","yCeil","xCeil","uniqueConfig","uniqueElements","inputBuffer","uniqueIndices","is1DTensor","axisValues","uniqueIndex","outputTmpShape","outputBuffer","uniqueElementIndex","uniqueImpl","unpackConfig","valueRank","tempRes","unsortedSegmentSumConfig","numIters","expanded","scalarValue","segmentId","maskCasted","sumTensorInfo"],"mappings":"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,GACAC,GACAiB,GACAhH,EACAwH,GACAkB,GACAS,GACAhN,EACAmN,GACAG,GACA9N,EACA+N,GACAoB,GACAyB,GACAQ,GACAT,GACA4B,GACAkB,GACA3B,GACAkC,GACAC,GACAC,GACA+B,GACAQ,GACAG,GACAa,GACAC,GACAE,GACAC,GACAC,GACAgB,GACAH,GACAmC,GACAtB,GACAzb,EACA+b,GACAE,GACAM,GACAE,GACAE,GACAE,GACAmE,GACAI,GACAC,GACAO,GACAE,GACAC,GACAE,GACAC,GACAQ,GACAe,GACAE,GACAzjB,EACA0jB,GACAxT,GACAyT,GACAC,GACAC,GACA3jB,EACA6jB,GACAE,GACAC,GACAG,GACAC,GACAE,GACAC,GACAE,GACAC,GACAO,GACAU,GACAC,GACAC,GACAC,GACAG,GACAC,GACAT,GACAe,GACAG,GACAE,GACAC,GACAI,GACAQ,GACA1M,GACAkN,GACAI,GACAC,GACAC,GACAE,GACAC,GACAI,GACAG,GACAC,GACAG,GACAhoB,EACAioB,GACAG,GACA3nB,EACA6nB,GACAroB,EACAC,EACA+C,EACAslB,GACAwB,GACA2B,GACAK,GACAc,GACAE,GACAM,GACAE,GACAK,GACAC,GACAK,GACA/tB,EACAguB,GACAC,GACAC,GACAhhB,GACA8Y,GACAsI,GACAC,GACAO,GACAgB,GACAsB,GACAG,GACAC,GACAC,GACAE,GACAC,GACAE,GACAE,GACAC,GACA6B,GACAM,GACAK,GACApZ,GACA1B,GACAgb,GACAC,GACAC,GACAW,GACA/vB,GACAgwB,GACA0B,GACAW,GACAG,GACA5Q,IAGF,kBAA0C,CAArC,IAAMnpJ,GAAY,OACrB,yBAAeA","file":"static/js/2.42c6399e.chunk.js","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {IOHandler, LoadOptions} from './types';\n\nexport type IORouter = (url: string|string[], loadOptions?: LoadOptions) =>\n    IOHandler;\n\nexport class IORouterRegistry {\n  // Singleton instance.\n  private static instance: IORouterRegistry;\n\n  private saveRouters: IORouter[];\n  private loadRouters: IORouter[];\n\n  private constructor() {\n    this.saveRouters = [];\n    this.loadRouters = [];\n  }\n\n  private static getInstance(): IORouterRegistry {\n    if (IORouterRegistry.instance == null) {\n      IORouterRegistry.instance = new IORouterRegistry();\n    }\n    return IORouterRegistry.instance;\n  }\n\n  /**\n   * Register a save-handler router.\n   *\n   * @param saveRouter A function that maps a URL-like string onto an instance\n   * of `IOHandler` with the `save` method defined or `null`.\n   */\n  static registerSaveRouter(saveRouter: IORouter) {\n    IORouterRegistry.getInstance().saveRouters.push(saveRouter);\n  }\n\n  /**\n   * Register a load-handler router.\n   *\n   * @param loadRouter A function that maps a URL-like string onto an instance\n   * of `IOHandler` with the `load` method defined or `null`.\n   */\n  static registerLoadRouter(loadRouter: IORouter) {\n    IORouterRegistry.getInstance().loadRouters.push(loadRouter);\n  }\n\n  /**\n   * Look up IOHandler for saving, given a URL-like string.\n   *\n   * @param url\n   * @returns If only one match is found, an instance of IOHandler with the\n   * `save` method defined. If no match is found, `null`.\n   * @throws Error, if more than one match is found.\n   */\n  static getSaveHandlers(url: string|string[]): IOHandler[] {\n    return IORouterRegistry.getHandlers(url, 'save');\n  }\n\n  /**\n   * Look up IOHandler for loading, given a URL-like string.\n   *\n   * @param url\n   * @param loadOptions Optional, custom load options.\n   * @returns All valid handlers for `url`, given the currently registered\n   *   handler routers.\n   */\n  static getLoadHandlers(url: string|string[], loadOptions?: LoadOptions):\n      IOHandler[] {\n    return IORouterRegistry.getHandlers(url, 'load', loadOptions);\n  }\n\n  private static getHandlers(\n      url: string|string[], handlerType: 'save'|'load',\n      loadOptions?: LoadOptions): IOHandler[] {\n    const validHandlers: IOHandler[] = [];\n    const routers = handlerType === 'load' ?\n        IORouterRegistry.getInstance().loadRouters :\n        IORouterRegistry.getInstance().saveRouters;\n    routers.forEach(router => {\n      const handler = router(url, loadOptions);\n      if (handler !== null) {\n        validHandlers.push(handler);\n      }\n    });\n    return validHandlers;\n  }\n}\n\nexport const registerSaveRouter = (loudRouter: IORouter) =>\n    IORouterRegistry.registerSaveRouter(loudRouter);\nexport const registerLoadRouter = (loudRouter: IORouter) =>\n    IORouterRegistry.registerLoadRouter(loudRouter);\nexport const getSaveHandlers = (url: string|string[]) =>\n    IORouterRegistry.getSaveHandlers(url);\nexport const getLoadHandlers =\n    (url: string|string[], loadOptions?: LoadOptions) =>\n        IORouterRegistry.getLoadHandlers(url, loadOptions);\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport '../flags';\n\nimport {env} from '../environment';\n\nimport {getModelArtifactsInfoForJSON} from './io_utils';\nimport {IORouter, IORouterRegistry} from './router_registry';\nimport {IOHandler, ModelArtifacts, ModelArtifactsInfo, ModelStoreManager, SaveResult} from './types';\n\nconst DATABASE_NAME = 'tensorflowjs';\nconst DATABASE_VERSION = 1;\n\n// Model data and ModelArtifactsInfo (metadata) are stored in two separate\n// stores for efficient access of the list of stored models and their metadata.\n// 1. The object store for model data: topology, weights and weight manifests.\nconst MODEL_STORE_NAME = 'models_store';\n// 2. The object store for ModelArtifactsInfo, including meta-information such\n//    as the type of topology (JSON vs binary), byte size of the topology, byte\n//    size of the weights, etc.\nconst INFO_STORE_NAME = 'model_info_store';\n\n/**\n * Delete the entire database for tensorflow.js, including the models store.\n */\nexport async function deleteDatabase(): Promise<void> {\n  const idbFactory = getIndexedDBFactory();\n\n  return new Promise<void>((resolve, reject) => {\n    const deleteRequest = idbFactory.deleteDatabase(DATABASE_NAME);\n    deleteRequest.onsuccess = () => resolve();\n    deleteRequest.onerror = error => reject(error);\n  });\n}\n\nfunction getIndexedDBFactory(): IDBFactory {\n  if (!env().getBool('IS_BROWSER')) {\n    // TODO(cais): Add more info about what IOHandler subtypes are available.\n    //   Maybe point to a doc page on the web and/or automatically determine\n    //   the available IOHandlers and print them in the error message.\n    throw new Error(\n        'Failed to obtain IndexedDB factory because the current environment' +\n        'is not a web browser.');\n  }\n  // tslint:disable-next-line:no-any\n  const theWindow: any = typeof window === 'undefined' ? self : window;\n  const factory = theWindow.indexedDB || theWindow.mozIndexedDB ||\n      theWindow.webkitIndexedDB || theWindow.msIndexedDB ||\n      theWindow.shimIndexedDB;\n  if (factory == null) {\n    throw new Error(\n        'The current browser does not appear to support IndexedDB.');\n  }\n  return factory;\n}\n\nfunction setUpDatabase(openRequest: IDBRequest) {\n  const db = openRequest.result as IDBDatabase;\n  db.createObjectStore(MODEL_STORE_NAME, {keyPath: 'modelPath'});\n  db.createObjectStore(INFO_STORE_NAME, {keyPath: 'modelPath'});\n}\n\n/**\n * IOHandler subclass: Browser IndexedDB.\n *\n * See the doc string of `browserIndexedDB` for more details.\n */\nexport class BrowserIndexedDB implements IOHandler {\n  protected readonly indexedDB: IDBFactory;\n  protected readonly modelPath: string;\n\n  static readonly URL_SCHEME = 'indexeddb://';\n\n  constructor(modelPath: string) {\n    this.indexedDB = getIndexedDBFactory();\n\n    if (modelPath == null || !modelPath) {\n      throw new Error(\n          'For IndexedDB, modelPath must not be null, undefined or empty.');\n    }\n    this.modelPath = modelPath;\n  }\n\n  async save(modelArtifacts: ModelArtifacts): Promise<SaveResult> {\n    // TODO(cais): Support saving GraphDef models.\n    if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n      throw new Error(\n          'BrowserLocalStorage.save() does not support saving model topology ' +\n          'in binary formats yet.');\n    }\n\n    return this.databaseAction(this.modelPath, modelArtifacts) as\n        Promise<SaveResult>;\n  }\n\n  async load(): Promise<ModelArtifacts> {\n    return this.databaseAction(this.modelPath) as Promise<ModelArtifacts>;\n  }\n\n  /**\n   * Perform database action to put model artifacts into or read model artifacts\n   * from IndexedDB object store.\n   *\n   * Whether the action is put or get depends on whether `modelArtifacts` is\n   * specified. If it is specified, the action will be put; otherwise the action\n   * will be get.\n   *\n   * @param modelPath A unique string path for the model.\n   * @param modelArtifacts If specified, it will be the model artifacts to be\n   *   stored in IndexedDB.\n   * @returns A `Promise` of `SaveResult`, if the action is put, or a `Promise`\n   *   of `ModelArtifacts`, if the action is get.\n   */\n  private databaseAction(modelPath: string, modelArtifacts?: ModelArtifacts):\n      Promise<ModelArtifacts|SaveResult> {\n    return new Promise<ModelArtifacts|SaveResult>((resolve, reject) => {\n      const openRequest = this.indexedDB.open(DATABASE_NAME, DATABASE_VERSION);\n      openRequest.onupgradeneeded = () => setUpDatabase(openRequest);\n\n      openRequest.onsuccess = () => {\n        const db = openRequest.result;\n\n        if (modelArtifacts == null) {\n          // Read model out from object store.\n          const modelTx = db.transaction(MODEL_STORE_NAME, 'readonly');\n          const modelStore = modelTx.objectStore(MODEL_STORE_NAME);\n          const getRequest = modelStore.get(this.modelPath);\n          getRequest.onsuccess = () => {\n            if (getRequest.result == null) {\n              db.close();\n              return reject(new Error(\n                  `Cannot find model with path '${this.modelPath}' ` +\n                  `in IndexedDB.`));\n            } else {\n              resolve(getRequest.result.modelArtifacts);\n            }\n          };\n          getRequest.onerror = error => {\n            db.close();\n            return reject(getRequest.error);\n          };\n          modelTx.oncomplete = () => db.close();\n        } else {\n          // Put model into object store.\n          const modelArtifactsInfo: ModelArtifactsInfo =\n              getModelArtifactsInfoForJSON(modelArtifacts);\n          // First, put ModelArtifactsInfo into info store.\n          const infoTx = db.transaction(INFO_STORE_NAME, 'readwrite');\n          let infoStore = infoTx.objectStore(INFO_STORE_NAME);\n          const putInfoRequest =\n              infoStore.put({modelPath: this.modelPath, modelArtifactsInfo});\n          let modelTx: IDBTransaction;\n          putInfoRequest.onsuccess = () => {\n            // Second, put model data into model store.\n            modelTx = db.transaction(MODEL_STORE_NAME, 'readwrite');\n            const modelStore = modelTx.objectStore(MODEL_STORE_NAME);\n            const putModelRequest = modelStore.put({\n              modelPath: this.modelPath,\n              modelArtifacts,\n              modelArtifactsInfo\n            });\n            putModelRequest.onsuccess = () => resolve({modelArtifactsInfo});\n            putModelRequest.onerror = error => {\n              // If the put-model request fails, roll back the info entry as\n              // well.\n              infoStore = infoTx.objectStore(INFO_STORE_NAME);\n              const deleteInfoRequest = infoStore.delete(this.modelPath);\n              deleteInfoRequest.onsuccess = () => {\n                db.close();\n                return reject(putModelRequest.error);\n              };\n              deleteInfoRequest.onerror = error => {\n                db.close();\n                return reject(putModelRequest.error);\n              };\n            };\n          };\n          putInfoRequest.onerror = error => {\n            db.close();\n            return reject(putInfoRequest.error);\n          };\n          infoTx.oncomplete = () => {\n            if (modelTx == null) {\n              db.close();\n            } else {\n              modelTx.oncomplete = () => db.close();\n            }\n          };\n        }\n      };\n      openRequest.onerror = error => reject(openRequest.error);\n    });\n  }\n}\n\nexport const indexedDBRouter: IORouter = (url: string|string[]) => {\n  if (!env().getBool('IS_BROWSER')) {\n    return null;\n  } else {\n    if (!Array.isArray(url) && url.startsWith(BrowserIndexedDB.URL_SCHEME)) {\n      return browserIndexedDB(url.slice(BrowserIndexedDB.URL_SCHEME.length));\n    } else {\n      return null;\n    }\n  }\n};\nIORouterRegistry.registerSaveRouter(indexedDBRouter);\nIORouterRegistry.registerLoadRouter(indexedDBRouter);\n\n/**\n * Creates a browser IndexedDB IOHandler for saving and loading models.\n *\n * ```js\n * const model = tf.sequential();\n * model.add(\n *     tf.layers.dense({units: 1, inputShape: [100], activation: 'sigmoid'}));\n *\n * const saveResult = await model.save('indexeddb://MyModel'));\n * console.log(saveResult);\n * ```\n *\n * @param modelPath A unique identifier for the model to be saved. Must be a\n *   non-empty string.\n * @returns An instance of `BrowserIndexedDB` (sublcass of `IOHandler`),\n *   which can be used with, e.g., `tf.Model.save`.\n */\nexport function browserIndexedDB(modelPath: string): IOHandler {\n  return new BrowserIndexedDB(modelPath);\n}\n\nfunction maybeStripScheme(key: string) {\n  return key.startsWith(BrowserIndexedDB.URL_SCHEME) ?\n      key.slice(BrowserIndexedDB.URL_SCHEME.length) :\n      key;\n}\n\nexport class BrowserIndexedDBManager implements ModelStoreManager {\n  private indexedDB: IDBFactory;\n\n  constructor() {\n    this.indexedDB = getIndexedDBFactory();\n  }\n\n  async listModels(): Promise<{[path: string]: ModelArtifactsInfo}> {\n    return new Promise<{[path: string]: ModelArtifactsInfo}>(\n        (resolve, reject) => {\n          const openRequest =\n              this.indexedDB.open(DATABASE_NAME, DATABASE_VERSION);\n          openRequest.onupgradeneeded = () => setUpDatabase(openRequest);\n\n          openRequest.onsuccess = () => {\n            const db = openRequest.result;\n            const tx = db.transaction(INFO_STORE_NAME, 'readonly');\n            const store = tx.objectStore(INFO_STORE_NAME);\n            // tslint:disable:max-line-length\n            // Need to cast `store` as `any` here because TypeScript's DOM\n            // library does not have the `getAll()` method even though the\n            // method is supported in the latest version of most mainstream\n            // browsers:\n            // https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/getAll\n            // tslint:enable:max-line-length\n            // tslint:disable-next-line:no-any\n            const getAllInfoRequest = (store as any).getAll() as IDBRequest;\n            getAllInfoRequest.onsuccess = () => {\n              const out: {[path: string]: ModelArtifactsInfo} = {};\n              for (const item of getAllInfoRequest.result) {\n                out[item.modelPath] = item.modelArtifactsInfo;\n              }\n              resolve(out);\n            };\n            getAllInfoRequest.onerror = error => {\n              db.close();\n              return reject(getAllInfoRequest.error);\n            };\n            tx.oncomplete = () => db.close();\n          };\n          openRequest.onerror = error => reject(openRequest.error);\n        });\n  }\n\n  async removeModel(path: string): Promise<ModelArtifactsInfo> {\n    path = maybeStripScheme(path);\n    return new Promise<ModelArtifactsInfo>((resolve, reject) => {\n      const openRequest = this.indexedDB.open(DATABASE_NAME, DATABASE_VERSION);\n      openRequest.onupgradeneeded = () => setUpDatabase(openRequest);\n\n      openRequest.onsuccess = () => {\n        const db = openRequest.result;\n        const infoTx = db.transaction(INFO_STORE_NAME, 'readwrite');\n        const infoStore = infoTx.objectStore(INFO_STORE_NAME);\n\n        const getInfoRequest = infoStore.get(path);\n        let modelTx: IDBTransaction;\n        getInfoRequest.onsuccess = () => {\n          if (getInfoRequest.result == null) {\n            db.close();\n            return reject(new Error(\n                `Cannot find model with path '${path}' ` +\n                `in IndexedDB.`));\n          } else {\n            // First, delete the entry in the info store.\n            const deleteInfoRequest = infoStore.delete(path);\n            const deleteModelData = () => {\n              // Second, delete the entry in the model store.\n              modelTx = db.transaction(MODEL_STORE_NAME, 'readwrite');\n              const modelStore = modelTx.objectStore(MODEL_STORE_NAME);\n              const deleteModelRequest = modelStore.delete(path);\n              deleteModelRequest.onsuccess = () =>\n                  resolve(getInfoRequest.result.modelArtifactsInfo);\n              deleteModelRequest.onerror = error =>\n                  reject(getInfoRequest.error);\n            };\n            // Proceed with deleting model data regardless of whether deletion\n            // of info data succeeds or not.\n            deleteInfoRequest.onsuccess = deleteModelData;\n            deleteInfoRequest.onerror = error => {\n              deleteModelData();\n              db.close();\n              return reject(getInfoRequest.error);\n            };\n          }\n        };\n        getInfoRequest.onerror = error => {\n          db.close();\n          return reject(getInfoRequest.error);\n        };\n\n        infoTx.oncomplete = () => {\n          if (modelTx == null) {\n            db.close();\n          } else {\n            modelTx.oncomplete = () => db.close();\n          }\n        };\n      };\n      openRequest.onerror = error => reject(openRequest.error);\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport '../flags';\nimport {env} from '../environment';\n\nimport {assert} from '../util';\nimport {arrayBufferToBase64String, base64StringToArrayBuffer, getModelArtifactsInfoForJSON} from './io_utils';\nimport {IORouter, IORouterRegistry} from './router_registry';\nimport {IOHandler, ModelArtifacts, ModelArtifactsInfo, ModelJSON, ModelStoreManager, SaveResult} from './types';\n\nconst PATH_SEPARATOR = '/';\nconst PATH_PREFIX = 'tensorflowjs_models';\nconst INFO_SUFFIX = 'info';\nconst MODEL_TOPOLOGY_SUFFIX = 'model_topology';\nconst WEIGHT_SPECS_SUFFIX = 'weight_specs';\nconst WEIGHT_DATA_SUFFIX = 'weight_data';\nconst MODEL_METADATA_SUFFIX = 'model_metadata';\n\n/**\n * Purge all tensorflow.js-saved model artifacts from local storage.\n *\n * @returns Paths of the models purged.\n */\nexport function purgeLocalStorageArtifacts(): string[] {\n  if (!env().getBool('IS_BROWSER') || typeof window === 'undefined' ||\n      typeof window.localStorage === 'undefined') {\n    throw new Error(\n        'purgeLocalStorageModels() cannot proceed because local storage is ' +\n        'unavailable in the current environment.');\n  }\n  const LS = window.localStorage;\n  const purgedModelPaths: string[] = [];\n  for (let i = 0; i < LS.length; ++i) {\n    const key = LS.key(i);\n    const prefix = PATH_PREFIX + PATH_SEPARATOR;\n    if (key.startsWith(prefix) && key.length > prefix.length) {\n      LS.removeItem(key);\n      const modelName = getModelPathFromKey(key);\n      if (purgedModelPaths.indexOf(modelName) === -1) {\n        purgedModelPaths.push(modelName);\n      }\n    }\n  }\n  return purgedModelPaths;\n}\n\ntype LocalStorageKeys = {\n  /** Key of the localStorage entry storing `ModelArtifactsInfo`. */\n  info: string,\n  /**\n   * Key of the localStorage entry storing the 'modelTopology' key of\n   * `model.json`\n   */\n  topology: string,\n  /**\n   * Key of the localStorage entry storing the `weightsManifest.weights` entries\n   * of `model.json`\n   */\n  weightSpecs: string,\n  /** Key of the localStorage entry storing the weight data in Base64 */\n  weightData: string,\n  /**\n   * Key of the localStorage entry storing the remaining fields of `model.json`\n   * @see {@link ModelMetadata}\n   */\n  modelMetadata: string,\n};\n\ntype ModelMetadata = Omit<ModelJSON, 'modelTopology'|'weightsManifest'>;\n\nfunction getModelKeys(path: string): LocalStorageKeys {\n  return {\n    info: [PATH_PREFIX, path, INFO_SUFFIX].join(PATH_SEPARATOR),\n    topology: [PATH_PREFIX, path, MODEL_TOPOLOGY_SUFFIX].join(PATH_SEPARATOR),\n    weightSpecs: [PATH_PREFIX, path, WEIGHT_SPECS_SUFFIX].join(PATH_SEPARATOR),\n    weightData: [PATH_PREFIX, path, WEIGHT_DATA_SUFFIX].join(PATH_SEPARATOR),\n    modelMetadata:\n        [PATH_PREFIX, path, MODEL_METADATA_SUFFIX].join(PATH_SEPARATOR)\n  };\n}\n\nfunction removeItems(keys: LocalStorageKeys): void {\n  for (const key of Object.values(keys)) {\n    window.localStorage.removeItem(key);\n  }\n}\n\n/**\n * Get model path from a local-storage key.\n *\n * E.g., 'tensorflowjs_models/my/model/1/info' --> 'my/model/1'\n *\n * @param key\n */\nfunction getModelPathFromKey(key: string) {\n  const items = key.split(PATH_SEPARATOR);\n  if (items.length < 3) {\n    throw new Error(`Invalid key format: ${key}`);\n  }\n  return items.slice(1, items.length - 1).join(PATH_SEPARATOR);\n}\n\nfunction maybeStripScheme(key: string) {\n  return key.startsWith(BrowserLocalStorage.URL_SCHEME) ?\n      key.slice(BrowserLocalStorage.URL_SCHEME.length) :\n      key;\n}\n\n/**\n * IOHandler subclass: Browser Local Storage.\n *\n * See the doc string to `browserLocalStorage` for more details.\n */\nexport class BrowserLocalStorage implements IOHandler {\n  protected readonly LS: Storage;\n  protected readonly modelPath: string;\n  protected readonly keys: LocalStorageKeys;\n\n  static readonly URL_SCHEME = 'localstorage://';\n\n  constructor(modelPath: string) {\n    if (!env().getBool('IS_BROWSER') || typeof window === 'undefined' ||\n        typeof window.localStorage === 'undefined') {\n      // TODO(cais): Add more info about what IOHandler subtypes are\n      // available.\n      //   Maybe point to a doc page on the web and/or automatically determine\n      //   the available IOHandlers and print them in the error message.\n      throw new Error(\n          'The current environment does not support local storage.');\n    }\n    this.LS = window.localStorage;\n\n    if (modelPath == null || !modelPath) {\n      throw new Error(\n          'For local storage, modelPath must not be null, undefined or empty.');\n    }\n    this.modelPath = modelPath;\n    this.keys = getModelKeys(this.modelPath);\n  }\n\n  /**\n   * Save model artifacts to browser local storage.\n   *\n   * See the documentation to `browserLocalStorage` for details on the saved\n   * artifacts.\n   *\n   * @param modelArtifacts The model artifacts to be stored.\n   * @returns An instance of SaveResult.\n   */\n  async save(modelArtifacts: ModelArtifacts): Promise<SaveResult> {\n    if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n      throw new Error(\n          'BrowserLocalStorage.save() does not support saving model topology ' +\n          'in binary formats yet.');\n    } else {\n      const topology = JSON.stringify(modelArtifacts.modelTopology);\n      const weightSpecs = JSON.stringify(modelArtifacts.weightSpecs);\n\n      const modelArtifactsInfo: ModelArtifactsInfo =\n          getModelArtifactsInfoForJSON(modelArtifacts);\n\n      try {\n        this.LS.setItem(this.keys.info, JSON.stringify(modelArtifactsInfo));\n        this.LS.setItem(this.keys.topology, topology);\n        this.LS.setItem(this.keys.weightSpecs, weightSpecs);\n        this.LS.setItem(\n            this.keys.weightData,\n            arrayBufferToBase64String(modelArtifacts.weightData));\n\n        // Note that JSON.stringify doesn't write out keys that have undefined\n        // values, so for some keys, we set undefined instead of a null-ish\n        // value.\n        const metadata: Required<ModelMetadata> = {\n          format: modelArtifacts.format,\n          generatedBy: modelArtifacts.generatedBy,\n          convertedBy: modelArtifacts.convertedBy,\n          signature: modelArtifacts.signature != null ?\n              modelArtifacts.signature :\n              undefined,\n          userDefinedMetadata: modelArtifacts.userDefinedMetadata != null ?\n              modelArtifacts.userDefinedMetadata :\n              undefined,\n          modelInitializer: modelArtifacts.modelInitializer != null ?\n              modelArtifacts.modelInitializer :\n              undefined,\n          trainingConfig: modelArtifacts.trainingConfig != null ?\n              modelArtifacts.trainingConfig :\n              undefined\n        };\n        this.LS.setItem(this.keys.modelMetadata, JSON.stringify(metadata));\n\n        return {modelArtifactsInfo};\n      } catch (err) {\n        // If saving failed, clean up all items saved so far.\n        removeItems(this.keys);\n\n        throw new Error(\n            `Failed to save model '${this.modelPath}' to local storage: ` +\n            `size quota being exceeded is a possible cause of this failure: ` +\n            `modelTopologyBytes=${modelArtifactsInfo.modelTopologyBytes}, ` +\n            `weightSpecsBytes=${modelArtifactsInfo.weightSpecsBytes}, ` +\n            `weightDataBytes=${modelArtifactsInfo.weightDataBytes}.`);\n      }\n    }\n  }\n\n  /**\n   * Load a model from local storage.\n   *\n   * See the documentation to `browserLocalStorage` for details on the saved\n   * artifacts.\n   *\n   * @returns The loaded model (if loading succeeds).\n   */\n  async load(): Promise<ModelArtifacts> {\n    const info =\n        JSON.parse(this.LS.getItem(this.keys.info)) as ModelArtifactsInfo;\n    if (info == null) {\n      throw new Error(\n          `In local storage, there is no model with name '${this.modelPath}'`);\n    }\n\n    if (info.modelTopologyType !== 'JSON') {\n      throw new Error(\n          'BrowserLocalStorage does not support loading non-JSON model ' +\n          'topology yet.');\n    }\n\n    const out: ModelArtifacts = {};\n\n    // Load topology.\n    const topology = JSON.parse(this.LS.getItem(this.keys.topology));\n    if (topology == null) {\n      throw new Error(\n          `In local storage, the topology of model '${this.modelPath}' ` +\n          `is missing.`);\n    }\n    out.modelTopology = topology;\n\n    // Load weight specs.\n    const weightSpecs = JSON.parse(this.LS.getItem(this.keys.weightSpecs));\n    if (weightSpecs == null) {\n      throw new Error(\n          `In local storage, the weight specs of model '${this.modelPath}' ` +\n          `are missing.`);\n    }\n    out.weightSpecs = weightSpecs;\n\n    // Load meta-data fields.\n    const metadataString = this.LS.getItem(this.keys.modelMetadata);\n    if (metadataString != null) {\n      const metadata = JSON.parse(metadataString) as ModelMetadata;\n      out.format = metadata.format;\n      out.generatedBy = metadata.generatedBy;\n      out.convertedBy = metadata.convertedBy;\n      if (metadata.signature != null) {\n        out.signature = metadata.signature;\n      }\n      if (metadata.userDefinedMetadata != null) {\n        out.userDefinedMetadata = metadata.userDefinedMetadata;\n      }\n      if (metadata.modelInitializer != null) {\n        out.modelInitializer = metadata.modelInitializer;\n      }\n      if (metadata.trainingConfig != null) {\n        out.trainingConfig = metadata.trainingConfig;\n      }\n    }\n\n    // Load weight data.\n    const weightDataBase64 = this.LS.getItem(this.keys.weightData);\n    if (weightDataBase64 == null) {\n      throw new Error(\n          `In local storage, the binary weight values of model ` +\n          `'${this.modelPath}' are missing.`);\n    }\n    out.weightData = base64StringToArrayBuffer(weightDataBase64);\n\n    return out;\n  }\n}\n\nexport const localStorageRouter: IORouter = (url: string|string[]) => {\n  if (!env().getBool('IS_BROWSER')) {\n    return null;\n  } else {\n    if (!Array.isArray(url) && url.startsWith(BrowserLocalStorage.URL_SCHEME)) {\n      return browserLocalStorage(\n          url.slice(BrowserLocalStorage.URL_SCHEME.length));\n    } else {\n      return null;\n    }\n  }\n};\nIORouterRegistry.registerSaveRouter(localStorageRouter);\nIORouterRegistry.registerLoadRouter(localStorageRouter);\n\n/**\n * Factory function for local storage IOHandler.\n *\n * This `IOHandler` supports both `save` and `load`.\n *\n * For each model's saved artifacts, four items are saved to local storage.\n *   - `${PATH_SEPARATOR}/${modelPath}/info`: Contains meta-info about the\n *     model, such as date saved, type of the topology, size in bytes, etc.\n *   - `${PATH_SEPARATOR}/${modelPath}/topology`: Model topology. For Keras-\n *     style models, this is a stringized JSON.\n *   - `${PATH_SEPARATOR}/${modelPath}/weight_specs`: Weight specs of the\n *     model, can be used to decode the saved binary weight values (see\n *     item below).\n *   - `${PATH_SEPARATOR}/${modelPath}/weight_data`: Concatenated binary\n *     weight values, stored as a base64-encoded string.\n *\n * Saving may throw an `Error` if the total size of the artifacts exceed the\n * browser-specific quota.\n *\n * @param modelPath A unique identifier for the model to be saved. Must be a\n *   non-empty string.\n * @returns An instance of `IOHandler`, which can be used with, e.g.,\n *   `tf.Model.save`.\n */\nexport function browserLocalStorage(modelPath: string): IOHandler {\n  return new BrowserLocalStorage(modelPath);\n}\n\nexport class BrowserLocalStorageManager implements ModelStoreManager {\n  private readonly LS: Storage;\n\n  constructor() {\n    assert(\n        env().getBool('IS_BROWSER'),\n        () => 'Current environment is not a web browser');\n    assert(\n        typeof window === 'undefined' ||\n            typeof window.localStorage !== 'undefined',\n        () => 'Current browser does not appear to support localStorage');\n    this.LS = window.localStorage;\n  }\n\n  async listModels(): Promise<{[path: string]: ModelArtifactsInfo}> {\n    const out: {[path: string]: ModelArtifactsInfo} = {};\n    const prefix = PATH_PREFIX + PATH_SEPARATOR;\n    const suffix = PATH_SEPARATOR + INFO_SUFFIX;\n    for (let i = 0; i < this.LS.length; ++i) {\n      const key = this.LS.key(i);\n      if (key.startsWith(prefix) && key.endsWith(suffix)) {\n        const modelPath = getModelPathFromKey(key);\n        out[modelPath] = JSON.parse(this.LS.getItem(key)) as ModelArtifactsInfo;\n      }\n    }\n    return out;\n  }\n\n  async removeModel(path: string): Promise<ModelArtifactsInfo> {\n    path = maybeStripScheme(path);\n    const keys = getModelKeys(path);\n    if (this.LS.getItem(keys.info) == null) {\n      throw new Error(`Cannot find model at path '${path}'`);\n    }\n    const info = JSON.parse(this.LS.getItem(keys.info)) as ModelArtifactsInfo;\n    removeItems(keys);\n    return info;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Classes and functions for model management across multiple storage mediums.\n *\n * Supported client actions:\n * - Listing models on all registered storage mediums.\n * - Remove model by URL from any registered storage mediums, by using URL\n *   string.\n * - Moving or copying model from one path to another in the same medium or from\n *   one medium to another, by using URL strings.\n */\n\nimport {assert} from '../util';\n\nimport {IORouterRegistry} from './router_registry';\nimport {ModelArtifactsInfo, ModelStoreManager} from './types';\n\nconst URL_SCHEME_SUFFIX = '://';\n\nexport class ModelStoreManagerRegistry {\n  // Singleton instance.\n  private static instance: ModelStoreManagerRegistry;\n\n  private managers: {[scheme: string]: ModelStoreManager};\n\n  private constructor() {\n    this.managers = {};\n  }\n\n  private static getInstance(): ModelStoreManagerRegistry {\n    if (ModelStoreManagerRegistry.instance == null) {\n      ModelStoreManagerRegistry.instance = new ModelStoreManagerRegistry();\n    }\n    return ModelStoreManagerRegistry.instance;\n  }\n\n  /**\n   * Register a save-handler router.\n   *\n   * @param saveRouter A function that maps a URL-like string onto an instance\n   * of `IOHandler` with the `save` method defined or `null`.\n   */\n  static registerManager(scheme: string, manager: ModelStoreManager) {\n    assert(scheme != null, () => 'scheme must not be undefined or null.');\n    if (scheme.endsWith(URL_SCHEME_SUFFIX)) {\n      scheme = scheme.slice(0, scheme.indexOf(URL_SCHEME_SUFFIX));\n    }\n    assert(scheme.length > 0, () => 'scheme must not be an empty string.');\n    const registry = ModelStoreManagerRegistry.getInstance();\n    assert(\n        registry.managers[scheme] == null,\n        () => `A model store manager is already registered for scheme '${\n            scheme}'.`);\n    registry.managers[scheme] = manager;\n  }\n\n  static getManager(scheme: string): ModelStoreManager {\n    const manager = this.getInstance().managers[scheme];\n    if (manager == null) {\n      throw new Error(`Cannot find model manager for scheme '${scheme}'`);\n    }\n    return manager;\n  }\n\n  static getSchemes(): string[] {\n    return Object.keys(this.getInstance().managers);\n  }\n}\n\n/**\n * Helper method for parsing a URL string into a scheme and a path.\n *\n * @param url E.g., 'localstorage://my-model'\n * @returns A dictionary with two fields: scheme and path.\n *   Scheme: e.g., 'localstorage' in the example above.\n *   Path: e.g., 'my-model' in the example above.\n */\nfunction parseURL(url: string): {scheme: string, path: string} {\n  if (url.indexOf(URL_SCHEME_SUFFIX) === -1) {\n    throw new Error(\n        `The url string provided does not contain a scheme. ` +\n        `Supported schemes are: ` +\n        `${ModelStoreManagerRegistry.getSchemes().join(',')}`);\n  }\n  return {\n    scheme: url.split(URL_SCHEME_SUFFIX)[0],\n    path: url.split(URL_SCHEME_SUFFIX)[1],\n  };\n}\n\nasync function cloneModelInternal(\n    sourceURL: string, destURL: string,\n    deleteSource = false): Promise<ModelArtifactsInfo> {\n  assert(\n      sourceURL !== destURL,\n      () => `Old path and new path are the same: '${sourceURL}'`);\n\n  const loadHandlers = IORouterRegistry.getLoadHandlers(sourceURL);\n  assert(\n      loadHandlers.length > 0,\n      () => `Copying failed because no load handler is found for source URL ${\n          sourceURL}.`);\n  assert(\n      loadHandlers.length < 2,\n      () => `Copying failed because more than one (${loadHandlers.length}) ` +\n          `load handlers for source URL ${sourceURL}.`);\n  const loadHandler = loadHandlers[0];\n\n  const saveHandlers = IORouterRegistry.getSaveHandlers(destURL);\n  assert(\n      saveHandlers.length > 0,\n      () => `Copying failed because no save handler is found for destination ` +\n          `URL ${destURL}.`);\n  assert(\n      saveHandlers.length < 2,\n      () => `Copying failed because more than one (${loadHandlers.length}) ` +\n          `save handlers for destination URL ${destURL}.`);\n  const saveHandler = saveHandlers[0];\n\n  const sourceScheme = parseURL(sourceURL).scheme;\n  const sourcePath = parseURL(sourceURL).path;\n  const sameMedium = sourceScheme === parseURL(sourceURL).scheme;\n\n  const modelArtifacts = await loadHandler.load();\n\n  // If moving within the same storage medium, remove the old model as soon as\n  // the loading is done. Without doing this, it is possible that the combined\n  // size of the two models will cause the cloning to fail.\n  if (deleteSource && sameMedium) {\n    await ModelStoreManagerRegistry.getManager(sourceScheme)\n        .removeModel(sourcePath);\n  }\n\n  const saveResult = await saveHandler.save(modelArtifacts);\n\n  // If moving between mediums, the deletion is done after the save succeeds.\n  // This guards against the case in which saving to the destination medium\n  // fails.\n  if (deleteSource && !sameMedium) {\n    await ModelStoreManagerRegistry.getManager(sourceScheme)\n        .removeModel(sourcePath);\n  }\n\n  return saveResult.modelArtifactsInfo;\n}\n\n/**\n * List all models stored in registered storage mediums.\n *\n * For a web browser environment, the registered mediums are Local Storage and\n * IndexedDB.\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Delete the model.\n * await tf.io.removeModel('localstorage://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n * ```\n *\n * @returns A `Promise` of a dictionary mapping URLs of existing models to\n * their model artifacts info. URLs include medium-specific schemes, e.g.,\n *   'indexeddb://my/model/1'. Model artifacts info include type of the\n * model's topology, byte sizes of the topology, weights, etc.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nasync function listModels(): Promise<{[url: string]: ModelArtifactsInfo}> {\n  const schemes = ModelStoreManagerRegistry.getSchemes();\n  const out: {[url: string]: ModelArtifactsInfo} = {};\n  for (const scheme of schemes) {\n    const schemeOut =\n        await ModelStoreManagerRegistry.getManager(scheme).listModels();\n    for (const path in schemeOut) {\n      const url = scheme + URL_SCHEME_SUFFIX + path;\n      out[url] = schemeOut[path];\n    }\n  }\n  return out;\n}\n\n/**\n * Remove a model specified by URL from a reigstered storage medium.\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Delete the model.\n * await tf.io.removeModel('localstorage://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n * ```\n *\n * @param url A URL to a stored model, with a scheme prefix, e.g.,\n *   'localstorage://my-model-1', 'indexeddb://my/model/2'.\n * @returns ModelArtifactsInfo of the deleted model (if and only if deletion\n *   is successful).\n * @throws Error if deletion fails, e.g., if no model exists at `path`.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nasync function removeModel(url: string): Promise<ModelArtifactsInfo> {\n  const schemeAndPath = parseURL(url);\n  const manager = ModelStoreManagerRegistry.getManager(schemeAndPath.scheme);\n  return manager.removeModel(schemeAndPath.path);\n}\n\n/**\n * Copy a model from one URL to another.\n *\n * This function supports:\n *\n * 1. Copying within a storage medium, e.g.,\n *    `tf.io.copyModel('localstorage://model-1', 'localstorage://model-2')`\n * 2. Copying between two storage mediums, e.g.,\n *    `tf.io.copyModel('localstorage://model-1', 'indexeddb://model-1')`\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Copy the model, from Local Storage to IndexedDB.\n * await tf.io.copyModel(\n *     'localstorage://demo/management/model1',\n *     'indexeddb://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Remove both models.\n * await tf.io.removeModel('localstorage://demo/management/model1');\n * await tf.io.removeModel('indexeddb://demo/management/model1');\n * ```\n *\n * @param sourceURL Source URL of copying.\n * @param destURL Destination URL of copying.\n * @returns ModelArtifactsInfo of the copied model (if and only if copying\n *   is successful).\n * @throws Error if copying fails, e.g., if no model exists at `sourceURL`, or\n *   if `oldPath` and `newPath` are identical.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nasync function copyModel(\n    sourceURL: string, destURL: string): Promise<ModelArtifactsInfo> {\n  const deleteSource = false;\n  return cloneModelInternal(sourceURL, destURL, deleteSource);\n}\n\n/**\n * Move a model from one URL to another.\n *\n * This function supports:\n *\n * 1. Moving within a storage medium, e.g.,\n *    `tf.io.moveModel('localstorage://model-1', 'localstorage://model-2')`\n * 2. Moving between two storage mediums, e.g.,\n *    `tf.io.moveModel('localstorage://model-1', 'indexeddb://model-1')`\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Move the model, from Local Storage to IndexedDB.\n * await tf.io.moveModel(\n *     'localstorage://demo/management/model1',\n *     'indexeddb://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Remove the moved model.\n * await tf.io.removeModel('indexeddb://demo/management/model1');\n * ```\n *\n * @param sourceURL Source URL of moving.\n * @param destURL Destination URL of moving.\n * @returns ModelArtifactsInfo of the copied model (if and only if copying\n *   is successful).\n * @throws Error if moving fails, e.g., if no model exists at `sourceURL`, or\n *   if `oldPath` and `newPath` are identical.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nasync function moveModel(\n    sourceURL: string, destURL: string): Promise<ModelArtifactsInfo> {\n  const deleteSource = true;\n  return cloneModelInternal(sourceURL, destURL, deleteSource);\n}\n\nexport {moveModel, copyModel, removeModel, listModels};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport '../flags';\n\nimport {env} from '../environment';\nimport {BrowserIndexedDB, BrowserIndexedDBManager} from '../io/indexed_db';\nimport {BrowserLocalStorage, BrowserLocalStorageManager} from '../io/local_storage';\nimport {ModelStoreManagerRegistry} from '../io/model_management';\n\nimport {Platform} from './platform';\n\nexport class PlatformBrowser implements Platform {\n  // According to the spec, the built-in encoder can do only UTF-8 encoding.\n  // https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder/TextEncoder\n  private textEncoder: TextEncoder;\n\n  fetch(path: string, init?: RequestInit): Promise<Response> {\n    return fetch(path, init);\n  }\n\n  now(): number {\n    return performance.now();\n  }\n\n  encode(text: string, encoding: string): Uint8Array {\n    if (encoding !== 'utf-8' && encoding !== 'utf8') {\n      throw new Error(\n          `Browser's encoder only supports utf-8, but got ${encoding}`);\n    }\n    if (this.textEncoder == null) {\n      this.textEncoder = new TextEncoder();\n    }\n    return this.textEncoder.encode(text);\n  }\n  decode(bytes: Uint8Array, encoding: string): string {\n    return new TextDecoder(encoding).decode(bytes);\n  }\n}\n\nif (env().get('IS_BROWSER')) {\n  env().setPlatform('browser', new PlatformBrowser());\n\n  // Register LocalStorage IOHandler\n  try {\n    ModelStoreManagerRegistry.registerManager(\n        BrowserLocalStorage.URL_SCHEME, new BrowserLocalStorageManager());\n  } catch (err) {\n  }\n\n  // Register IndexedDB IOHandler\n  try {\n    ModelStoreManagerRegistry.registerManager(\n        BrowserIndexedDB.URL_SCHEME, new BrowserIndexedDBManager());\n  } catch (err) {\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// Required side effectful code for tfjs-core\n\n// Set up Engine and ENV\nimport {getOrMakeEngine} from './engine';\ngetOrMakeEngine();\n\n// Register backend-agnostic flags.\nimport './flags';\n// Register platforms\nimport './platforms/platform_browser';\nimport './platforms/platform_node';\n\n// Set up OpHandler\nimport {buffer} from './ops/buffer';\nimport {cast} from './ops/cast';\nimport {clone} from './ops/clone';\nimport {print} from './ops/print';\nimport {OpHandler, setOpHandler} from './tensor';\nconst opHandler: OpHandler = {\n  buffer,\n  cast,\n  clone,\n  print\n};\nsetOpHandler(opHandler);\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * IOHandlers related to files, such as browser-triggered file downloads,\n * user-selected files in browser.\n */\n\nimport '../flags';\nimport {env} from '../environment';\n\nimport {basename, concatenateArrayBuffers, getModelArtifactsForJSON, getModelArtifactsInfoForJSON, getModelJSONForModelArtifacts} from './io_utils';\nimport {IORouter, IORouterRegistry} from './router_registry';\nimport {IOHandler, ModelArtifacts, ModelJSON, SaveResult, WeightsManifestConfig, WeightsManifestEntry} from './types';\n\nconst DEFAULT_FILE_NAME_PREFIX = 'model';\nconst DEFAULT_JSON_EXTENSION_NAME = '.json';\nconst DEFAULT_WEIGHT_DATA_EXTENSION_NAME = '.weights.bin';\n\nfunction defer<T>(f: () => T): Promise<T> {\n  return new Promise(resolve => setTimeout(resolve)).then(f);\n}\n\nexport class BrowserDownloads implements IOHandler {\n  private readonly modelJsonFileName: string;\n  private readonly weightDataFileName: string;\n  private readonly modelJsonAnchor: HTMLAnchorElement;\n  private readonly weightDataAnchor: HTMLAnchorElement;\n\n  static readonly URL_SCHEME = 'downloads://';\n\n  constructor(fileNamePrefix?: string) {\n    if (!env().getBool('IS_BROWSER')) {\n      // TODO(cais): Provide info on what IOHandlers are available under the\n      //   current environment.\n      throw new Error(\n          'browserDownloads() cannot proceed because the current environment ' +\n          'is not a browser.');\n    }\n\n    if (fileNamePrefix.startsWith(BrowserDownloads.URL_SCHEME)) {\n      fileNamePrefix = fileNamePrefix.slice(BrowserDownloads.URL_SCHEME.length);\n    }\n    if (fileNamePrefix == null || fileNamePrefix.length === 0) {\n      fileNamePrefix = DEFAULT_FILE_NAME_PREFIX;\n    }\n\n    this.modelJsonFileName = fileNamePrefix + DEFAULT_JSON_EXTENSION_NAME;\n    this.weightDataFileName =\n        fileNamePrefix + DEFAULT_WEIGHT_DATA_EXTENSION_NAME;\n  }\n\n  async save(modelArtifacts: ModelArtifacts): Promise<SaveResult> {\n    if (typeof (document) === 'undefined') {\n      throw new Error(\n          'Browser downloads are not supported in ' +\n          'this environment since `document` is not present');\n    }\n    const weightsURL = window.URL.createObjectURL(new Blob(\n        [modelArtifacts.weightData], {type: 'application/octet-stream'}));\n\n    if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n      throw new Error(\n          'BrowserDownloads.save() does not support saving model topology ' +\n          'in binary formats yet.');\n    } else {\n      const weightsManifest: WeightsManifestConfig = [{\n        paths: ['./' + this.weightDataFileName],\n        weights: modelArtifacts.weightSpecs\n      }];\n      const modelJSON: ModelJSON =\n          getModelJSONForModelArtifacts(modelArtifacts, weightsManifest);\n\n      const modelJsonURL = window.URL.createObjectURL(\n          new Blob([JSON.stringify(modelJSON)], {type: 'application/json'}));\n\n      // If anchor elements are not provided, create them without attaching them\n      // to parents, so that the downloaded file names can be controlled.\n      const jsonAnchor = this.modelJsonAnchor == null ?\n          document.createElement('a') :\n          this.modelJsonAnchor;\n      jsonAnchor.download = this.modelJsonFileName;\n      jsonAnchor.href = modelJsonURL;\n      // Trigger downloads by evoking a click event on the download anchors.\n      // When multiple downloads are started synchronously, Firefox will only\n      // save the last one.\n      await defer(() => jsonAnchor.dispatchEvent(new MouseEvent('click')));\n\n      if (modelArtifacts.weightData != null) {\n        const weightDataAnchor = this.weightDataAnchor == null ?\n            document.createElement('a') :\n            this.weightDataAnchor;\n        weightDataAnchor.download = this.weightDataFileName;\n        weightDataAnchor.href = weightsURL;\n        await defer(\n            () => weightDataAnchor.dispatchEvent(new MouseEvent('click')));\n      }\n\n      return {modelArtifactsInfo: getModelArtifactsInfoForJSON(modelArtifacts)};\n    }\n  }\n}\n\nclass BrowserFiles implements IOHandler {\n  private readonly jsonFile: File;\n  private readonly weightsFiles: File[];\n\n  constructor(files: File[]) {\n    if (files == null || files.length < 1) {\n      throw new Error(\n          `When calling browserFiles, at least 1 file is required, ` +\n          `but received ${files}`);\n    }\n    this.jsonFile = files[0];\n    this.weightsFiles = files.slice(1);\n  }\n\n  async load(): Promise<ModelArtifacts> {\n    return new Promise((resolve, reject) => {\n      const jsonReader = new FileReader();\n      jsonReader.onload = (event: Event) => {\n        // tslint:disable-next-line:no-any\n        const modelJSON = JSON.parse((event.target as any).result) as ModelJSON;\n\n        const modelTopology = modelJSON.modelTopology;\n        if (modelTopology == null) {\n          reject(new Error(`modelTopology field is missing from file ${\n              this.jsonFile.name}`));\n          return;\n        }\n\n        const weightsManifest = modelJSON.weightsManifest;\n        if (weightsManifest == null) {\n          reject(new Error(`weightManifest field is missing from file ${\n              this.jsonFile.name}`));\n          return;\n        }\n\n        if (this.weightsFiles.length === 0) {\n          resolve({modelTopology});\n          return;\n        }\n\n        const modelArtifactsPromise = getModelArtifactsForJSON(\n            modelJSON, (weightsManifest) => this.loadWeights(weightsManifest));\n        resolve(modelArtifactsPromise);\n      };\n\n      jsonReader.onerror = error => reject(\n          `Failed to read model topology and weights manifest JSON ` +\n          `from file '${this.jsonFile.name}'. BrowserFiles supports loading ` +\n          `Keras-style tf.Model artifacts only.`);\n      jsonReader.readAsText(this.jsonFile);\n    });\n  }\n\n  private loadWeights(weightsManifest: WeightsManifestConfig): Promise<[\n    /* weightSpecs */ WeightsManifestEntry[], /* weightData */ ArrayBuffer\n  ]> {\n    const weightSpecs: WeightsManifestEntry[] = [];\n    const paths: string[] = [];\n    for (const entry of weightsManifest) {\n      weightSpecs.push(...entry.weights);\n      paths.push(...entry.paths);\n    }\n\n    const pathToFile: {[path: string]: File} =\n        this.checkManifestAndWeightFiles(weightsManifest);\n\n    const promises: Array<Promise<ArrayBuffer>> =\n        paths.map(path => this.loadWeightsFile(path, pathToFile[path]));\n\n    return Promise.all(promises).then(\n        buffers => [weightSpecs, concatenateArrayBuffers(buffers)]);\n  }\n\n  private loadWeightsFile(path: string, file: File): Promise<ArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const weightFileReader = new FileReader();\n      weightFileReader.onload = (event: Event) => {\n        // tslint:disable-next-line:no-any\n        const weightData = (event.target as any).result as ArrayBuffer;\n        resolve(weightData);\n      };\n      weightFileReader.onerror = error =>\n          reject(`Failed to weights data from file of path '${path}'.`);\n      weightFileReader.readAsArrayBuffer(file);\n    });\n  }\n\n  /**\n   * Check the compatibility between weights manifest and weight files.\n   */\n  private checkManifestAndWeightFiles(manifest: WeightsManifestConfig):\n      {[path: string]: File} {\n    const basenames: string[] = [];\n    const fileNames = this.weightsFiles.map(file => basename(file.name));\n    const pathToFile: {[path: string]: File} = {};\n    for (const group of manifest) {\n      group.paths.forEach(path => {\n        const pathBasename = basename(path);\n        if (basenames.indexOf(pathBasename) !== -1) {\n          throw new Error(\n              `Duplicate file basename found in weights manifest: ` +\n              `'${pathBasename}'`);\n        }\n        basenames.push(pathBasename);\n        if (fileNames.indexOf(pathBasename) === -1) {\n          throw new Error(\n              `Weight file with basename '${pathBasename}' is not provided.`);\n        } else {\n          pathToFile[path] = this.weightsFiles[fileNames.indexOf(pathBasename)];\n        }\n      });\n    }\n\n    if (basenames.length !== this.weightsFiles.length) {\n      throw new Error(\n          `Mismatch in the number of files in weights manifest ` +\n          `(${basenames.length}) and the number of weight files provided ` +\n          `(${this.weightsFiles.length}).`);\n    }\n    return pathToFile;\n  }\n}\n\nexport const browserDownloadsRouter: IORouter = (url: string|string[]) => {\n  if (!env().getBool('IS_BROWSER')) {\n    return null;\n  } else {\n    if (!Array.isArray(url) && url.startsWith(BrowserDownloads.URL_SCHEME)) {\n      return browserDownloads(url.slice(BrowserDownloads.URL_SCHEME.length));\n    } else {\n      return null;\n    }\n  }\n};\nIORouterRegistry.registerSaveRouter(browserDownloadsRouter);\n\n/**\n * Creates an IOHandler that triggers file downloads from the browser.\n *\n * The returned `IOHandler` instance can be used as model exporting methods such\n * as `tf.Model.save` and supports only saving.\n *\n * ```js\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * const saveResult = await model.save('downloads://mymodel');\n * // This will trigger downloading of two files:\n * //   'mymodel.json' and 'mymodel.weights.bin'.\n * console.log(saveResult);\n * ```\n *\n * @param fileNamePrefix Prefix name of the files to be downloaded. For use with\n *   `tf.Model`, `fileNamePrefix` should follow either of the following two\n *   formats:\n *   1. `null` or `undefined`, in which case the default file\n *      names will be used:\n *      - 'model.json' for the JSON file containing the model topology and\n *        weights manifest.\n *      - 'model.weights.bin' for the binary file containing the binary weight\n *        values.\n *   2. A single string or an Array of a single string, as the file name prefix.\n *      For example, if `'foo'` is provided, the downloaded JSON\n *      file and binary weights file will be named 'foo.json' and\n *      'foo.weights.bin', respectively.\n * @param config Additional configuration for triggering downloads.\n * @returns An instance of `BrowserDownloads` `IOHandler`.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Loading',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nexport function browserDownloads(fileNamePrefix = 'model'): IOHandler {\n  return new BrowserDownloads(fileNamePrefix);\n}\n\n/**\n * Creates an IOHandler that loads model artifacts from user-selected files.\n *\n * This method can be used for loading from files such as user-selected files\n * in the browser.\n * When used in conjunction with `tf.loadLayersModel`, an instance of\n * `tf.LayersModel` (Keras-style) can be constructed from the loaded artifacts.\n *\n * ```js\n * // Note: This code snippet won't run properly without the actual file input\n * //   elements in the HTML DOM.\n *\n * // Suppose there are two HTML file input (`<input type=\"file\" ...>`)\n * // elements.\n * const uploadJSONInput = document.getElementById('upload-json');\n * const uploadWeightsInput = document.getElementById('upload-weights');\n * const model = await tf.loadLayersModel(tf.io.browserFiles(\n *     [uploadJSONInput.files[0], uploadWeightsInput.files[0]]));\n * ```\n *\n * @param files `File`s to load from. Currently, this function supports only\n *   loading from files that contain Keras-style models (i.e., `tf.Model`s), for\n *   which an `Array` of `File`s is expected (in that order):\n *   - A JSON file containing the model topology and weight manifest.\n *   - Optionally, One or more binary files containing the binary weights.\n *     These files must have names that match the paths in the `weightsManifest`\n *     contained by the aforementioned JSON file, or errors will be thrown\n *     during loading. These weights files have the same format as the ones\n *     generated by `tensorflowjs_converter` that comes with the `tensorflowjs`\n *     Python PIP package. If no weights files are provided, only the model\n *     topology will be loaded from the JSON file above.\n * @returns An instance of `Files` `IOHandler`.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Loading',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nexport function browserFiles(files: File[]): IOHandler {\n  return new BrowserFiles(files);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {assert} from '../util';\n\nimport {OnProgressCallback} from './types';\n\n/**\n * Monitor Promise.all progress, fire onProgress callback function.\n *\n * @param promises Promise list going to be monitored\n * @param onProgress Callback function. Fired when a promise resolved.\n * @param startFraction Optional fraction start. Default to 0.\n * @param endFraction Optional fraction end. Default to 1.\n */\nexport function monitorPromisesProgress(\n    promises: Array<Promise<{}|void>>, onProgress: OnProgressCallback,\n    startFraction?: number, endFraction?: number) {\n  checkPromises(promises);\n  startFraction = startFraction == null ? 0 : startFraction;\n  endFraction = endFraction == null ? 1 : endFraction;\n  checkFraction(startFraction, endFraction);\n  let resolvedPromise = 0;\n\n  const registerMonitor = (promise: Promise<{}>) => {\n    promise.then(value => {\n      const fraction = startFraction +\n          ++resolvedPromise / promises.length * (endFraction - startFraction);\n      // pass fraction as parameter to callback function.\n      onProgress(fraction);\n      return value;\n    });\n    return promise;\n  };\n\n  function checkPromises(promises: Array<Promise<{}|void>>): void {\n    assert(\n        promises != null && Array.isArray(promises) && promises.length > 0,\n        () => 'promises must be a none empty array');\n  }\n\n  function checkFraction(startFraction: number, endFraction: number): void {\n    assert(\n        startFraction >= 0 && startFraction <= 1,\n        () => `Progress fraction must be in range [0, 1], but ` +\n            `got startFraction ${startFraction}`);\n    assert(\n        endFraction >= 0 && endFraction <= 1,\n        () => `Progress fraction must be in range [0, 1], but ` +\n            `got endFraction ${endFraction}`);\n    assert(\n        endFraction >= startFraction,\n        () => `startFraction must be no more than endFraction, but ` +\n            `got startFraction ${startFraction} and endFraction ` +\n            `${endFraction}`);\n  }\n\n  return Promise.all(promises.map(registerMonitor));\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {env} from '../environment';\n\nimport {NamedTensorMap} from '../tensor_types';\nimport * as util from '../util';\nimport {decodeWeights} from './io_utils';\nimport {monitorPromisesProgress} from './progress';\nimport {DTYPE_VALUE_SIZE_MAP, LoadOptions, WeightsManifestConfig, WeightsManifestEntry} from './types';\n\n/**\n * Reads binary weights data from a number of URLs.\n *\n * @param fetchURLs URLs to send the HTTP requests at, using `fetch` calls.\n * @param requestOptions RequestInit (options) for the HTTP requests.\n * @param fetchFunc Optional overriding value for the `window.fetch` function.\n * @param onProgress Optional, progress callback function, fired periodically\n *   before the load is completed.\n * @returns A `Promise` of an Array of `ArrayBuffer`. The Array has the same\n *   length as `fetchURLs`.\n */\nexport async function loadWeightsAsArrayBuffer(\n    fetchURLs: string[], loadOptions?: LoadOptions): Promise<ArrayBuffer[]> {\n  if (loadOptions == null) {\n    loadOptions = {};\n  }\n\n  const fetchFunc = loadOptions.fetchFunc == null ? env().platform.fetch :\n                                                    loadOptions.fetchFunc;\n\n  // Create the requests for all of the weights in parallel.\n  const requests = fetchURLs.map(\n      fetchURL =>\n          fetchFunc(fetchURL, loadOptions.requestInit, {isBinary: true}));\n\n  const fetchStartFraction = 0;\n  const fetchEndFraction = 0.5;\n\n  const responses = loadOptions.onProgress == null ?\n      await Promise.all(requests) :\n      await monitorPromisesProgress(\n          requests, loadOptions.onProgress, fetchStartFraction,\n          fetchEndFraction);\n\n  const bufferPromises = responses.map(response => response.arrayBuffer());\n\n  const bufferStartFraction = 0.5;\n  const bufferEndFraction = 1;\n\n  const buffers = loadOptions.onProgress == null ?\n      await Promise.all(bufferPromises) :\n      await monitorPromisesProgress(\n          bufferPromises, loadOptions.onProgress, bufferStartFraction,\n          bufferEndFraction);\n  return buffers;\n}\n\n/**\n * Reads a weights manifest JSON configuration, fetches the weights and\n * returns them as `Tensor`s.\n *\n * @param manifest The weights manifest JSON.\n * @param filePathPrefix The path prefix for filenames given in the manifest.\n *     Defaults to the empty string.\n * @param weightNames The names of the weights to be fetched.\n */\nexport async function loadWeights(\n    manifest: WeightsManifestConfig, filePathPrefix = '',\n    weightNames?: string[],\n    requestInit?: RequestInit): Promise<NamedTensorMap> {\n  // TODO(nsthorat): Groups are currently fetched atomically. If you need a\n  // single weight from a group, the whole group will be fetched. At a future\n  // date, we should support fetching only the individual shards within a\n  // group that are needed to reconstruct the requested weight.\n  // TODO(cais): Use `decodeWeights` for implementation.\n\n  const fetchWeights = (fetchUrls: string[]) =>\n      loadWeightsAsArrayBuffer(fetchUrls, {requestInit});\n  const loadWeights = weightsLoaderFactory(fetchWeights);\n\n  return loadWeights(manifest, filePathPrefix, weightNames);\n}\n\n/**\n * Creates a function, which reads a weights manifest JSON configuration,\n * fetches the weight files using the specified function and returns them as\n * `Tensor`s.\n *\n * ```js\n * // example for creating a nodejs weight loader, which reads the weight files\n * // from disk using fs.readFileSync\n *\n * import * as fs from 'fs'\n *\n * const fetchWeightsFromDisk = (filePaths: string[]) =>\n *   filePaths.map(filePath => fs.readFileSync(filePath).buffer)\n *\n * const loadWeights = tf.io.weightsLoaderFactory(fetchWeightsFromDisk)\n *\n * const manifest = JSON.parse(\n *   fs.readFileSync('./my_model-weights_manifest').toString()\n * )\n * const weightMap = await loadWeights(manifest, './')\n * ```\n * @param fetchWeightsFunction The function used for fetching the weight files.\n * @returns Weight loading function.\n */\nexport function weightsLoaderFactory(\n    fetchWeightsFunction: (fetchUrls: string[]) => Promise<ArrayBuffer[]>):\n    (manifest: WeightsManifestConfig, filePathPrefix?: string,\n     weightNames?: string[]) => Promise<NamedTensorMap> {\n  return async(\n             manifest: WeightsManifestConfig, filePathPrefix = '',\n             weightNames?: string[]): Promise<NamedTensorMap> => {\n    // Collect all the groups, weights, and their relative offsets to be\n    // fetched.\n    const groupIndicesToFetchMap = manifest.map(() => false);\n    const groupWeightsToFetch: {\n      [group: number]: Array<{\n        manifestEntry: WeightsManifestEntry; groupOffset: number;\n        sizeBytes: number;\n      }>\n    } = {};\n    const weightsFound =\n        weightNames != null ? weightNames.map(() => false) : [];\n    const allManifestWeightNames: string[] = [];\n    manifest.forEach((manifestGroupConfig, groupIndex) => {\n      let groupOffset = 0;\n      manifestGroupConfig.weights.forEach(weightsEntry => {\n        const rawDtype = ('quantization' in weightsEntry) ?\n            weightsEntry.quantization.dtype :\n            weightsEntry.dtype;\n\n        const weightsBytes = DTYPE_VALUE_SIZE_MAP[rawDtype] *\n            util.sizeFromShape(weightsEntry.shape);\n\n        const enqueueWeightsForFetchingFn = () => {\n          groupIndicesToFetchMap[groupIndex] = true;\n          if (groupWeightsToFetch[groupIndex] == null) {\n            groupWeightsToFetch[groupIndex] = [];\n          }\n\n          groupWeightsToFetch[groupIndex].push({\n            manifestEntry: weightsEntry,\n            groupOffset,\n            sizeBytes: weightsBytes\n          });\n        };\n\n        if (weightNames != null) {\n          weightNames.forEach((weightName, weightIndex) => {\n            if (weightName === weightsEntry.name) {\n              enqueueWeightsForFetchingFn();\n              weightsFound[weightIndex] = true;\n            }\n          });\n        } else {\n          enqueueWeightsForFetchingFn();\n        }\n\n        allManifestWeightNames.push(weightsEntry.name);\n        groupOffset += weightsBytes;\n      });\n    });\n\n    if (!weightsFound.every(found => found)) {\n      const weightsNotFound = weightNames.filter((_, i) => !weightsFound[i]);\n      throw new Error(\n          `Could not find weights in manifest with names: ` +\n          `${weightsNotFound.join(', ')}. \\n` +\n          `Manifest JSON has weights with names: ` +\n          `${allManifestWeightNames.join(', ')}.`);\n    }\n\n    // Convert the one-hot boolean groupId => shouldFetch map to a list of group\n    // IDs.\n    const groupIndicesToFetch =\n        groupIndicesToFetchMap.reduce((accumulator, shouldFetch, i) => {\n          if (shouldFetch) {\n            accumulator.push(i);\n          }\n          return accumulator;\n        }, []);\n\n    const fetchUrls: string[] = [];\n    groupIndicesToFetch.forEach(i => {\n      manifest[i].paths.forEach(filepath => {\n        const fetchUrl = filePathPrefix +\n            (!filePathPrefix.endsWith('/') ? '/' : '') + filepath;\n        fetchUrls.push(fetchUrl);\n      });\n    });\n    const buffers = await fetchWeightsFunction(fetchUrls);\n\n    const weightsTensorMap: NamedTensorMap = {};\n    let bufferIndexOffset = 0;\n    groupIndicesToFetch.forEach(i => {\n      const numBuffers = manifest[i].paths.length;\n\n      let groupBytes = 0;\n      for (let i = 0; i < numBuffers; i++) {\n        groupBytes += buffers[bufferIndexOffset + i].byteLength;\n      }\n\n      // Create a buffer for the whole group.\n      const groupBuffer = new ArrayBuffer(groupBytes);\n      const groupByteBuffer = new Uint8Array(groupBuffer);\n      let groupBufferOffset = 0;\n      for (let i = 0; i < numBuffers; i++) {\n        const buffer = new Uint8Array(buffers[bufferIndexOffset + i]);\n        groupByteBuffer.set(buffer, groupBufferOffset);\n        groupBufferOffset += buffer.byteLength;\n      }\n\n      const weightsEntries = groupWeightsToFetch[i];\n      weightsEntries.forEach(weightsEntry => {\n        const byteBuffer = groupBuffer.slice(\n            weightsEntry.groupOffset,\n            weightsEntry.groupOffset + weightsEntry.sizeBytes);\n        const nameToTensorMap =\n            decodeWeights(byteBuffer, [weightsEntry.manifestEntry]);\n        for (const name in nameToTensorMap) {\n          weightsTensorMap[name] = nameToTensorMap[name];\n        }\n      });\n\n      bufferIndexOffset += numBuffers;\n    });\n\n    return weightsTensorMap;\n  };\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * IOHandler implementations based on HTTP requests in the web browser.\n *\n * Uses [`fetch`](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API).\n */\n\nimport {env} from '../environment';\n\nimport {assert} from '../util';\nimport {concatenateArrayBuffers, getModelArtifactsForJSON, getModelArtifactsInfoForJSON, getModelJSONForModelArtifacts} from './io_utils';\nimport {IORouter, IORouterRegistry} from './router_registry';\nimport {IOHandler, LoadOptions, ModelArtifacts, ModelJSON, OnProgressCallback, SaveResult, WeightsManifestConfig, WeightsManifestEntry} from './types';\nimport {loadWeightsAsArrayBuffer} from './weights_loader';\n\nconst OCTET_STREAM_MIME_TYPE = 'application/octet-stream';\nconst JSON_TYPE = 'application/json';\nexport class HTTPRequest implements IOHandler {\n  protected readonly path: string;\n  protected readonly requestInit: RequestInit;\n\n  private readonly fetch: Function;\n  private readonly weightUrlConverter: (weightName: string) => Promise<string>;\n\n  readonly DEFAULT_METHOD = 'POST';\n\n  static readonly URL_SCHEME_REGEX = /^https?:\\/\\//;\n\n  private readonly weightPathPrefix: string;\n  private readonly onProgress: OnProgressCallback;\n\n  constructor(path: string, loadOptions?: LoadOptions) {\n    if (loadOptions == null) {\n      loadOptions = {};\n    }\n    this.weightPathPrefix = loadOptions.weightPathPrefix;\n    this.onProgress = loadOptions.onProgress;\n    this.weightUrlConverter = loadOptions.weightUrlConverter;\n\n    if (loadOptions.fetchFunc != null) {\n      assert(\n          typeof loadOptions.fetchFunc === 'function',\n          () => 'Must pass a function that matches the signature of ' +\n              '`fetch` (see ' +\n              'https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)');\n      this.fetch = loadOptions.fetchFunc;\n    } else {\n      this.fetch = env().platform.fetch;\n    }\n\n    assert(\n        path != null && path.length > 0,\n        () => 'URL path for http must not be null, undefined or ' +\n            'empty.');\n\n    if (Array.isArray(path)) {\n      assert(\n          path.length === 2,\n          () => 'URL paths for http must have a length of 2, ' +\n              `(actual length is ${path.length}).`);\n    }\n    this.path = path;\n\n    if (loadOptions.requestInit != null &&\n        loadOptions.requestInit.body != null) {\n      throw new Error(\n          'requestInit is expected to have no pre-existing body, but has one.');\n    }\n    this.requestInit = loadOptions.requestInit || {};\n  }\n\n  async save(modelArtifacts: ModelArtifacts): Promise<SaveResult> {\n    if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n      throw new Error(\n          'BrowserHTTPRequest.save() does not support saving model topology ' +\n          'in binary formats yet.');\n    }\n\n    const init = Object.assign({method: this.DEFAULT_METHOD}, this.requestInit);\n    init.body = new FormData();\n\n    const weightsManifest: WeightsManifestConfig = [{\n      paths: ['./model.weights.bin'],\n      weights: modelArtifacts.weightSpecs,\n    }];\n    const modelTopologyAndWeightManifest: ModelJSON =\n        getModelJSONForModelArtifacts(modelArtifacts, weightsManifest);\n\n    init.body.append(\n        'model.json',\n        new Blob(\n            [JSON.stringify(modelTopologyAndWeightManifest)],\n            {type: JSON_TYPE}),\n        'model.json');\n\n    if (modelArtifacts.weightData != null) {\n      init.body.append(\n          'model.weights.bin',\n          new Blob([modelArtifacts.weightData], {type: OCTET_STREAM_MIME_TYPE}),\n          'model.weights.bin');\n    }\n\n    const response = await this.fetch(this.path, init);\n\n    if (response.ok) {\n      return {\n        modelArtifactsInfo: getModelArtifactsInfoForJSON(modelArtifacts),\n        responses: [response],\n      };\n    } else {\n      throw new Error(\n          `BrowserHTTPRequest.save() failed due to HTTP response status ` +\n          `${response.status}.`);\n    }\n  }\n\n  /**\n   * Load model artifacts via HTTP request(s).\n   *\n   * See the documentation to `tf.io.http` for details on the saved\n   * artifacts.\n   *\n   * @returns The loaded model artifacts (if loading succeeds).\n   */\n  async load(): Promise<ModelArtifacts> {\n    const modelConfigRequest = await this.fetch(this.path, this.requestInit);\n\n    if (!modelConfigRequest.ok) {\n      throw new Error(\n          `Request to ${this.path} failed with status code ` +\n          `${modelConfigRequest.status}. Please verify this URL points to ` +\n          `the model JSON of the model to load.`);\n    }\n    let modelJSON: ModelJSON;\n    try {\n      modelJSON = await modelConfigRequest.json();\n    } catch (e) {\n      let message = `Failed to parse model JSON of response from ${this.path}.`;\n      // TODO(nsthorat): Remove this after some time when we're comfortable that\n      // .pb files are mostly gone.\n      if (this.path.endsWith('.pb')) {\n        message += ' Your path contains a .pb file extension. ' +\n            'Support for .pb models have been removed in TensorFlow.js 1.0 ' +\n            'in favor of .json models. You can re-convert your Python ' +\n            'TensorFlow model using the TensorFlow.js 1.0 conversion scripts ' +\n            'or you can convert your.pb models with the \\'pb2json\\'' +\n            'NPM script in the tensorflow/tfjs-converter repository.';\n      } else {\n        message += ' Please make sure the server is serving valid ' +\n            'JSON for this request.';\n      }\n      throw new Error(message);\n    }\n\n    // We do not allow both modelTopology and weightsManifest to be missing.\n    const modelTopology = modelJSON.modelTopology;\n    const weightsManifest = modelJSON.weightsManifest;\n    if (modelTopology == null && weightsManifest == null) {\n      throw new Error(\n          `The JSON from HTTP path ${this.path} contains neither model ` +\n          `topology or manifest for weights.`);\n    }\n\n    return getModelArtifactsForJSON(\n        modelJSON, (weightsManifest) => this.loadWeights(weightsManifest));\n  }\n\n  private async loadWeights(weightsManifest: WeightsManifestConfig):\n      Promise<[WeightsManifestEntry[], ArrayBuffer]> {\n    const weightPath = Array.isArray(this.path) ? this.path[1] : this.path;\n    const [prefix, suffix] = parseUrl(weightPath);\n    const pathPrefix = this.weightPathPrefix || prefix;\n\n    const weightSpecs = [];\n    for (const entry of weightsManifest) {\n      weightSpecs.push(...entry.weights);\n    }\n\n    const fetchURLs: string[] = [];\n    const urlPromises: Array<Promise<string>> = [];\n    for (const weightsGroup of weightsManifest) {\n      for (const path of weightsGroup.paths) {\n        if (this.weightUrlConverter != null) {\n          urlPromises.push(this.weightUrlConverter(path));\n        } else {\n          fetchURLs.push(pathPrefix + path + suffix);\n        }\n      }\n    }\n\n    if (this.weightUrlConverter) {\n      fetchURLs.push(...await Promise.all(urlPromises));\n    }\n\n    const buffers = await loadWeightsAsArrayBuffer(fetchURLs, {\n      requestInit: this.requestInit,\n      fetchFunc: this.fetch,\n      onProgress: this.onProgress\n    });\n    return [weightSpecs, concatenateArrayBuffers(buffers)];\n  }\n}\n\n/**\n * Extract the prefix and suffix of the url, where the prefix is the path before\n * the last file, and suffix is the search params after the last file.\n * ```\n * const url = 'http://tfhub.dev/model/1/tensorflowjs_model.pb?tfjs-format=file'\n * [prefix, suffix] = parseUrl(url)\n * // prefix = 'http://tfhub.dev/model/1/'\n * // suffix = '?tfjs-format=file'\n * ```\n * @param url the model url to be parsed.\n */\nexport function parseUrl(url: string): [string, string] {\n  const lastSlash = url.lastIndexOf('/');\n  const lastSearchParam = url.lastIndexOf('?');\n  const prefix = url.substring(0, lastSlash);\n  const suffix =\n      lastSearchParam > lastSlash ? url.substring(lastSearchParam) : '';\n  return [prefix + '/', suffix];\n}\n\nexport function isHTTPScheme(url: string): boolean {\n  return url.match(HTTPRequest.URL_SCHEME_REGEX) != null;\n}\n\nexport const httpRouter: IORouter =\n    (url: string, loadOptions?: LoadOptions) => {\n      if (typeof fetch === 'undefined' &&\n          (loadOptions == null || loadOptions.fetchFunc == null)) {\n        // `http` uses `fetch` or `node-fetch`, if one wants to use it in\n        // an environment that is not the browser or node they have to setup a\n        // global fetch polyfill.\n        return null;\n      } else {\n        let isHTTP = true;\n        if (Array.isArray(url)) {\n          isHTTP = url.every(urlItem => isHTTPScheme(urlItem));\n        } else {\n          isHTTP = isHTTPScheme(url);\n        }\n        if (isHTTP) {\n          return http(url, loadOptions);\n        }\n      }\n      return null;\n    };\nIORouterRegistry.registerSaveRouter(httpRouter);\nIORouterRegistry.registerLoadRouter(httpRouter);\n\n/**\n * Creates an IOHandler subtype that sends model artifacts to HTTP server.\n *\n * An HTTP request of the `multipart/form-data` mime type will be sent to the\n * `path` URL. The form data includes artifacts that represent the topology\n * and/or weights of the model. In the case of Keras-style `tf.Model`, two\n * blobs (files) exist in form-data:\n *   - A JSON file consisting of `modelTopology` and `weightsManifest`.\n *   - A binary weights file consisting of the concatenated weight values.\n * These files are in the same format as the one generated by\n * [tfjs_converter](https://js.tensorflow.org/tutorials/import-keras.html).\n *\n * The following code snippet exemplifies the client-side code that uses this\n * function:\n *\n * ```js\n * const model = tf.sequential();\n * model.add(\n *     tf.layers.dense({units: 1, inputShape: [100], activation: 'sigmoid'}));\n *\n * const saveResult = await model.save(tf.io.http(\n *     'http://model-server:5000/upload', {requestInit: {method: 'PUT'}}));\n * console.log(saveResult);\n * ```\n *\n * If the default `POST` method is to be used, without any custom parameters\n * such as headers, you can simply pass an HTTP or HTTPS URL to `model.save`:\n *\n * ```js\n * const saveResult = await model.save('http://model-server:5000/upload');\n * ```\n *\n * The following GitHub Gist\n * https://gist.github.com/dsmilkov/1b6046fd6132d7408d5257b0976f7864\n * implements a server based on [flask](https://github.com/pallets/flask) that\n * can receive the request. Upon receiving the model artifacts via the requst,\n * this particular server reconsistutes instances of [Keras\n * Models](https://keras.io/models/model/) in memory.\n *\n *\n * @param path A URL path to the model.\n *   Can be an absolute HTTP path (e.g.,\n *   'http://localhost:8000/model-upload)') or a relative path (e.g.,\n *   './model-upload').\n * @param requestInit Request configurations to be used when sending\n *    HTTP request to server using `fetch`. It can contain fields such as\n *    `method`, `credentials`, `headers`, `mode`, etc. See\n *    https://developer.mozilla.org/en-US/docs/Web/API/Request/Request\n *    for more information. `requestInit` must not have a body, because the\n * body will be set by TensorFlow.js. File blobs representing the model\n * topology (filename: 'model.json') and the weights of the model (filename:\n * 'model.weights.bin') will be appended to the body. If `requestInit` has a\n * `body`, an Error will be thrown.\n * @param loadOptions Optional configuration for the loading. It includes the\n *   following fields:\n *   - weightPathPrefix Optional, this specifies the path prefix for weight\n *     files, by default this is calculated from the path param.\n *   - fetchFunc Optional, custom `fetch` function. E.g., in Node.js,\n *     the `fetch` from node-fetch can be used here.\n *   - onProgress Optional, progress callback function, fired periodically\n *     before the load is completed.\n * @returns An instance of `IOHandler`.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Loading',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nexport function http(path: string, loadOptions?: LoadOptions): IOHandler {\n  return new HTTPRequest(path, loadOptions);\n}\n\n/**\n * Deprecated. Use `tf.io.http`.\n * @param path\n * @param loadOptions\n */\nexport function browserHTTPRequest(\n    path: string, loadOptions?: LoadOptions): IOHandler {\n  return http(path, loadOptions);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * IOHandlers that pass through the in-memory ModelArtifacts format.\n */\n\nimport {IOHandler, ModelArtifacts, SaveResult, TrainingConfig, WeightsManifestEntry} from './types';\n\nclass PassthroughLoader implements IOHandler {\n  constructor(private readonly modelArtifacts?: ModelArtifacts) {}\n\n  async load(): Promise<ModelArtifacts> {\n    return this.modelArtifacts;\n  }\n}\n\nclass PassthroughSaver implements IOHandler {\n  constructor(\n      private readonly saveHandler:\n          (artifacts: ModelArtifacts) => Promise<SaveResult>) {}\n\n  async save(modelArtifacts: ModelArtifacts) {\n    return this.saveHandler(modelArtifacts);\n  }\n}\n\n/**\n * Creates an IOHandler that loads model artifacts from memory.\n *\n * When used in conjunction with `tf.loadLayersModel`, an instance of\n * `tf.LayersModel` (Keras-style) can be constructed from the loaded artifacts.\n *\n * ```js\n * const model = await tf.loadLayersModel(tf.io.fromMemory(\n *     modelTopology, weightSpecs, weightData));\n * ```\n *\n * @param modelArtifacts a object containing model topology (i.e., parsed from\n *   the JSON format).\n * @param weightSpecs An array of `WeightsManifestEntry` objects describing the\n *   names, shapes, types, and quantization of the weight data.\n * @param weightData A single `ArrayBuffer` containing the weight data,\n *   concatenated in the order described by the weightSpecs.\n * @param trainingConfig Model training configuration. Optional.\n *\n * @returns A passthrough `IOHandler` that simply loads the provided data.\n */\nexport function fromMemory(\n    modelArtifacts: {}|ModelArtifacts, weightSpecs?: WeightsManifestEntry[],\n    weightData?: ArrayBuffer, trainingConfig?: TrainingConfig): IOHandler {\n  if (arguments.length === 1) {\n    const isModelArtifacts =\n        (modelArtifacts as ModelArtifacts).modelTopology != null ||\n        (modelArtifacts as ModelArtifacts).weightSpecs != null;\n    if (isModelArtifacts) {\n      return new PassthroughLoader(modelArtifacts as ModelArtifacts);\n    } else {\n      // Legacy support: with only modelTopology.\n      // TODO(cais): Remove this deprecated API.\n      console.warn(\n          'Please call tf.io.fromMemory() with only one argument. ' +\n          'The argument should be of type ModelArtifacts. ' +\n          'The multi-argument signature of tf.io.fromMemory() has been ' +\n          'deprecated and will be removed in a future release.');\n      return new PassthroughLoader({modelTopology: modelArtifacts as {}});\n    }\n  } else {\n    // Legacy support.\n    // TODO(cais): Remove this deprecated API.\n    console.warn(\n        'Please call tf.io.fromMemory() with only one argument. ' +\n        'The argument should be of type ModelArtifacts. ' +\n        'The multi-argument signature of tf.io.fromMemory() has been ' +\n        'deprecated and will be removed in a future release.');\n    return new PassthroughLoader({\n      modelTopology: modelArtifacts as {},\n      weightSpecs,\n      weightData,\n      trainingConfig\n    });\n  }\n}\n\n/**\n * Creates an IOHandler that passes saved model artifacts to a callback.\n *\n * ```js\n * function handleSave(artifacts) {\n *   // ... do something with the artifacts ...\n *   return {modelArtifactsInfo: {...}, ...};\n * }\n *\n * const saveResult = model.save(tf.io.withSaveHandler(handleSave));\n * ```\n *\n * @param saveHandler A function that accepts a `ModelArtifacts` and returns a\n *     `SaveResult`.\n */\nexport function withSaveHandler(\n    saveHandler: (artifacts: ModelArtifacts) =>\n        Promise<SaveResult>): IOHandler {\n  return new PassthroughSaver(saveHandler);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor1D, Tensor2D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {cast} from './cast';\nimport {matMul} from './mat_mul';\nimport {oneHot} from './one_hot';\nimport {op} from './operation';\nimport {transpose} from './transpose';\n\n/**\n * Computes the confusion matrix from true labels and predicted labels.\n *\n * ```js\n * const labels = tf.tensor1d([0, 1, 2, 1, 0], 'int32');\n * const predictions = tf.tensor1d([0, 2, 2, 1, 0], 'int32');\n * const numClasses = 3;\n * const out = tf.math.confusionMatrix(labels, predictions, numClasses);\n * out.print();\n * // Expected output matrix:\n * // [[2, 0, 0],\n * //  [0, 1, 1],\n * //  [0, 0, 1]]\n * ```\n *\n * @param labels The target labels, assumed to be 0-based integers\n *   for the classes. The shape is `[numExamples]`, where\n *   `numExamples` is the number of examples included.\n * @param predictions The predicted classes, assumed to be\n *   0-based integers for the classes. Must have the same shape as `labels`.\n * @param numClasses Number of all classes, as an integer.\n *   Its value must be larger than the largest element in `labels` and\n *   `predictions`.\n * @returns The confusion matrix as a int32-type 2D tensor. The value at\n *   row `r` and column `c` is the number of times examples of actual class\n *   `r` were predicted as class `c`.\n *\n * @doc {heading: 'Operations', subheading: 'Evaluation'}\n */\nexport function confusionMatrix_(\n    labels: Tensor1D|TensorLike, predictions: Tensor1D|TensorLike,\n    numClasses: number): Tensor2D {\n  const $labels = convertToTensor(labels, 'labels', 'confusionMatrix');\n  const $predictions =\n      convertToTensor(predictions, 'predictions', 'confusionMatrix');\n\n  util.assert(\n      numClasses == null || numClasses > 0 && Number.isInteger(numClasses),\n      () => `If provided, numClasses must be a positive integer, ` +\n          `but got ${numClasses}`);\n  util.assert(\n      $labels.rank === 1,\n      () => `Expected the rank of labels to be 1, but got ${$labels.rank}`);\n  util.assert(\n      $predictions.rank === 1,\n      () => `Expected the rank of predictions to be 1, ` +\n          `but got ${$predictions.rank}`);\n  util.assert(\n      $labels.shape[0] === $predictions.shape[0],\n      () => `Mismatch in the number of examples: ` +\n          `${$labels.shape[0]} vs. ${$predictions.shape[0]}. ` +\n          `Labels and predictions should have the same number of elements.`);\n  util.assert(\n      numClasses > 0 && Number.isInteger(numClasses),\n      () => `numClasses is required to be a positive integer, but got ` +\n          `${numClasses}`);\n  // TODO(cais): In the future, if oneHot supports tensors inputs for\n  //   `numClasses`, `confusionMatrix` can make `numClasses` optional.\n\n  const oneHotLabels = oneHot(cast($labels, 'int32'), numClasses) as Tensor2D;\n  const oneHotPredictions =\n      oneHot(cast($predictions, 'int32'), numClasses) as Tensor2D;\n  const oneHotLabelsT: Tensor2D = transpose(oneHotLabels);\n  const product: Tensor2D = matMul(oneHotLabelsT, oneHotPredictions);\n  return cast(product, 'int32');\n}\n\nexport const confusionMatrix = op({confusionMatrix_});\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {env} from '../environment';\nimport {FromPixels, FromPixelsAttrs, FromPixelsInputs} from '../kernel_names';\nimport {getKernel, NamedAttrMap} from '../kernel_registry';\nimport {Tensor, Tensor2D, Tensor3D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {PixelData, TensorLike} from '../types';\n\nimport {cast} from './cast';\nimport {op} from './operation';\nimport {tensor3d} from './tensor3d';\n\nlet fromPixels2DContext: CanvasRenderingContext2D;\n\n/**\n * Creates a `tf.Tensor` from an image.\n *\n * ```js\n * const image = new ImageData(1, 1);\n * image.data[0] = 100;\n * image.data[1] = 150;\n * image.data[2] = 200;\n * image.data[3] = 255;\n *\n * tf.browser.fromPixels(image).print();\n * ```\n *\n * @param pixels The input image to construct the tensor from. The\n * supported image types are all 4-channel. You can also pass in an image\n * object with following attributes:\n * `{data: Uint8Array; width: number; height: number}`\n * @param numChannels The number of channels of the output tensor. A\n * numChannels value less than 4 allows you to ignore channels. Defaults to\n * 3 (ignores alpha channel of input image).\n *\n * @returns A Tensor3D with the shape `[height, width, numChannels]`.\n *\n * @doc {heading: 'Browser', namespace: 'browser', ignoreCI: true}\n */\nfunction fromPixels_(\n    pixels: PixelData|ImageData|HTMLImageElement|HTMLCanvasElement|\n    HTMLVideoElement|ImageBitmap,\n    numChannels = 3): Tensor3D {\n  // Sanity checks.\n  if (numChannels > 4) {\n    throw new Error(\n        'Cannot construct Tensor with more than 4 channels from pixels.');\n  }\n  if (pixels == null) {\n    throw new Error('pixels passed to tf.browser.fromPixels() can not be null');\n  }\n  let isPixelData = false;\n  let isImageData = false;\n  let isVideo = false;\n  let isImage = false;\n  let isCanvasLike = false;\n  let isImageBitmap = false;\n  if ((pixels as PixelData).data instanceof Uint8Array) {\n    isPixelData = true;\n  } else if (\n      typeof (ImageData) !== 'undefined' && pixels instanceof ImageData) {\n    isImageData = true;\n  } else if (\n      typeof (HTMLVideoElement) !== 'undefined' &&\n      pixels instanceof HTMLVideoElement) {\n    isVideo = true;\n  } else if (\n      typeof (HTMLImageElement) !== 'undefined' &&\n      pixels instanceof HTMLImageElement) {\n    isImage = true;\n    // tslint:disable-next-line: no-any\n  } else if ((pixels as any).getContext != null) {\n    isCanvasLike = true;\n  } else if (\n      typeof (ImageBitmap) !== 'undefined' && pixels instanceof ImageBitmap) {\n    isImageBitmap = true;\n  } else {\n    throw new Error(\n        'pixels passed to tf.browser.fromPixels() must be either an ' +\n        `HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData ` +\n        `in browser, or OffscreenCanvas, ImageData in webworker` +\n        ` or {data: Uint32Array, width: number, height: number}, ` +\n        `but was ${(pixels as {}).constructor.name}`);\n  }\n  if (isVideo) {\n    const HAVE_CURRENT_DATA_READY_STATE = 2;\n    if (isVideo &&\n        (pixels as HTMLVideoElement).readyState <\n            HAVE_CURRENT_DATA_READY_STATE) {\n      throw new Error(\n          'The video element has not loaded data yet. Please wait for ' +\n          '`loadeddata` event on the <video> element.');\n    }\n  }\n  // If the current backend has 'FromPixels' registered, it has a more\n  // efficient way of handling pixel uploads, so we call that.\n  const kernel = getKernel(FromPixels, ENGINE.backendName);\n  if (kernel != null) {\n    const inputs: FromPixelsInputs = {pixels};\n    const attrs: FromPixelsAttrs = {numChannels};\n    return ENGINE.runKernel(\n        FromPixels, inputs as {} as NamedTensorMap,\n        attrs as {} as NamedAttrMap);\n  }\n\n  const [width, height] = isVideo ?\n      [\n        (pixels as HTMLVideoElement).videoWidth,\n        (pixels as HTMLVideoElement).videoHeight\n      ] :\n      [pixels.width, pixels.height];\n  let vals: Uint8ClampedArray|Uint8Array;\n\n  if (isCanvasLike) {\n    vals =\n        // tslint:disable-next-line:no-any\n        (pixels as any).getContext('2d').getImageData(0, 0, width, height).data;\n  } else if (isImageData || isPixelData) {\n    vals = (pixels as PixelData | ImageData).data;\n  } else if (isImage || isVideo || isImageBitmap) {\n    if (fromPixels2DContext == null) {\n      fromPixels2DContext = document.createElement('canvas').getContext('2d');\n    }\n    fromPixels2DContext.canvas.width = width;\n    fromPixels2DContext.canvas.height = height;\n    fromPixels2DContext.drawImage(\n        pixels as HTMLVideoElement, 0, 0, width, height);\n    vals = fromPixels2DContext.getImageData(0, 0, width, height).data;\n  }\n  let values: Int32Array;\n  if (numChannels === 4) {\n    values = new Int32Array(vals);\n  } else {\n    const numPixels = width * height;\n    values = new Int32Array(numPixels * numChannels);\n    for (let i = 0; i < numPixels; i++) {\n      for (let channel = 0; channel < numChannels; ++channel) {\n        values[i * numChannels + channel] = vals[i * 4 + channel];\n      }\n    }\n  }\n  const outShape: [number, number, number] = [height, width, numChannels];\n  return tensor3d(values, outShape, 'int32');\n}\n\n// Helper functions for |fromPixelsAsync| to check whether the input can\n// be wrapped into imageBitmap.\nfunction isPixelData(pixels: PixelData|ImageData|HTMLImageElement|\n                     HTMLCanvasElement|HTMLVideoElement|\n                     ImageBitmap): pixels is PixelData {\n  return (pixels != null) && ((pixels as PixelData).data instanceof Uint8Array);\n}\n\nfunction isImageBitmapFullySupported() {\n  return typeof window !== 'undefined' &&\n      typeof (ImageBitmap) !== 'undefined' &&\n      window.hasOwnProperty('createImageBitmap');\n}\n\nfunction isNonEmptyPixels(pixels: PixelData|ImageData|HTMLImageElement|\n                          HTMLCanvasElement|HTMLVideoElement|ImageBitmap) {\n  return pixels != null && pixels.width !== 0 && pixels.height !== 0;\n}\n\nfunction canWrapPixelsToImageBitmap(pixels: PixelData|ImageData|\n                                    HTMLImageElement|HTMLCanvasElement|\n                                    HTMLVideoElement|ImageBitmap) {\n  return isImageBitmapFullySupported() && !(pixels instanceof ImageBitmap) &&\n      isNonEmptyPixels(pixels) && !isPixelData(pixels);\n}\n\n/**\n * Creates a `tf.Tensor` from an image in async way.\n *\n * ```js\n * const image = new ImageData(1, 1);\n * image.data[0] = 100;\n * image.data[1] = 150;\n * image.data[2] = 200;\n * image.data[3] = 255;\n *\n * (await tf.browser.fromPixelsAsync(image)).print();\n * ```\n * This API is the async version of fromPixels. The API will first\n * check |WRAP_TO_IMAGEBITMAP| flag, and try to wrap the input to\n * imageBitmap if the flag is set to true.\n *\n * @param pixels The input image to construct the tensor from. The\n * supported image types are all 4-channel. You can also pass in an image\n * object with following attributes:\n * `{data: Uint8Array; width: number; height: number}`\n * @param numChannels The number of channels of the output tensor. A\n * numChannels value less than 4 allows you to ignore channels. Defaults to\n * 3 (ignores alpha channel of input image).\n *\n * @doc {heading: 'Browser', namespace: 'browser', ignoreCI: true}\n */\nexport async function fromPixelsAsync(\n    pixels: PixelData|ImageData|HTMLImageElement|HTMLCanvasElement|\n    HTMLVideoElement|ImageBitmap,\n    numChannels = 3) {\n  let inputs: PixelData|ImageData|HTMLImageElement|HTMLCanvasElement|\n      HTMLVideoElement|ImageBitmap = null;\n\n  // Check whether the backend needs to wrap |pixels| to imageBitmap and\n  // whether |pixels| can be wrapped to imageBitmap.\n  if (env().getBool('WRAP_TO_IMAGEBITMAP') &&\n      canWrapPixelsToImageBitmap(pixels)) {\n    // Force the imageBitmap creation to not do any premultiply alpha\n    // ops.\n    let imageBitmap;\n\n    try {\n      // wrap in try-catch block, because createImageBitmap may not work\n      // properly in some browsers, e.g.\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=1335594\n      // tslint:disable-next-line: no-any\n      imageBitmap = await (createImageBitmap as any)(\n          pixels as ImageBitmapSource, {premultiplyAlpha: 'none'});\n    } catch (e) {\n      imageBitmap = null;\n    }\n\n    // createImageBitmap will clip the source size.\n    // In some cases, the input will have larger size than its content.\n    // E.g. new Image(10, 10) but with 1 x 1 content. Using\n    // createImageBitmap will clip the size from 10 x 10 to 1 x 1, which\n    // is not correct. We should avoid wrapping such resouce to\n    // imageBitmap.\n    if (imageBitmap != null && imageBitmap.width === pixels.width &&\n        imageBitmap.height === pixels.height) {\n      inputs = imageBitmap;\n    } else {\n      inputs = pixels;\n    }\n  } else {\n    inputs = pixels;\n  }\n\n  return fromPixels_(inputs, numChannels);\n}\n\n/**\n * Draws a `tf.Tensor` of pixel values to a byte array or optionally a\n * canvas.\n *\n * When the dtype of the input is 'float32', we assume values in the range\n * [0-1]. Otherwise, when input is 'int32', we assume values in the range\n * [0-255].\n *\n * Returns a promise that resolves when the canvas has been drawn to.\n *\n * @param img A rank-2 tensor with shape `[height, width]`, or a rank-3 tensor\n * of shape `[height, width, numChannels]`. If rank-2, draws grayscale. If\n * rank-3, must have depth of 1, 3 or 4. When depth of 1, draws\n * grayscale. When depth of 3, we draw with the first three components of\n * the depth dimension corresponding to r, g, b and alpha = 1. When depth of\n * 4, all four components of the depth dimension correspond to r, g, b, a.\n * @param canvas The canvas to draw to.\n *\n * @doc {heading: 'Browser', namespace: 'browser'}\n */\nexport async function toPixels(\n    img: Tensor2D|Tensor3D|TensorLike,\n    canvas?: HTMLCanvasElement): Promise<Uint8ClampedArray> {\n  let $img = convertToTensor(img, 'img', 'toPixels');\n  if (!(img instanceof Tensor)) {\n    // Assume int32 if user passed a native array.\n    const originalImgTensor = $img;\n    $img = cast(originalImgTensor, 'int32');\n    originalImgTensor.dispose();\n  }\n  if ($img.rank !== 2 && $img.rank !== 3) {\n    throw new Error(\n        `toPixels only supports rank 2 or 3 tensors, got rank ${$img.rank}.`);\n  }\n  const [height, width] = $img.shape.slice(0, 2);\n  const depth = $img.rank === 2 ? 1 : $img.shape[2];\n\n  if (depth > 4 || depth === 2) {\n    throw new Error(\n        `toPixels only supports depth of size ` +\n        `1, 3 or 4 but got ${depth}`);\n  }\n\n  if ($img.dtype !== 'float32' && $img.dtype !== 'int32') {\n    throw new Error(\n        `Unsupported type for toPixels: ${$img.dtype}.` +\n        ` Please use float32 or int32 tensors.`);\n  }\n\n  const data = await $img.data();\n  const multiplier = $img.dtype === 'float32' ? 255 : 1;\n  const bytes = new Uint8ClampedArray(width * height * 4);\n\n  for (let i = 0; i < height * width; ++i) {\n    const rgba = [0, 0, 0, 255];\n\n    for (let d = 0; d < depth; d++) {\n      const value = data[i * depth + d];\n\n      if ($img.dtype === 'float32') {\n        if (value < 0 || value > 1) {\n          throw new Error(\n              `Tensor values for a float32 Tensor must be in the ` +\n              `range [0 - 1] but encountered ${value}.`);\n        }\n      } else if ($img.dtype === 'int32') {\n        if (value < 0 || value > 255) {\n          throw new Error(\n              `Tensor values for a int32 Tensor must be in the ` +\n              `range [0 - 255] but encountered ${value}.`);\n        }\n      }\n\n      if (depth === 1) {\n        rgba[0] = value * multiplier;\n        rgba[1] = value * multiplier;\n        rgba[2] = value * multiplier;\n      } else {\n        rgba[d] = value * multiplier;\n      }\n    }\n\n    const j = i * 4;\n    bytes[j + 0] = Math.round(rgba[0]);\n    bytes[j + 1] = Math.round(rgba[1]);\n    bytes[j + 2] = Math.round(rgba[2]);\n    bytes[j + 3] = Math.round(rgba[3]);\n  }\n\n  if (canvas != null) {\n    canvas.width = width;\n    canvas.height = height;\n    const ctx = canvas.getContext('2d');\n    const imageData = new ImageData(bytes, width, height);\n    ctx.putImageData(imageData, 0, 0);\n  }\n  if ($img !== img) {\n    $img.dispose();\n  }\n  return bytes;\n}\n\nexport const fromPixels = op({fromPixels_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {TensorInfo} from '../kernel_registry';\nimport {computeStrides, sizeFromShape} from '../util';\n\n/**\n * Validate gather nd inputs.\n *\n * @param tensor The tensor contains the source values.\n * @param indices The tensor contains the indices to slice the source.\n *\n * @returns [resultShape, numUpdates, sliceSize, strides]\n */\nexport function prepareAndValidate(tensor: TensorInfo, indices: TensorInfo):\n    [number[], number, number, number[]] {\n  const tensorRank = tensor.shape.length;\n  const indicesRank = indices.shape.length;\n  if (tensorRank < 1) {\n    throw new Error(\n        'tf.gatherND() expects the input to be rank 1 or higher,' +\n        ` but the rank was ${tensorRank}.`);\n  }\n  if (indicesRank < 1) {\n    throw new Error(\n        'tf.gatherND() expects the indices to be rank 1 or higher,' +\n        ` but the rank was ${indicesRank}.`);\n  }\n  if (indices.dtype !== 'int32') {\n    throw new Error(\n        'tf.gatherND() expects the indices to be int32 type,' +\n        ` but the dtype was ${indices.dtype}.`);\n  }\n  if (indices.shape[indicesRank - 1] > tensorRank) {\n    throw new Error(\n        'index innermost dimension length must be <= tensor rank; saw: ' +\n        `${indices.shape[indicesRank - 1]} vs. ${tensorRank}`);\n  }\n\n  if (sizeFromShape(tensor.shape) === 0) {\n    throw new Error(\n        'Requested more than 0 entries, but input is empty.' +\n        ` Input shape: ${tensor.shape}.`);\n  }\n\n  const indicesShape = indices.shape;\n  const sliceRank = indicesShape[indicesShape.length - 1];\n\n  // The result shape is\n  //   indices.shape[:-1] + params.shape[indices.shape[-1]:]\n  let nResult = 1;\n  for (let i = 0; i < indicesShape.length - 1; ++i) {\n    nResult *= indicesShape[i];\n  }\n\n  const inputShape = tensor.shape;\n\n  const resultShape = indicesShape.slice();\n  resultShape.pop();\n\n  let sliceSize = 1;\n  for (let i = sliceRank; i < tensorRank; ++i) {\n    sliceSize *= inputShape[i];\n    resultShape.push(inputShape[i]);\n  }\n\n  const strides =\n      [...computeStrides(tensor.shape).map(stride => stride / sliceSize),\n       1].slice(0, sliceRank);\n\n  return [resultShape, nResult, sliceSize, strides];\n}\n","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {TensorInfo} from '../kernel_registry';\nimport * as util from '../util';\n\nexport type SliceInfo = {\n  nonStrided: boolean,\n  $begin: number[],\n  $end: number[],\n  $strides: number[],\n  size: number[],\n  newShape: number[],\n  outShape: number[]\n};\n\nexport function assertParamsValid(\n    input: TensorInfo, begin: number[], size: number[]): void {\n  const inputRank = input.shape.length;\n  util.assert(\n      inputRank === begin.length,\n      () => `Error in slice${inputRank}D: Length of begin ${begin} must ` +\n          `match the rank of the array (${inputRank}).`);\n  util.assert(\n      inputRank === size.length,\n      () => `Error in slice${inputRank}D: Length of size ${size} must ` +\n          `match the rank of the array (${inputRank}).`);\n\n  for (let i = 0; i < inputRank; ++i) {\n    util.assert(\n        begin[i] + size[i] <= input.shape[i],\n        () => `Error in slice${inputRank}D: begin[${i}] + size[${i}] ` +\n            `(${begin[i] + size[i]}) would overflow input.shape[${i}] (${\n                  input.shape[i]})`);\n  }\n}\n\n/** Converts a binary mask to an array of axes. Used in stridedSlice(). */\nexport function maskToAxes(mask: number): number[] {\n  const axes = [];\n  let axis = 0;\n  while (mask > 0) {\n    if (mask & 1) {\n      axes.push(axis);\n    }\n    mask /= 2;\n    axis++;\n  }\n  return axes;\n}\n\n/** Computes the output shape given the strided slice params. */\nexport function computeOutShape(\n    begin: number[], end: number[], strides: number[]): number[] {\n  const size = [];\n  for (let axis = 0; axis < begin.length; axis++) {\n    size[axis] = Math.ceil((end[axis] - begin[axis]) / strides[axis]);\n  }\n  return size;\n}\n\n// Creates full selection at the elided dimensions. If the dimension matches\n// the ellipsis mask, override the current stride value. Otherwise, insert.\nexport function stridesWithElidedDims(\n    strides: number[], ellipsisInsertionIndex: number, numElidedAxes: number,\n    inputShape: number[]): number[] {\n  const newStrides = [...strides];\n  for (let i = newStrides.length; i < inputShape.length; i++) {\n    newStrides.push(1);\n  }\n  for (let i = 0; i < numElidedAxes; i++) {\n    if (i === 0) {\n      newStrides[ellipsisInsertionIndex] = 1;\n    } else {\n      newStrides.splice(\n          ellipsisInsertionIndex, 0 /* num elements to delete */,\n          1 /* element to add */);\n      newStrides.pop();\n    }\n  }\n  return newStrides;\n}\n\nfunction unnormalizeAxis(\n    ellipsisInsertionIndex: number, numElidedAxes: number,\n    normalizedAxis: number): number {\n  if (normalizedAxis <= ellipsisInsertionIndex) {\n    return normalizedAxis;\n  }\n\n  return normalizedAxis - (numElidedAxes - 1);\n}\n\nfunction getElidedAxes(numElidedAxes: number, ellipsisInsertionIndex: number) {\n  const elidedAxes = [];\n  for (let i = 0; i < numElidedAxes; i++) {\n    elidedAxes.push(ellipsisInsertionIndex + i);\n  }\n  return elidedAxes;\n}\n\n// Normalize the start, end and strides.\nexport function getNormalizedAxes(\n    inputShape: number[], ellipsisAxes: number[], numInterpolatedAxes: number,\n    begin: number[], end: number[], strides: number[], beginMask: number,\n    endMask: number,\n    ellipsisMask: number): {begin: number[], end: number[], strides: number[]} {\n  const inputRank = inputShape.length;\n  let normalizedBegin = new Array(inputRank),\n      normalizedEnd = new Array(inputRank),\n      normalizedStrides = new Array(inputRank);\n  if (ellipsisAxes.length && numInterpolatedAxes > 0) {\n    const fullIndex = ellipsisAxes[0];\n\n    // The ellipsis applies to the masked index as well as any dimensions\n    // that are interpolated.\n    const numElidedAxes = numInterpolatedAxes + 1;\n    normalizedBegin = startIndicesWithElidedDims(\n        beginMask, fullIndex, numElidedAxes, begin, inputShape);\n    normalizedEnd = stopIndicesWithElidedDims(\n        endMask, fullIndex, numElidedAxes, end, inputShape);\n    normalizedStrides =\n        stridesWithElidedDims(strides, fullIndex, numElidedAxes, inputShape);\n  } else {\n    for (let axis = 0; axis < inputRank; axis++) {\n      normalizedBegin[axis] = startForAxis(\n          beginMask, begin, strides, inputShape, axis, ellipsisMask);\n      normalizedEnd[axis] =\n          stopForAxis(endMask, end, strides, inputShape, axis, ellipsisMask);\n      normalizedStrides[axis] = stridesForAxis(strides, axis, ellipsisMask);\n    }\n  }\n\n  return {\n    begin: normalizedBegin,\n    end: normalizedEnd,\n    strides: normalizedStrides\n  };\n}\n\n// Creates full selection at the elided dimensions. If the dimension matches\n// the ellipsis mask, override the current start value. Otherwise, insert.\nexport function startIndicesWithElidedDims(\n    beginMask: number, ellipsisInsertionIndex: number, numElidedAxes: number,\n    originalBegin: number[], inputShape: number[]): number[] {\n  const newIndices = [...inputShape];\n  const elidedAxes = getElidedAxes(numElidedAxes, ellipsisInsertionIndex);\n\n  for (let axis = 0; axis < newIndices.length; axis++) {\n    if (elidedAxes.indexOf(axis) > -1) {\n      newIndices[axis] = 0;\n    } else {\n      const originalAxis =\n          unnormalizeAxis(ellipsisInsertionIndex, numElidedAxes, axis);\n      let originalValue = originalBegin[originalAxis];\n      if (beginMask & 1 << originalAxis) {\n        originalValue = 0;\n      }\n\n      newIndices[axis] = originalValue;\n    }\n  }\n  return newIndices;\n}\n\n// Creates full selection at the elided dimensions. If the dimension matches\n// the ellipsis mask, override the current stop value. Otherwise, insert.\nexport function stopIndicesWithElidedDims(\n    endMask: number, ellipsisInsertionIndex: number, numElidedAxes: number,\n    originalEnd: number[], inputShape: number[]): number[] {\n  const newIndices = [...inputShape];\n  const elidedAxes = getElidedAxes(numElidedAxes, ellipsisInsertionIndex);\n\n  for (let axis = 0; axis < newIndices.length; axis++) {\n    if (elidedAxes.indexOf(axis) > -1) {\n      newIndices[axis] = Number.MAX_SAFE_INTEGER;\n    } else {\n      const originalAxis =\n          unnormalizeAxis(ellipsisInsertionIndex, numElidedAxes, axis);\n      let originalValue = originalEnd[originalAxis];\n      if (endMask & 1 << originalAxis) {\n        originalValue = Number.MAX_SAFE_INTEGER;\n      }\n      newIndices[axis] = originalValue;\n    }\n  }\n\n  for (let i = 0; i < newIndices.length; i++) {\n    // Handle negative indices\n    const axisSize = inputShape[i];\n    if (newIndices[i] < 0) {\n      newIndices[i] += axisSize;\n    }\n    newIndices[i] = util.clamp(0, newIndices[i], inputShape[i]);\n  }\n  return newIndices;\n}\n\nexport function stridesForAxis(\n    strides: number[], axis: number, ellipsisMask: number): number {\n  let stride = strides[axis];\n  if (ellipsisMask & (1 << axis) || stride == null) {\n    stride = 1;\n  }\n\n  return stride;\n}\n\nexport function startForAxis(\n    beginMask: number, startIndices: number[], strides: number[],\n    inputShape: number[], axis: number, ellipsisMask: number): number {\n  // Begin with the specified index\n  let start = startIndices[axis];\n  const stride = strides[axis] || 1;\n\n  // Check the axis bit from right of masked axes, or the begin index is not set\n  // for the axis.\n  if (beginMask & 1 << axis || ellipsisMask & 1 << axis || start == null) {\n    if (stride > 0) {\n      // Forward iteration - use the first element. These values will get\n      // clamped below (Note: We could have set them to 0 and axis_size-1, but\n      // use lowest() and max() to maintain symmetry with StopForAxis())\n      start = Number.MIN_SAFE_INTEGER;\n    } else {\n      // Backward iteration - use the last element.\n      start = Number.MAX_SAFE_INTEGER;\n    }\n  }\n\n  // Handle negative indices\n  const axisSize = inputShape[axis];\n  if (start < 0) {\n    start += axisSize;\n  }\n\n  // Clamping\n  start = util.clamp(0, start, axisSize - 1);\n\n  return start;\n}\n\nexport function stopForAxis(\n    endMask: number, stopIndices: number[], strides: number[],\n    inputShape: number[], axis: number, ellipsisMask: number): number {\n  // Begin with the specified index\n  let stop = stopIndices[axis];\n  const stride = strides[axis] || 1;\n\n  // Check the axis bit from right of masked axes, or if the stop index is not\n  // set for this axis.\n  if (endMask & (1 << axis) || ellipsisMask & (1 << axis) || stop == null) {\n    if (stride > 0) {\n      // Forward iteration - use the last element. These values will get\n      // clamped below\n      stop = Number.MAX_SAFE_INTEGER;\n    } else {\n      // Backward iteration - use the first element.\n      stop = Number.MIN_SAFE_INTEGER;\n    }\n  }\n\n  // Handle negative indices\n  const axisSize = inputShape[axis];\n  if (stop < 0) {\n    stop += axisSize;\n  }\n\n  // Clamping\n  // Because the end index points one past the last element, we need slightly\n  // different clamping ranges depending on the direction.\n  if (stride > 0) {\n    // Forward iteration\n    stop = util.clamp(0, stop, axisSize);\n  } else {\n    // Backward iteration\n    stop = util.clamp(-1, stop, axisSize - 1);\n  }\n\n  return stop;\n}\n\n/**\n * Returns true if the slice occupies a continous set of elements in the\n * 'flat' space.\n */\nexport function isSliceContinous(\n    shape: number[], begin: number[], size: number[]) {\n  // Index of the first axis that has size > 1.\n  let firstNonOneAxis = size.length;\n  for (let i = 0; i < size.length; i++) {\n    if (size[i] > 1) {\n      firstNonOneAxis = i;\n      break;\n    }\n  }\n\n  for (let i = firstNonOneAxis + 1; i < size.length; i++) {\n    if (begin[i] > 0 || size[i] !== shape[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function computeFlatOffset(begin: number[], strides: number[]): number {\n  let flatOffset = begin.length > 0 ? begin[begin.length - 1] : 1;\n  for (let i = 0; i < begin.length - 1; i++) {\n    flatOffset += begin[i] * strides[i];\n  }\n  return flatOffset;\n}\n\nexport function parseSliceParams(\n    x: TensorInfo, begin: number|number[], size?: number|number[]) {\n  // The following logic allows for more ergonomic calls.\n  let begin_: number[];\n  const xRank = x.shape.length;\n  if (typeof begin === 'number') {\n    begin_ = [begin, ...new Array(xRank - 1).fill(0)];\n  } else if (begin.length < xRank) {\n    begin_ = begin.concat(new Array(xRank - begin.length).fill(0));\n  } else {\n    begin_ = begin.slice();\n  }\n  begin_.forEach(d => {\n    util.assert(\n        d !== -1, () => 'slice() does not support negative begin indexing.');\n  });\n  let size_: number[];\n  if (size == null) {\n    size_ = new Array(xRank).fill(-1);\n  } else if (typeof size === 'number') {\n    size_ = [size, ...new Array(xRank - 1).fill(-1)];\n  } else if (size.length < xRank) {\n    size_ = size.concat(new Array(xRank - size.length).fill(-1));\n  } else {\n    size_ = size;\n  }\n  size_ = size_.map((d, i) => {\n    if (d >= 0) {\n      return d;\n    } else {\n      util.assert(\n          d === -1,\n          () => `Negative size values should be exactly -1 but got ` +\n              `${d} for the slice() size at index ${i}.`);\n      return x.shape[i] - begin_[i];\n    }\n  });\n  return [begin_, size_];\n}\n\nexport function sliceInfo(\n    xShape: number[], begin: number[], end: number[], strides: number[],\n    beginMask: number, endMask: number, ellipsisMask: number,\n    newAxisMask: number, shrinkAxisMask: number): SliceInfo {\n  // make a copy because it may be modified further down.\n  let $begin = begin.slice();\n  let $end = end.slice();\n  let $strides = strides;\n\n  if (strides == null) {\n    $strides = new Array($begin.length);\n  }\n\n  const ellipsisAxes = maskToAxes(ellipsisMask);\n  if (ellipsisAxes.length > 1) {\n    throw new Error('Multiple ellipses in slice is not allowed.');\n  }\n\n  if (ellipsisMask !== 0 && newAxisMask !== 0) {\n    throw new Error(\n        'Using both ellipsisMask and newAxisMask is not yet supported.');\n  }\n\n  if (ellipsisMask !== 0 && shrinkAxisMask !== 0) {\n    throw new Error(\n        'Using both ellipsisMask and shrinkAxisMask is not yet supported.');\n  }\n\n  const numInterpolatedAxes = xShape.length - $begin.length;\n\n  // Expand the dims of x based on the newAxisMask.\n  const expandAxes = maskToAxes(newAxisMask);\n  const newShape = xShape.slice();\n  expandAxes.forEach(axis => {\n    $begin[axis] = 0;\n    $end[axis] = 1;\n    newShape.splice(axis, 0, 1);\n  });\n\n  const {\n    begin: normalizedBegin,\n    end: normalizedEnd,\n    strides: normalizedStrides\n  } =\n      getNormalizedAxes(\n          newShape, ellipsisAxes, numInterpolatedAxes, $begin, $end, $strides,\n          beginMask, endMask, ellipsisMask);\n  $begin = normalizedBegin;\n  $end = normalizedEnd;\n  $strides = normalizedStrides;\n\n  const shrinkAxes = maskToAxes(shrinkAxisMask);\n  // Adjust the ends based on the shrink mask.\n  shrinkAxes.forEach(axis => {\n    $end[axis] = $begin[axis] + 1;\n    $strides[axis] = 1;\n  });\n\n  // Figure out the output shape.\n  const size = computeOutShape($begin, $end, $strides);\n  // Remove the axes based on shrinkMask.\n  const outShape = size.filter((_, axis) => shrinkAxes.indexOf(axis) === -1);\n\n  const nonStrided = $strides.every(v => v === 1);\n\n  return {nonStrided, $begin, $end, $strides, size, newShape, outShape};\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {assert} from './util';\n\n/**\n * Types to support JSON-esque data structures internally.\n *\n * Internally ConfigDict's use camelCase keys and values where the\n * values are class names to be instantiated.  On the python side, these\n * will be snake_case.  Internally we allow Enums into the values for better\n * type safety, but these need to be converted to raw primitives (usually\n * strings) for round-tripping with python.\n *\n * toConfig returns the TS-friendly representation. model.toJSON() returns\n * the pythonic version as that's the portable format.  If you need to\n * python-ify a non-model level toConfig output, you'll need to use a\n * convertTsToPythonic from serialization_utils in -Layers.\n *\n */\nexport declare type ConfigDictValue =\n    boolean | number | string | null | ConfigDictArray | ConfigDict;\nexport declare interface ConfigDict {\n  [key: string]: ConfigDictValue;\n}\nexport declare interface ConfigDictArray extends Array<ConfigDictValue> {}\n\n/**\n * Type to represent the class-type of Serializable objects.\n *\n * Ie the class prototype with access to the constructor and any\n * static members/methods. Instance methods are not listed here.\n *\n * Source for this idea: https://stackoverflow.com/a/43607255\n */\nexport declare type SerializableConstructor<T extends Serializable> = {\n  // tslint:disable-next-line:no-any\n  new (...args: any[]): T; className: string; fromConfig: FromConfigMethod<T>;\n};\nexport declare type FromConfigMethod<T extends Serializable> =\n    (cls: SerializableConstructor<T>, config: ConfigDict) => T;\n\n/**\n * Serializable defines the serialization contract.\n *\n * TFJS requires serializable classes to return their className when asked\n * to avoid issues with minification.\n */\nexport abstract class Serializable {\n  /**\n   * Return the class name for this class to use in serialization contexts.\n   *\n   * Generally speaking this will be the same thing that constructor.name\n   * would have returned.  However, the class name needs to be robust\n   * against minification for serialization/deserialization to work properly.\n   *\n   * There's also places such as initializers.VarianceScaling, where\n   * implementation details between different languages led to different\n   * class hierarchies and a non-leaf node is used for serialization purposes.\n   */\n  getClassName(): string {\n    return (this.constructor as SerializableConstructor<Serializable>)\n        .className;\n  }\n\n  /**\n   * Return all the non-weight state needed to serialize this object.\n   */\n  abstract getConfig(): ConfigDict;\n\n  /**\n   * Creates an instance of T from a ConfigDict.\n   *\n   * This works for most descendants of serializable.  A few need to\n   * provide special handling.\n   * @param cls A Constructor for the class to instantiate.\n   * @param config The Configuration for the object.\n   */\n  /** @nocollapse */\n  static fromConfig<T extends Serializable>(\n      cls: SerializableConstructor<T>, config: ConfigDict): T {\n    return new cls(config);\n  }\n}\n\n/**\n * Maps string keys to class constructors.\n *\n * Used during (de)serialization from the cross-language JSON format, which\n * requires the class name in the serialization format matches the class\n * names as used in Python, should it exist.\n */\nexport class SerializationMap {\n  private static instance: SerializationMap;\n  classNameMap: {\n    [className: string]:\n        [SerializableConstructor<Serializable>, FromConfigMethod<Serializable>]\n  };\n\n  private constructor() {\n    this.classNameMap = {};\n  }\n\n  /**\n   * Returns the singleton instance of the map.\n   */\n  static getMap(): SerializationMap {\n    if (SerializationMap.instance == null) {\n      SerializationMap.instance = new SerializationMap();\n    }\n    return SerializationMap.instance;\n  }\n\n  /**\n   * Registers the class as serializable.\n   */\n  static register<T extends Serializable>(cls: SerializableConstructor<T>) {\n    SerializationMap.getMap().classNameMap[cls.className] =\n        [cls, cls.fromConfig];\n  }\n}\n\n/**\n * Register a class with the serialization map of TensorFlow.js.\n *\n * This is often used for registering custom Layers, so they can be\n * serialized and deserialized.\n *\n * Example:\n *\n * ```js\n * class MyCustomLayer extends tf.layers.Layer {\n *   static className = 'MyCustomLayer';\n *\n *   constructor(config) {\n *     super(config);\n *   }\n * }\n * tf.serialization.registerClass(MyCustomLayer);\n * ```\n *\n * @param cls The class to be registered. It must have a public static member\n *   called `className` defined and the value must be a non-empty string.\n *\n * @doc {heading: 'Models', subheading: 'Serialization', ignoreCI: true}\n */\nexport function registerClass<T extends Serializable>(\n    cls: SerializableConstructor<T>) {\n  assert(\n      cls.className != null,\n      () => `Class being registered does not have the static className ` +\n          `property defined.`);\n  assert(\n      typeof cls.className === 'string',\n      () => `className is required to be a string, but got type ` +\n          typeof cls.className);\n  assert(\n      cls.className.length > 0,\n      () => `Class being registered has an empty-string as its className, ` +\n          `which is disallowed.`);\n\n  SerializationMap.register(cls);\n}\n","/** @license See the LICENSE file. */\n\n// This code is auto-generated, do not modify this file!\nconst version = '3.8.0';\nexport {version};\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {dispose} from '../globals';\nimport {variableGrads} from '../gradients';\nimport {scalar} from '../ops/ops';\nimport {Serializable} from '../serialization';\nimport {Scalar, Variable} from '../tensor';\nimport {NamedTensor, NamedTensorMap} from '../tensor_types';\n\n/**\n * A variable that belongs to an optimizer.\n *\n * The `originalName` field is required for keeping track of the canonical\n * name of the variable, which is usually the name of the model weight that\n * the variable is related to plus a suffix, e.g., 'dense1/kernel/momentum'.\n * The name of the `Variable` object itself cannot be used directly due to\n * possible deduplication: Every `Variable` must have a unique name but more\n * than one optimizer objects of the same type may be created for the same model\n * or the same `Variable`.\n */\nexport interface OptimizerVariable {\n  originalName: string;\n  variable: Variable;\n}\n\n/** @doc {heading: 'Training', subheading: 'Classes', namespace: 'train'} */\nexport abstract class Optimizer extends Serializable {\n  protected iterations_: number;\n\n  /**\n   * Executes `f()` and minimizes the scalar output of `f()` by computing\n   * gradients of y with respect to the list of trainable variables provided by\n   * `varList`. If no list is provided, it defaults to all trainable variables.\n   *\n   * @param f The function to execute and whose output to minimize.\n   * @param returnCost Whether to return the scalar cost value produced by\n   * executing `f()`.\n   * @param varList An optional list of variables to update. If specified, only\n   * the trainable variables in varList will be updated by minimize. Defaults to\n   * all trainable variables.\n   *\n   * @doc {heading: 'Training', subheading: 'Optimizers'}\n   */\n  minimize(f: () => Scalar, returnCost = false, varList?: Variable[]): Scalar\n      |null {\n    const {value, grads} = this.computeGradients(f, varList);\n\n    if (varList != null) {\n      const gradArray: NamedTensor[] =\n          varList.map(v => ({name: v.name, tensor: grads[v.name]}));\n      this.applyGradients(gradArray);\n    } else {\n      this.applyGradients(grads);\n    }\n\n    // Dispose gradients.\n    dispose(grads);\n\n    if (returnCost) {\n      return value;\n    } else {\n      value.dispose();\n      return null;\n    }\n  }\n\n  /**\n   * The number of iterations that this optimizer instance has been invoked for.\n   */\n  get iterations(): number {\n    if (this.iterations_ == null) {\n      this.iterations_ = 0;\n    }\n    return this.iterations_;\n  }\n\n  protected incrementIterations() {\n    this.iterations_ = this.iterations + 1;\n  }\n\n  /**\n   * Executes f() and computes the gradient of the scalar output of f() with\n   * respect to the list of trainable variables provided by `varList`. If no\n   * list is provided, it defaults to all trainable variables.\n   *\n   * @param f The function to execute and whose output to use for computing\n   * gradients with respect to variables.\n   * @param varList An optional list of variables to compute gradients with\n   * respect to. If specified, only the trainable variables in varList will have\n   * gradients computed with respect to. Defaults to all trainable variables.\n   *\n   * @doc {heading: 'Training', subheading: 'Optimizers'}\n   */\n  computeGradients(f: () => Scalar, varList?: Variable[]):\n      {value: Scalar, grads: NamedTensorMap} {\n    return variableGrads(f, varList);\n  }\n\n  /**\n   * Updates variables by using the computed gradients.\n   *\n   * @param variableGradients A mapping of variable name to its gradient value.\n   *\n   * @doc {heading: 'Training', subheading: 'Optimizers'}\n   */\n  abstract applyGradients(variableGradients: NamedTensorMap|\n                          NamedTensor[]): void;\n\n  /**\n   * Dispose the variables (if any) owned by this optimizer instance.\n   */\n  dispose(): void {\n    if (this.iterations_ != null) {\n      dispose(this.iterations_);\n    }\n  }\n\n  async saveIterations(): Promise<NamedTensor> {\n    if (this.iterations_ == null) {\n      this.iterations_ = 0;\n    }\n    return {\n      name: 'iter',  // Named for Python compatibility.\n      // TODO(cais): Use 'int64' type when available.\n      tensor: scalar(this.iterations_, 'int32')\n    };\n  }\n\n  async getWeights(): Promise<NamedTensor[]> {\n    throw new Error('getWeights() is not implemented for this optimizer yet.');\n  }\n\n  async setWeights(weightValues: NamedTensor[]): Promise<void> {\n    throw new Error(\n        `setWeights() is not implemented for this optimizer class ` +\n        `${this.getClassName()}`);\n  }\n\n  /**\n   * Extract the first element of the weight values and set it\n   * as the iterations counter variable of this instance of optimizer.\n   *\n   * @param weightValues\n   * @returns Weight values with the first element consumed and excluded.\n   */\n  protected async extractIterations(weightValues: NamedTensor[]):\n      Promise<NamedTensor[]> {\n    this.iterations_ = (await weightValues[0].tensor.data())[0];\n    return weightValues.slice(1);\n  }\n}\n\nObject.defineProperty(Optimizer, Symbol.hasInstance, {\n  value: (instance: Optimizer) => {\n    return instance.minimize != null && instance.computeGradients != null &&\n        instance.applyGradients != null;\n  }\n});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {dispose, tidy} from '../globals';\nimport {add} from '../ops/add';\nimport {div} from '../ops/div';\nimport {mul} from '../ops/mul';\nimport {sqrt} from '../ops/ops';\nimport {square} from '../ops/square';\nimport {zerosLike} from '../ops/zeros_like';\nimport {ConfigDict, registerClass, Serializable, SerializableConstructor} from '../serialization';\nimport {NamedTensor, NamedVariableMap} from '../tensor_types';\n\nimport {Optimizer, OptimizerVariable} from './optimizer';\n\n/** @doclink Optimizer */\nexport class AdadeltaOptimizer extends Optimizer {\n  /** @nocollapse */\n  static className = 'Adadelta';  // Name matters for Python compatibility.\n  private accumulatedGrads: OptimizerVariable[] = [];\n  private accumulatedUpdates: OptimizerVariable[] = [];\n\n  constructor(\n      protected learningRate: number, protected rho: number,\n      protected epsilon: number = null) {\n    super();\n\n    if (epsilon == null) {\n      this.epsilon = ENGINE.backend.epsilon();\n    }\n  }\n\n  applyGradients(variableGradients: NamedVariableMap|NamedTensor[]) {\n    const variableNames = Array.isArray(variableGradients) ?\n        variableGradients.map(item => item.name) :\n        Object.keys(variableGradients);\n\n    variableNames.forEach((name, i) => {\n      const value = ENGINE.registeredVariables[name];\n      const trainable = false;\n      if (this.accumulatedGrads[i] == null) {\n        this.accumulatedGrads[i] = {\n          originalName: `${name}/accum_grad`,\n          variable: tidy(() => zerosLike(value).variable(trainable))\n        };\n      }\n      if (this.accumulatedUpdates[i] == null) {\n        this.accumulatedUpdates[i] = {\n          originalName: `${name}/accum_var`,\n          variable: tidy(() => zerosLike(value).variable(trainable))\n        };\n      }\n\n      const gradient = Array.isArray(variableGradients) ?\n          variableGradients[i].tensor :\n          variableGradients[name];\n      if (gradient == null) {\n        return;\n      }\n\n      const accumulatedGrad = this.accumulatedGrads[i].variable;\n      const accumulatedUpdate = this.accumulatedUpdates[i].variable;\n\n      tidy(() => {\n        const newAccumulatedGrad =\n            add(mul(accumulatedGrad, this.rho),\n                mul(square(gradient), 1 - this.rho));\n\n        const updates =\n            mul(div(sqrt(add(accumulatedUpdate, this.epsilon)),\n                    sqrt(add(accumulatedGrad, this.epsilon))),\n                gradient);\n\n        const newAccumulatedUpdate =\n            add(mul(accumulatedUpdate, this.rho),\n                mul(square(updates), 1 - this.rho));\n\n        accumulatedGrad.assign(newAccumulatedGrad);\n        accumulatedUpdate.assign(newAccumulatedUpdate);\n\n        const newValue = add(mul(updates, -this.learningRate), value);\n        value.assign(newValue);\n      });\n    });\n    this.incrementIterations();\n  }\n\n  dispose(): void {\n    if (this.accumulatedUpdates != null) {\n      dispose(this.accumulatedGrads.map(v => v.variable));\n      dispose(this.accumulatedUpdates.map(v => v.variable));\n    }\n  }\n\n  async getWeights(): Promise<NamedTensor[]> {\n    // Order matters for Python compatibility.\n    const variables: OptimizerVariable[] =\n        [...this.accumulatedGrads, ...this.accumulatedUpdates];\n    return [await this.saveIterations()].concat(\n        variables.map(v => ({name: v.originalName, tensor: v.variable})));\n  }\n\n  async setWeights(weightValues: NamedTensor[]): Promise<void> {\n    weightValues = await this.extractIterations(weightValues);\n    const variableCount = weightValues.length / 2;\n    const trainable = false;\n    this.accumulatedGrads =\n        weightValues.slice(0, variableCount).map(v => ({\n                                                   originalName: v.name,\n                                                   variable: v.tensor.variable(\n                                                       trainable)\n                                                 }));\n    this.accumulatedUpdates =\n        weightValues.slice(variableCount, variableCount * 2)\n            .map(v => ({\n                   originalName: v.name,\n                   variable: v.tensor.variable(trainable)\n                 }));\n  }\n\n  getConfig(): ConfigDict {\n    return {\n      'learningRate': this.learningRate,\n      'rho': this.rho,\n      'epsilon': this.epsilon\n    };\n  }\n\n  /** @nocollapse */\n  static fromConfig<T extends Serializable>(\n      cls: SerializableConstructor<T>, config: ConfigDict): T {\n    return new cls(config['learningRate'], config['rho'], config['epsilon']);\n  }\n}\nregisterClass(AdadeltaOptimizer);\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {dispose, tidy} from '../globals';\nimport {add} from '../ops/add';\nimport {div} from '../ops/div';\nimport {fill} from '../ops/fill';\nimport {mul} from '../ops/mul';\nimport {sqrt} from '../ops/sqrt';\nimport {square} from '../ops/square';\nimport {ConfigDict, registerClass, Serializable, SerializableConstructor} from '../serialization';\nimport {NamedTensor, NamedVariableMap} from '../tensor_types';\n\nimport {Optimizer, OptimizerVariable} from './optimizer';\n\n/** @doclink Optimizer */\nexport class AdagradOptimizer extends Optimizer {\n  /** @nocollapse */\n  static className = 'Adagrad';  // Note: Name matters for Python compatibility.\n\n  private accumulatedGrads: OptimizerVariable[] = [];\n\n  constructor(\n      protected learningRate: number, private initialAccumulatorValue = 0.1) {\n    super();\n  }\n\n  applyGradients(variableGradients: NamedVariableMap|NamedTensor[]) {\n    const variableNames = Array.isArray(variableGradients) ?\n        variableGradients.map(item => item.name) :\n        Object.keys(variableGradients);\n\n    variableNames.forEach((name, i) => {\n      const value = ENGINE.registeredVariables[name];\n      if (this.accumulatedGrads[i] == null) {\n        const trainable = false;\n        this.accumulatedGrads[i] = {\n          originalName: `${name}/accumulator`,\n          variable: tidy(\n              () => fill(value.shape, this.initialAccumulatorValue)\n                        .variable(trainable))\n        };\n      }\n\n      const gradient = Array.isArray(variableGradients) ?\n          variableGradients[i].tensor :\n          variableGradients[name];\n      if (gradient == null) {\n        return;\n      }\n\n      const accumulatedGrad = this.accumulatedGrads[i].variable;\n\n      tidy(() => {\n        const newAccumulatedGrad = add(accumulatedGrad, square(gradient));\n        accumulatedGrad.assign(newAccumulatedGrad);\n\n        const newValue = add(\n            mul(div(gradient,\n                    sqrt(add(newAccumulatedGrad, ENGINE.backend.epsilon()))),\n                -this.learningRate),\n            value);\n        value.assign(newValue);\n      });\n    });\n    this.incrementIterations();\n  }\n\n  dispose(): void {\n    if (this.accumulatedGrads != null) {\n      dispose(this.accumulatedGrads.map(v => v.variable));\n    }\n  }\n\n  async getWeights(): Promise<NamedTensor[]> {\n    // Order matters for Python compatibility.\n    return [await this.saveIterations()].concat(this.accumulatedGrads.map(\n        v => ({name: v.originalName, tensor: v.variable})));\n  }\n\n  async setWeights(weightValues: NamedTensor[]): Promise<void> {\n    weightValues = await this.extractIterations(weightValues);\n    const trainable = false;\n    this.accumulatedGrads = weightValues.map(\n        v => ({originalName: v.name, variable: v.tensor.variable(trainable)}));\n  }\n\n  getConfig(): ConfigDict {\n    return {\n      'learningRate': this.learningRate,\n      'initialAccumulatorValue': this.initialAccumulatorValue,\n    };\n  }\n\n  /** @nocollapse */\n  static fromConfig<T extends Serializable>(\n      cls: SerializableConstructor<T>, config: ConfigDict): T {\n    return new cls(config['learningRate'], config['initialAccumulatorValue']);\n  }\n}\nregisterClass(AdagradOptimizer);\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {dispose, tidy} from '../globals';\nimport {add} from '../ops/add';\nimport {div} from '../ops/div';\nimport {mul} from '../ops/mul';\nimport {pow} from '../ops/pow';\nimport {scalar} from '../ops/scalar';\nimport {sqrt} from '../ops/sqrt';\nimport {square} from '../ops/square';\nimport {sub} from '../ops/sub';\nimport {zerosLike} from '../ops/zeros_like';\nimport {ConfigDict, registerClass, Serializable, SerializableConstructor} from '../serialization';\nimport {Variable} from '../tensor';\nimport {NamedTensor, NamedVariableMap} from '../tensor_types';\n\nimport {Optimizer, OptimizerVariable} from './optimizer';\n\nexport class AdamOptimizer extends Optimizer {\n  /** @nocollapse */\n  static className = 'Adam';  // Note: Name matters for Python compatibility.\n  private accBeta1: Variable;\n  private accBeta2: Variable;\n\n  private accumulatedFirstMoment: OptimizerVariable[] = [];\n  private accumulatedSecondMoment: OptimizerVariable[] = [];\n\n  constructor(\n      protected learningRate: number, protected beta1: number,\n      protected beta2: number, protected epsilon: number = null) {\n    super();\n    tidy(() => {\n      // accB* will be updated by batch.\n      this.accBeta1 = scalar(beta1).variable();\n      this.accBeta2 = scalar(beta2).variable();\n    });\n\n    if (epsilon == null) {\n      this.epsilon = ENGINE.backend.epsilon();\n    }\n  }\n\n  applyGradients(variableGradients: NamedVariableMap|NamedTensor[]) {\n    const varNames = Array.isArray(variableGradients) ?\n        variableGradients.map(v => v.name) :\n        Object.keys(variableGradients);\n    tidy(() => {\n      const oneMinusAccBeta1 = sub(1, this.accBeta1);\n      const oneMinusAccBeta2 = sub(1, this.accBeta2);\n\n      varNames.forEach((name, i) => {\n        const value = ENGINE.registeredVariables[name];\n        const trainable = false;\n        if (this.accumulatedFirstMoment[i] == null) {\n          this.accumulatedFirstMoment[i] = {\n            originalName: `${name}/m`,\n            variable: tidy(() => zerosLike(value).variable(trainable))\n          };\n        }\n        if (this.accumulatedSecondMoment[i] == null) {\n          this.accumulatedSecondMoment[i] = {\n            originalName: `${name}/v`,\n            variable: tidy(() => zerosLike(value).variable(trainable))\n          };\n        }\n\n        const gradient = Array.isArray(variableGradients) ?\n            variableGradients[i].tensor :\n            variableGradients[name];\n        if (gradient == null) {\n          return;\n        }\n\n        const firstMoment = this.accumulatedFirstMoment[i].variable;\n        const secondMoment = this.accumulatedSecondMoment[i].variable;\n\n        const newFirstMoment =\n            add(mul(firstMoment, this.beta1), mul(gradient, 1 - this.beta1));\n        const newSecondMoment =\n            add(mul(secondMoment, this.beta2),\n                mul(square(gradient), 1 - this.beta2));\n\n        const biasCorrectedFirstMoment = div(newFirstMoment, oneMinusAccBeta1);\n        const biasCorrectedSecondMoment =\n            div(newSecondMoment, oneMinusAccBeta2);\n\n        firstMoment.assign(newFirstMoment);\n        secondMoment.assign(newSecondMoment);\n\n        const newValue =\n            add(mul(div(biasCorrectedFirstMoment,\n                        add(sqrt(biasCorrectedSecondMoment), this.epsilon)),\n                    -this.learningRate),\n                value);\n        value.assign(newValue);\n      });\n\n      this.accBeta1.assign(mul(this.accBeta1, this.beta1));\n      this.accBeta2.assign(mul(this.accBeta2, this.beta2));\n    });\n    this.incrementIterations();\n  }\n\n  dispose(): void {\n    this.accBeta1.dispose();\n    this.accBeta2.dispose();\n\n    if (this.accumulatedFirstMoment != null) {\n      dispose(this.accumulatedFirstMoment.map(v => v.variable));\n    }\n    if (this.accumulatedSecondMoment != null) {\n      dispose(this.accumulatedSecondMoment.map(v => v.variable));\n    }\n  }\n\n  async getWeights(): Promise<NamedTensor[]> {\n    // Order matters for Python compatibility.\n    const variables: OptimizerVariable[] =\n        [...this.accumulatedFirstMoment, ...this.accumulatedSecondMoment];\n    return [await this.saveIterations()].concat(\n        variables.map(v => ({name: v.originalName, tensor: v.variable})));\n  }\n\n  async setWeights(weightValues: NamedTensor[]): Promise<void> {\n    weightValues = await this.extractIterations(weightValues);\n    tidy(() => {\n      this.accBeta1.assign(pow(this.beta1, this.iterations_ + 1));\n      this.accBeta2.assign(pow(this.beta2, this.iterations_ + 1));\n    });\n\n    const variableCount = weightValues.length / 2;\n    const trainable = false;\n    this.accumulatedFirstMoment =\n        weightValues.slice(0, variableCount).map(v => ({\n                                                   originalName: v.name,\n                                                   variable: v.tensor.variable(\n                                                       trainable)\n                                                 }));\n    this.accumulatedSecondMoment =\n        weightValues.slice(variableCount, variableCount * 2)\n            .map(v => ({\n                   originalName: v.name,\n                   variable: v.tensor.variable(trainable)\n                 }));\n  }\n\n  getConfig(): ConfigDict {\n    return {\n      'learningRate': this.learningRate,\n      'beta1': this.beta1,\n      'beta2': this.beta2,\n      'epsilon': this.epsilon,\n    };\n  }\n\n  /** @nocollapse */\n  static fromConfig<T extends Serializable>(\n      cls: SerializableConstructor<T>, config: ConfigDict): T {\n    return new cls(\n        config['learningRate'], config['beta1'], config['beta2'],\n        config['epsilon']);\n  }\n}\nregisterClass(AdamOptimizer);\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {dispose, tidy} from '../globals';\nimport {abs} from '../ops/abs';\nimport {add} from '../ops/add';\nimport {div} from '../ops/div';\nimport {maximum} from '../ops/maximum';\nimport {mul} from '../ops/mul';\nimport {scalar} from '../ops/scalar';\nimport {sub} from '../ops/sub';\nimport {zerosLike} from '../ops/zeros_like';\nimport {ConfigDict, registerClass, Serializable, SerializableConstructor} from '../serialization';\nimport {Variable} from '../tensor';\nimport {NamedTensor, NamedVariableMap} from '../tensor_types';\n\nimport {Optimizer, OptimizerVariable} from './optimizer';\n\nexport class AdamaxOptimizer extends Optimizer {\n  /** @nocollapse */\n  static className = 'Adamax';  // Note: Name matters for Python compatbility.\n  private accBeta1: Variable;\n  private iteration: Variable;\n\n  private accumulatedFirstMoment: OptimizerVariable[] = [];\n  private accumulatedWeightedInfNorm: OptimizerVariable[] = [];\n\n  constructor(\n      protected learningRate: number, protected beta1: number,\n      protected beta2: number, protected epsilon: number = null,\n      protected decay = 0.0) {\n    super();\n\n    tidy(() => {\n      this.iteration = scalar(0).variable();\n      this.accBeta1 = scalar(beta1).variable();\n    });\n\n    if (epsilon == null) {\n      this.epsilon = ENGINE.backend.epsilon();\n    }\n  }\n\n  applyGradients(variableGradients: NamedVariableMap|NamedTensor[]) {\n    const variableNames = Array.isArray(variableGradients) ?\n        variableGradients.map(item => item.name) :\n        Object.keys(variableGradients);\n\n    tidy(() => {\n      const oneMinusAccBeta1 = sub(1, this.accBeta1);\n      const lr =\n          div(-this.learningRate, add(mul(this.iteration, this.decay), 1));\n\n      variableNames.forEach((name, i) => {\n        const value = ENGINE.registeredVariables[name];\n        const trainable = false;\n        if (this.accumulatedFirstMoment[i] == null) {\n          this.accumulatedFirstMoment[i] = {\n            originalName: `${name}/m`,\n            variable: zerosLike(value).variable(trainable)\n          };\n        }\n        if (this.accumulatedWeightedInfNorm[i] == null) {\n          this.accumulatedWeightedInfNorm[i] = {\n            originalName: `${name}/v`,\n            variable: zerosLike(value).variable(trainable)\n          };\n        }\n\n        const gradient = Array.isArray(variableGradients) ?\n            variableGradients[i].tensor :\n            variableGradients[name];\n        if (gradient == null) {\n          return;\n        }\n\n        const firstMoment = this.accumulatedFirstMoment[i].variable;\n        const weightedInfNorm = this.accumulatedWeightedInfNorm[i].variable;\n\n        const newFirstMoment =\n            add(mul(firstMoment, this.beta1), mul(gradient, 1 - this.beta1));\n\n        const ut0 = mul(weightedInfNorm, this.beta2);\n        const ut1 = abs(gradient);\n\n        const newWeightedInfNorm = maximum(ut0, ut1);\n\n        firstMoment.assign(newFirstMoment);\n        weightedInfNorm.assign(newWeightedInfNorm);\n\n        const newValue =\n            add(mul(div(lr, oneMinusAccBeta1),\n                    div(newFirstMoment, add(newWeightedInfNorm, this.epsilon))),\n                value);\n\n        value.assign(newValue);\n      });\n\n      this.iteration.assign(add(this.iteration, 1));\n      this.accBeta1.assign(mul(this.accBeta1, this.beta1));\n    });\n    this.incrementIterations();\n  }\n\n  dispose(): void {\n    this.accBeta1.dispose();\n    this.iteration.dispose();\n\n    if (this.accumulatedFirstMoment != null) {\n      dispose(this.accumulatedFirstMoment.map(v => v.variable));\n    }\n    if (this.accumulatedWeightedInfNorm != null) {\n      dispose(this.accumulatedWeightedInfNorm.map(v => v.variable));\n    }\n  }\n\n  async getWeights(): Promise<NamedTensor[]> {\n    throw new Error('getWeights() is not implemented for Adamax yet.');\n  }\n\n  async setWeights(weightValues: NamedTensor[]): Promise<void> {\n    throw new Error('setWeights() is not implemented for Adamax yet.');\n  }\n\n  getConfig(): ConfigDict {\n    return {\n      'learningRate': this.learningRate,\n      'beta1': this.beta1,\n      'beta2': this.beta2,\n      'epsilon': this.epsilon,\n      'decay': this.decay\n    };\n  }\n\n  /** @nocollapse */\n  static fromConfig<T extends Serializable>(\n      cls: SerializableConstructor<T>, config: ConfigDict): T {\n    return new cls(\n        config['learningRate'], config['beta1'], config['beta2'],\n        config['epsilon'], config['decay']);\n  }\n}\nregisterClass(AdamaxOptimizer);\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {keep, tidy} from '../globals';\nimport {add} from '../ops/add';\nimport {mul} from '../ops/mul';\nimport {scalar} from '../ops/scalar';\nimport {ConfigDict, registerClass, Serializable, SerializableConstructor} from '../serialization';\nimport {Scalar} from '../tensor';\nimport {NamedTensor, NamedTensorMap} from '../tensor_types';\n\nimport {Optimizer} from './optimizer';\n\n/** @doclink Optimizer */\nexport class SGDOptimizer extends Optimizer {\n  /** @nocollapse */\n  static className = 'SGD';  // Note: Name matters for Python compatibility.\n  protected c: Scalar;\n\n  constructor(protected learningRate: number) {\n    super();\n    this.setLearningRate(learningRate);\n  }\n\n  applyGradients(variableGradients: NamedTensorMap|NamedTensor[]) {\n    const varNames = Array.isArray(variableGradients) ?\n        variableGradients.map(v => v.name) :\n        Object.keys(variableGradients);\n    varNames.forEach((name, i) => {\n      const gradient = Array.isArray(variableGradients) ?\n          variableGradients[i].tensor :\n          variableGradients[name];\n      if (gradient == null) {\n        return;\n      }\n      const value = ENGINE.registeredVariables[name];\n      tidy(() => {\n        const newValue = add(mul(this.c, gradient), value);\n        value.assign(newValue);\n      });\n    });\n    this.incrementIterations();\n  }\n\n  /**\n   * Sets the learning rate of the optimizer.\n   */\n  setLearningRate(learningRate: number) {\n    this.learningRate = learningRate;\n    if (this.c != null) {\n      this.c.dispose();\n    }\n    this.c = keep(scalar(-learningRate));\n  }\n\n  dispose() {\n    this.c.dispose();\n  }\n\n  async getWeights(): Promise<NamedTensor[]> {\n    return [await this.saveIterations()];\n  }\n\n  async setWeights(weightValues: NamedTensor[]): Promise<void> {\n    weightValues = await this.extractIterations(weightValues);\n    if (weightValues.length !== 0) {\n      throw new Error('SGD optimizer does not have settable weights.');\n    }\n  }\n\n  getConfig(): ConfigDict {\n    return {'learningRate': this.learningRate};\n  }\n\n  /** @nocollapse */\n  static fromConfig<T extends Serializable>(\n      cls: SerializableConstructor<T>, config: ConfigDict): T {\n    return new cls(config['learningRate']);\n  }\n}\nregisterClass(SGDOptimizer);\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {dispose, tidy} from '../globals';\nimport {add} from '../ops/add';\nimport {mul} from '../ops/mul';\nimport {scalar} from '../ops/scalar';\nimport {zerosLike} from '../ops/zeros_like';\nimport {ConfigDict, registerClass, Serializable, SerializableConstructor} from '../serialization';\nimport {Scalar, Tensor} from '../tensor';\nimport {NamedTensor, NamedVariableMap} from '../tensor_types';\n\nimport {OptimizerVariable} from './optimizer';\nimport {SGDOptimizer} from './sgd_optimizer';\n\n/** @doclink Optimizer */\nexport class MomentumOptimizer extends SGDOptimizer {\n  /** @nocollapse */\n  static className = 'Momentum';  // Name matters for Python compatibility.\n  private m: Scalar;\n  private accumulations: OptimizerVariable[] = [];\n\n  constructor(\n      protected learningRate: number, private momentum: number,\n      private useNesterov = false) {\n    super(learningRate);\n    this.m = scalar(this.momentum);\n  }\n\n  applyGradients(variableGradients: NamedVariableMap|NamedTensor[]) {\n    const variableNames = Array.isArray(variableGradients) ?\n        variableGradients.map(item => item.name) :\n        Object.keys(variableGradients);\n\n    variableNames.forEach((name, i) => {\n      const value = ENGINE.registeredVariables[name];\n      if (this.accumulations[i] == null) {\n        const trainable = false;\n        this.accumulations[i] = {\n          originalName: `${name}/momentum`,\n          variable: tidy(() => zerosLike(value).variable(trainable))\n        };\n      }\n\n      const accumulation = this.accumulations[i].variable;\n      const gradient = Array.isArray(variableGradients) ?\n          variableGradients[i].tensor :\n          variableGradients[name];\n      if (gradient == null) {\n        return;\n      }\n\n      tidy(() => {\n        let newValue: Tensor;\n        const newAccumulation = add(mul(this.m, accumulation), gradient);\n        if (this.useNesterov) {\n          newValue = add(\n              mul(this.c, add(gradient, mul(newAccumulation, this.m))), value);\n        } else {\n          newValue = add(mul(this.c, newAccumulation), value);\n        }\n        accumulation.assign(newAccumulation);\n        value.assign(newValue);\n      });\n    });\n    this.incrementIterations();\n  }\n\n  dispose(): void {\n    this.m.dispose();\n    if (this.accumulations != null) {\n      dispose(this.accumulations.map(v => v.variable));\n    }\n  }\n\n  /**\n   * Sets the momentum of the optimizer.\n   *\n   * @param momentum\n   */\n  setMomentum(momentum: number) {\n    this.momentum = momentum;\n  }\n\n  async getWeights(): Promise<NamedTensor[]> {\n    // Order matters for Python compatibility.\n    return [await this.saveIterations()].concat(this.accumulations.map(\n        v => ({name: v.originalName, tensor: v.variable})));\n  }\n\n  async setWeights(weightValues: NamedTensor[]): Promise<void> {\n    weightValues = await this.extractIterations(weightValues);\n    const trainable = false;\n    this.accumulations = weightValues.map(\n        v => ({originalName: v.name, variable: v.tensor.variable(trainable)}));\n  }\n\n  getConfig(): ConfigDict {\n    return {\n      'learningRate': this.learningRate,\n      'momentum': this.momentum,\n      'useNesterov': this.useNesterov\n    };\n  }\n\n  /** @nocollapse */\n  static fromConfig<T extends Serializable>(\n      cls: SerializableConstructor<T>, config: ConfigDict): T {\n    return new cls(\n        config['learningRate'], config['momentum'], config['useNesterov']);\n  }\n}\nregisterClass(MomentumOptimizer);\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {dispose, tidy} from '../globals';\nimport {add} from '../ops/add';\nimport {div} from '../ops/div';\nimport {mul} from '../ops/mul';\nimport {sqrt} from '../ops/sqrt';\nimport {square} from '../ops/square';\nimport {sub} from '../ops/sub';\nimport {zerosLike} from '../ops/zeros_like';\nimport {ConfigDict, registerClass, Serializable, SerializableConstructor} from '../serialization';\nimport {NamedTensor, NamedTensorMap} from '../tensor_types';\n\nimport {Optimizer, OptimizerVariable} from './optimizer';\n\n/** @doclink Optimizer */\nexport class RMSPropOptimizer extends Optimizer {\n  /** @nocollapse */\n  static className = 'RMSProp';  // Note: Name matters for Python compatibility.\n  private centered: boolean;\n\n  private accumulatedMeanSquares: OptimizerVariable[] = [];\n  private accumulatedMoments: OptimizerVariable[] = [];\n  private accumulatedMeanGrads: OptimizerVariable[] = [];\n\n  constructor(\n      protected learningRate: number, protected decay = 0.9,\n      protected momentum = 0.0, protected epsilon: number = null,\n      centered = false) {\n    super();\n\n    this.centered = centered;\n\n    if (epsilon == null) {\n      this.epsilon = ENGINE.backend.epsilon();\n    }\n    if (learningRate == null) {\n      throw new Error(`learningRate for RMSPropOptimizer must be defined.`);\n    }\n  }\n\n  applyGradients(variableGradients: NamedTensorMap|NamedTensor[]) {\n    const variableNames = Array.isArray(variableGradients) ?\n        variableGradients.map(item => item.name) :\n        Object.keys(variableGradients);\n\n    variableNames.forEach((name, i) => {\n      const value = ENGINE.registeredVariables[name];\n      const trainable = false;\n      if (this.accumulatedMeanSquares[i] == null) {\n        this.accumulatedMeanSquares[i] = {\n          originalName: `${name}/rms`,\n          variable: tidy(() => zerosLike(value).variable(trainable))\n        };\n      }\n      if (this.accumulatedMoments[i] == null) {\n        this.accumulatedMoments[i] = {\n          originalName: `${name}/momentum`,\n          variable: tidy(() => zerosLike(value).variable(trainable))\n        };\n      }\n      if (this.accumulatedMeanGrads[i] == null && this.centered) {\n        this.accumulatedMeanGrads[i] = {\n          originalName: `${name}/mg`,\n          variable: tidy(() => zerosLike(value).variable(trainable))\n        };\n      }\n\n      const gradient = Array.isArray(variableGradients) ?\n          variableGradients[i].tensor :\n          variableGradients[name];\n      if (gradient == null) {\n        return;\n      }\n\n      const accumulatedMeanSquare = this.accumulatedMeanSquares[i].variable;\n      const accumulatedMoments = this.accumulatedMoments[i].variable;\n      tidy(() => {\n        const newAccumulatedMeanSquare =\n            add(mul(accumulatedMeanSquare, this.decay),\n                mul(square(gradient), 1 - this.decay));\n\n        if (this.centered) {\n          const accumulatedMeanGrad = this.accumulatedMeanGrads[i].variable;\n          // Centered gradient\n          const newAccumulatedMeanGrad =\n              add(mul(accumulatedMeanGrad, this.decay),\n                  mul(gradient, 1 - this.decay));\n\n          const gradContribution =\n              div(mul(gradient, this.learningRate),\n                  sqrt(\n                      sub(newAccumulatedMeanSquare,\n                          add(square(newAccumulatedMeanGrad), this.epsilon))));\n          const newAccumulatedMoments =\n              add(mul(accumulatedMoments, this.momentum), gradContribution);\n\n          accumulatedMeanSquare.assign(newAccumulatedMeanSquare);\n          accumulatedMeanGrad.assign(newAccumulatedMeanGrad);\n          accumulatedMoments.assign(newAccumulatedMoments);\n\n          const newValue = sub(value, newAccumulatedMoments);\n          value.assign(newValue);\n        } else {\n          // Plain gradient\n          const newAccumulatedMeanSquare =\n              add(mul(accumulatedMeanSquare, this.decay),\n                  mul(square(gradient), 1 - this.decay));\n\n          const newAccumulatedMoments =\n              add(mul(accumulatedMoments, this.momentum),\n                  div(mul(gradient, this.learningRate),\n                      sqrt(add(newAccumulatedMeanSquare, this.epsilon))));\n\n          accumulatedMeanSquare.assign(newAccumulatedMeanSquare);\n          accumulatedMoments.assign(newAccumulatedMoments);\n\n          const newValue = sub(value, newAccumulatedMoments);\n          value.assign(newValue);\n        }\n      });\n    });\n    this.incrementIterations();\n  }\n\n  dispose(): void {\n    if (this.accumulatedMeanSquares != null) {\n      dispose(this.accumulatedMeanSquares.map(v => v.variable));\n    }\n    if (this.accumulatedMeanGrads != null && this.centered) {\n      dispose(this.accumulatedMeanGrads.map(v => v.variable));\n    }\n    if (this.accumulatedMoments != null) {\n      dispose(this.accumulatedMoments.map(v => v.variable));\n    }\n  }\n\n  async getWeights(): Promise<NamedTensor[]> {\n    // Order matters for Python compatibility.\n    const variables: OptimizerVariable[] =\n        [...this.accumulatedMeanSquares, ...this.accumulatedMoments];\n    if (this.centered) {\n      variables.push(...this.accumulatedMeanGrads);\n    }\n    return [await this.saveIterations()].concat(\n        variables.map(v => ({name: v.originalName, tensor: v.variable})));\n  }\n\n  async setWeights(weightValues: NamedTensor[]): Promise<void> {\n    weightValues = await this.extractIterations(weightValues);\n    const variableCount =\n        this.centered ? weightValues.length / 3 : weightValues.length / 2;\n    const trainable = false;\n    this.accumulatedMeanSquares =\n        weightValues.slice(0, variableCount).map(v => ({\n                                                   originalName: v.name,\n                                                   variable: v.tensor.variable(\n                                                       trainable)\n                                                 }));\n    this.accumulatedMoments =\n        weightValues.slice(variableCount, variableCount * 2)\n            .map(v => ({\n                   originalName: v.name,\n                   variable: v.tensor.variable(trainable)\n                 }));\n    if (this.centered) {\n      this.accumulatedMeanGrads =\n          weightValues.slice(variableCount * 2, variableCount * 3)\n              .map(v => ({\n                     originalName: v.name,\n                     variable: v.tensor.variable(trainable)\n                   }));\n    }\n  }\n\n  getConfig(): ConfigDict {\n    return {\n      'learningRate': this.learningRate,\n      'decay': this.decay,\n      'momentum': this.momentum,\n      'epsilon': this.epsilon,\n      'centered': this.centered\n    };\n  }\n\n  /** @nocollapse */\n  static fromConfig<T extends Serializable>(\n      cls: SerializableConstructor<T>, config: ConfigDict): T {\n    return new cls(\n        config['learningRate'], config['decay'], config['momentum'],\n        config['epsilon'], config['centered']);\n  }\n}\nregisterClass(RMSPropOptimizer);\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AdadeltaOptimizer} from './adadelta_optimizer';\nimport {AdagradOptimizer} from './adagrad_optimizer';\nimport {AdamOptimizer} from './adam_optimizer';\nimport {AdamaxOptimizer} from './adamax_optimizer';\nimport {MomentumOptimizer} from './momentum_optimizer';\nimport {RMSPropOptimizer} from './rmsprop_optimizer';\nimport {SGDOptimizer} from './sgd_optimizer';\n\nexport class OptimizerConstructors {\n  /**\n   * Constructs a `tf.SGDOptimizer` that uses stochastic gradient descent.\n   *\n   * ```js\n   * // Fit a quadratic function by learning the coefficients a, b, c.\n   * const xs = tf.tensor1d([0, 1, 2, 3]);\n   * const ys = tf.tensor1d([1.1, 5.9, 16.8, 33.9]);\n   *\n   * const a = tf.scalar(Math.random()).variable();\n   * const b = tf.scalar(Math.random()).variable();\n   * const c = tf.scalar(Math.random()).variable();\n   *\n   * // y = a * x^2 + b * x + c.\n   * const f = x => a.mul(x.square()).add(b.mul(x)).add(c);\n   * const loss = (pred, label) => pred.sub(label).square().mean();\n   *\n   * const learningRate = 0.01;\n   * const optimizer = tf.train.sgd(learningRate);\n   *\n   * // Train the model.\n   * for (let i = 0; i < 10; i++) {\n   *   optimizer.minimize(() => loss(f(xs), ys));\n   * }\n   *\n   * // Make predictions.\n   * console.log(\n   *     `a: ${a.dataSync()}, b: ${b.dataSync()}, c: ${c.dataSync()}`);\n   * const preds = f(xs).dataSync();\n   * preds.forEach((pred, i) => {\n   *   console.log(`x: ${i}, pred: ${pred}`);\n   * });\n   * ```\n   *\n   * @param learningRate The learning rate to use for the SGD algorithm.\n   *\n   * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n   */\n  static sgd(learningRate: number): SGDOptimizer {\n    return new SGDOptimizer(learningRate);\n  }\n\n  /**\n   * Constructs a `tf.MomentumOptimizer` that uses momentum gradient\n   * descent.\n   *\n   * See\n   * [http://proceedings.mlr.press/v28/sutskever13.pdf](\n   * http://proceedings.mlr.press/v28/sutskever13.pdf)\n   *\n   * @param learningRate The learning rate to use for the Momentum gradient\n   * descent algorithm.\n   * @param momentum The momentum to use for the momentum gradient descent\n   * algorithm.\n   *\n   * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n   */\n  static momentum(learningRate: number, momentum: number, useNesterov = false):\n      MomentumOptimizer {\n    return new MomentumOptimizer(learningRate, momentum, useNesterov);\n  }\n\n  /**\n   * Constructs a `tf.RMSPropOptimizer` that uses RMSProp gradient\n   * descent. This implementation uses plain momentum and is not centered\n   * version of RMSProp.\n   *\n   * See\n   * [http://www.cs.toronto.edu/~tijmen/csc321/slides/lecture_slides_lec6.pdf](\n   * http://www.cs.toronto.edu/~tijmen/csc321/slides/lecture_slides_lec6.pdf)\n   *\n   * @param learningRate The learning rate to use for the RMSProp gradient\n   * descent algorithm.\n   * @param decay The discounting factor for the history/coming gradient.\n   * @param momentum The momentum to use for the RMSProp gradient descent\n   * algorithm.\n   * @param epsilon Small value to avoid zero denominator.\n   * @param centered If true, gradients are normalized by the estimated\n   * variance of the gradient.\n   *\n   * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n   */\n  static rmsprop(\n      learningRate: number, decay = .9, momentum = 0.0, epsilon: number = null,\n      centered = false): RMSPropOptimizer {\n    return new RMSPropOptimizer(\n        learningRate, decay, momentum, epsilon, centered);\n  }\n\n  /**\n   * Constructs a `tf.AdamOptimizer` that uses the Adam algorithm.\n   * See [https://arxiv.org/abs/1412.6980](https://arxiv.org/abs/1412.6980)\n   *\n   * @param learningRate The learning rate to use for the Adam gradient\n   * descent algorithm.\n   * @param beta1 The exponential decay rate for the 1st moment estimates.\n   * @param beta2 The exponential decay rate for the 2nd moment estimates.\n   * @param epsilon A small constant for numerical stability.\n   *\n   * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n   */\n  static adam(\n      learningRate = 0.001, beta1 = 0.9, beta2 = 0.999,\n      epsilon: number = null): AdamOptimizer {\n    return new AdamOptimizer(learningRate, beta1, beta2, epsilon);\n  }\n\n  /**\n   * Constructs a `tf.AdadeltaOptimizer` that uses the Adadelta algorithm.\n   * See [https://arxiv.org/abs/1212.5701](https://arxiv.org/abs/1212.5701)\n   *\n   * @param learningRate The learning rate to use for the Adadelta gradient\n   * descent algorithm.\n   * @param rho The learning rate decay over each update.\n   * @param epsilon A constant epsilon used to better condition the grad\n   * update.\n   *\n   * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n   */\n  static adadelta(learningRate = .001, rho = .95, epsilon: number = null):\n      AdadeltaOptimizer {\n    return new AdadeltaOptimizer(learningRate, rho, epsilon);\n  }\n\n  /**\n   * Constructs a `tf.AdamaxOptimizer` that uses the Adamax algorithm.\n   * See [https://arxiv.org/abs/1412.6980](https://arxiv.org/abs/1412.6980)\n   *\n   * @param learningRate The learning rate to use for the Adamax gradient\n   * descent algorithm.\n   * @param beta1 The exponential decay rate for the 1st moment estimates.\n   * @param beta2 The exponential decay rate for the 2nd moment estimates.\n   * @param epsilon A small constant for numerical stability.\n   * @param decay The learning rate decay over each update.\n   *\n   * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n   */\n  static adamax(\n      learningRate = 0.002, beta1 = 0.9, beta2 = 0.999, epsilon: number = null,\n      decay = 0.0): AdamaxOptimizer {\n    return new AdamaxOptimizer(learningRate, beta1, beta2, epsilon, decay);\n  }\n\n  /**\n   * Constructs a `tf.AdagradOptimizer` that uses the Adagrad algorithm.\n   * See\n   * [http://www.jmlr.org/papers/volume12/duchi11a/duchi11a.pdf](\n   * http://www.jmlr.org/papers/volume12/duchi11a/duchi11a.pdf)\n   * or\n   * [http://ruder.io/optimizing-gradient-descent/index.html#adagrad](\n   * http://ruder.io/optimizing-gradient-descent/index.html#adagrad)\n   *\n   * @param learningRate The learning rate to use for the Adagrad gradient\n   * descent algorithm.\n   * @param initialAccumulatorValue Starting value for the accumulators, must be\n   * positive.\n   *\n   * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n   */\n  static adagrad(learningRate: number, initialAccumulatorValue = 0.1):\n      AdagradOptimizer {\n    return new AdagradOptimizer(learningRate, initialAccumulatorValue);\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// So typings can propagate.\nimport {AdadeltaOptimizer} from './optimizers/adadelta_optimizer';\nimport {AdagradOptimizer} from './optimizers/adagrad_optimizer';\nimport {AdamOptimizer} from './optimizers/adam_optimizer';\nimport {AdamaxOptimizer} from './optimizers/adamax_optimizer';\nimport {MomentumOptimizer} from './optimizers/momentum_optimizer';\nimport {OptimizerConstructors} from './optimizers/optimizer_constructors';\nimport {RMSPropOptimizer} from './optimizers/rmsprop_optimizer';\nimport {SGDOptimizer} from './optimizers/sgd_optimizer';\n\n// tslint:disable-next-line:no-unused-expression\n[MomentumOptimizer, SGDOptimizer, AdadeltaOptimizer, AdagradOptimizer,\n RMSPropOptimizer, AdamaxOptimizer, AdamOptimizer];\n\nexport const train = {\n  sgd: OptimizerConstructors.sgd,\n  momentum: OptimizerConstructors.momentum,\n  adadelta: OptimizerConstructors.adadelta,\n  adagrad: OptimizerConstructors.adagrad,\n  rmsprop: OptimizerConstructors.rmsprop,\n  adamax: OptimizerConstructors.adamax,\n  adam: OptimizerConstructors.adam\n};\n","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as util from '../util';\n\nexport function assertParamsConsistent(shapes: number[][], axis: number) {\n  const rank = shapes[0].length;\n  shapes.forEach((shape, i) => {\n    util.assert(\n        shape.length === rank,\n        () =>\n            `Error in concat${rank}D: rank of tensors[${i}] must be the same ` +\n            `as the rank of the rest (${rank})`);\n  });\n\n  util.assert(\n      axis >= 0 && axis < rank,\n      () => `Error in concat${rank}D: axis must be between 0 and ${rank - 1}.`);\n\n  const firstShape = shapes[0];\n  shapes.forEach((shape, i) => {\n    for (let r = 0; r < rank; r++) {\n      util.assert(\n          (r === axis) || (shape[r] === firstShape[r]),\n          () => `Error in concat${rank}D: Shape of tensors[${i}] (${shape}) ` +\n              `does not match the shape of the rest (${firstShape}) ` +\n              `along the non-concatenated axis ${i}.`);\n    }\n  });\n}\n\nexport function computeOutShape(shapes: number[][], axis: number): number[] {\n  const outputShape = shapes[0].slice();\n  for (let i = 1; i < shapes.length; i++) {\n    outputShape[axis] += shapes[i][axis];\n  }\n  return outputShape;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Inputs of size above this threshold will be parallelized by calling multiple\n * shader programs.\n */\nimport {nearestDivisor} from '../util';\n\nexport const PARALLELIZE_THRESHOLD = 30;\n\nexport interface ReduceInfo {\n  windowSize: number;\n  batchSize: number;\n  inSize: number;\n  outSize: number;\n}\n\nexport function computeOptimalWindowSize(inSize: number): number {\n  if (inSize <= PARALLELIZE_THRESHOLD) {\n    return inSize;\n  }\n  return nearestDivisor(inSize, Math.floor(Math.sqrt(inSize)));\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// Returns the image center in pixels.\nexport function getImageCenter(\n    center: number|[number, number], imageHeight: number,\n    imageWidth: number): [number, number] {\n  const centerX =\n      imageWidth * (typeof center === 'number' ? center : center[0]);\n  const centerY =\n      imageHeight * (typeof center === 'number' ? center : center[1]);\n  return [centerX, centerY];\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Gets the new shape of the input Tensor after it's been reshaped\n * to:\n * [blockShape[0], ..., blockShape[M-1], batch / prod(blockShape),\n * inputShape[1], ..., inputShape[N-1]]\n *\n * See step 1: https://www.tensorflow.org/api_docs/python/tf/batch_to_space_nd\n */\nexport function getReshaped(\n    inputShape: number[], blockShape: number[], prod: number,\n    batchToSpace = true): number[] {\n  let reshaped: number[] = [];\n  if (batchToSpace) {\n    reshaped = reshaped.concat(blockShape.slice(0));\n    reshaped.push(inputShape[0] / prod);\n    reshaped = reshaped.concat(inputShape.slice(1));\n  } else {\n    reshaped = reshaped.concat(inputShape[0]);\n    const spatialLength = blockShape.length;\n    for (let i = 0; i < spatialLength; ++i) {\n      reshaped =\n          reshaped.concat([inputShape[i + 1] / blockShape[i], blockShape[i]]);\n    }\n    reshaped = reshaped.concat(inputShape.slice(spatialLength + 1));\n  }\n  return reshaped;\n}\n\n/**\n * Gets the permutation that will transpose the dimensions of the\n * reshaped tensor to shape:\n *\n * [batch / prod(block_shape),inputShape[1], blockShape[0], ...,\n * inputShape[M], blockShape[M-1],inputShape[M+1], ..., inputShape[N-1]]\n *\n * see step 2: https://www.tensorflow.org/api_docs/python/tf/batch_to_space_nd\n */\nexport function getPermuted(\n    reshapedRank: number, blockShapeRank: number,\n    batchToSpace = true): number[] {\n  const permuted = [];\n  if (batchToSpace) {\n    permuted.push(blockShapeRank);\n    for (let i = blockShapeRank + 1; i < reshapedRank; ++i) {\n      if (i <= 2 * blockShapeRank) {\n        permuted.push(i);\n        permuted.push(i - (blockShapeRank + 1));\n      } else {\n        permuted.push(i);\n      }\n    }\n  } else {\n    const permutedBeforeBatch = [];\n    const permutedAfterBatch = [];\n    for (let i = 1; i < reshapedRank; ++i) {\n      if (i >= blockShapeRank * 2 + 1 || i % 2 === 1) {\n        permutedAfterBatch.push(i);\n      } else {\n        permutedBeforeBatch.push(i);\n      }\n    }\n    permuted.push(...permutedBeforeBatch);\n    permuted.push(0);\n    permuted.push(...permutedAfterBatch);\n  }\n  return permuted;\n}\n\n/**\n * Gets the shape of the reshaped and permuted input Tensor before any cropping\n * is applied.  The new shape will be:\n *\n * [batch / prod(blockShape),inputShape[1] * blockShape[0], ...,\n * inputShape[M] * blockShape[M-1],inputShape[M+1], ..., inputShape[N-1]]\n *\n * See step 3: https://www.tensorflow.org/api_docs/python/tf/batch_to_space_nd\n */\nexport function getReshapedPermuted(\n    inputShape: number[], blockShape: number[], prod: number,\n    batchToSpace = true): number[] {\n  const reshapedPermuted = [];\n\n  if (batchToSpace) {\n    reshapedPermuted.push(inputShape[0] / prod);\n  } else {\n    reshapedPermuted.push(inputShape[0] * prod);\n  }\n\n  for (let i = 1; i < inputShape.length; ++i) {\n    if (i <= blockShape.length) {\n      if (batchToSpace) {\n        reshapedPermuted.push(blockShape[i - 1] * inputShape[i]);\n      } else {\n        reshapedPermuted.push(inputShape[i] / blockShape[i - 1]);\n      }\n    } else {\n      reshapedPermuted.push(inputShape[i]);\n    }\n  }\n\n  return reshapedPermuted;\n}\n\n/**\n * Converts the crops argument into the beginning coordinates of a slice\n * operation.\n */\nexport function getSliceBeginCoords(\n    crops: number[][], blockShape: number): number[] {\n  const sliceBeginCoords = [0];\n  for (let i = 0; i < blockShape; ++i) {\n    sliceBeginCoords.push(crops[i][0]);\n  }\n  return sliceBeginCoords;\n}\n\n/**\n * Converts the crops argument into the size of a slice operation.  When\n * combined with getSliceBeginCoords this function allows the reshaped and\n * permuted Tensor to be cropped to its final output shape of:\n *\n * inputShape[1] * blockShape[0] - crops[0,0] - crops[0,1], ...,\n * inputShape[M] * blockShape[M-1] -crops[M-1,0] -\n * crops[M-1,1],inputShape[M+1], ..., inputShape[N-1]]\n *\n * See step 4: https://www.tensorflow.org/api_docs/python/tf/batch_to_space_nd\n */\nexport function getSliceSize(\n    uncroppedShape: number[], crops: number[][], blockShape: number): number[] {\n  const sliceSize = uncroppedShape.slice(0, 1);\n  for (let i = 0; i < blockShape; ++i) {\n    sliceSize.push(uncroppedShape[i + 1] - crops[i][0] - crops[i][1]);\n  }\n\n  return sliceSize;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const SELU_SCALEALPHA = 1.7580993408473768599402175208123;\nexport const SELU_SCALE = 1.0507009873554804934193349852946;\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const ERF_P = 0.3275911;\nexport const ERF_A1 = 0.254829592;\nexport const ERF_A2 = -0.284496736;\nexport const ERF_A3 = 1.421413741;\nexport const ERF_A4 = -1.453152027;\nexport const ERF_A5 = 1.061405429;\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {env} from './environment';\n\nexport function warn(...msg: Array<{}>): void {\n  if (!env().getBool('IS_TEST')) {\n    console.warn(...msg);\n  }\n}\n\nexport function log(...msg: Array<{}>): void {\n  if (!env().getBool('IS_TEST')) {\n    console.log(...msg);\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {TypedArray} from '../types';\n/**\n * Merges real and imaginary Float32Arrays into a single complex Float32Array.\n *\n * The memory layout is interleaved as follows:\n * real: [r0, r1, r2]\n * imag: [i0, i1, i2]\n * complex: [r0, i0, r1, i1, r2, i2]\n *\n * This is the inverse of splitRealAndImagArrays.\n *\n * @param real The real values of the complex tensor values.\n * @param imag The imag values of the complex tensor values.\n * @returns A complex tensor as a Float32Array with merged values.\n */\nexport function mergeRealAndImagArrays(\n    real: Float32Array, imag: Float32Array): Float32Array {\n  if (real.length !== imag.length) {\n    throw new Error(\n        `Cannot merge real and imag arrays of different lengths. real:` +\n        `${real.length}, imag: ${imag.length}.`);\n  }\n  const result = new Float32Array(real.length * 2);\n  for (let i = 0; i < result.length; i += 2) {\n    result[i] = real[i / 2];\n    result[i + 1] = imag[i / 2];\n  }\n  return result;\n}\n\n/**\n * Splits a complex Float32Array into real and imag parts.\n *\n * The memory layout is interleaved as follows:\n * complex: [r0, i0, r1, i1, r2, i2]\n * real: [r0, r1, r2]\n * imag: [i0, i1, i2]\n *\n * This is the inverse of mergeRealAndImagArrays.\n *\n * @param complex The complex tensor values.\n * @returns An object with real and imag Float32Array components of the complex\n *     tensor.\n */\nexport function splitRealAndImagArrays(complex: Float32Array):\n    {real: Float32Array, imag: Float32Array} {\n  const real = new Float32Array(complex.length / 2);\n  const imag = new Float32Array(complex.length / 2);\n  for (let i = 0; i < complex.length; i += 2) {\n    real[i / 2] = complex[i];\n    imag[i / 2] = complex[i + 1];\n  }\n  return {real, imag};\n}\n\n/**\n * Extracts even indexed complex values in the given array.\n * @param complex The complex tensor values\n */\nexport function complexWithEvenIndex(complex: Float32Array):\n    {real: Float32Array, imag: Float32Array} {\n  const len = Math.ceil(complex.length / 4);\n  const real = new Float32Array(len);\n  const imag = new Float32Array(len);\n  for (let i = 0; i < complex.length; i += 4) {\n    real[Math.floor(i / 4)] = complex[i];\n    imag[Math.floor(i / 4)] = complex[i + 1];\n  }\n  return {real, imag};\n}\n\n/**\n * Extracts odd indexed comple values in the given array.\n * @param complex The complex tensor values\n */\nexport function complexWithOddIndex(complex: Float32Array):\n    {real: Float32Array, imag: Float32Array} {\n  const len = Math.floor(complex.length / 4);\n  const real = new Float32Array(len);\n  const imag = new Float32Array(len);\n  for (let i = 2; i < complex.length; i += 4) {\n    real[Math.floor(i / 4)] = complex[i];\n    imag[Math.floor(i / 4)] = complex[i + 1];\n  }\n  return {real, imag};\n}\n\n/**\n * Get the map representing a complex value in the given array.\n * @param complex The complex tensor values.\n * @param index An index of the target complex value.\n */\nexport function getComplexWithIndex(\n    complex: Float32Array, index: number): {real: number, imag: number} {\n  const real = complex[index * 2];\n  const imag = complex[index * 2 + 1];\n  return {real, imag};\n}\n\n/**\n * Insert a given complex value into the TypedArray.\n * @param data The array in which the complex value is inserted.\n * @param c The complex value to be inserted.\n * @param index An index of the target complex value.\n */\nexport function assignToTypedArray(\n    data: TypedArray, real: number, imag: number, index: number) {\n  data[index * 2] = real;\n  data[index * 2 + 1] = imag;\n}\n\n/**\n * Make the list of exponent terms used by FFT.\n */\nexport function exponents(\n    n: number, inverse: boolean): {real: Float32Array, imag: Float32Array} {\n  const real = new Float32Array(n / 2);\n  const imag = new Float32Array(n / 2);\n  for (let i = 0; i < Math.ceil(n / 2); i++) {\n    const x = (inverse ? 2 : -2) * Math.PI * (i / n);\n    real[i] = Math.cos(x);\n    imag[i] = Math.sin(x);\n  }\n  return {real, imag};\n}\n\n/**\n * Make the exponent term used by FFT.\n */\nexport function exponent(\n    k: number, n: number, inverse: boolean): {real: number, imag: number} {\n  const x = (inverse ? 2 : -2) * Math.PI * (k / n);\n  const real = Math.cos(x);\n  const imag = Math.sin(x);\n  return {real, imag};\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Utility functions for computing einsum (tensor contraction and summation\n * based on Einstein summation.)\n */\n\nimport {Tensor} from '../tensor';\nimport {assert} from '../util_base';\n\nconst ARROW = '->';\nconst ARROW_REGEX = /->/g;\nconst COMMA = ',';\nconst ELLIPSIS = '...';\n\n/**\n * Parse an equation for einsum.\n *\n * @param equation The einsum equation (e.g., \"ij,jk->ik\").\n * @param numTensors Number of tensors provided along with `equation`. Used to\n *   check matching number of input tensors.\n * @returns An object consisting of the following fields:\n *   - allDims: all dimension names as strings.\n *   - summedDims: a list of all dimensions being summed over, as indices to\n *     the elements of `allDims`.\n *   - idDims: indices of the dimensions in each input tensor, as indices to\n *     the elements of `allDims.\n */\nexport function decodeEinsumEquation(equation: string, numTensors: number): {\n  allDims: string[],\n  summedDims: number[],\n  idDims: number[][],\n} {\n  equation = equation.replace(/\\s/g, '');  // Remove witespace in equation.\n  const numArrows =\n      (equation.length - equation.replace(ARROW_REGEX, '').length) /\n      ARROW.length;\n  if (numArrows < 1) {\n    throw new Error('Equations without an arrow are not supported.');\n  } else if (numArrows > 1) {\n    throw new Error(`Equation must contain exactly one arrow (\"${ARROW}\").`);\n  }\n  const [inputString, outputString] = equation.split(ARROW);\n  assert(\n      inputString.indexOf(ELLIPSIS) === -1,\n      () => `The ellipsis notation (\"${ELLIPSIS}\") is not supported yet.`);\n  const inputTerms = inputString.split(COMMA);\n  const numInputs = inputTerms.length;\n  if (numTensors !== numInputs) {\n    throw new Error(\n        `Expected ${numInputs} input tensors, received ${numTensors}`);\n  }\n  if (numInputs > 2) {\n    throw new Error(\n        'Support for more than 2 input tensors is not implemented yet.');\n  }\n\n  const allDims: string[] = [];\n  for (let i = 0; i < outputString.length; ++i) {\n    const dimName = outputString[i];\n    if (!inputTerms.some(inputTerm => inputTerm.indexOf(dimName) !== -1)) {\n      throw new Error(\n          `Output subscripts contain the label ${dimName} ` +\n          `not present in the input subscripts.`);\n    }\n    if (allDims.indexOf(dimName) === -1) {\n      allDims.push(dimName);\n    }\n  }\n  for (let i = 0; i < inputString.length; ++i) {\n    const dimName = inputString[i];\n    if (allDims.indexOf(dimName) === -1 && dimName !== COMMA) {\n      allDims.push(dimName);\n    }\n  }\n\n  const idDims: number[][] = new Array<number[]>(inputTerms.length);\n  for (let i = 0; i < numInputs; ++i) {\n    if (new Set(inputTerms[i].split('')).size !== inputTerms[i].length) {\n      throw new Error(\n          `Found duplicate axes in input component ${inputTerms[i]}. ` +\n          `Support for duplicate axes in input is not implemented yet.`);\n    }\n    idDims[i] = [];\n    for (let j = 0; j < inputTerms[i].length; ++j) {\n      idDims[i].push(allDims.indexOf(inputTerms[i][j]));\n    }\n  }\n\n  const numDims = allDims.length;          // Number of unique dimensions.\n  const numOutDims = outputString.length;  // Number of output dimensions.\n  const summedDims: number[] = [];         // Dimensions being summed over.\n  for (let i = numOutDims; i < numDims; ++i) {\n    summedDims.push(i);\n  }\n  return {allDims, summedDims, idDims};\n}\n\n/**\n * Get the permutation for a given input tensor.\n *\n * @param nDims Total number of dimension of all tensors involved in the einsum\n *   operation.\n * @param idDims Dimension indices involve in the tensor in question.\n * @returns An object consisting of the following fields:\n *   - permutationIndices: Indices to permute the axes of the tensor with.\n *   - expandDims: Indices to the dimension that need to be expanded from the\n *     tensor after permutation.\n */\nexport function getEinsumPermutation(nDims: number, idDims: number[]):\n    {permutationIndices: number[], expandDims: number[]} {\n  let permutationIndices: number[] = new Array<number>(nDims);\n  permutationIndices.fill(-1);\n  for (let i = 0; i < idDims.length; ++i) {\n    permutationIndices[idDims[i]] = i;\n  }\n  const expandDims: number[] = [];\n  for (let i = 0; i < nDims; ++i) {\n    if (permutationIndices[i] === -1) {\n      expandDims.push(i);\n    }\n  }\n  permutationIndices = permutationIndices.filter(d => d !== -1);\n  return {permutationIndices, expandDims};\n}\n\n/**\n * Checks that the dimension sizes from different input tensors match the\n * equation.\n */\nexport function checkEinsumDimSizes(\n    nDims: number, idDims: number[][], tensors: Tensor[]) {\n  const dimSizes: number[] = new Array<number>(nDims);\n  for (let i = 0; i < tensors.length; ++i) {\n    const shape: number[] = tensors[i].shape;\n    for (let j = 0; j < idDims[i].length; ++j) {\n      if (dimSizes[idDims[i][j]] === undefined) {\n        dimSizes[idDims[i][j]] = shape[j];\n      } else {\n        assert(\n            dimSizes[idDims[i][j]] === shape[j],\n            () => `Expected dimension ${dimSizes[idDims[i][j]]} at axis ${j} ` +\n                `of input shaped ${JSON.stringify(shape)}, ` +\n                `but got dimension ${shape[j]}`);\n      }\n    }\n  }\n}\n\n/**\n * Gets path of computation for einsum.\n *\n * @param summedDims indices to the dimensions being summed over.\n * @param idDims A look up table for the dimensions present in each input\n *     tensor. Each consituent array contains indices for the dimensions in the\n *     corresponding input tensor.\n *\n * @return A map with two fields:\n *   - path: The path of computation, with each element indicating the dimension\n *     being summed over after the element-wise multiplication in that step.\n *   - steps: With the same length as `path`. Each element contains the indices\n *     to the input tensors being used for element-wise multiplication in the\n *     corresponding step.\n */\nexport function getEinsumComputePath(summedDims: number[], idDims: number[][]):\n    {path: number[], steps: number[][]} {\n  const path: number[] = summedDims;\n  const steps: number[][] = [];\n  let nSteps = 0;\n  if (summedDims.length === 0) {\n    // Einsum that involes no summing: e.g., transpose and outer product.\n    path.push(-1);\n  }\n  nSteps = summedDims.length + 1;\n  for (let i = 0; i < nSteps; ++i) {\n    steps.push([]);\n  }\n  const computedTermIndices: number[] = [];\n  for (let i = 0; i < path.length; ++i) {\n    const summedDim = path[i];\n    const termIndices = findTermsWithDim(idDims, summedDim);\n    for (const termIndex of termIndices) {\n      if (computedTermIndices.indexOf(termIndex) === -1) {\n        steps[i].push(termIndex);\n        computedTermIndices.push(termIndex);\n      }\n    }\n  }\n  return {path, steps};\n}\n\n/** Determines if an axes permutation is the identity permutation. */\nexport function isIdentityPermutation(perm: number[]): boolean {\n  return perm.every((dim: number, index: number) => dim === index);\n}\n\nfunction findTermsWithDim(idDims: number[][], dim: number): number[] {\n  const termIndices: number[] = [];\n  for (let i = 0; i < idDims.length; ++i) {\n    if (idDims[i].length === 0 || idDims[i].indexOf(dim) !== -1 || dim === -1) {\n      termIndices.push(i);\n    }\n  }\n  return termIndices;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {TensorInfo} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {assert} from '../util';\n\n/**\n * Prepare the split size array. When the input is a number, the axis is evenly\n * divided among the split size. When the input contains the negative value, the\n * rest of the axis is allocated toward that.\n */\nexport function prepareSplitSize(\n    x: Tensor|TensorInfo, numOrSizeSplits: number[]|number,\n    axis = 0): number[] {\n  let splitSizes = [];\n  if (typeof (numOrSizeSplits) === 'number') {\n    assert(\n        x.shape[axis] % numOrSizeSplits === 0,\n        () => 'Number of splits must evenly divide the axis.');\n    splitSizes =\n        new Array(numOrSizeSplits).fill(x.shape[axis] / numOrSizeSplits);\n  } else {\n    const numOfNegs = numOrSizeSplits.reduce((count, value) => {\n      if (value === -1) {\n        count += 1;\n      }\n      return count;\n    }, 0);\n    assert(\n        numOfNegs <= 1,\n        () => 'There should be only one negative value in split array.');\n    const negIndex = numOrSizeSplits.indexOf(-1);\n    // Allow the number of split array to be -1, which indicates the rest\n    // of dimension is allocated to that split.\n    if (negIndex !== -1) {\n      const total = numOrSizeSplits.reduce((a, b) => b > 0 ? a + b : a);\n      numOrSizeSplits[negIndex] = x.shape[axis] - total;\n    }\n    assert(\n        x.shape[axis] === numOrSizeSplits.reduce((a, b) => a + b),\n        () => 'The sum of sizes must match the size of the axis dimension.');\n    splitSizes = numOrSizeSplits;\n  }\n\n  return splitSizes;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {TensorInfo} from '../kernel_registry';\nimport {nearestDivisor} from '../util';\n\nimport {PARALLELIZE_THRESHOLD} from './reduce_util';\n\nexport interface SegOpInfo {\n  windowSize: number;\n  batchSize: number;\n  inSize: number;\n  numSegments: number;\n}\n\nexport function segOpComputeOptimalWindowSize(\n    inSize: number, numSegments: number): number {\n  let done = false;\n  let res;\n\n  if (inSize <= PARALLELIZE_THRESHOLD) {\n    res = inSize;\n    done = true;\n  } else {\n    res = nearestDivisor(inSize, Math.floor(Math.sqrt(inSize)));\n  }\n\n  while (!done) {\n    if (res > numSegments || res === inSize) {\n      done = true;\n    } else {\n      res = nearestDivisor(inSize, res + 1);\n    }\n  }\n  return res;\n}\n\nexport function computeOutShape(\n    aShape: number[], axis: number, numSegments: number): number[] {\n  const outShape = [];\n  const rank = aShape.length;\n  for (let dim = 0; dim < rank; dim++) {\n    if (dim !== axis) {\n      outShape.push(aShape[dim]);\n    } else {\n      outShape.push(numSegments);\n    }\n  }\n  return outShape;\n}\n\nexport interface GatherOpShapeInfo {\n  batchSize: number;\n  sliceSize: number;\n  outerSize: number;\n  dimSize: number;\n  outputShape: number[];\n}\n\nexport function collectGatherOpShapeInfo(\n    x: TensorInfo, indices: TensorInfo, axis: number,\n    batchDims: number): GatherOpShapeInfo {\n  const indicesRank = indices.shape.length;\n  const xRank = x.shape.length;\n\n  if (batchDims !== 0) {\n    if (batchDims < -indicesRank || batchDims > indicesRank) {\n      throw new Error(`Expect batchDims in the range of [-${indicesRank}, ${\n          indicesRank}], but got ${batchDims}`);\n    }\n  }\n\n  if (batchDims < 0) {\n    batchDims += indicesRank;\n  }\n\n  if (batchDims > xRank) {\n    throw new Error(`batchDims (${batchDims}) must be less than rank(x) (\n    ${xRank}).`);\n  }\n\n  if (axis < batchDims) {\n    throw new Error(`batchDims (${\n        batchDims}) must be less than or equal to axis (${axis}).`);\n  }\n\n  for (let i = 0; i < batchDims; ++i) {\n    if (x.shape[i] !== indices.shape[i]) {\n      throw new Error(\n          `x.shape[${i}]: ${x.shape[i]} should be equal to indices.shape[${\n              i}]: ${indices.shape[i]}.`);\n    }\n  }\n  const dimSize = x.shape[axis];\n\n  const outputShape: number[] = [];\n  let batchSize = 1;\n  let outerSize = 1;\n  let sliceSize = 1;\n\n  for (let i = 0; i < batchDims; ++i) {\n    outputShape.push(x.shape[i]);\n    batchSize *= x.shape[i];\n  }\n\n  for (let i = batchDims; i < axis; i++) {\n    outputShape.push(x.shape[i]);\n    outerSize *= x.shape[i];\n  }\n\n  for (let i = batchDims; i < indicesRank; i++) {\n    outputShape.push(indices.shape[i]);\n  }\n\n  for (let i = axis + 1; i < xRank; i++) {\n    outputShape.push(x.shape[i]);\n    sliceSize *= x.shape[i];\n  }\n\n  return {batchSize, sliceSize, outerSize, dimSize, outputShape};\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {decodeString, encodeString} from '../util';\n\n// Utilities needed by backend consumers of tf-core.\nexport * from '../ops/axis_util';\nexport * from '../ops/broadcast_util';\nexport * from '../ops/concat_util';\nexport * from '../ops/conv_util';\nexport * from '../ops/fused_util';\nexport * from '../ops/fused_types';\nexport * from '../ops/reduce_util';\n\nimport * as slice_util from '../ops/slice_util';\nexport {slice_util};\n\nexport {BackendValues, TypedArray, upcastType, PixelData} from '../types';\nexport {MemoryInfo, TimingInfo} from '../engine';\nexport * from '../ops/rotate_util';\nexport * from '../ops/array_ops_util';\nexport * from '../ops/gather_nd_util';\nexport * from '../ops/scatter_nd_util';\nexport * from '../ops/selu_util';\nexport * from '../ops/fused_util';\nexport * from '../ops/erf_util';\nexport * from '../log';\nexport * from '../backends/complex_util';\nexport * from '../backends/einsum_util';\nexport * from '../ops/split_util';\n\nimport * as segment_util from '../ops/segment_util';\nexport {segment_util};\n\nexport function fromUint8ToStringArray(vals: Uint8Array[]) {\n  try {\n    // Decode the bytes into string.\n    return vals.map(val => decodeString(val));\n  } catch (err) {\n    throw new Error(\n        `Failed to decode encoded string bytes into utf-8, error: ${err}`);\n  }\n}\n\nexport function fromStringArrayToUint8(strings: string[]) {\n  return strings.map(s => encodeString(s));\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {clone, Tensor, util} from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {ResourceManager} from '../../executor/resource_manager';\nimport {Node, ValueType} from '../types';\n\nexport function getParamValue(\n    paramName: string, node: Node, tensorMap: NamedTensorsMap,\n    context: ExecutionContext, resourceManager?: ResourceManager): ValueType {\n  const inputParam = node.inputParams[paramName];\n  if (inputParam && inputParam.inputIndexStart !== undefined) {\n    const start = inputParam.inputIndexStart;\n    const end = inputParam.inputIndexEnd === 0 ?\n        undefined :\n        (inputParam.inputIndexEnd === undefined ? start + 1 :\n                                                  inputParam.inputIndexEnd);\n    if (inputParam.type === 'tensor') {\n      return getTensor(\n          node.inputNames[inputParam.inputIndexStart], tensorMap, context,\n          resourceManager);\n    }\n    if (inputParam.type === 'tensors') {\n      const inputs = node.inputNames.slice(start, end);\n\n      return inputs.map(\n          name => getTensor(name, tensorMap, context, resourceManager));\n    }\n    const tensor = getTensor(\n        node.inputNames.slice(start)[0], tensorMap, context, resourceManager);\n    const data = tensor.dataSync();\n    return inputParam.type === 'number' ?\n        data[0] :\n        util.toNestedArray(tensor.shape, data);\n  }\n  const attrParam = node.attrParams[paramName];\n  return attrParam && attrParam.value;\n}\n\n/**\n * Retrieve the tensor from tensorsMap based on input name.\n * @param name Node input name\n * @param tensorsMap Tensors map keyed by the node\n * @param context contains tensors and information for running the current node.\n * @param resourceManager Optional. Contains global resources of the model.\n */\nexport function getTensor(\n    name: string, tensorsMap: NamedTensorsMap, context: ExecutionContext,\n    resourceManager?: ResourceManager): Tensor {\n  const [nodeName, index] = parseNodeName(name);\n\n  if (resourceManager != null) {\n    const tensor = resourceManager.getHashTableHandleByName(nodeName);\n    if (tensor != null) {\n      return tensor;\n    }\n  }\n\n  const contextId = context.currentContextIds.find(contextId => {\n    return !!tensorsMap[getNodeNameWithContextId(nodeName, contextId)];\n  });\n\n  return contextId !== undefined ?\n      tensorsMap[getNodeNameWithContextId(nodeName, contextId)][index] :\n      undefined;\n}\n\n/**\n * Retrieve the tensors based on input name for current context.\n * @param name Node input name\n * @param tensorsMap Tensors map keyed by the node\n */\nexport function getTensorsForCurrentContenxt(\n    name: string, tensorsMap: NamedTensorsMap,\n    context: ExecutionContext): Tensor[] {\n  return tensorsMap[getNodeNameWithContextId(name, context.currentContextId)];\n}\n\n/**\n * Returns the node name, outputName and index from the Node input name.\n * @param inputName The input name of the node, in format of\n * node_name:output_index, i.e. MatMul:0, if the output_index is not set, it is\n * default to 0.\n * If the input name contains output name i.e. StringSplit:indices:0, it will\n * return ['StringSplit', 0, 'indices'].\n */\nexport function getNodeNameAndIndex(\n    inputName: string, context?: ExecutionContext): [string, number, string] {\n  const [nodeName, index, outputName] = parseNodeName(inputName);\n\n  return [\n    getNodeNameWithContextId(nodeName, context && context.currentContextId),\n    index, outputName\n  ];\n}\n\nfunction getNodeNameWithContextId(name: string, contextId?: string): string {\n  return !!contextId ? `${name}-${contextId}` : name;\n}\n\nexport function parseNodeName(name: string): [string, number, string] {\n  const parts = name.split(':');\n  if (parts.length === 1) {\n    return [name, 0, undefined];\n  }\n\n  const nodeName = parts[0];\n  const outputName = parts.length === 3 ? parts[1] : undefined;\n  const index = Number(parts[parts.length - 1]);\n  return [nodeName, index, outputName];\n}\n\nexport function split(arr: number[], size: number) {\n  const res = [];\n  for (let i = 0; i < arr.length; i += size) {\n    res.push(arr.slice(i, i + size));\n  }\n  return res;\n}\nexport function getPadding(\n    node: Node, tensorMap: NamedTensorsMap,\n    context: ExecutionContext): ValueType {\n  let pad = getParamValue('pad', node, tensorMap, context);\n  if (pad === 'explicit') {\n    // This is 1d array, we need to convert it to 2d array\n    pad = getParamValue('explicitPaddings', node, tensorMap, context);\n    const explicitPadding: [\n      [number, number], [number, number], [number, number], [number, number]\n    ] = [[0, 0], [0, 0], [0, 0], [0, 0]];\n    for (let i = 0; i < 4; i++) {\n      explicitPadding[i][0] = (pad as number[])[i * 2];\n      explicitPadding[i][1] = (pad as number[])[i * 2 + 1];\n    }\n    return explicitPadding;\n  }\n  return pad;\n}\n\n/**\n *  Reuse the tensor if it is marked as keep, otherwise clone the tensor to\n *  avoid disposal. This is important for TensorArray and TensorList ops, since\n *  internally they use a tensor as the id for TensorArray and TensorList, and\n * to simplify lookup, they also use Tensor.id as the key to the internal map.\n * These id tensors have been marked as kept in the backend, we need avoid clone\n * them in order to create new Tensor.id.\n * @param tensor\n */\nexport function cloneTensor(tensor: Tensor): Tensor {\n  return tensor.kept ? tensor : clone(tensor);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from './engine';\nimport {env} from './environment';\nimport {Tensor} from './tensor';\nimport {DataType, TensorLike} from './types';\nimport {assert, flatten, inferDtype, isTypedArray, toTypedArray} from './util';\n\nexport function inferShape(val: TensorLike, dtype?: DataType): number[] {\n  let firstElem: typeof val = val;\n\n  if (isTypedArray(val)) {\n    return dtype === 'string' ? [] : [val.length];\n  }\n  if (!Array.isArray(val)) {\n    return [];  // Scalar.\n  }\n  const shape: number[] = [];\n\n  while (Array.isArray(firstElem) ||\n         isTypedArray(firstElem) && dtype !== 'string') {\n    shape.push(firstElem.length);\n    firstElem = firstElem[0];\n  }\n  if (Array.isArray(val) &&\n      env().getBool('TENSORLIKE_CHECK_SHAPE_CONSISTENCY')) {\n    deepAssertShapeConsistency(val, shape, []);\n  }\n\n  return shape;\n}\n\nfunction deepAssertShapeConsistency(\n    val: TensorLike, shape: number[], indices: number[]) {\n  indices = indices || [];\n  if (!(Array.isArray(val)) && !isTypedArray(val)) {\n    assert(\n        shape.length === 0,\n        () => `Element arr[${indices.join('][')}] is a primitive, ` +\n            `but should be an array/TypedArray of ${shape[0]} elements`);\n    return;\n  }\n  assert(\n      shape.length > 0,\n      () => `Element arr[${indices.join('][')}] should be a primitive, ` +\n          `but is an array of ${val.length} elements`);\n  assert(\n      val.length === shape[0],\n      () => `Element arr[${indices.join('][')}] should have ${shape[0]} ` +\n          `elements, but has ${val.length} elements`);\n  const subShape = shape.slice(1);\n  for (let i = 0; i < val.length; ++i) {\n    deepAssertShapeConsistency(val[i], subShape, indices.concat(i));\n  }\n}\n\nfunction assertDtype(\n    expectedDtype: DataType|'numeric'|'string_or_numeric',\n    actualDType: DataType, argName: string, functionName: string) {\n  if (expectedDtype === 'string_or_numeric') {\n    return;\n  }\n  if (expectedDtype == null) {\n    throw new Error(`Expected dtype cannot be null.`);\n  }\n  if (expectedDtype !== 'numeric' && expectedDtype !== actualDType ||\n      expectedDtype === 'numeric' && actualDType === 'string') {\n    throw new Error(\n        `Argument '${argName}' passed to '${functionName}' must ` +\n        `be ${expectedDtype} tensor, but got ${actualDType} tensor`);\n  }\n}\n\nexport function convertToTensor<T extends Tensor>(\n    x: T|TensorLike, argName: string, functionName: string,\n    parseAsDtype: DataType|'numeric'|'string_or_numeric' = 'numeric'): T {\n  if (x instanceof Tensor) {\n    assertDtype(parseAsDtype, x.dtype, argName, functionName);\n    return x;\n  }\n  let inferredDtype = inferDtype(x);\n  // If the user expects a bool/int/float, use that info to update the\n  // inferredDtype when it is not a string.\n  if (inferredDtype !== 'string' &&\n      ['bool', 'int32', 'float32'].indexOf(parseAsDtype) >= 0) {\n    inferredDtype = parseAsDtype as DataType;\n  }\n  assertDtype(parseAsDtype, inferredDtype, argName, functionName);\n\n  if ((x == null) ||\n      (!isTypedArray(x) && !Array.isArray(x) && typeof x !== 'number' &&\n       typeof x !== 'boolean' && typeof x !== 'string')) {\n    const type = x == null ? 'null' : (x as {}).constructor.name;\n    throw new Error(\n        `Argument '${argName}' passed to '${functionName}' must be a ` +\n        `Tensor or TensorLike, but got '${type}'`);\n  }\n  const inferredShape = inferShape(x, inferredDtype);\n  if (!isTypedArray(x) && !Array.isArray(x)) {\n    x = [x] as number[];\n  }\n  const skipTypedArray = true;\n  const values = inferredDtype !== 'string' ?\n      toTypedArray(x, inferredDtype as DataType) :\n      flatten(x as string[], [], skipTypedArray) as string[];\n  return ENGINE.makeTensor(values, inferredShape, inferredDtype) as T;\n}\n\nexport function convertToTensorArray<T extends Tensor>(\n    arg: Array<T|TensorLike>, argName: string, functionName: string,\n    parseAsDtype: DataType|'numeric'|'string_or_numeric' = 'numeric'): T[] {\n  if (!Array.isArray(arg)) {\n    throw new Error(\n        `Argument ${argName} passed to ${functionName} must be a ` +\n        '`Tensor[]` or `TensorLike[]`');\n  }\n  const tensors = arg as T[];\n  return tensors.map(\n      (t, i) =>\n          convertToTensor(t, `${argName}[${i}]`, functionName, parseAsDtype));\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {isPromise} from '../util';\n\nexport const OP_SCOPE_SUFFIX = '__op';\n\n/**\n * Used for wrapping functions that perform math operations on\n * Tensors. The function will be wrapped in a named scope that cleans all\n * memory usage after the function is done.\n */\nexport function op<T extends Function>(f: {[name: string]: T}): T {\n  const keys = Object.keys(f);\n  if (keys.length !== 1) {\n    throw new Error(\n        `Please provide an object with a single key ` +\n        `(operation name) mapping to a function. Got an object with ` +\n        `${keys.length} keys.`);\n  }\n\n  let opName = keys[0];\n  const fn = f[opName];\n\n  // Strip the underscore from the end of the function name.\n  if (opName.endsWith('_')) {\n    opName = opName.substring(0, opName.length - 1);\n  }\n\n  // add an __op suffix to distinguish ops from kernels in tf.profile\n  opName = opName + OP_SCOPE_SUFFIX;\n\n  // tslint:disable-next-line:no-any\n  const f2 = (...args: any[]) => {\n    ENGINE.startScope(opName);\n    try {\n      const result = fn(...args);\n      if (isPromise(result)) {\n        console.error('Cannot return a Promise inside of tidy.');\n      }\n      ENGINE.endScope(result);\n      return result;\n    } catch (ex) {\n      ENGINE.endScope(null);\n      throw ex;\n    }\n  };\n  Object.defineProperty(f2, 'name', {value: opName, configurable: true});\n\n  // tslint:disable-next-line:no-any\n  return f2 as any as T;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BackendTimer, BackendTimingInfo} from './backends/backend';\nimport {env} from './environment';\nimport {Tensor} from './tensor';\nimport {NamedTensorMap} from './tensor_types';\nimport {DataType, DataTypeMap, TypedArray} from './types';\nimport * as util from './util';\n\nexport type KernelProfile = {\n  kernelName: string,\n  outputs: Tensor[],\n  inputs: NamedTensorMap,\n  timeMs: Promise<number|{error: string}>,\n  extraInfo: Promise<string>\n};\n\nexport class Profiler {\n  constructor(private backendTimer: BackendTimer, private logger?: Logger) {\n    if (logger == null) {\n      this.logger = new Logger();\n    }\n  }\n\n  profileKernel(kernelName: string, inputs: NamedTensorMap, f: () => Tensor[]):\n      KernelProfile {\n    let outputs: Tensor[];\n    const holdResultWrapperFn = () => {\n      outputs = f();\n    };\n    let timer: Promise<BackendTimingInfo>;\n    const start = util.now();\n    if (this.backendTimer.timerAvailable()) {\n      timer = this.backendTimer.time(holdResultWrapperFn);\n    } else {\n      holdResultWrapperFn();\n      for (const output of outputs) {\n        output.dataSync();\n      }\n      timer = Promise.resolve({kernelMs: util.now() - start});\n    }\n    if (env().getBool('CHECK_COMPUTATION_FOR_ERRORS')) {\n      for (let i = 0; i < outputs.length; i++) {\n        const output = outputs[i];\n        // Dangling promise here because we don't want to propagate up\n        // asynchronicity.\n        output.data().then(tensorVals => {\n          checkComputationForErrors(tensorVals, output.dtype, kernelName);\n        });\n      }\n    }\n\n    const kernelProfile = {\n      kernelName,\n      outputs,\n      inputs,\n      timeMs: timer.then(timing => timing.kernelMs),\n      extraInfo: timer.then(\n          timing => timing.getExtraProfileInfo != null ?\n              timing.getExtraProfileInfo() :\n              '')\n    };\n    return kernelProfile;\n  }\n\n  logKernelProfile(kernelProfile: KernelProfile): void {\n    const {kernelName, outputs, timeMs, inputs, extraInfo} = kernelProfile;\n\n    outputs.forEach(result => {\n      Promise.all([result.data(), timeMs, extraInfo]).then(valueContainer => {\n        this.logger.logKernelProfile(\n            kernelName, result, valueContainer[0], valueContainer[1], inputs,\n            valueContainer[2]);\n      });\n    });\n  }\n}\n\nexport function checkComputationForErrors<D extends DataType>(\n    vals: DataTypeMap[D], dtype: D, kernelName: string): boolean {\n  if (dtype !== 'float32') {\n    // Only floating point computations will generate NaN values\n    return false;\n  }\n  for (let i = 0; i < vals.length; i++) {\n    const num = vals[i] as number;\n    if (isNaN(num) || !isFinite(num)) {\n      // Throwing custom exception so behavior is testable.\n      console.warn(`Found ${num} in the result of '${kernelName}'`);\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class Logger {\n  logKernelProfile(\n      name: string, result: Tensor, vals: TypedArray,\n      timeMs: number|{error: string}, inputs: NamedTensorMap,\n      extraInfo?: string) {\n    const time = typeof timeMs === 'number' ? util.rightPad(`${timeMs}ms`, 9) :\n                                              timeMs['error'];\n    const paddedName = util.rightPad(name, 25);\n    const rank = result.rank;\n    const size = result.size;\n    const shape = util.rightPad(result.shape.toString(), 14);\n    let inputShapesDescription = '';\n\n    for (const name in inputs) {\n      const input = inputs[name];\n      if (input != null) {\n        // The input might be a non-tensor (e.g HTMLImageElement), in which case\n        // we claim the output shape as input shape.\n        const inputShape = input.shape || result.shape;\n        const inputRank = inputShape.length;\n        inputShapesDescription +=\n            `${name}: ${inputRank}D ${inputRank > 0 ? inputShape : ''} `;\n      }\n    }\n\n    console.log(\n        `%c${paddedName}\\t%c${time}\\t%c${rank}D ${shape}\\t%c${size}\\t%c${\n            inputShapesDescription}\\t%c${extraInfo}`,\n        'font-weight:bold', 'color:red', 'color:blue', 'color: orange',\n        'color: green', 'color: steelblue');\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from './tensor';\nimport {NamedTensorMap} from './tensor_types';\nimport * as util from './util';\n\nexport interface TapeNode {\n  id: number;\n  kernelName: string;\n  outputs: Tensor[];\n  inputs: NamedTensorMap;\n  // Optional params, defined only for ops with gradient impl.\n  gradient?: (dys: Tensor[]) => NamedGradientMap;\n  saved?: Tensor[];\n}\n\nexport type NamedGradientMap = {\n  [inputName: string]: () => Tensor;\n};\n\n/**\n * Computes a list of TapeNodes that connect x to y, filtering everything else\n * out and preserving the order of the original tape elements.\n *\n * @param tape The tape elements to filter.\n * @param xs The input Tensors.\n * @param y The output Tensor.\n */\nexport function getFilteredNodesXToY(\n    tape: TapeNode[], xs: Tensor[], y: Tensor): TapeNode[] {\n  // Forward pass to compute all the nodes and Tensors that are transitively a\n  // function of x.\n  const tensorsFromX: {[tensorId: number]: boolean} = {};\n  const nodesFromX: {[nodeId: number]: boolean} = {};\n  for (let i = 0; i < xs.length; i++) {\n    tensorsFromX[xs[i].id] = true;\n  }\n\n  for (let i = 0; i < tape.length; i++) {\n    const node = tape[i];\n    const nodeInputs = node.inputs;\n    for (const inputName in nodeInputs) {\n      const input = nodeInputs[inputName];\n\n      let anyInputFromX = false;\n      for (let j = 0; j < xs.length; j++) {\n        if (tensorsFromX[input.id]) {\n          node.outputs.forEach(output => tensorsFromX[output.id] = true);\n          anyInputFromX = true;\n          nodesFromX[node.id] = true;\n          break;\n        }\n      }\n\n      if (anyInputFromX) {\n        break;\n      }\n    }\n  }\n\n  // Backward pass to find all of the nodes and Tensors that lead to y.\n  const tensorsLeadToY: {[tensorId: number]: boolean} = {};\n  tensorsLeadToY[y.id] = true;\n  const nodesToY: {[nodeId: number]: boolean} = {};\n\n  for (let i = tape.length - 1; i >= 0; i--) {\n    const node = tape[i];\n    const nodeInputs = node.inputs;\n\n    // If any of the outputs lead to y, mark all of the inputs as leading to y.\n    for (let j = 0; j < node.outputs.length; j++) {\n      if (tensorsLeadToY[node.outputs[j].id]) {\n        for (const inputName in nodeInputs) {\n          tensorsLeadToY[nodeInputs[inputName].id] = true;\n          nodesToY[node.id] = true;\n        }\n        break;\n      }\n    }\n  }\n\n  // Return the paths that come from x and lead to y.\n  const filteredTape: TapeNode[] = [];\n  for (let i = 0; i < tape.length; i++) {\n    const node = tape[i];\n\n    if (nodesFromX[node.id] && nodesToY[node.id]) {\n      // Prune the inputs from the node that aren't a function of x.\n      const prunedInputs: {[inputName: string]: Tensor} = {};\n      for (const inputName in node.inputs) {\n        const nodeInput = node.inputs[inputName];\n        if (tensorsFromX[nodeInput.id]) {\n          prunedInputs[inputName] = nodeInput;\n        }\n      }\n\n      // Copy the node and overwrite inputsAndArgs to the pruned version.\n      const prunedNode = Object.assign({}, node);\n      prunedNode.inputs = prunedInputs;\n      prunedNode.outputs = node.outputs;\n\n      filteredTape.push(prunedNode);\n    }\n  }\n\n  return filteredTape;\n}\n\n/**\n * Backpropagate gradients through the filtered TapeNodes.\n *\n * @param tensorAccumulatedGradientMap A map of Tensor to its gradient. This map\n * is mutated by this method.\n * @param filteredTape The filtered TapeNodes to backprop through.\n */\nexport function backpropagateGradients(\n    tensorAccumulatedGradientMap: {[tensorId: number]: Tensor},\n    filteredTape: TapeNode[], tidy: (f: Function) => Tensor,\n    add: (a: Tensor, b: Tensor) => Tensor) {\n  // Walk the tape backward and keep a map of Tensor to its gradient.\n  for (let i = filteredTape.length - 1; i >= 0; i--) {\n    const node = filteredTape[i];\n\n    const dys: Tensor[] = [];\n    node.outputs.forEach(o => {\n      const gradTensor = tensorAccumulatedGradientMap[o.id];\n      if (gradTensor != null) {\n        dys.push(gradTensor);\n      } else {\n        // This particular output is not in the back-propagation subgraph, so it\n        // does not affect the final output, thus we put null for its dy.\n        dys.push(null);\n      }\n    });\n\n    if (node.gradient == null) {\n      throw new Error(\n          `Cannot compute gradient: gradient function not found ` +\n          `for ${node.kernelName}.`);\n    }\n\n    // Backprop dy through this node and accumulate gradients over the inputs.\n    const inputGradients = node.gradient(dys);\n\n    for (const inputName in node.inputs) {\n      if (!(inputName in inputGradients)) {\n        throw new Error(\n            `Cannot backprop through input ${inputName}. ` +\n            `Available gradients found: ${Object.keys(inputGradients)}.`);\n      }\n\n      // Call the gradient function.\n      const dx = tidy(() => inputGradients[inputName]());\n      if (dx.dtype !== 'float32') {\n        throw new Error(\n            `Error in gradient for op ${\n                node.kernelName}. The gradient of input ` +\n            `${inputName} must have 'float32' dtype, but has '${dx.dtype}'`);\n      }\n      const x = node.inputs[inputName];\n      if (!util.arraysEqual(dx.shape, x.shape)) {\n        throw new Error(\n            `Error in gradient for op ${\n                node.kernelName}. The gradient of input ` +\n            `'${inputName}' has shape '${dx.shape}', which does not match ` +\n            `the shape of the input '${x.shape}'`);\n      }\n\n      if (tensorAccumulatedGradientMap[x.id] == null) {\n        tensorAccumulatedGradientMap[x.id] = dx;\n      } else {\n        const curGradient = tensorAccumulatedGradientMap[x.id];\n        tensorAccumulatedGradientMap[x.id] = add(curGradient, dx);\n        curGradient.dispose();\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BackendTimingInfo, DataMover, KernelBackend} from './backends/backend';\nimport {Environment, setEnvironmentGlobal} from './environment';\nimport {getGlobalNamespace} from './global_util';\nimport {Add, Cast, Identity} from './kernel_names';\nimport {getGradient, getKernel, getKernelsForBackend, GradFunc, NamedAttrMap, TensorInfo} from './kernel_registry';\nimport {KernelProfile, Profiler} from './profiler';\nimport {backpropagateGradients, getFilteredNodesXToY, TapeNode} from './tape';\nimport {DataId, setTensorTracker, Tensor, TensorTracker, Variable} from './tensor';\nimport {GradSaveFunc, NamedTensorMap, NamedVariableMap, TensorContainer} from './tensor_types';\nimport {getTensorsInContainer} from './tensor_util';\nimport {BackendValues, DataType, DataValues} from './types';\nimport * as util from './util';\nimport {bytesFromStringArray, makeOnesTypedArray, now, sizeFromShape} from './util';\n\n/**\n * A function that computes an output. The save function is for saving tensors\n * computed in the forward pass, that we need in the backward pass.\n */\nexport type ForwardFunc<T> = (backend: KernelBackend, save?: GradSaveFunc) => T;\n\n/**\n * @docalias (a: Tensor, b: Tensor,..., save?: Function) => {\n *   value: Tensor,\n *   gradFunc: (dy: Tensor, saved?: NamedTensorMap) => Tensor | Tensor[]\n * }\n */\nexport type CustomGradientFunc<T extends Tensor> =\n    (...inputs: Array<Tensor|GradSaveFunc>) => {\n      value: T;\n      gradFunc: (dy: T, saved: Tensor[]) => Tensor | Tensor[];\n    };\n\nexport type MemoryInfo = {\n  numTensors: number; numDataBuffers: number; numBytes: number;\n  unreliable?: boolean; reasons: string[];\n};\n\ntype KernelInfo = {\n  name: string; bytesAdded: number; totalBytesSnapshot: number;\n  tensorsAdded: number;\n  totalTensorsSnapshot: number;\n  inputShapes: number[][];\n  outputShapes: number[][];\n  kernelTimeMs: number | {error: string} | Promise<number|{error: string}>;\n  extraInfo: string | Promise<string>;\n};\n\nexport type ProfileInfo = {\n  newBytes: number; newTensors: number; peakBytes: number;\n  kernels: KernelInfo[];\n  result: TensorContainer;\n  kernelNames: string[];\n};\n\nexport interface TimingInfo extends BackendTimingInfo {\n  wallMs: number;\n}\n\n/** @docalias Function */\nexport type ScopeFn<T extends TensorContainer> = () => T;\n\ninterface ScopeState {\n  track: Tensor[];\n  name: string;\n  id: number;\n}\n\ninterface RegisteredKernelInvocation<I extends NamedTensorMap> {\n  kernelName: string;\n  inputs: I;\n  attrs?: NamedAttrMap;\n}\n\ninterface CustomGradKernelInvocation<T extends Tensor|Tensor[],\n                                               I extends NamedTensorMap> {\n  forwardFunc: ForwardFunc<T>;\n  backwardsFunc: (dy: T, saved: Tensor[]) => {\n    [P in keyof I]: () => I[P]\n  };\n  inputs: I;\n  attrs?: NamedAttrMap;\n}\n\nfunction isRegisteredKernelInvocation<T extends Tensor|Tensor[],\n                                                I extends NamedTensorMap>(\n    kernelInvocation: RegisteredKernelInvocation<I>|\n    CustomGradKernelInvocation<T, I>):\n    kernelInvocation is RegisteredKernelInvocation<I> {\n  return (kernelInvocation as RegisteredKernelInvocation<I>).kernelName != null;\n}\n\nclass EngineState {\n  // Public since optimizers will use it.\n  registeredVariables: NamedVariableMap = {};\n\n  nextTapeNodeId = 0;\n  numBytes = 0;\n  numTensors = 0;\n  numStringTensors = 0;\n  numDataBuffers = 0;\n\n  activeTape: TapeNode[];\n  // Number of nested tf.grad() statements when computing higher-order\n  // gradients. E.g. `1` for first-order gradients and `2` for second-order\n  // gradients. Used to track if the tape should be removed after a backprop.\n  gradientDepth = 0;\n  // Number of nested kernel calls. When kernel depth is greater than 1, we turn\n  // off the tape.\n  kernelDepth = 0;\n\n  // Keep Tensors that parallel the tapes.\n  activeScope: ScopeState;\n  scopeStack: ScopeState[] = [];\n  /**\n   * Keeps track of the number of data moves during a kernel execution. We\n   * maintain a stack since kernels can call other kernels, recursively.\n   */\n  numDataMovesStack: number[] = [];\n  nextScopeId = 0;\n\n  tensorInfo = new WeakMap<DataId, {\n    backend: KernelBackend,\n    bytes: number,\n    dtype: DataType,\n    shape: number[]\n  }>();\n\n  profiling = false;\n  activeProfile: ProfileInfo = {\n    newBytes: 0,\n    newTensors: 0,\n    peakBytes: 0,\n    kernels: [],\n    result: null,\n    get kernelNames():\n        string[] {\n          return Array.from(new Set(this.kernels.map(k => k.name)));\n        }\n  };\n\n  dispose() {\n    for (const variableName in this.registeredVariables) {\n      this.registeredVariables[variableName].dispose();\n    }\n  }\n}\n\nexport class Engine implements TensorTracker, DataMover {\n  state: EngineState;\n  backendName: string;\n  registry: {[id: string]: KernelBackend} = {};\n  registryFactory: {\n    [id: string]: {\n      factory: () => KernelBackend | Promise<KernelBackend>,\n      priority: number\n    }\n  } = {};\n\n  private profiler: Profiler;\n  private backendInstance: KernelBackend;\n  private pendingBackendInit: Promise<boolean>;\n  private pendingBackendInitId = 0;\n\n  constructor(public ENV: Environment) {\n    this.state = new EngineState();\n  }\n\n  async ready(): Promise<void> {\n    if (this.pendingBackendInit != null) {\n      return this.pendingBackendInit.then(() => {});\n    }\n    if (this.backendInstance != null) {\n      return;\n    }\n    const sortedBackends = this.getSortedBackends();\n\n    for (let i = 0; i < sortedBackends.length; i++) {\n      const backendName = sortedBackends[i];\n      const success = await this.initializeBackend(backendName).success;\n      if (success) {\n        await this.setBackend(backendName);\n        return;\n      }\n    }\n\n    throw new Error(\n        `Could not initialize any backends, all backend initializations ` +\n        `failed.`);\n  }\n\n  get backend(): KernelBackend {\n    if (this.pendingBackendInit != null) {\n      throw new Error(\n          `Backend '${this.backendName}' has not yet been initialized. Make ` +\n          `sure to await tf.ready() or await tf.setBackend() before calling ` +\n          `other methods`);\n    }\n    if (this.backendInstance == null) {\n      const {name, asyncInit} = this.initializeBackendsAndReturnBest();\n      if (asyncInit) {\n        throw new Error(\n            `The highest priority backend '${name}' has not yet been ` +\n            `initialized. Make sure to await tf.ready() or ` +\n            `await tf.setBackend() before calling other methods`);\n      }\n      this.setBackend(name);\n    }\n    return this.backendInstance;\n  }\n\n  backendNames(): string[] {\n    return Object.keys(this.registryFactory);\n  }\n\n  findBackend(backendName: string): KernelBackend {\n    if (!(backendName in this.registry)) {\n      // If the backend hasn't been initialized but we have a registry entry for\n      // it, initialize it and return it.\n      if (backendName in this.registryFactory) {\n        const {asyncInit} = this.initializeBackend(backendName);\n        if (asyncInit) {\n          // Backend is not ready yet.\n          return null;\n        }\n      } else {\n        return null;\n      }\n    }\n    return this.registry[backendName];\n  }\n\n  findBackendFactory(backendName: string):\n      () => KernelBackend | Promise<KernelBackend> {\n    if (!(backendName in this.registryFactory)) {\n      return null;\n    }\n    return this.registryFactory[backendName].factory;\n  }\n\n  registerBackend(\n      backendName: string,\n      factory: () => KernelBackend | Promise<KernelBackend>,\n      priority = 1): boolean {\n    if (backendName in this.registryFactory) {\n      console.warn(\n          `${backendName} backend was already registered. ` +\n          `Reusing existing backend factory.`);\n      return false;\n    }\n    this.registryFactory[backendName] = {factory, priority};\n    return true;\n  }\n\n  async setBackend(backendName: string): Promise<boolean> {\n    if (this.registryFactory[backendName] == null) {\n      throw new Error(`Backend name '${backendName}' not found in registry`);\n    }\n    this.backendName = backendName;\n    if (this.registry[backendName] == null) {\n      this.backendInstance = null;\n      const {success, asyncInit} = this.initializeBackend(backendName);\n      const result = asyncInit ? await success : success;\n      if (!result) {\n        return false;\n      }\n    }\n    this.backendInstance = this.registry[backendName];\n    this.setupRegisteredKernels();\n    // Reset the profiler.\n    this.profiler = new Profiler(this.backendInstance);\n\n    return true;\n  }\n\n  private setupRegisteredKernels(): void {\n    const kernels = getKernelsForBackend(this.backendName);\n    kernels.forEach(kernel => {\n      if (kernel.setupFunc != null) {\n        kernel.setupFunc(this.backendInstance);\n      }\n    });\n  }\n\n  private disposeRegisteredKernels(backendName: string): void {\n    const kernels = getKernelsForBackend(backendName);\n    kernels.forEach(kernel => {\n      if (kernel.disposeFunc != null) {\n        kernel.disposeFunc(this.registry[backendName]);\n      }\n    });\n  }\n\n  /**\n   * Initializes a backend by looking up the backend name in the factory\n   * registry and calling the factory method. Returns a boolean representing\n   * whether the initialization of the backend suceeded. Throws an error if\n   * there is no backend in the factory registry.\n   */\n  private initializeBackend(backendName: string):\n      {success: boolean|Promise<boolean>, asyncInit: boolean} {\n    const registryFactoryEntry = this.registryFactory[backendName];\n    if (registryFactoryEntry == null) {\n      throw new Error(\n          `Cannot initialize backend ${backendName}, no registration found.`);\n    }\n\n    try {\n      const backend = registryFactoryEntry.factory();\n      /* Test if the factory returns a promise.\n      Done in a more liberal way than\n      previous 'Promise.resolve(backend)===backend'\n      as we needed to account for custom Promise\n      implementations (e.g. Angular) */\n      if (backend && !(backend instanceof KernelBackend) &&\n          typeof backend.then === 'function') {\n        const promiseId = ++this.pendingBackendInitId;\n        const success =\n            backend\n                .then(backendInstance => {\n                  // Outdated promise. Another backend was set in the meantime.\n                  if (promiseId < this.pendingBackendInitId) {\n                    return false;\n                  }\n                  this.registry[backendName] = backendInstance;\n                  this.pendingBackendInit = null;\n                  return true;\n                })\n                .catch(err => {\n                  // Outdated promise. Another backend was set in the meantime.\n                  if (promiseId < this.pendingBackendInitId) {\n                    return false;\n                  }\n                  this.pendingBackendInit = null;\n                  console.warn(\n                      `Initialization of backend ${backendName} failed`);\n                  console.warn(err.stack || err.message);\n                  return false;\n                });\n        this.pendingBackendInit = success;\n        return {success, asyncInit: true};\n      } else {\n        this.registry[backendName] = backend as KernelBackend;\n        return {success: true, asyncInit: false};\n      }\n    } catch (err) {\n      console.warn(`Initialization of backend ${backendName} failed`);\n      console.warn(err.stack || err.message);\n      return {success: false, asyncInit: false};\n    }\n  }\n\n  removeBackend(backendName: string): void {\n    if (!(backendName in this.registryFactory)) {\n      throw new Error(`${backendName} backend not found in registry`);\n    }\n    if (this.backendName === backendName && this.pendingBackendInit != null) {\n      // There is a pending promise of the backend we want to remove. Make it\n      // obsolete.\n      this.pendingBackendInitId++;\n    }\n\n    if (backendName in this.registry) {\n      this.disposeRegisteredKernels(backendName);\n      this.registry[backendName].dispose();\n      delete this.registry[backendName];\n    }\n\n    delete this.registryFactory[backendName];\n\n    // Unset the backend if it is active.\n    if (this.backendName === backendName) {\n      this.pendingBackendInit = null;\n      this.backendName = null;\n      this.backendInstance = null;\n    }\n  }\n\n  private getSortedBackends(): string[] {\n    if (Object.keys(this.registryFactory).length === 0) {\n      throw new Error('No backend found in registry.');\n    }\n    return Object.keys(this.registryFactory).sort((a: string, b: string) => {\n      // Highest priority comes first.\n      return this.registryFactory[b].priority -\n          this.registryFactory[a].priority;\n    });\n  }\n\n  private initializeBackendsAndReturnBest():\n      {name: string, asyncInit: boolean} {\n    const sortedBackends = this.getSortedBackends();\n\n    for (let i = 0; i < sortedBackends.length; i++) {\n      const backendName = sortedBackends[i];\n      const {success, asyncInit} = this.initializeBackend(backendName);\n      if (asyncInit || success) {\n        return {name: backendName, asyncInit};\n      }\n    }\n    throw new Error(\n        `Could not initialize any backends, all backend initializations ` +\n        `failed.`);\n  }\n\n  moveData(backend: KernelBackend, dataId: DataId) {\n    const info = this.state.tensorInfo.get(dataId);\n    const srcBackend = info.backend;\n    const values = this.readSync(dataId);\n    const refCount = srcBackend.refCount(dataId);\n    // Delete the tensor from the old backend and move it to the new\n    // backend.\n    srcBackend.disposeData(dataId, true);\n    info.backend = backend;\n    backend.move(dataId, values, info.shape, info.dtype, refCount);\n    if (this.shouldCheckForMemLeaks()) {\n      // Track the number of moves during a kernel execution to correctly\n      // detect memory leaks.\n      this.state.numDataMovesStack[this.state.numDataMovesStack.length - 1]++;\n    }\n  }\n\n  tidy<T extends TensorContainer>(nameOrFn: string|ScopeFn<T>, fn?: ScopeFn<T>):\n      T {\n    let name: string = null;\n    if (fn == null) {\n      // Called with only 1 argument.\n      if (typeof nameOrFn !== 'function') {\n        throw new Error('Please provide a function to tidy()');\n      }\n      fn = nameOrFn;\n    } else {\n      // Called with 2 arguments.\n      if (typeof nameOrFn !== 'string' && !(nameOrFn instanceof String)) {\n        throw new Error(\n            'When calling with two arguments, the first argument ' +\n            'to tidy() must be a string');\n      }\n      if (typeof fn !== 'function') {\n        throw new Error(\n            'When calling with two arguments, the 2nd argument ' +\n            'to tidy() must be a function');\n      }\n      name = nameOrFn as string;\n      // TODO(nsthorat,smilkov): Do operation logging and performance\n      // profiling.\n    }\n    let result: T;\n    return this.scopedRun(\n        () => this.startScope(name), () => this.endScope(result), () => {\n          result = fn();\n          if (result instanceof Promise) {\n            console.error('Cannot return a Promise inside of tidy.');\n          }\n          return result;\n        });\n  }\n\n  private scopedRun<T>(start: () => void, end: () => void, f: () => T): T {\n    start();\n    try {\n      const res = f();\n      end();\n      return res;\n    } catch (ex) {\n      end();\n      throw ex;\n    }\n  }\n\n  private static nextTensorId = 0;\n  private nextTensorId(): number {\n    return Engine.nextTensorId++;\n  }\n\n  private static nextVariableId = 0;\n  private nextVariableId(): number {\n    return Engine.nextVariableId++;\n  }\n\n  /**\n   * This method is called instead of the public-facing tensor.clone() when\n   * saving a tensor for backwards pass. It makes sure to add the clone\n   * operation to the tape regardless of being called inside a kernel\n   * execution.\n   */\n  private clone(x: Tensor): Tensor {\n    const y: Tensor = ENGINE.runKernel(Identity, {x} as {} as NamedTensorMap);\n    const inputs = {x};\n    const grad = (dy: Tensor) => ({\n      x: () => {\n        const dtype = 'float32';\n        const gradInputs = {x: dy};\n        const attrs = {dtype};\n\n        return ENGINE.runKernel(\n                   Cast, gradInputs as {} as NamedTensorMap,\n                   // tslint:disable-next-line: no-unnecessary-type-assertion\n                   attrs as {} as NamedAttrMap) as Tensor;\n      }\n    });\n    const saved: Tensor[] = [];\n    this.addTapeNode(this.state.activeScope.name, inputs, [y], grad, saved, {});\n    return y;\n  }\n\n  /**\n   * Execute a kernel with the given name and return the output tensor.\n   *\n   * @param kernelName The name of the kernel to execute.\n   * @param inputs A map of input names to tensors.\n   * @param attrs A map of attribute names to their values. An attribute is a\n   *     primitive (non-tensor) input to the kernel.\n   * @param inputsToSave A list of tensors, inputs to save for the backprop\n   *     computation.\n   * @param outputsToSave A list of booleans, specifying which output to save\n   *     for the backprop computation. These are booleans since the output\n   * tensors are not visible to the user.\n   */\n  runKernel<T extends Tensor|Tensor[]>(\n      kernelName: string, inputs: NamedTensorMap, attrs?: NamedAttrMap): T {\n    if (this.backendName == null) {\n      // backend has not been initialized yet (backend initialization is lazy\n      // can be deferred until an op/ kernel is run).\n      // The below getter has side effects that will try to initialize the\n      // backend and set properties like this.backendName\n      // tslint:disable-next-line: no-unused-expression\n      this.backend;\n    }\n    const hasKernel = getKernel(kernelName, this.backendName) != null;\n    if (!hasKernel) {\n      throw new Error(`Kernel '${kernelName}' not registered for backend '${\n          this.backendName}'`);\n    }\n    return this.runKernelFunc({kernelName, inputs, attrs});\n  }\n\n  private shouldCheckForMemLeaks(): boolean {\n    return this.ENV.getBool('IS_TEST');\n  }\n\n  private checkKernelForMemLeak(\n      kernelName: string, numDataIdsBefore: number,\n      outInfos: TensorInfo[]): void {\n    const numDataIdsAfter = this.backend.numDataIds();\n\n    // Count the number of data ids associated with the result of the kernel.\n    let numOutputDataIds = 0;\n    outInfos.forEach(info => {\n      // Complex numbers allocate 3 data ids, one for 'real', one for\n      // 'imaginary', and one for the container that holds the former two.\n      numOutputDataIds += (info.dtype === 'complex64' ? 3 : 1);\n    });\n\n    // Account for the number of moves during kernel execution. A \"data move\"\n    // can happen in the middle of a kernel execution, placing a new (key,value)\n    // pair in the data storage. Since data moves have net zero effect (we\n    // always remove the data from the old backend), we have to cancel them out\n    // when detecting memory leaks.\n    const numMoves =\n        this.state.numDataMovesStack[this.state.numDataMovesStack.length - 1];\n    const dataIdsLeaked =\n        numDataIdsAfter - numDataIdsBefore - numOutputDataIds - numMoves;\n    if (dataIdsLeaked > 0) {\n      throw new Error(\n          `Backend '${this.backendName}' has an internal memory leak ` +\n          `(${dataIdsLeaked} data ids) after running '${kernelName}'`);\n    }\n  }\n\n  /**\n   * Internal helper method to execute a kernel Func\n   *\n   * Use `runKernel` to execute kernels from outside of engine.\n   */\n  private runKernelFunc<T extends Tensor|Tensor[], I extends NamedTensorMap>(\n      kernelParams: RegisteredKernelInvocation<I>|\n      CustomGradKernelInvocation<T, I>): T {\n    let outputs: Tensor[];\n    let saved: Tensor[] = [];\n    const isTapeOn = this.isTapeOn();\n\n    const startingBytecount = this.state.numBytes;\n    const startingNumTensors = this.state.numTensors;\n\n    if (this.shouldCheckForMemLeaks()) {\n      this.state.numDataMovesStack.push(0);\n    }\n\n    let kernelFunc: () => Tensor[];\n    if (this.backendName == null) {\n      // backend has not been initialized yet (backend initialization is lazy\n      // can be deferred until an op/ kernel is run).\n      // The below getter has side effects that will try to initialize the\n      // backend and set properties like this.backendName\n      // tslint:disable-next-line: no-unused-expression\n      this.backend;\n    }\n\n    let out: TensorInfo|TensorInfo[];\n\n    const kernelOrScopeName = isRegisteredKernelInvocation(kernelParams) ?\n        kernelParams.kernelName :\n        this.state.activeScope != null ? this.state.activeScope.name : '';\n\n    // Create the kernelFunc from either a registered kernel OR passed in\n    // forward/backward functions (used by custom grad). In this context a\n    // kernelFunc wraps a kernel implementation with some bookkeeping.\n\n    if (isRegisteredKernelInvocation(kernelParams)) {\n      const {kernelName, inputs, attrs} = kernelParams;\n      if (this.backendName == null) {\n        // backend has not been initialized yet (backend initialization is lazy\n        // can be deferred until an op/ kernel is run).\n        // The below getter has side effects that will try to initialize the\n        // backend and set properties like this.backendName\n        // tslint:disable-next-line: no-unused-expression\n        this.backend;\n      }\n      const kernel = getKernel(kernelName, this.backendName);\n      util.assert(\n          kernel != null,\n          () => `Cannot find registered kernel '${kernelName}' for backend '${\n              this.backendName}'`);\n\n      kernelFunc = () => {\n        const numDataIdsBefore = this.backend.numDataIds();\n        out = kernel.kernelFunc({inputs, attrs, backend: this.backend});\n        const outInfos = Array.isArray(out) ? out : [out];\n        if (this.shouldCheckForMemLeaks()) {\n          this.checkKernelForMemLeak(kernelName, numDataIdsBefore, outInfos);\n        }\n\n        const outTensors = outInfos.map((outInfo: TensorInfo|Tensor) => {\n          // todo (yassogba) remove this option (Tensor) when node backend\n          // methods have been modularized and they all return tensorInfo.\n          // TensorInfos do not have a rank attribute.\n          if ((outInfo as Tensor).rank != null) {\n            return outInfo as Tensor;\n          }\n          const {dataId, shape, dtype} = outInfo as TensorInfo;\n          return this.makeTensorFromDataId(dataId, shape, dtype);\n        });\n\n        // Save any required inputs and outputs.\n\n        // Do not save unless we are recording to the tape. Otherwise it would\n        // cause a mem leak since there would be no backprop for these tensors\n        // (which would otherwise dispose them).\n        if (isTapeOn) {\n          const tensorsToSave =\n              this.getTensorsForGradient(kernelName, inputs, outTensors);\n          saved = this.saveTensorsForBackwardMode(tensorsToSave);\n        }\n        return outTensors;\n      };\n    } else {\n      const {forwardFunc} = kernelParams;\n      // Running a customGrad op.\n      const saveFunc: GradSaveFunc = (tensors) => {\n        // Do not save unless we are recording to the tape. Otherwise it would\n        // cause a mem leak since we would never run backprop, which disposes\n        // the kept tensors.\n        if (!isTapeOn) {\n          return;\n        }\n        saved = tensors.map(tensor => this.keep(this.clone(tensor)));\n      };\n\n      kernelFunc = () => {\n        const numDataIdsBefore = this.backend.numDataIds();\n        out = this.tidy(() => forwardFunc(this.backend, saveFunc));\n        const outs = (Array.isArray(out) ? out : [out]) as Tensor[];\n        if (this.shouldCheckForMemLeaks()) {\n          // Scope name is used to print a more helpful error message if needed.\n          this.checkKernelForMemLeak(kernelOrScopeName, numDataIdsBefore, outs);\n        }\n        return outs;\n      };\n    }\n\n    //\n    // Run the kernelFunc. Optionally profiling it.\n    //\n    const {inputs, attrs} = kernelParams;\n    const backwardsFunc = isRegisteredKernelInvocation(kernelParams) ?\n        null :\n        kernelParams.backwardsFunc;\n\n    let kernelProfile: KernelProfile;\n    this.scopedRun(\n        // Stop recording to a tape when running a kernel.\n        () => this.state.kernelDepth++, () => this.state.kernelDepth--, () => {\n          if (!this.ENV.getBool('DEBUG') && !this.state.profiling) {\n            outputs = kernelFunc();\n          } else {\n            kernelProfile = this.profiler.profileKernel(\n                kernelOrScopeName, inputs, () => kernelFunc());\n            if (this.ENV.getBool('DEBUG')) {\n              this.profiler.logKernelProfile(kernelProfile);\n            }\n            outputs = kernelProfile.outputs;\n          }\n        });\n\n    if (isTapeOn) {\n      this.addTapeNode(\n          kernelOrScopeName, inputs, outputs, backwardsFunc, saved, attrs);\n    }\n\n    if (this.state.profiling) {\n      this.state.activeProfile.kernels.push({\n        name: kernelOrScopeName,\n        bytesAdded: this.state.numBytes - startingBytecount,\n        totalBytesSnapshot: this.state.numBytes,\n        tensorsAdded: this.state.numTensors - startingNumTensors,\n        totalTensorsSnapshot: this.state.numTensors,\n        inputShapes: Object.keys(inputs).map(\n            key => inputs[key] != null ? inputs[key].shape : null),\n        outputShapes: outputs.map(item => item.shape),\n        kernelTimeMs: kernelProfile.timeMs,\n        extraInfo: kernelProfile.extraInfo\n      });\n    }\n    return (Array.isArray(out) ? outputs : outputs[0]) as T;\n  }\n\n  /**\n   * Saves tensors used in forward mode for use in backward mode.\n   *\n   * @param tensors the list of tensors to save.\n   */\n  private saveTensorsForBackwardMode(tensors: Tensor[]): Tensor[] {\n    const saved = tensors.map(tensor => this.keep(this.clone(tensor)));\n    return saved;\n  }\n\n  /**\n   * Returns a list of tensors to save for a given gradient calculation.\n   *\n   * @param kernelName name of kernel to look up gradient for.\n   * @param inputs a map of input tensors.\n   * @param outputs an array of output tensors from forward mode of kernel.\n   */\n  private getTensorsForGradient(\n      kernelName: string, inputs: NamedTensorMap,\n      outputs: Tensor[]): Tensor[]|null {\n    const gradConfig = getGradient(kernelName);\n    if (gradConfig != null) {\n      const inputsToSave: string[] = gradConfig.inputsToSave || [];\n      const outputsToSave: boolean[] = gradConfig.outputsToSave || [];\n\n      // If saveAllInputs is true, all inputs will be saved. Otherwise, inputs\n      // specified in inputsToSave will be saved.\n      let inputTensorsToSave: Tensor[];\n      if (gradConfig.saveAllInputs) {\n        util.assert(\n            Array.isArray(inputs),\n            () => 'saveAllInputs is true, expected inputs to be an array.');\n\n        inputTensorsToSave = Object.keys(inputs).map((key) => inputs[key]);\n      } else {\n        inputTensorsToSave = inputsToSave.map((inputName) => inputs[inputName]);\n      }\n\n      const outputTensorsToSave: Tensor[] =\n          outputs.filter((_, i) => outputsToSave[i]);\n\n      return inputTensorsToSave.concat(outputTensorsToSave);\n    }\n    // We return an empty list rather than throw an error because the kernel we\n    // are looking up may not actually be relevant to backproping through the\n    // overall function\n    //\n    // See 'does not error if irrelevant (pruned) ops are missing grads' test\n    // in gradients_test.ts for an example.\n    return [];\n  }\n\n  /**\n   * Internal method used by public APIs for tensor creation. Makes a new\n   * tensor with the provided shape, dtype and values. It always\n   * creates a new data id and writes the values to the underlying backend.\n   */\n  makeTensor(\n      values: DataValues, shape: number[], dtype: DataType,\n      backend?: KernelBackend): Tensor {\n    if (values == null) {\n      throw new Error('Values passed to engine.makeTensor() are null');\n    }\n    dtype = dtype || 'float32';\n    backend = backend || this.backend;\n    let backendVals = values as BackendValues;\n    if (dtype === 'string' && util.isString(values[0])) {\n      backendVals = (values as string[]).map(d => util.encodeString(d));\n    }\n    const dataId = backend.write(backendVals, shape, dtype);\n    const t = new Tensor(shape, dtype, dataId, this.nextTensorId());\n    this.trackTensor(t, backend);\n\n    // Count bytes for string tensors.\n    if (dtype === 'string') {\n      const info = this.state.tensorInfo.get(dataId);\n      const newBytes = bytesFromStringArray(backendVals as Uint8Array[]);\n      this.state.numBytes += newBytes - info.bytes;\n      info.bytes = newBytes;\n    }\n    return t;\n  }\n\n  /**\n   * Internal method used by backends. Makes a new tensor\n   * that is a wrapper around an existing data id. It doesn't create\n   * a new data id, only increments the ref count used in memory tracking.\n   */\n  makeTensorFromDataId(\n      dataId: DataId, shape: number[], dtype: DataType,\n      backend?: KernelBackend): Tensor {\n    dtype = dtype || 'float32';\n    const t = new Tensor(shape, dtype, dataId, this.nextTensorId());\n    this.trackTensor(t, backend);\n    return t;\n  }\n\n  makeVariable(\n      initialValue: Tensor, trainable = true, name?: string,\n      dtype?: DataType): Variable {\n    name = name || this.nextVariableId().toString();\n    if (dtype != null && dtype !== initialValue.dtype) {\n      initialValue = initialValue.cast(dtype);\n    }\n    const v = new Variable(initialValue, trainable, name, this.nextTensorId());\n    if (this.state.registeredVariables[v.name] != null) {\n      throw new Error(`Variable with name ${v.name} was already registered`);\n    }\n    this.state.registeredVariables[v.name] = v;\n    this.incRef(v, this.backend);\n    return v;\n  }\n\n  trackTensor(a: Tensor, backend: KernelBackend): void {\n    this.state.numTensors++;\n    if (a.dtype === 'string') {\n      this.state.numStringTensors++;\n    }\n    // Bytes for complex numbers are counted by their components. Bytes for\n    // string tensors are counted when writing values.\n    let bytes = 0;\n    if (a.dtype !== 'complex64' && a.dtype !== 'string') {\n      bytes = a.size * util.bytesPerElement(a.dtype);\n    }\n    this.state.numBytes += bytes;\n\n    if (!this.state.tensorInfo.has(a.dataId)) {\n      this.state.numDataBuffers++;\n      this.state.tensorInfo.set(a.dataId, {\n        backend: backend || this.backend,\n        dtype: a.dtype,\n        shape: a.shape,\n        bytes\n      });\n    }\n\n    if (!(a instanceof Variable)) {\n      this.track(a);\n    }\n  }\n\n  // Track the tensor by dataId and increase the refCount for the dataId in the\n  // backend.\n  // TODO(pyu10055): This is currently used by makeVariable method, to increase\n  // refCount on the backend for the dataId. It can potentially be replaced with\n  // Identity op indead of calling backend directly.\n  incRef(a: Tensor, backend: KernelBackend): void {\n    this.trackTensor(a, backend);\n    this.backend.incRef(a.dataId);\n  }\n\n  removeDataId(dataId: DataId, backend: KernelBackend) {\n    if (this.state.tensorInfo.has(dataId) &&\n        this.state.tensorInfo.get(dataId).backend === backend) {\n      this.state.tensorInfo.delete(dataId);\n      this.state.numDataBuffers--;\n    }\n  }\n  disposeTensor(a: Tensor): void {\n    if (!this.state.tensorInfo.has(a.dataId)) {\n      return;\n    }\n    const info = this.state.tensorInfo.get(a.dataId);\n\n    this.state.numTensors--;\n    if (a.dtype === 'string') {\n      this.state.numStringTensors--;\n      this.state.numBytes -= info.bytes;\n    }\n    // Don't count bytes for complex numbers as they are counted by their\n    // components.\n    if (a.dtype !== 'complex64' && a.dtype !== 'string') {\n      const bytes = a.size * util.bytesPerElement(a.dtype);\n      this.state.numBytes -= bytes;\n    }\n\n    // Remove the reference to dataId if backend dispose the data successfully\n    if (info.backend.disposeData(a.dataId)) {\n      this.removeDataId(a.dataId, info.backend);\n    }\n\n    // TODO(nsthorat): Construct an error and save the stack trace for\n    // debugging when in debug mode. Creating a stack trace is too expensive\n    // to do unconditionally.\n  }\n\n  disposeVariables(): void {\n    for (const varName in this.state.registeredVariables) {\n      const v = this.state.registeredVariables[varName];\n      this.disposeVariable(v);\n    }\n  }\n\n  disposeVariable(v: Variable): void {\n    this.disposeTensor(v);\n    if (this.state.registeredVariables[v.name] != null) {\n      delete this.state.registeredVariables[v.name];\n    }\n  }\n\n  memory(): MemoryInfo {\n    const info = this.backend.memory() as MemoryInfo;\n    info.numTensors = this.state.numTensors;\n    info.numDataBuffers = this.state.numDataBuffers;\n    info.numBytes = this.state.numBytes;\n    if (this.state.numStringTensors > 0) {\n      info.unreliable = true;\n      if (info.reasons == null) {\n        info.reasons = [];\n      }\n      info.reasons.push(\n          'Memory usage by string tensors is approximate ' +\n          '(2 bytes per character)');\n    }\n    return info;\n  }\n\n  async profile(query: () => (TensorContainer | Promise<TensorContainer>)):\n      Promise<ProfileInfo> {\n    this.state.profiling = true;\n\n    const startBytes = this.state.numBytes;\n    const startNumTensors = this.state.numTensors;\n\n    this.state.activeProfile.kernels = [];\n    this.state.activeProfile.result = await query();\n\n    this.state.profiling = false;\n\n    this.state.activeProfile.peakBytes = Math.max(\n        ...this.state.activeProfile.kernels.map(d => d.totalBytesSnapshot));\n    this.state.activeProfile.newBytes = this.state.numBytes - startBytes;\n    this.state.activeProfile.newTensors =\n        this.state.numTensors - startNumTensors;\n    for (const kernel of this.state.activeProfile.kernels) {\n      kernel.kernelTimeMs = await kernel.kernelTimeMs;\n      kernel.extraInfo = await kernel.extraInfo;\n    }\n    return this.state.activeProfile;\n  }\n\n  isTapeOn(): boolean {\n    return this.state.gradientDepth > 0 && this.state.kernelDepth === 0;\n  }\n\n  private addTapeNode(\n      kernelName: string, inputs: NamedTensorMap, outputs: Tensor[],\n      gradientsFunc: GradFunc, saved: Tensor[], attrs: NamedAttrMap): void {\n    const tapeNode: TapeNode =\n        {id: this.state.nextTapeNodeId++, kernelName, inputs, outputs, saved};\n\n    const gradConfig = getGradient(kernelName);\n    if (gradConfig != null) {\n      gradientsFunc = gradConfig.gradFunc;\n    }\n    if (gradientsFunc != null) {\n      tapeNode.gradient = (dys: Tensor[]) => {\n        // TODO(smilkov): To optimize back-prop, pass dys that are not used in\n        // the backprop graph to the user as null instead of zeros\n        dys = dys.map((dy, i) => {\n          if (dy == null) {\n            const output = outputs[i];\n            const vals = util.makeZerosTypedArray(output.size, output.dtype);\n            return this.makeTensor(vals, output.shape, output.dtype);\n          }\n          return dy;\n        });\n        // Grad functions of ops with single outputs expect a dy, while ops\n        // with multiple outputs expect dys (array of dy).\n        return gradientsFunc(dys.length > 1 ? dys : dys[0], saved, attrs);\n      };\n    }\n    this.state.activeTape.push(tapeNode);\n  }\n\n  keep<T extends Tensor>(result: T): T {\n    result.kept = true;\n    return result;\n  }\n\n  private startTape() {\n    if (this.state.gradientDepth === 0) {\n      this.state.activeTape = [];\n    }\n    this.state.gradientDepth++;\n  }\n\n  private endTape() {\n    this.state.gradientDepth--;\n  }\n\n  /**\n   * Start a scope. Use this with endScope() to achieve the same functionality\n   * as scope() without the need for a function closure.\n   */\n  startScope(name?: string) {\n    const scopeInfo: ScopeState = {\n      track: [],\n      name: 'unnamed scope',\n      id: this.state.nextScopeId++\n    };\n    if (name) {\n      scopeInfo.name = name;\n    }\n    this.state.scopeStack.push(scopeInfo);\n    this.state.activeScope = scopeInfo;\n  }\n\n  /**\n   * End a scope. Use this with startScope() to achieve the same functionality\n   * as scope() without the need for a function closure.\n   */\n  endScope(result?: TensorContainer) {\n    const tensorsToTrackInParent = getTensorsInContainer(result);\n    const tensorsToTrackInParentSet =\n        new Set(tensorsToTrackInParent.map(t => t.id));\n\n    // Dispose the arrays tracked in this scope.\n    for (let i = 0; i < this.state.activeScope.track.length; i++) {\n      const tensor = this.state.activeScope.track[i];\n      if (!tensor.kept && !tensorsToTrackInParentSet.has(tensor.id)) {\n        tensor.dispose();\n      }\n    }\n\n    const oldScope = this.state.scopeStack.pop();\n    this.state.activeScope = this.state.scopeStack.length === 0 ?\n        null :\n        this.state.scopeStack[this.state.scopeStack.length - 1];\n\n    // Track the current result in the parent scope.\n    tensorsToTrackInParent.forEach(tensor => {\n      // Only track the tensor if was allocated in the inner scope and is not\n      // globally kept.\n      if (!tensor.kept && tensor.scopeId === oldScope.id) {\n        this.track(tensor);\n      }\n    });\n  }\n\n  /**\n   * Returns gradients of `f` with respect to each of the `xs`. The gradients\n   * returned are of the same length as `xs`, but some might be null if `f`\n   * was not a function of that `x`. It also takes optional dy to multiply the\n   * gradient, which defaults to `1`.\n   */\n  gradients<T extends Tensor>(\n      f: () => T, xs: Tensor[], dy?: T,\n      allowNoGradients = false): {value: T, grads: Tensor[]} {\n    util.assert(\n        xs.length > 0, () => 'gradients() received an empty list of xs.');\n    if (dy != null && dy.dtype !== 'float32') {\n      throw new Error(`dy must have 'float32' dtype, but has '${dy.dtype}'`);\n    }\n\n    const y = this.scopedRun(\n        () => this.startTape(), () => this.endTape(),\n        () => this.tidy('forward', f));\n\n    util.assert(\n        y instanceof Tensor,\n        () => 'The result y returned by f() must be a tensor.');\n    // Filter out the nodes that don't connect x => y.\n    const filteredTape = getFilteredNodesXToY(this.state.activeTape, xs, y);\n    if (!allowNoGradients && filteredTape.length === 0 && xs.length > 0) {\n      throw new Error(\n          'Cannot compute gradient of y=f(x) with respect to x. Make sure ' +\n          'that the f you passed encloses all operations that lead from x ' +\n          'to y.');\n    }\n\n    return this.tidy('backward', () => {\n      const accumulatedGradientMap: {[tensorId: number]: Tensor} = {};\n      accumulatedGradientMap[y.id] = (dy == null) ? ones(y.shape) : dy;\n\n      // Backprop gradients through the filtered nodes.\n      backpropagateGradients(\n          accumulatedGradientMap, filteredTape,\n          // Pass the tidy function to avoid circular dep with `tape.ts`.\n          f => this.tidy(f as ScopeFn<Tensor>),\n          // Pass an add function to avoide a circular dep with `tape.ts`.\n          add);\n      const grads = xs.map(x => accumulatedGradientMap[x.id]);\n\n      if (this.state.gradientDepth === 0) {\n        // This means that we are not computing higher-order gradients\n        // and can clean up the tape.\n        this.state.activeTape.forEach(node => {\n          for (const tensor of node.saved) {\n            tensor.dispose();\n          }\n        });\n        this.state.activeTape = null;\n      }\n      return {value: y, grads};\n    });\n  }\n\n  customGrad<T extends Tensor>(f: CustomGradientFunc<T>):\n      (...args: Array<Tensor|GradSaveFunc>) => T {\n    util.assert(\n        util.isFunction(f),\n        () => 'The f passed in customGrad(f) must be a function.');\n    return (...inputs: Tensor[]): T => {\n      util.assert(\n          inputs.every(t => t instanceof Tensor),\n          () => 'The args passed in customGrad(f)(x1, x2,...) must all be ' +\n              'tensors');\n\n      let res: {\n        value: T,\n        gradFunc: (dy: T, saved: Tensor[]) => Tensor | Tensor[],\n      };\n      const inputMap: NamedTensorMap = {};\n      inputs.forEach((input, i) => {\n        inputMap[i] = input;\n      });\n\n      const forwardFunc: ForwardFunc<T> = (_, save) => {\n        res = f(...[...inputs, save]);\n        util.assert(\n            res.value instanceof Tensor,\n            () => 'The function f passed in customGrad(f) must return an ' +\n                'object where `obj.value` is a tensor');\n        util.assert(\n            util.isFunction(res.gradFunc),\n            () => 'The function f passed in customGrad(f) must return an ' +\n                'object where `obj.gradFunc` is a function.');\n        return res.value;\n      };\n\n      const backwardsFunc = (dy: T, saved: Tensor[]) => {\n        const gradRes = res.gradFunc(dy, saved);\n        const grads: Tensor[] = Array.isArray(gradRes) ? gradRes : [gradRes];\n        util.assert(\n            grads.length === inputs.length,\n            () => 'The function f passed in customGrad(f) must return an ' +\n                'object where `obj.gradFunc` is a function that returns ' +\n                'the same number of tensors as inputs passed to f(...).');\n        util.assert(\n            grads.every(t => t instanceof Tensor),\n            () => 'The function f passed in customGrad(f) must return an ' +\n                'object where `obj.gradFunc` is a function that returns ' +\n                'a list of only tensors.');\n        const gradMap: {[key: string]: () => Tensor} = {};\n        grads.forEach((grad, i) => {\n          gradMap[i] = () => grad;\n        });\n        return gradMap;\n      };\n\n      return this.runKernelFunc({\n        forwardFunc,\n        backwardsFunc,\n        inputs: inputMap,\n      });\n    };\n  }\n\n  readSync(dataId: DataId): BackendValues {\n    // Route the read to the correct backend.\n    const info = this.state.tensorInfo.get(dataId);\n    return info.backend.readSync(dataId);\n  }\n  read(dataId: DataId): Promise<BackendValues> {\n    // Route the read to the correct backend.\n    const info = this.state.tensorInfo.get(dataId);\n    return info.backend.read(dataId);\n  }\n\n  async time(query: () => void): Promise<TimingInfo> {\n    const start = now();\n    const timingInfo = await this.backend.time(query) as TimingInfo;\n    timingInfo.wallMs = now() - start;\n    return timingInfo;\n  }\n\n  /**\n   * Tracks a Tensor in the current scope to be automatically cleaned up\n   * when the current scope ends, and returns the value.\n   *\n   * @param result The Tensor to track in the current scope.\n   */\n  private track<T extends Tensor>(result: T): T {\n    if (this.state.activeScope != null) {\n      result.scopeId = this.state.activeScope.id;\n      this.state.activeScope.track.push(result);\n    }\n\n    return result;\n  }\n\n  get registeredVariables(): NamedVariableMap {\n    return this.state.registeredVariables;\n  }\n\n  /**\n   * Resets the engine state. Removes all backends but does not remove\n   * registered backend factories.\n   */\n  reset(): void {\n    // Make any pending promise obsolete.\n    this.pendingBackendInitId++;\n\n    this.state.dispose();\n    this.ENV.reset();\n    this.state = new EngineState();\n\n    for (const backendName in this.registry) {\n      this.disposeRegisteredKernels(backendName);\n      this.registry[backendName].dispose();\n      delete this.registry[backendName];\n    }\n    this.backendName = null;\n    this.backendInstance = null;\n    this.pendingBackendInit = null;\n  }\n}\n\nfunction ones(shape: number[]): Tensor {\n  const values = makeOnesTypedArray(sizeFromShape(shape), 'float32');\n  return ENGINE.makeTensor(values, shape, 'float32');\n}\n\nexport function getOrMakeEngine(): Engine {\n  const ns = getGlobalNamespace() as {} as {_tfengine: Engine};\n  if (ns._tfengine == null) {\n    const environment = new Environment(ns);\n    ns._tfengine = new Engine(environment);\n  }\n  setEnvironmentGlobal(ns._tfengine.ENV);\n\n  // Tell the current tensor interface that the global engine is responsible\n  // for tracking.\n  setTensorTracker(() => ns._tfengine);\n  return ns._tfengine;\n}\n\nexport const ENGINE = getOrMakeEngine();\n\n/**\n * A implementation of the add op for use within engine and tape.\n *\n * This allows us to avoid a circular dependency between add.ts and engine.\n * It is exported to be available in tape tests.\n */\nexport function add(a: Tensor, b: Tensor): Tensor {\n  // We duplicate Add here to avoid a circular dependency with add.ts.\n  const inputs = {a, b};\n  return ENGINE.runKernel(Add, inputs as {} as NamedTensorMap);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Allow UpperCamelCase variable names\n// tslint:disable: variable-name\n// Unfortunately just enabling PascalCase per file (tslint:enable:\n// allow-pascal-case) doesn't work.\nimport {NamedTensorInfoMap, TensorInfo} from './kernel_registry';\nimport {ExplicitPadding} from './ops/conv_util';\nimport {Activation} from './ops/fused_types';\nimport {DataType, PixelData} from './types';\n\nexport const Abs = 'Abs';\nexport type AbsInputs = UnaryInputs;\n\nexport const Acos = 'Acos';\nexport type AcosInputs = UnaryInputs;\n\nexport const Acosh = 'Acosh';\nexport type AcoshInputs = UnaryInputs;\n\nexport const Add = 'Add';\nexport type AddInputs = BinaryInputs;\n\nexport const AddN = 'AddN';\nexport type AddNInputs = TensorInfo[];\n\nexport const All = 'All';\nexport type AllInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface AllAttrs {\n  axis: number|number[];\n  keepDims: boolean;\n}\n\nexport const Any = 'Any';\nexport type AnyInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface AnyAttrs {\n  axis: number|number[];\n  keepDims: boolean;\n}\n\nexport const ArgMax = 'ArgMax';\nexport type ArgMaxInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface ArgMaxAttrs {\n  axis: number;\n}\n\nexport const ArgMin = 'ArgMin';\nexport type ArgMinInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface ArgMinAttrs {\n  axis: number;\n}\n\nexport const Asin = 'Asin';\nexport type AsinInputs = UnaryInputs;\n\nexport const Asinh = 'Asinh';\nexport type AsinhInputs = UnaryInputs;\n\nexport const Atan = 'Atan';\nexport type AtanInputs = UnaryInputs;\n\nexport const Atanh = 'Atanh';\nexport type AtanhInputs = UnaryInputs;\n\nexport const Atan2 = 'Atan2';\nexport type Atan2Inputs = BinaryInputs;\n\nexport const AvgPool = 'AvgPool';\nexport type AvgPoolInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface AvgPoolAttrs {\n  filterSize: [number, number]|number;\n  strides: [number, number]|number;\n  pad: 'valid'|'same'|number|ExplicitPadding;\n  dimRoundingMode?: 'floor'|'round'|'ceil';\n}\n\nexport const AvgPoolGrad = 'AvgPoolGrad';\nexport type AvgPoolGradInputs = Pick<NamedTensorInfoMap, 'dy'|'input'>;\nexport interface AvgPoolGradAttrs {\n  filterSize: [number, number]|number;\n  strides: [number, number]|number;\n  pad: 'valid'|'same'|number|ExplicitPadding;\n}\n\nexport const AvgPool3D = 'AvgPool3D';\nexport type AvgPool3DInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface AvgPool3DAttrs {\n  filterSize: [number, number, number]|number;\n  strides: [number, number, number]|number;\n  pad: 'valid'|'same'|number;\n  dimRoundingMode?: 'floor'|'round'|'ceil';\n  dataFormat: 'NDHWC'|'NCDHW';\n}\n\nexport const AvgPool3DGrad = 'AvgPool3DGrad';\nexport type AvgPool3DGradInputs = Pick<NamedTensorInfoMap, 'dy'|'input'>;\nexport interface AvgPool3DGradAttrs {\n  filterSize: [number, number, number]|number;\n  strides: [number, number, number]|number;\n  pad: 'valid'|'same'|number;\n  dimRoundingMode?: 'floor'|'round'|'ceil';\n}\n\nexport const BatchMatMul = 'BatchMatMul';\nexport type BatchMatMulInputs = Pick<NamedTensorInfoMap, 'a'|'b'>;\nexport interface BatchMatMulAttrs {\n  transposeA: boolean;\n  transposeB: boolean;\n}\n\nexport const BatchToSpaceND = 'BatchToSpaceND';\nexport type BatchToSpaceNDInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface BatchToSpaceNDAttrs {\n  blockShape: number[];\n  crops: number[][];\n}\n\nexport type BinaryInputs = Pick<NamedTensorInfoMap, 'a'|'b'>;\n\nexport const Bincount = 'Bincount';\nexport type BincountInputs = Pick<NamedTensorInfoMap, 'x'|'weights'>;\nexport interface BincountAttrs {\n  size: number;\n}\n\nexport const BroadcastTo = 'BroadcastTo';\nexport type BroadcastToInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface BroadCastToAttrs {\n  shape: number[];\n  inputShape: number[];  // for gradient\n}\n\nexport const Cast = 'Cast';\nexport type CastInputs = UnaryInputs;\nexport interface CastAttrs {\n  dtype: DataType;\n}\n\nexport const Ceil = 'Ceil';\nexport type CeilInputs = UnaryInputs;\n\nexport const ClipByValue = 'ClipByValue';\nexport type ClipByValueInputs = UnaryInputs;\nexport interface ClipByValueAttrs {\n  clipValueMin: number;\n  clipValueMax: number;\n}\n\nexport const Complex = 'Complex';\nexport type ComplexInputs = Pick<NamedTensorInfoMap, 'real'|'imag'>;\n\nexport const ComplexAbs = 'ComplexAbs';\nexport type ComplexAbsInputs = UnaryInputs;\n\nexport const Concat = 'Concat';\nexport type ConcatInputs = TensorInfo[];\nexport interface ConcatAttrs {\n  axis: number;\n}\n\nexport const Conv2D = 'Conv2D';\nexport type Conv2DInputs = Pick<NamedTensorInfoMap, 'x'|'filter'>;\nexport interface Conv2DAttrs {\n  strides: [number, number]|number;\n  pad: 'valid'|'same'|number|ExplicitPadding;\n  dataFormat: 'NHWC'|'NCHW';\n  dilations: [number, number]|number;\n  dimRoundingMode?: 'floor'|'round'|'ceil';\n}\n\nexport const Conv2DBackpropFilter = 'Conv2DBackpropFilter';\nexport type Conv2DBackpropFilterInputs = Pick<NamedTensorInfoMap, 'x'|'dy'>;\nexport interface Conv2DBackpropFilterAttrs {\n  strides: [number, number]|number;\n  pad: 'valid'|'same'|number|ExplicitPadding;\n  dataFormat: 'NHWC'|'NCHW';\n  dimRoundingMode?: 'floor'|'round'|'ceil';\n  filterShape: [number, number, number, number];\n}\n\nexport const Conv2DBackpropInput = 'Conv2DBackpropInput';\nexport type Conv2DBackpropInputInputs = Pick<NamedTensorInfoMap, 'dy'|'filter'>;\nexport interface Conv2DBackpropInputAttrs {\n  strides: [number, number]|number;\n  pad: 'valid'|'same'|number|ExplicitPadding;\n  dataFormat: 'NHWC'|'NCHW';\n  dimRoundingMode?: 'floor'|'round'|'ceil';\n  inputShape: [number, number, number, number];\n}\n\nexport const Conv3D = 'Conv3D';\nexport type Conv3DInputs = Pick<NamedTensorInfoMap, 'x'|'filter'>;\nexport interface Conv3DAttrs {\n  strides: [number, number, number]|number;\n  pad: 'valid'|'same';\n  dataFormat: 'NDHWC'|'NCDHW';\n  dilations: [number, number, number]|number;\n}\n\nexport const Conv3DBackpropFilterV2 = 'Conv3DBackpropFilterV2';\nexport type Conv3DBackpropFilterV2Inputs = Pick<NamedTensorInfoMap, 'x'|'dy'>;\n\nexport interface Conv3DBackpropFilterV2Attrs {\n  strides: [number, number, number]|number;\n  pad: 'valid'|'same';\n  filterShape: [number, number, number, number, number];\n}\n\nexport const Conv3DBackpropInputV2 = 'Conv3DBackpropInputV2';\nexport type Conv3DBackpropInputV2Inputs =\n    Pick<NamedTensorInfoMap, 'dy'|'filter'>;\nexport interface Conv3DBackpropInputV2Attrs {\n  strides: [number, number, number]|number;\n  pad: 'valid'|'same';\n  inputShape: [number, number, number, number, number];\n}\n\nexport const Cos = 'Cos';\nexport type CosInputs = UnaryInputs;\n\nexport const Cosh = 'Cosh';\nexport type CoshInputs = UnaryInputs;\n\nexport const Cumsum = 'Cumsum';\nexport type CumsumInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface CumsumAttrs {\n  axis: number;\n  exclusive: boolean;\n  reverse: boolean;\n}\n\nexport const CropAndResize = 'CropAndResize';\nexport type CropAndResizeInputs =\n    Pick<NamedTensorInfoMap, 'image'|'boxes'|'boxInd'>;\nexport interface CropAndResizeAttrs {\n  cropSize: [number, number];\n  method: 'bilinear'|'nearest';\n  extrapolationValue: number;\n}\n\nexport const DenseBincount = 'DenseBincount';\nexport type DenseBincountInputs = Pick<NamedTensorInfoMap, 'x'|'weights'>;\nexport interface DenseBincountAttrs {\n  size: number;\n  binaryOutput?: boolean;\n}\n\nexport const DepthToSpace = 'DepthToSpace';\nexport type DepthToSpaceInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface DepthToSpaceAttrs {\n  blockSize: number;\n  dataFormat: 'NHWC'|'NCHW';\n}\n\nexport const DepthwiseConv2dNative = 'DepthwiseConv2dNative';\nexport type DepthwiseConv2dNativeInputs =\n    Pick<NamedTensorInfoMap, 'x'|'filter'>;\nexport interface DepthwiseConv2dNativeAttrs {\n  strides: [number, number]|number;\n  pad: 'valid'|'same'|number|ExplicitPadding;\n  dataFormat: 'NHWC'|'NCHW';\n  dilations: [number, number]|number;\n  dimRoundingMode?: 'floor'|'round'|'ceil';\n}\n\nexport const DepthwiseConv2dNativeBackpropFilter =\n    'DepthwiseConv2dNativeBackpropFilter';\nexport type DepthwiseConv2dNativeBackpropFilterInputs =\n    Pick<NamedTensorInfoMap, 'x'|'dy'>;\nexport interface DepthwiseConv2dNativeBackpropFilterAttrs {\n  strides: [number, number]|number;\n  dilations: [number, number]|number;\n  pad: 'valid'|'same'|number|ExplicitPadding;\n  dimRoundingMode?: 'floor'|'round'|'ceil';\n  filterShape: [number, number, number, number];\n}\n\nexport const DepthwiseConv2dNativeBackpropInput =\n    'DepthwiseConv2dNativeBackpropInput';\nexport type DepthwiseConv2dNativeBackpropInputInputs =\n    Pick<NamedTensorInfoMap, 'dy'|'filter'>;\nexport interface DepthwiseConv2dNativeBackpropInputAttrs {\n  strides: [number, number]|number;\n  dilations: [number, number]|number;\n  pad: 'valid'|'same'|number|ExplicitPadding;\n  dimRoundingMode?: 'floor'|'round'|'ceil';\n  inputShape: [number, number, number, number];\n}\n\nexport const Diag = 'Diag';\nexport type DiagInputs = Pick<NamedTensorInfoMap, 'x'>;\n\nexport const Dilation2D = 'Dilation2D';\nexport type Dilation2DInputs = Pick<NamedTensorInfoMap, 'x'|'filter'>;\nexport interface Dilation2DAttrs {\n  strides: [number, number]|number;\n  pad: 'valid'|'same'|number;\n  dilations: [number, number]|number;\n}\n\nexport const Dilation2DBackpropInput = 'Dilation2DBackpropInput';\nexport type Dilation2DBackpropInputInputs =\n    Pick<NamedTensorInfoMap, 'x'|'filter'|'dy'>;\n\nexport const Dilation2DBackpropFilter = 'Dilation2DBackpropFilter';\nexport type Dilation2DBackpropFilterInputs =\n    Pick<NamedTensorInfoMap, 'x'|'filter'|'dy'>;\n\nexport const RealDiv = 'RealDiv';\nexport type RealDivInputs = BinaryInputs;\n\nexport const Einsum = 'Einsum';\nexport type EinsumInputs = TensorInfo[];\nexport interface EinsumAttrs {\n  equation: string;\n}\n\nexport const Elu = 'Elu';\nexport type EluInputs = Pick<NamedTensorInfoMap, 'x'>;\n\nexport const EluGrad = 'EluGrad';\nexport type EluGradInputs = Pick<NamedTensorInfoMap, 'dy'|'y'>;\n\nexport const Erf = 'Erf';\nexport type ErfInputs = UnaryInputs;\n\nexport const Equal = 'Equal';\nexport type EqualInputs = BinaryInputs;\n\nexport const Exp = 'Exp';\nexport type ExpInputs = UnaryInputs;\n\nexport const ExpandDims = 'ExpandDims';\nexport type ExpandDimsInputs = Pick<NamedTensorInfoMap, 'input'>;\nexport interface ExpandDimsAttrs {\n  dim: number;\n}\n\nexport const Expm1 = 'Expm1';\nexport type Expm1Inputs = UnaryInputs;\n\nexport const FFT = 'FFT';\nexport type FFTInputs = Pick<NamedTensorInfoMap, 'input'>;\n\nexport const Fill = 'Fill';\nexport interface FillAttrs {\n  shape: number[];\n  value: number|string;\n  dtype: DataType;\n}\n\nexport const FlipLeftRight = 'FlipLeftRight';\nexport type FlipLeftRightInputs = Pick<NamedTensorInfoMap, 'image'>;\n\nexport const Floor = 'Floor';\nexport type FloorInputs = UnaryInputs;\n\nexport const FloorDiv = 'FloorDiv';\nexport type FloorDivInputs = BinaryInputs;\n\nexport const FusedBatchNorm = 'FusedBatchNorm';\nexport type FusedBatchNormInputs =\n    Pick<NamedTensorInfoMap, 'x'|'scale'|'offset'|'mean'|'variance'>;\nexport interface FusedBatchNormAttrs {\n  varianceEpsilon: number;\n}\n\nexport const GatherV2 = 'GatherV2';\nexport type GatherV2Inputs = Pick<NamedTensorInfoMap, 'x'|'indices'>;\nexport interface GatherV2Attrs {\n  axis: number;\n  batchDims: number;\n}\n\nexport const GatherNd = 'GatherNd';\nexport type GatherNdInputs = Pick<NamedTensorInfoMap, 'params'|'indices'>;\n\nexport const Greater = 'Greater';\nexport type GreaterInputs = BinaryInputs;\n\nexport const GreaterEqual = 'GreaterEqual';\nexport type GreaterEqualInputs = BinaryInputs;\n\nexport const Identity = 'Identity';\nexport type IdentityInputs = Pick<NamedTensorInfoMap, 'x'>;\n\nexport const IFFT = 'IFFT';\nexport type IFFTInputs = Pick<NamedTensorInfoMap, 'input'>;\n\nexport const Imag = 'Imag';\nexport type ImagInputs = Pick<NamedTensorInfoMap, 'input'>;\n\nexport const IsFinite = 'IsFinite';\nexport type IsFiniteInputs = UnaryInputs;\n\nexport const IsInf = 'IsInf';\nexport type IsInfInputs = UnaryInputs;\n\nexport const IsNan = 'IsNan';\nexport type IsNanInputs = UnaryInputs;\n\nexport const LeakyRelu = 'LeakyRelu';\nexport type LeakyReluInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface LeakyReluAttrs {\n  alpha: number;\n}\n\nexport const Less = 'Less';\nexport type LessInputs = BinaryInputs;\n\nexport const LessEqual = 'LessEqual';\nexport type LessEqualInputs = BinaryInputs;\n\nexport const LinSpace = 'LinSpace';\nexport interface LinSpaceAttrs {\n  start: number;\n  stop: number;\n  num: number;\n}\nexport const Log = 'Log';\nexport type LogInputs = UnaryInputs;\n\nexport const Log1p = 'Log1p';\nexport type Log1pInputs = UnaryInputs;\n\nexport const LogicalAnd = 'LogicalAnd';\nexport type LogicalAndInputs = BinaryInputs;\n\nexport const LogicalNot = 'LogicalNot';\nexport type LogicalNotInputs = Pick<NamedTensorInfoMap, 'x'>;\n\nexport const LogicalOr = 'LogicalOr';\nexport type LogicalOrInputs = BinaryInputs;\n\nexport const LogSoftmax = 'LogSoftmax';\nexport type LogSoftmaxInputs = Pick<NamedTensorInfoMap, 'logits'>;\nexport interface LogSoftmaxAttrs {\n  axis: number;\n}\n\nexport const LRN = 'LRN';\nexport type LRNInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface LRNAttrs {\n  depthRadius: number;\n  bias: number;\n  alpha: number;\n  beta: number;\n}\n\nexport const LRNGrad = 'LRNGrad';\nexport type LRNGradInputs = Pick<NamedTensorInfoMap, 'x'|'y'|'dy'>;\nexport interface LRNGradAttrs {\n  depthRadius: number;\n  bias: number;\n  alpha: number;\n  beta: number;\n}\n\nexport const Max = 'Max';\nexport type MaxInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface MaxAttrs {\n  reductionIndices: number|number[];\n  keepDims: boolean;\n}\n\nexport const Maximum = 'Maximum';\nexport type MaximumInputs = BinaryInputs;\n\nexport const MaxPool = 'MaxPool';\nexport type MaxPoolInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface MaxPoolAttrs {\n  filterSize: [number, number]|number;\n  strides: [number, number]|number;\n  pad: 'valid'|'same'|number|ExplicitPadding;\n  dimRoundingMode?: 'floor'|'round'|'ceil';\n}\n\nexport const MaxPoolGrad = 'MaxPoolGrad';\nexport type MaxPoolGradInputs = Pick<NamedTensorInfoMap, 'dy'|'input'|'output'>;\nexport interface MaxPoolGradAttrs {\n  filterSize: [number, number]|number;\n  strides: [number, number]|number;\n  pad: 'valid'|'same'|number|ExplicitPadding;\n  dimRoundingMode?: 'floor'|'round'|'ceil';\n}\n\nexport const MaxPool3D = 'MaxPool3D';\nexport type MaxPool3DInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface MaxPool3DAttrs {\n  filterSize: [number, number, number]|number;\n  strides: [number, number, number]|number;\n  pad: 'valid'|'same'|number;\n  dataFormat: 'NDHWC'|'NCDHW';\n  dimRoundingMode?: 'floor'|'round'|'ceil';\n}\n\nexport const MaxPool3DGrad = 'MaxPool3DGrad';\nexport type MaxPool3DGradInputs =\n    Pick<NamedTensorInfoMap, 'dy'|'input'|'output'>;\nexport interface MaxPool3DGradAttrs {\n  filterSize: [number, number, number]|number;\n  strides: [number, number, number]|number;\n  pad: 'valid'|'same'|number;\n  dimRoundingMode?: 'floor'|'round'|'ceil';\n}\n\nexport const MaxPoolWithArgmax = 'MaxPoolWithArgmax';\nexport type MaxPoolWithArgmaxInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface MaxPoolWithArgmaxAttrs {\n  filterSize: [number, number]|number;\n  strides: [number, number]|number;\n  pad: 'valid'|'same'|number;\n  includeBatchInIndex: boolean;\n}\n\nexport const Mean = 'Mean';\nexport type MeanInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface MeanAttrs {\n  axis: number|number[];\n  keepDims: boolean;\n}\n\nexport const Min = 'Min';\nexport type MinInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface MinAttrs {\n  axis: number|number[];\n  keepDims: boolean;\n}\n\nexport const Minimum = 'Minimum';\nexport type MinimumInputs = BinaryInputs;\n\nexport const MirrorPad = 'MirrorPad';\nexport type MirrorPadInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface MirrorPadAttrs {\n  paddings: Array<[number, number]>;\n  mode: 'reflect'|'symmetric';\n}\n\nexport const Mod = 'Mod';\nexport type ModInputs = BinaryInputs;\n\nexport const Multinomial = 'Multinomial';\nexport type MultinomialInputs = Pick<NamedTensorInfoMap, 'logits'>;\nexport interface MultinomialAttrs {\n  numSamples: number;\n  seed: number;\n  normalized: boolean;\n}\n\nexport const Multiply = 'Multiply';\nexport type MultiplyInputs = BinaryInputs;\n\nexport const Neg = 'Neg';\nexport type NegInputs = UnaryInputs;\n\nexport const NotEqual = 'NotEqual';\nexport type NotEqualInputs = BinaryInputs;\n\nexport const NonMaxSuppressionV3 = 'NonMaxSuppressionV3';\nexport type NonMaxSuppressionV3Inputs =\n    Pick<NamedTensorInfoMap, 'boxes'|'scores'>;\nexport interface NonMaxSuppressionV3Attrs {\n  maxOutputSize: number;\n  iouThreshold: number;\n  scoreThreshold: number;\n}\n\nexport const NonMaxSuppressionV4 = 'NonMaxSuppressionV4';\nexport type NonMaxSuppressionV4Inputs =\n    Pick<NamedTensorInfoMap, 'boxes'|'scores'>;\nexport interface NonMaxSuppressionV4Attrs {\n  maxOutputSize: number;\n  iouThreshold: number;\n  scoreThreshold: number;\n  padToMaxOutputSize: boolean;\n}\n\nexport const NonMaxSuppressionV5 = 'NonMaxSuppressionV5';\nexport type NonMaxSuppressionV5Inputs =\n    Pick<NamedTensorInfoMap, 'boxes'|'scores'>;\nexport interface NonMaxSuppressionV5Attrs {\n  maxOutputSize: number;\n  iouThreshold: number;\n  scoreThreshold: number;\n  softNmsSigma: number;\n}\n\nexport const OnesLike = 'OnesLike';\nexport type OnesLikeInputs = UnaryInputs;\n\nexport const OneHot = 'OneHot';\nexport type OneHotInputs = Pick<NamedTensorInfoMap, 'indices'>;\nexport interface OneHotAttrs {\n  depth: number;\n  onValue: number;\n  offValue: number;\n}\n\nexport const Pack = 'Pack';\nexport type PackInputs = TensorInfo[];\nexport interface PackAttrs {\n  axis: number;\n}\n\nexport const PadV2 = 'PadV2';\nexport type PadV2Inputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface PadV2Attrs {\n  paddings: Array<[number, number]>;\n  constantValue: number;\n}\n\nexport const Pool = 'Pool';\nexport type PoolInputs = Pick<NamedTensorInfoMap, 'input'>;\n\nexport const Pow = 'Pow';\nexport type PowInputs = BinaryInputs;\n\nexport const Prelu = 'Prelu';\nexport type PreluInputs = Pick<NamedTensorInfoMap, 'x'|'alpha'>;\n\nexport const Prod = 'Prod';\nexport type ProdInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface ProdAttrs {\n  axis: number|number[];\n  keepDims: boolean;\n}\n\nexport const Range = 'Range';\nexport interface RangeAttrs {\n  start: number;\n  stop: number;\n  step: number;\n  dtype: 'float32'|'int32';\n}\n\nexport const Real = 'Real';\nexport type RealInputs = Pick<NamedTensorInfoMap, 'input'>;\n\nexport const Reciprocal = 'Reciprocal';\nexport type ReciprocalInputs = UnaryInputs;\n\nexport const Relu = 'Relu';\nexport type ReluInputs = Pick<NamedTensorInfoMap, 'x'>;\n\nexport const Reshape = 'Reshape';\nexport type ReshapeInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface ReshapeAttrs {\n  shape: number[];\n}\n\nexport const ResizeNearestNeighbor = 'ResizeNearestNeighbor';\nexport type ResizeNearestNeighborInputs = Pick<NamedTensorInfoMap, 'images'>;\nexport interface ResizeNearestNeighborAttrs {\n  alignCorners: boolean;\n  halfPixelCenters: boolean;\n  size: [number, number];\n}\n\nexport const ResizeNearestNeighborGrad = 'ResizeNearestNeighborGrad';\nexport type ResizeNearestNeighborGradInputs =\n    Pick<NamedTensorInfoMap, 'images'|'dy'>;\nexport type ResizeNearestNeighborGradAttrs = ResizeNearestNeighborAttrs;\n\nexport const ResizeBilinear = 'ResizeBilinear';\nexport type ResizeBilinearInputs = Pick<NamedTensorInfoMap, 'images'>;\nexport interface ResizeBilinearAttrs {\n  alignCorners: boolean;\n  halfPixelCenters: boolean;\n  size: [number, number];\n}\n\nexport const ResizeBilinearGrad = 'ResizeBilinearGrad';\nexport type ResizeBilinearGradInputs = Pick<NamedTensorInfoMap, 'images'|'dy'>;\nexport type ResizeBilinearGradAttrs = ResizeBilinearAttrs;\n\nexport const Relu6 = 'Relu6';\nexport type Relu6Inputs = Pick<NamedTensorInfoMap, 'x'>;\n\nexport const Reverse = 'Reverse';\nexport type ReverseInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface ReverseAttrs {\n  dims: number|number[];\n}\n\nexport const Round = 'Round';\nexport type RoundInputs = UnaryInputs;\n\nexport const Rsqrt = 'Rsqrt';\nexport type RsqrtInputs = UnaryInputs;\n\nexport const ScatterNd = 'ScatterNd';\nexport type ScatterNdInputs = Pick<NamedTensorInfoMap, 'indices'|'updates'>;\nexport interface ScatterNdAttrs {\n  shape: number[];\n}\n\nexport const Select = 'Select';\nexport type SelectInputs = Pick<NamedTensorInfoMap, 'condition'|'t'|'e'>;\n\nexport const Selu = 'Selu';\nexport type SeluInputs = Pick<NamedTensorInfoMap, 'x'>;\n\nexport const Slice = 'Slice';\nexport type SliceInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface SliceAttrs {\n  begin: number|number[];\n  size: number|number[];\n}\nexport const Sin = 'Sin';\nexport type SinInputs = UnaryInputs;\n\nexport const Sinh = 'Sinh';\nexport type SinhInputs = UnaryInputs;\n\nexport const Sign = 'Sign';\nexport type SignInputs = UnaryInputs;\n\nexport const Sigmoid = 'Sigmoid';\nexport type SigmoidInputs = UnaryInputs;\n\nexport const Softplus = 'Softplus';\nexport type SoftplusInputs = UnaryInputs;\n\nexport const Sqrt = 'Sqrt';\nexport type SqrtInputs = UnaryInputs;\n\nexport const Sum = 'Sum';\nexport type SumInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface SumAttrs {\n  axis: number|number[];\n  keepDims: boolean;\n}\n\nexport const SpaceToBatchND = 'SpaceToBatchND';\nexport type SpaceToBatchNDInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface SpaceToBatchNDAttrs {\n  blockShape: number[];\n  paddings: number[][];\n}\n\nexport const SplitV = 'SplitV';\nexport type SplitVInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface SplitVAttrs {\n  numOrSizeSplits: number[]|number;\n  axis: number;\n}\n\nexport const Softmax = 'Softmax';\nexport type SoftmaxInputs = Pick<NamedTensorInfoMap, 'logits'>;\nexport interface SoftmaxAttrs {\n  dim: number;\n}\n\nexport const SparseFillEmptyRows = 'SparseFillEmptyRows';\nexport type SparseFillEmptyRowsInputs =\n    Pick<NamedTensorInfoMap, 'indices'|'values'|'denseShape'|'defaultValue'>;\n\nexport const SparseReshape = 'SparseReshape';\nexport type SparseReshapeInputs =\n    Pick<NamedTensorInfoMap, 'inputIndices'|'inputShape'|'newShape'>;\n\nexport const SparseSegmentMean = 'SparseSegmentMean';\nexport type SparseSegmentMeanInputs =\n    Pick<NamedTensorInfoMap, 'data'|'indices'|'segmentIds'>;\n\nexport const SparseSegmentSum = 'SparseSegmentSum';\nexport type SparseSegmentSumInputs =\n    Pick<NamedTensorInfoMap, 'data'|'indices'|'segmentIds'>;\n\nexport const SparseToDense = 'SparseToDense';\nexport type SparseToDenseInputs =\n    Pick<NamedTensorInfoMap, 'sparseIndices'|'sparseValues'|'defaultValue'>;\nexport interface SparseToDenseAttrs {\n  outputShape: number[];\n}\n\nexport const SquaredDifference = 'SquaredDifference';\nexport type SquaredDifferenceInputs = BinaryInputs;\n\nexport const Square = 'Square';\nexport type SquareInputs = Pick<NamedTensorInfoMap, 'x'>;\n\nexport const StridedSlice = 'StridedSlice';\nexport type StridedSliceInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface StridedSliceAttrs {\n  begin: number[];\n  end: number[];\n  strides: number[];\n  beginMask: number;\n  endMask: number;\n  ellipsisMask: number;\n  newAxisMask: number;\n  shrinkAxisMask: number;\n}\n\nexport const StringNGrams = 'StringNGrams';\nexport type StringNGramsInputs = Pick<NamedTensorInfoMap, 'data'|'dataSplits'>;\nexport interface StringNGramsAttrs {\n  separator: string;\n  nGramWidths: number[];\n  leftPad: string;\n  rightPad: string;\n  padWidth: number;\n  preserveShortSequences: boolean;\n}\n\nexport const StringSplit = 'StringSplit';\nexport type StringSplitInputs = Pick<NamedTensorInfoMap, 'input'|'delimiter'>;\nexport interface StringSplitAttrs {\n  skipEmpty: boolean;\n}\n\nexport const StringToHashBucketFast = 'StringToHashBucketFast';\nexport type StringToHashBucketFastInputs = Pick<NamedTensorInfoMap, 'input'>;\nexport interface StringToHashBucketFastAttrs {\n  numBuckets: number;\n}\n\nexport const Sub = 'Sub';\nexport type SubInputs = BinaryInputs;\n\nexport const Tan = 'Tan';\nexport type TanInputs = UnaryInputs;\n\nexport const Tanh = 'Tanh';\nexport type TanhInputs = UnaryInputs;\n\nexport const Tile = 'Tile';\nexport type TileInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface TileAttrs {\n  reps: number[];\n}\n\nexport const TopK = 'TopK';\nexport type TopKInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface TopKAttrs {\n  k: number;\n  sorted: boolean;\n}\n\nexport const Transform = 'Transform';\nexport type TransformInputs = Pick<NamedTensorInfoMap, 'image'|'transforms'>;\nexport interface TransformAttrs {\n  interpolation: 'nearest'|'bilinear';\n  fillMode: 'constant'|'reflect'|'wrap'|'nearest';\n  fillValue: number;\n  outputShape?: [number, number];\n}\n\nexport const Transpose = 'Transpose';\nexport type TransposeInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface TransposeAttrs {\n  perm: number[];\n}\n\nexport const Unique = 'Unique';\nexport type UniqueInputs = Pick<NamedTensorInfoMap, 'x'>;\nexport interface UniqueAttrs {\n  axis: number;\n}\n\nexport type UnaryInputs = Pick<NamedTensorInfoMap, 'x'>;\n\nexport const Unpack = 'Unpack';\nexport type UnpackInputs = Pick<NamedTensorInfoMap, 'value'>;\nexport interface UnpackAttrs {\n  axis: number;\n}\n\nexport const UnsortedSegmentSum = 'UnsortedSegmentSum';\nexport type UnsortedSegmentSumInputs =\n    Pick<NamedTensorInfoMap, 'x'|'segmentIds'>;\nexport interface UnsortedSegmentSumAttrs {\n  numSegments: number;\n}\n\nexport const ZerosLike = 'ZerosLike';\nexport type ZerosLikeInputs = UnaryInputs;\n\n/**\n * TensorFlow.js-only kernels\n */\nexport const Step = 'Step';\nexport type StepInputs = UnaryInputs;\nexport interface StepAttrs {\n  alpha: number;\n}\n\nexport const FromPixels = 'FromPixels';\nexport interface FromPixelsInputs {\n  pixels: PixelData|ImageData|HTMLImageElement|HTMLCanvasElement|\n      HTMLVideoElement|ImageBitmap;\n}\nexport interface FromPixelsAttrs {\n  numChannels: number;\n}\n\nexport const RotateWithOffset = 'RotateWithOffset';\nexport type RotateWithOffsetInputs = Pick<NamedTensorInfoMap, 'image'>;\nexport interface RotateWithOffsetAttrs {\n  radians: number;\n  fillValue: number|[number, number, number];\n  center: number|[number, number];\n}\n\nexport const _FusedMatMul = '_FusedMatMul';\n// tslint:disable-next-line: class-name\nexport interface _FusedMatMulInputs extends NamedTensorInfoMap {\n  a: TensorInfo;\n  b: TensorInfo;\n  bias?: TensorInfo;\n  preluActivationWeights?: TensorInfo;\n}\n// tslint:disable-next-line: class-name\nexport interface _FusedMatMulAttrs {\n  transposeA: boolean;\n  transposeB: boolean;\n  activation: Activation;\n  leakyreluAlpha?: number;\n}\n\nexport const FusedConv2D = 'FusedConv2D';\nexport interface FusedConv2DInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  filter: TensorInfo;\n  bias?: TensorInfo;\n  preluActivationWeights?: TensorInfo;\n}\nexport interface FusedConv2DAttrs {\n  strides: [number, number]|number;\n  pad: 'valid'|'same'|number|ExplicitPadding;\n  dataFormat: 'NHWC'|'NCHW';\n  dilations: [number, number]|number;\n  dimRoundingMode: 'floor'|'round'|'ceil';\n  activation: Activation;\n  leakyreluAlpha?: number;\n}\n\nexport const FusedDepthwiseConv2D = 'FusedDepthwiseConv2D';\nexport interface FusedDepthwiseConv2DInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  filter: TensorInfo;\n  bias?: TensorInfo;\n  preluActivationWeights?: TensorInfo;\n}\nexport interface FusedDepthwiseConv2DAttrs {\n  strides: [number, number]|number;\n  pad: 'valid'|'same'|number|ExplicitPadding;\n  dataFormat: 'NHWC'|'NCHW';\n  dilations: [number, number]|number;\n  dimRoundingMode: 'floor'|'round'|'ceil';\n  activation: Activation;\n  leakyreluAlpha?: number;\n}\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","module.exports = require(\"regenerator-runtime\");\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, DataTypeMap, FlatVector, NumericDataType, RecursiveArray, TensorLike, TypedArray} from './types';\n\n/**\n * Shuffles the array in-place using Fisher-Yates algorithm.\n *\n * ```js\n * const a = [1, 2, 3, 4, 5];\n * tf.util.shuffle(a);\n * console.log(a);\n * ```\n *\n * @param array The array to shuffle in-place.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\n// tslint:disable-next-line:no-any\nexport function shuffle(array: any[]|Uint32Array|Int32Array|\n                        Float32Array): void {\n  let counter = array.length;\n  let index = 0;\n  // While there are elements in the array\n  while (counter > 0) {\n    // Pick a random index\n    index = (Math.random() * counter) | 0;\n    // Decrease counter by 1\n    counter--;\n    // And swap the last element with it\n    swap(array, counter, index);\n  }\n}\n\n/**\n * Shuffles two arrays in-place the same way using Fisher-Yates algorithm.\n *\n * ```js\n * const a = [1,2,3,4,5];\n * const b = [11,22,33,44,55];\n * tf.util.shuffleCombo(a, b);\n * console.log(a, b);\n * ```\n *\n * @param array The first array to shuffle in-place.\n * @param array2 The second array to shuffle in-place with the same permutation\n *     as the first array.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function shuffleCombo(\n    // tslint:disable-next-line:no-any\n    array: any[]|Uint32Array|Int32Array|Float32Array,\n    // tslint:disable-next-line:no-any\n    array2: any[]|Uint32Array|Int32Array|Float32Array): void {\n  if (array.length !== array2.length) {\n    throw new Error(\n        `Array sizes must match to be shuffled together ` +\n        `First array length was ${array.length}` +\n        `Second array length was ${array2.length}`);\n  }\n  let counter = array.length;\n  let index = 0;\n  // While there are elements in the array\n  while (counter > 0) {\n    // Pick a random index\n    index = (Math.random() * counter) | 0;\n    // Decrease counter by 1\n    counter--;\n    // And swap the last element of each array with it\n    swap(array, counter, index);\n    swap(array2, counter, index);\n  }\n}\n\n/** Clamps a value to a specified range. */\nexport function clamp(min: number, x: number, max: number): number {\n  return Math.max(min, Math.min(x, max));\n}\n\nexport function nearestLargerEven(val: number): number {\n  return val % 2 === 0 ? val : val + 1;\n}\n\nexport function swap<T>(\n    object: {[index: number]: T}, left: number, right: number) {\n  const temp = object[left];\n  object[left] = object[right];\n  object[right] = temp;\n}\n\nexport function sum(arr: number[]): number {\n  let sum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\n/**\n * Returns a sample from a uniform [a, b) distribution.\n *\n * @param a The minimum support (inclusive).\n * @param b The maximum support (exclusive).\n * @return A pseudorandom number on the half-open interval [a,b).\n */\nexport function randUniform(a: number, b: number) {\n  const r = Math.random();\n  return (b * r) + (1 - r) * a;\n}\n\n/** Returns the squared Euclidean distance between two vectors. */\nexport function distSquared(a: FlatVector, b: FlatVector): number {\n  let result = 0;\n  for (let i = 0; i < a.length; i++) {\n    const diff = Number(a[i]) - Number(b[i]);\n    result += diff * diff;\n  }\n  return result;\n}\n\n/**\n * Asserts that the expression is true. Otherwise throws an error with the\n * provided message.\n *\n * ```js\n * const x = 2;\n * tf.util.assert(x === 2, 'x is not 2');\n * ```\n *\n * @param expr The expression to assert (as a boolean).\n * @param msg A function that returns the message to report when throwing an\n *     error. We use a function for performance reasons.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function assert(expr: boolean, msg: () => string) {\n  if (!expr) {\n    throw new Error(typeof msg === 'string' ? msg : msg());\n  }\n}\n\nexport function assertShapesMatch(\n    shapeA: number[], shapeB: number[], errorMessagePrefix = ''): void {\n  assert(\n      arraysEqual(shapeA, shapeB),\n      () => errorMessagePrefix + ` Shapes ${shapeA} and ${shapeB} must match`);\n}\n\nexport function assertNonNull(a: TensorLike): void {\n  assert(\n      a != null,\n      () => `The input to the tensor constructor must be a non-null value.`);\n}\n\n// NOTE: We explicitly type out what T extends instead of any so that\n// util.flatten on a nested array of number doesn't try to infer T as a\n// number[][], causing us to explicitly type util.flatten<number>().\n/**\n *  Flattens an arbitrarily nested array.\n *\n * ```js\n * const a = [[1, 2], [3, 4], [5, [6, [7]]]];\n * const flat = tf.util.flatten(a);\n * console.log(flat);\n * ```\n *\n *  @param arr The nested array to flatten.\n *  @param result The destination array which holds the elements.\n *  @param skipTypedArray If true, avoids flattening the typed arrays. Defaults\n *      to false.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function\nflatten<T extends number|boolean|string|Promise<number>|TypedArray>(\n    arr: T|RecursiveArray<T>, result: T[] = [], skipTypedArray = false): T[] {\n  if (result == null) {\n    result = [];\n  }\n  if (Array.isArray(arr) || isTypedArray(arr) && !skipTypedArray) {\n    for (let i = 0; i < arr.length; ++i) {\n      flatten(arr[i], result, skipTypedArray);\n    }\n  } else {\n    result.push(arr as T);\n  }\n  return result;\n}\n\n/**\n * Returns the size (number of elements) of the tensor given its shape.\n *\n * ```js\n * const shape = [3, 4, 2];\n * const size = tf.util.sizeFromShape(shape);\n * console.log(size);\n * ```\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function sizeFromShape(shape: number[]): number {\n  if (shape.length === 0) {\n    // Scalar.\n    return 1;\n  }\n  let size = shape[0];\n  for (let i = 1; i < shape.length; i++) {\n    size *= shape[i];\n  }\n  return size;\n}\n\nexport function isScalarShape(shape: number[]): boolean {\n  return shape.length === 0;\n}\n\nexport function arraysEqual(n1: FlatVector, n2: FlatVector) {\n  if (n1 === n2) {\n    return true;\n  }\n  if (n1 == null || n2 == null) {\n    return false;\n  }\n\n  if (n1.length !== n2.length) {\n    return false;\n  }\n  for (let i = 0; i < n1.length; i++) {\n    if (n1[i] !== n2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function isInt(a: number): boolean {\n  return a % 1 === 0;\n}\n\nexport function tanh(x: number): number {\n  // tslint:disable-next-line:no-any\n  if ((Math as any).tanh != null) {\n    // tslint:disable-next-line:no-any\n    return (Math as any).tanh(x);\n  }\n  if (x === Infinity) {\n    return 1;\n  } else if (x === -Infinity) {\n    return -1;\n  } else {\n    const e2x = Math.exp(2 * x);\n    return (e2x - 1) / (e2x + 1);\n  }\n}\n\nexport function sizeToSquarishShape(size: number): [number, number] {\n  const width = Math.ceil(Math.sqrt(size));\n  return [width, Math.ceil(size / width)];\n}\n\n/**\n * Creates a new array with randomized indicies to a given quantity.\n *\n * ```js\n * const randomTen = tf.util.createShuffledIndices(10);\n * console.log(randomTen);\n * ```\n *\n * @param number Quantity of how many shuffled indicies to create.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function createShuffledIndices(n: number): Uint32Array {\n  const shuffledIndices = new Uint32Array(n);\n  for (let i = 0; i < n; ++i) {\n    shuffledIndices[i] = i;\n  }\n  shuffle(shuffledIndices);\n  return shuffledIndices;\n}\n\nexport function rightPad(a: string, size: number): string {\n  if (size <= a.length) {\n    return a;\n  }\n  return a + ' '.repeat(size - a.length);\n}\n\nexport function repeatedTry(\n    checkFn: () => boolean, delayFn = (counter: number) => 0,\n    maxCounter?: number): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    let tryCount = 0;\n\n    const tryFn = () => {\n      if (checkFn()) {\n        resolve();\n        return;\n      }\n\n      tryCount++;\n\n      const nextBackoff = delayFn(tryCount);\n\n      if (maxCounter != null && tryCount >= maxCounter) {\n        reject();\n        return;\n      }\n      setTimeout(tryFn, nextBackoff);\n    };\n\n    tryFn();\n  });\n}\n\n/**\n * Given the full size of the array and a shape that may contain -1 as the\n * implicit dimension, returns the inferred shape where -1 is replaced.\n * E.g. For shape=[2, -1, 3] and size=24, it will return [2, 4, 3].\n *\n * @param shape The shape, which may contain -1 in some dimension.\n * @param size The full size (number of elements) of the array.\n * @return The inferred shape where -1 is replaced with the inferred size.\n */\nexport function inferFromImplicitShape(\n    shape: number[], size: number): number[] {\n  let shapeProd = 1;\n  let implicitIdx = -1;\n\n  for (let i = 0; i < shape.length; ++i) {\n    if (shape[i] >= 0) {\n      shapeProd *= shape[i];\n    } else if (shape[i] === -1) {\n      if (implicitIdx !== -1) {\n        throw Error(\n            `Shapes can only have 1 implicit size. ` +\n            `Found -1 at dim ${implicitIdx} and dim ${i}`);\n      }\n      implicitIdx = i;\n    } else if (shape[i] < 0) {\n      throw Error(`Shapes can not be < 0. Found ${shape[i]} at dim ${i}`);\n    }\n  }\n\n  if (implicitIdx === -1) {\n    if (size > 0 && size !== shapeProd) {\n      throw Error(`Size(${size}) must match the product of shape ${shape}`);\n    }\n    return shape;\n  }\n\n  if (shapeProd === 0) {\n    throw Error(\n        `Cannot infer the missing size in [${shape}] when ` +\n        `there are 0 elements`);\n  }\n  if (size % shapeProd !== 0) {\n    throw Error(\n        `The implicit shape can't be a fractional number. ` +\n        `Got ${size} / ${shapeProd}`);\n  }\n\n  const newShape = shape.slice();\n  newShape[implicitIdx] = size / shapeProd;\n  return newShape;\n}\n\nexport function parseAxisParam(\n    axis: number|number[], shape: number[]): number[] {\n  const rank = shape.length;\n\n  // Normalize input\n  axis = axis == null ? shape.map((s, i) => i) : [].concat(axis);\n\n  // Check for valid range\n  assert(\n      axis.every(ax => ax >= -rank && ax < rank),\n      () =>\n          `All values in axis param must be in range [-${rank}, ${rank}) but ` +\n          `got axis ${axis}`);\n\n  // Check for only integers\n  assert(\n      axis.every(ax => isInt(ax)),\n      () => `All values in axis param must be integers but ` +\n          `got axis ${axis}`);\n\n  // Handle negative axis.\n  return axis.map(a => a < 0 ? rank + a : a);\n}\n\n/** Reduces the shape by removing all dimensions of shape 1. */\nexport function squeezeShape(shape: number[], axis?: number[]):\n    {newShape: number[], keptDims: number[]} {\n  const newShape: number[] = [];\n  const keptDims: number[] = [];\n  const isEmptyArray = axis != null && Array.isArray(axis) && axis.length === 0;\n  const axes = (axis == null || isEmptyArray) ?\n      null :\n      parseAxisParam(axis, shape).sort();\n  let j = 0;\n  for (let i = 0; i < shape.length; ++i) {\n    if (axes != null) {\n      if (axes[j] === i && shape[i] !== 1) {\n        throw new Error(\n            `Can't squeeze axis ${i} since its dim '${shape[i]}' is not 1`);\n      }\n      if ((axes[j] == null || axes[j] > i) && shape[i] === 1) {\n        newShape.push(shape[i]);\n        keptDims.push(i);\n      }\n      if (axes[j] <= i) {\n        j++;\n      }\n    }\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n      keptDims.push(i);\n    }\n  }\n  return {newShape, keptDims};\n}\n\nexport function getTypedArrayFromDType<D extends NumericDataType>(\n    dtype: D, size: number): DataTypeMap[D] {\n  let values = null;\n  if (dtype == null || dtype === 'float32') {\n    values = new Float32Array(size);\n  } else if (dtype === 'int32') {\n    values = new Int32Array(size);\n  } else if (dtype === 'bool') {\n    values = new Uint8Array(size);\n  } else {\n    throw new Error(`Unknown data type ${dtype}`);\n  }\n  return values as DataTypeMap[D];\n}\n\nexport function getArrayFromDType<D extends DataType>(\n    dtype: D, size: number): DataTypeMap[D] {\n  let values = null;\n  if (dtype == null || dtype === 'float32') {\n    values = new Float32Array(size);\n  } else if (dtype === 'int32') {\n    values = new Int32Array(size);\n  } else if (dtype === 'bool') {\n    values = new Uint8Array(size);\n  } else if (dtype === 'string') {\n    values = new Array<'string'>(size);\n  } else {\n    throw new Error(`Unknown data type ${dtype}`);\n  }\n  return values as DataTypeMap[D];\n}\n\nexport function checkConversionForErrors<D extends DataType>(\n    vals: DataTypeMap[D]|number[], dtype: D): void {\n  for (let i = 0; i < vals.length; i++) {\n    const num = vals[i] as number;\n    if (isNaN(num) || !isFinite(num)) {\n      throw Error(`A tensor of type ${dtype} being uploaded contains ${num}.`);\n    }\n  }\n}\n\n/** Returns true if the dtype is valid. */\nexport function isValidDtype(dtype: DataType): boolean {\n  return dtype === 'bool' || dtype === 'complex64' || dtype === 'float32' ||\n      dtype === 'int32' || dtype === 'string';\n}\n\n/**\n * Returns true if the new type can't encode the old type without loss of\n * precision.\n */\nexport function hasEncodingLoss(oldType: DataType, newType: DataType): boolean {\n  if (newType === 'complex64') {\n    return false;\n  }\n  if (newType === 'float32' && oldType !== 'complex64') {\n    return false;\n  }\n  if (newType === 'int32' && oldType !== 'float32' && oldType !== 'complex64') {\n    return false;\n  }\n  if (newType === 'bool' && oldType === 'bool') {\n    return false;\n  }\n  return true;\n}\n\nexport function isTypedArray(a: {}): a is Float32Array|Int32Array|Uint8Array {\n  return a instanceof Float32Array || a instanceof Int32Array ||\n      a instanceof Uint8Array;\n}\n\nexport function bytesPerElement(dtype: DataType): number {\n  if (dtype === 'float32' || dtype === 'int32') {\n    return 4;\n  } else if (dtype === 'complex64') {\n    return 8;\n  } else if (dtype === 'bool') {\n    return 1;\n  } else {\n    throw new Error(`Unknown dtype ${dtype}`);\n  }\n}\n\n/**\n * Returns the approximate number of bytes allocated in the string array - 2\n * bytes per character. Computing the exact bytes for a native string in JS is\n * not possible since it depends on the encoding of the html page that serves\n * the website.\n */\nexport function bytesFromStringArray(arr: Uint8Array[]): number {\n  if (arr == null) {\n    return 0;\n  }\n  let bytes = 0;\n  arr.forEach(x => bytes += x.length);\n  return bytes;\n}\n\n/** Returns true if the value is a string. */\nexport function isString(value: {}): value is string {\n  return typeof value === 'string' || value instanceof String;\n}\n\nexport function isBoolean(value: {}): boolean {\n  return typeof value === 'boolean';\n}\n\nexport function isNumber(value: {}): boolean {\n  return typeof value === 'number';\n}\n\nexport function inferDtype(values: TensorLike): DataType {\n  if (Array.isArray(values)) {\n    return inferDtype(values[0]);\n  }\n  if (values instanceof Float32Array) {\n    return 'float32';\n  } else if (values instanceof Int32Array || values instanceof Uint8Array) {\n    return 'int32';\n  } else if (isNumber(values)) {\n    return 'float32';\n  } else if (isString(values)) {\n    return 'string';\n  } else if (isBoolean(values)) {\n    return 'bool';\n  }\n  return 'float32';\n}\n\nexport function isFunction(f: Function) {\n  return !!(f && f.constructor && f.call && f.apply);\n}\n\nexport function nearestDivisor(size: number, start: number): number {\n  for (let i = start; i < size; ++i) {\n    if (size % i === 0) {\n      return i;\n    }\n  }\n  return size;\n}\n\nexport function computeStrides(shape: number[]): number[] {\n  const rank = shape.length;\n  if (rank < 2) {\n    return [];\n  }\n\n  // Last dimension has implicit stride of 1, thus having D-1 (instead of D)\n  // strides.\n  const strides = new Array(rank - 1);\n  strides[rank - 2] = shape[rank - 1];\n  for (let i = rank - 3; i >= 0; --i) {\n    strides[i] = strides[i + 1] * shape[i + 1];\n  }\n  return strides;\n}\n\nfunction createNestedArray(\n    offset: number, shape: number[], a: TypedArray, isComplex = false) {\n  const ret = new Array();\n  if (shape.length === 1) {\n    const d = shape[0] * (isComplex ? 2 : 1);\n    for (let i = 0; i < d; i++) {\n      ret[i] = a[offset + i];\n    }\n  } else {\n    const d = shape[0];\n    const rest = shape.slice(1);\n    const len = rest.reduce((acc, c) => acc * c) * (isComplex ? 2 : 1);\n    for (let i = 0; i < d; i++) {\n      ret[i] = createNestedArray(offset + i * len, rest, a, isComplex);\n    }\n  }\n  return ret;\n}\n\n// Provide a nested array of TypedArray in given shape.\nexport function toNestedArray(\n    shape: number[], a: TypedArray, isComplex = false) {\n  if (shape.length === 0) {\n    // Scalar type should return a single number.\n    return a[0];\n  }\n  const size = shape.reduce((acc, c) => acc * c) * (isComplex ? 2 : 1);\n  if (size === 0) {\n    // A tensor with shape zero should be turned into empty list.\n    return [];\n  }\n  if (size !== a.length) {\n    throw new Error(`[${shape}] does not match the input size ${a.length}${\n        isComplex ? ' for a complex tensor' : ''}.`);\n  }\n\n  return createNestedArray(0, shape, a, isComplex);\n}\n\nexport function makeOnesTypedArray<D extends DataType>(\n    size: number, dtype: D): DataTypeMap[D] {\n  const array = makeZerosTypedArray(size, dtype);\n  for (let i = 0; i < array.length; i++) {\n    array[i] = 1;\n  }\n  return array;\n}\n\nexport function makeZerosTypedArray<D extends DataType>(\n    size: number, dtype: D): DataTypeMap[D] {\n  if (dtype == null || dtype === 'float32' || dtype === 'complex64') {\n    return new Float32Array(size) as DataTypeMap[D];\n  } else if (dtype === 'int32') {\n    return new Int32Array(size) as DataTypeMap[D];\n  } else if (dtype === 'bool') {\n    return new Uint8Array(size) as DataTypeMap[D];\n  } else {\n    throw new Error(`Unknown data type ${dtype}`);\n  }\n}\n\n/**\n * Make nested `TypedArray` filled with zeros.\n * @param shape The shape information for the nested array.\n * @param dtype dtype of the array element.\n */\nexport function makeZerosNestedTypedArray<D extends DataType>(\n    shape: number[], dtype: D) {\n  const size = shape.reduce((prev, curr) => prev * curr, 1);\n  if (dtype == null || dtype === 'float32') {\n    return toNestedArray(shape, new Float32Array(size));\n  } else if (dtype === 'int32') {\n    return toNestedArray(shape, new Int32Array(size));\n  } else if (dtype === 'bool') {\n    return toNestedArray(shape, new Uint8Array(size));\n  } else {\n    throw new Error(`Unknown data type ${dtype}`);\n  }\n}\n\nexport function assertNonNegativeIntegerDimensions(shape: number[]) {\n  shape.forEach(dimSize => {\n    assert(\n        Number.isInteger(dimSize) && dimSize >= 0,\n        () =>\n            `Tensor must have a shape comprised of positive integers but got ` +\n            `shape [${shape}].`);\n  });\n}\n\n/**\n * Computes flat index for a given location (multidimentionsal index) in a\n * Tensor/multidimensional array.\n *\n * @param locs Location in the tensor.\n * @param rank Rank of the tensor.\n * @param strides Tensor strides.\n */\nexport function locToIndex(\n    locs: number[], rank: number, strides: number[]): number {\n  if (rank === 0) {\n    return 0;\n  } else if (rank === 1) {\n    return locs[0];\n  }\n  let index = locs[locs.length - 1];\n  for (let i = 0; i < locs.length - 1; ++i) {\n    index += strides[i] * locs[i];\n  }\n  return index;\n}\n\n/**\n * Computes the location (multidimensional index) in a tensor/multidimentional\n * array for a given flat index.\n *\n * @param index Index in flat array.\n * @param rank Rank of tensor.\n * @param strides Strides of tensor.\n */\nexport function indexToLoc(\n    index: number, rank: number, strides: number[]): number[] {\n  if (rank === 0) {\n    return [];\n  } else if (rank === 1) {\n    return [index];\n  }\n  const locs: number[] = new Array(rank);\n  for (let i = 0; i < locs.length - 1; ++i) {\n    locs[i] = Math.floor(index / strides[i]);\n    index -= locs[i] * strides[i];\n  }\n  locs[locs.length - 1] = index;\n  return locs;\n}\n\n/**\n * This method asserts whether an object is a Promise instance.\n * @param object\n */\n// tslint:disable-next-line: no-any\nexport function isPromise(object: any) {\n  //  We chose to not use 'obj instanceOf Promise' for two reasons:\n  //  1. It only reliably works for es6 Promise, not other Promise\n  //  implementations.\n  //  2. It doesn't work with framework that uses zone.js. zone.js monkey patch\n  //  the async calls, so it is possible the obj (patched) is comparing to a\n  //  pre-patched Promise.\n  return object && object.then && typeof object.then === 'function';\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Reshape, ReshapeAttrs, ReshapeInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {Rank, ShapeMap, TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Reshapes a `tf.Tensor` to a given shape.\n *\n * Given an input tensor, returns a new tensor with the same values as the\n * input tensor with shape `shape`.\n *\n * If one component of shape is the special value -1, the size of that\n * dimension is computed so that the total size remains constant. In\n * particular, a shape of [-1] flattens into 1-D. At most one component of\n * shape can be -1.\n *\n * If shape is 1-D or higher, then the operation returns a tensor with shape\n * shape filled with the values of tensor. In this case, the number of\n * elements implied by shape must be the same as the number of elements in\n * tensor.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * x.reshape([2, 2]).print();\n * ```\n *\n * @param x The input tensor to be reshaped.\n * @param shape An array of integers defining the output tensor shape.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction reshape_<R extends Rank>(\n    x: Tensor|TensorLike, shape: ShapeMap[R]): Tensor<R> {\n  const $x = convertToTensor(x, 'x', 'reshape', 'string_or_numeric');\n\n  const inputs: ReshapeInputs = {x: $x};\n  const attrs: ReshapeAttrs = {shape};\n  return ENGINE.runKernel(\n      Reshape, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\nexport const reshape = op({reshape_});\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Workaround for allowing cjs module to be included in bundle created by\n// rollup.\nimport * as LongExports from 'long';\n// tslint:disable-next-line\nconst Long: LongExports.LongConstructor =\n    // tslint:disable-next-line\n    (LongExports as any).default || LongExports;\n\nexport function hexToLong(hex: string): Long {\n  return Long.fromString(hex, true, 16);\n}\n\n// Some primes between 2^63 and 2^64 for various uses.\n// Hex 0xc3a5c85c97cb3127\nconst k0: Long = hexToLong('c3a5c85c97cb3127');\n// Hex 0xb492b66fbe98f273\nconst k1: Long = hexToLong('b492b66fbe98f273');\n// Hex 0x9ae16a3b2f90404f\nconst k2: Long = hexToLong('9ae16a3b2f90404f');\n\nfunction shiftMix(val: Long): Long {\n  return val.xor(val.shru(47));\n}\n\nfunction fetch(s: Uint8Array, offset: number, numBytes: number): Long {\n  const bytes = s.slice(offset, offset + numBytes);\n  return Long.fromBytes(Array.from(bytes), true, true);\n}\n\nfunction fetch64(s: Uint8Array, offset: number): Long {\n  return fetch(s, offset, 8);\n}\n\nfunction fetch32(s: Uint8Array, offset: number): Long {\n  return fetch(s, offset, 4);\n}\n\nfunction rotate64(val: Long, shift: number): Long {\n  // Avoid shifting by 64: doing so yields an undefined result.\n  return shift === 0 ? val : val.shru(shift).or(val.shl(64 - shift));\n}\n\nfunction hashLen16(u: Long, v: Long, mul = hexToLong('9ddfea08eb382d69')) {\n  // Murmur-inspired hashing.\n  let a = u.xor(v).mul(mul);\n  a = a.xor(a.shru(47));\n  let b = v.xor(a).mul(mul);\n  b = b.xor(b.shru(47));\n  b = b.mul(mul);\n  return b;\n}\n\n// Return a 16-byte hash for 48 bytes.  Quick and dirty.\n// Callers do best to use \"random-looking\" values for a and b.\nfunction weakHashLen32WithSeeds(\n    w: Long, x: Long, y: Long, z: Long, a: Long, b: Long) {\n  a = a.add(w);\n  b = rotate64(b.add(a).add(z), 21);\n  const c = a;\n  a = a.add(x);\n  a = a.add(y);\n  b = b.add(rotate64(a, 44));\n  return [a.add(z), b.add(c)];\n}\n\nfunction weakHashLen32WithSeedsStr(\n    s: Uint8Array, offset: number, a: Long, b: Long) {\n  return weakHashLen32WithSeeds(\n      fetch64(s, offset), fetch64(s, offset + 8), fetch64(s, offset + 16),\n      fetch64(s, offset + 24), a, b);\n}\n\nfunction hashLen0to16(s: Uint8Array, len = s.length): Long {\n  if (len >= 8) {\n    const mul = k2.add(len * 2);\n    const a = fetch64(s, 0).add(k2);\n    const b = fetch64(s, len - 8);\n    const c = rotate64(b, 37).mul(mul).add(a);\n    const d = rotate64(a, 25).add(b).mul(mul);\n    return hashLen16(c, d, mul);\n  }\n  if (len >= 4) {\n    const mul = k2.add(len * 2);\n    const a = fetch32(s, 0);\n    return hashLen16(a.shl(3).add(len), fetch32(s, len - 4), mul);\n  }\n  if (len > 0) {\n    const a = s[0];\n    const b = s[len >> 1];\n    const c = s[len - 1];\n    const y = a + (b << 8);\n    const z = len + (c << 2);\n    return shiftMix(k2.mul(y).xor(k0.mul(z))).mul(k2);\n  }\n  return k2;\n}\n\nfunction hashLen17to32(s: Uint8Array, len = s.length): Long {\n  const mul = k2.add(len * 2);\n  const a = fetch64(s, 0).mul(k1);\n  const b = fetch64(s, 8);\n  const c = fetch64(s, len - 8).mul(mul);\n  const d = fetch64(s, len - 16).mul(k2);\n  return hashLen16(\n      rotate64(a.add(b), 43).add(rotate64(c, 30)).add(d),\n      a.add(rotate64(b.add(k2), 18)).add(c), mul);\n}\n\nfunction hashLen33to64(s: Uint8Array, len = s.length): Long {\n  const mul = k2.add(len * 2);\n  const a = fetch64(s, 0).mul(k2);\n  const b = fetch64(s, 8);\n  const c = fetch64(s, len - 8).mul(mul);\n  const d = fetch64(s, len - 16).mul(k2);\n  const y = rotate64(a.add(b), 43).add(rotate64(c, 30)).add(d);\n  const z = hashLen16(y, a.add(rotate64(b.add(k2), 18)).add(c), mul);\n  const e = fetch64(s, 16).mul(mul);\n  const f = fetch64(s, 24);\n  const g = y.add(fetch64(s, len - 32)).mul(mul);\n  const h = z.add(fetch64(s, len - 24)).mul(mul);\n  return hashLen16(\n      rotate64(e.add(f), 43).add(rotate64(g, 30)).add(h),\n      e.add(rotate64(f.add(a), 18)).add(g), mul);\n}\n\nexport function fingerPrint64(s: Uint8Array, len = s.length): Long {\n  const seed: Long = Long.fromNumber(81, true);\n  if (len <= 32) {\n    if (len <= 16) {\n      return hashLen0to16(s, len);\n    } else {\n      return hashLen17to32(s, len);\n    }\n  } else if (len <= 64) {\n    return hashLen33to64(s, len);\n  }\n\n  // For strings over 64 bytes we loop.  Internal state consists of\n  // 56 bytes: v, w, x, y, and z.\n  let x = seed;\n  let y = seed.mul(k1).add(113);\n\n  let z = shiftMix(y.mul(k2).add(113)).mul(k2);\n  let v = [Long.UZERO, Long.UZERO];\n  let w = [Long.UZERO, Long.UZERO];\n  x = x.mul(k2).add(fetch64(s, 0));\n\n  let offset = 0;\n  // Set end so that after the loop we have 1 to 64 bytes left to process.\n  const end = ((len - 1) >> 6) * 64;\n  const last64 = end + ((len - 1) & 63) - 63;\n\n  do {\n    x = rotate64(x.add(y).add(v[0]).add(fetch64(s, offset + 8)), 37).mul(k1);\n    y = rotate64(y.add(v[1]).add(fetch64(s, offset + 48)), 42).mul(k1);\n    x = x.xor(w[1]);\n    y = y.add(v[0]).add(fetch64(s, offset + 40));\n    z = rotate64(z.add(w[0]), 33).mul(k1);\n    v = weakHashLen32WithSeedsStr(s, offset, v[1].mul(k1), x.add(w[0]));\n    w = weakHashLen32WithSeedsStr(\n        s, offset + 32, z.add(w[1]), y.add(fetch64(s, offset + 16)));\n\n    [z, x] = [x, z];\n    offset += 64;\n  } while (offset !== end);\n  const mul = k1.add(z.and(0xff).shl(1));\n  // Point to the last 64 bytes of input.\n  offset = last64;\n\n  w[0] = w[0].add((len - 1) & 63);\n  v[0] = v[0].add(w[0]);\n  w[0] = w[0].add(v[0]);\n\n  x = rotate64(x.add(y).add(v[0]).add(fetch64(s, offset + 8)), 37).mul(mul);\n  y = rotate64(y.add(v[1]).add(fetch64(s, offset + 48)), 42).mul(mul);\n  x = x.xor(w[1].mul(9));\n  y = y.add(v[0].mul(9).add(fetch64(s, offset + 40)));\n  z = rotate64(z.add(w[0]), 33).mul(mul);\n  v = weakHashLen32WithSeedsStr(s, offset, v[1].mul(mul), x.add(w[0]));\n  w = weakHashLen32WithSeedsStr(\n      s, offset + 32, z.add(w[1]), y.add(fetch64(s, offset + 16)));\n\n  [z, x] = [x, z];\n\n  return hashLen16(\n      hashLen16(v[0], w[0], mul).add(shiftMix(y).mul(k0)).add(z),\n      hashLen16(v[1], w[1], mul).add(x), mul);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {env} from './environment';\nimport {BackendValues, DataType, TensorLike, TypedArray} from './types';\nimport * as base from './util_base';\nexport * from './util_base';\nexport * from './hash_util';\n\n/**\n * Create typed array for scalar value. Used for storing in `DataStorage`.\n */\nexport function createScalarValue(\n    value: DataType, dtype: DataType): BackendValues {\n  if (dtype === 'string') {\n    return encodeString(value);\n  }\n\n  return toTypedArray([value], dtype);\n}\n\nfunction noConversionNeeded(a: TensorLike, dtype: DataType): boolean {\n  return (a instanceof Float32Array && dtype === 'float32') ||\n      (a instanceof Int32Array && dtype === 'int32') ||\n      (a instanceof Uint8Array && dtype === 'bool');\n}\n\nexport function toTypedArray(a: TensorLike, dtype: DataType): TypedArray {\n  if (dtype === 'string') {\n    throw new Error('Cannot convert a string[] to a TypedArray');\n  }\n  if (Array.isArray(a)) {\n    a = base.flatten(a);\n  }\n\n  if (env().getBool('DEBUG')) {\n    base.checkConversionForErrors(a as number[], dtype);\n  }\n  if (noConversionNeeded(a, dtype)) {\n    return a as TypedArray;\n  }\n  if (dtype == null || dtype === 'float32' || dtype === 'complex64') {\n    return new Float32Array(a as number[]);\n  } else if (dtype === 'int32') {\n    return new Int32Array(a as number[]);\n  } else if (dtype === 'bool') {\n    const bool = new Uint8Array((a as number[]).length);\n    for (let i = 0; i < bool.length; ++i) {\n      if (Math.round((a as number[])[i]) !== 0) {\n        bool[i] = 1;\n      }\n    }\n    return bool;\n  } else {\n    throw new Error(`Unknown data type ${dtype}`);\n  }\n}\n\n/**\n * Returns the current high-resolution time in milliseconds relative to an\n * arbitrary time in the past. It works across different platforms (node.js,\n * browsers).\n *\n * ```js\n * console.log(tf.util.now());\n * ```\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function now(): number {\n  return env().platform.now();\n}\n\n/**\n * Returns a platform-specific implementation of\n * [`fetch`](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API).\n *\n * If `fetch` is defined on the global object (`window`, `process`, etc.),\n * `tf.util.fetch` returns that function.\n *\n * If not, `tf.util.fetch` returns a platform-specific solution.\n *\n * ```js\n * const resource = await tf.util.fetch('https://unpkg.com/@tensorflow/tfjs');\n * // handle response\n * ```\n *\n * @doc {heading: 'Util'}\n */\nexport function fetch(\n    path: string, requestInits?: RequestInit): Promise<Response> {\n  return env().platform.fetch(path, requestInits);\n}\n\n/**\n * Encodes the provided string into bytes using the provided encoding scheme.\n *\n * @param s The string to encode.\n * @param encoding The encoding scheme. Defaults to utf-8.\n *\n * @doc {heading: 'Util'}\n */\nexport function encodeString(s: string, encoding = 'utf-8'): Uint8Array {\n  encoding = encoding || 'utf-8';\n  return env().platform.encode(s, encoding);\n}\n\n/**\n * Decodes the provided bytes into a string using the provided encoding scheme.\n * @param bytes The bytes to decode.\n *\n * @param encoding The encoding scheme. Defaults to utf-8.\n *\n * @doc {heading: 'Util'}\n */\nexport function decodeString(bytes: Uint8Array, encoding = 'utf-8'): string {\n  encoding = encoding || 'utf-8';\n  return env().platform.decode(bytes, encoding);\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Multiply, MultiplyInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Multiplies two `tf.Tensor`s element-wise, A * B. Supports broadcasting.\n *\n * We also expose `tf.mulStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3, 4]);\n * const b = tf.tensor1d([2, 3, 4, 5]);\n *\n * a.mul(b).print();  // or tf.mul(a, b)\n * ```\n *\n * ```js\n * // Broadcast mul a with b.\n * const a = tf.tensor1d([1, 2, 3, 4]);\n * const b = tf.scalar(5);\n *\n * a.mul(b).print();  // or tf.mul(a, b)\n * ```\n * @param a The first tensor to multiply.\n * @param b The second tensor to multiply. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction mul_<T extends Tensor>(a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'mul');\n  let $b = convertToTensor(b, 'b', 'mul');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  const inputs: MultiplyInputs = {a: $a, b: $b};\n\n  return ENGINE.runKernel(Multiply, inputs as {} as NamedTensorMap);\n}\nexport const mul = op({mul_});\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Add, AddInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Adds two `tf.Tensor`s element-wise, A + B. Supports broadcasting.\n *\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3, 4]);\n * const b = tf.tensor1d([10, 20, 30, 40]);\n *\n * a.add(b).print();  // or tf.add(a, b)\n * ```\n *\n * ```js\n * // Broadcast add a with b.\n * const a = tf.scalar(5);\n * const b = tf.tensor1d([10, 20, 30, 40]);\n *\n * a.add(b).print();  // or tf.add(a, b)\n * ```\n * @param a The first `tf.Tensor` to add.\n * @param b The second `tf.Tensor` to add. Must have the same type as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction add_<T extends Tensor>(a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'add');\n  let $b = convertToTensor(b, 'b', 'add');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  const inputs: AddInputs = {a: $a, b: $b};\n\n  return ENGINE.runKernel(Add, inputs as {} as NamedTensorMap);\n}\n\nexport const add = op({add_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Sub, SubInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Subtracts two `tf.Tensor`s element-wise, A - B. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([10, 20, 30, 40]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n *\n * a.sub(b).print();  // or tf.sub(a, b)\n * ```\n *\n * ```js\n * // Broadcast subtract a with b.\n * const a = tf.tensor1d([10, 20, 30, 40]);\n * const b = tf.scalar(5);\n *\n * a.sub(b).print();  // or tf.sub(a, b)\n * ```\n * @param a The first `tf.Tensor` to subtract from.\n * @param b The second `tf.Tensor` to be subtracted. Must have the same dtype as\n * `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction sub_<T extends Tensor>(a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'sub');\n  let $b = convertToTensor(b, 'b', 'sub');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  const inputs: SubInputs = {a: $a, b: $b};\n\n  return ENGINE.runKernel(Sub, inputs as {} as NamedTensorMap);\n}\n\nexport const sub = op({sub_});\n","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Platform} from './platforms/platform';\nimport {isPromise} from './util_base';\n\n// Expects flags from URL in the format ?tfjsflags=FLAG1:1,FLAG2:true.\nconst TENSORFLOWJS_FLAGS_PREFIX = 'tfjsflags';\n\ntype FlagValue = number|boolean;\ntype FlagEvaluationFn = (() => FlagValue)|(() => Promise<FlagValue>);\nexport type Flags = {\n  [featureName: string]: FlagValue\n};\nexport type FlagRegistryEntry = {\n  evaluationFn: FlagEvaluationFn;\n  setHook?: (value: FlagValue) => void;\n};\n\n/**\n * The environment contains evaluated flags as well as the registered platform.\n * This is always used as a global singleton and can be retrieved with\n * `tf.env()`.\n *\n * @doc {heading: 'Environment'}\n */\nexport class Environment {\n  private flags: Flags = {};\n  private flagRegistry: {[flagName: string]: FlagRegistryEntry} = {};\n\n  private urlFlags: Flags = {};\n\n  platformName: string;\n  platform: Platform;\n\n  // Jasmine spies on this in 'environment_test.ts'\n  getQueryParams = getQueryParams;\n\n  // tslint:disable-next-line: no-any\n  constructor(public global: any) {\n    this.populateURLFlags();\n  }\n\n  setPlatform(platformName: string, platform: Platform) {\n    if (this.platform != null) {\n      console.warn(\n          `Platform ${this.platformName} has already been set. ` +\n          `Overwriting the platform with ${platform}.`);\n    }\n    this.platformName = platformName;\n    this.platform = platform;\n  }\n\n  registerFlag(\n      flagName: string, evaluationFn: FlagEvaluationFn,\n      setHook?: (value: FlagValue) => void) {\n    this.flagRegistry[flagName] = {evaluationFn, setHook};\n\n    // Override the flag value from the URL. This has to happen here because the\n    // environment is initialized before flags get registered.\n    if (this.urlFlags[flagName] != null) {\n      const flagValue = this.urlFlags[flagName];\n      console.warn(\n          `Setting feature override from URL ${flagName}: ${flagValue}.`);\n      this.set(flagName, flagValue);\n    }\n  }\n\n  async getAsync(flagName: string): Promise<FlagValue> {\n    if (flagName in this.flags) {\n      return this.flags[flagName];\n    }\n\n    this.flags[flagName] = await this.evaluateFlag(flagName);\n    return this.flags[flagName];\n  }\n\n  get(flagName: string): FlagValue {\n    if (flagName in this.flags) {\n      return this.flags[flagName];\n    }\n\n    const flagValue = this.evaluateFlag(flagName);\n    if (isPromise(flagValue)) {\n      throw new Error(\n          `Flag ${flagName} cannot be synchronously evaluated. ` +\n          `Please use getAsync() instead.`);\n    }\n\n    this.flags[flagName] = flagValue as number | boolean;\n\n    return this.flags[flagName];\n  }\n\n  getNumber(flagName: string): number {\n    return this.get(flagName) as number;\n  }\n\n  getBool(flagName: string): boolean {\n    return this.get(flagName) as boolean;\n  }\n\n  getFlags(): Flags {\n    return this.flags;\n  }\n  // For backwards compatibility.\n  get features(): Flags {\n    return this.flags;\n  }\n\n  set(flagName: string, value: FlagValue): void {\n    if (this.flagRegistry[flagName] == null) {\n      throw new Error(\n          `Cannot set flag ${flagName} as it has not been registered.`);\n    }\n    this.flags[flagName] = value;\n    if (this.flagRegistry[flagName].setHook != null) {\n      this.flagRegistry[flagName].setHook(value);\n    }\n  }\n\n  private evaluateFlag(flagName: string): FlagValue|Promise<FlagValue> {\n    if (this.flagRegistry[flagName] == null) {\n      throw new Error(\n          `Cannot evaluate flag '${flagName}': no evaluation function found.`);\n    }\n    return this.flagRegistry[flagName].evaluationFn();\n  }\n\n  setFlags(flags: Flags) {\n    this.flags = Object.assign({}, flags);\n  }\n\n  reset() {\n    this.flags = {};\n    this.urlFlags = {};\n    this.populateURLFlags();\n  }\n\n  private populateURLFlags(): void {\n    if (typeof this.global === 'undefined' ||\n        typeof this.global.location === 'undefined' ||\n        typeof this.global.location.search === 'undefined') {\n      return;\n    }\n\n    const urlParams = this.getQueryParams(this.global.location.search);\n    if (TENSORFLOWJS_FLAGS_PREFIX in urlParams) {\n      const keyValues = urlParams[TENSORFLOWJS_FLAGS_PREFIX].split(',');\n      keyValues.forEach(keyValue => {\n        const [key, value] = keyValue.split(':') as [string, string];\n        this.urlFlags[key] = parseValue(key, value);\n      });\n    }\n  }\n}\n\nexport function getQueryParams(queryString: string): {[key: string]: string} {\n  const params = {};\n  queryString.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g, (s, ...t) => {\n    decodeParam(params, t[0], t[1]);\n    return t.join('=');\n  });\n  return params;\n}\n\nfunction decodeParam(\n    params: {[key: string]: string}, name: string, value?: string) {\n  params[decodeURIComponent(name)] = decodeURIComponent(value || '');\n}\n\nfunction parseValue(flagName: string, value: string): FlagValue {\n  value = value.toLowerCase();\n  if (value === 'true' || value === 'false') {\n    return value === 'true';\n  } else if (`${+ value}` === value) {\n    return +value;\n  }\n  throw new Error(\n      `Could not parse value flag value ${value} for flag ${flagName}.`);\n}\n\n/**\n * Returns the current environment (a global singleton).\n *\n * The environment object contains the evaluated feature values as well as the\n * active platform.\n *\n * @doc {heading: 'Environment'}\n */\nexport function env() {\n  return ENV;\n}\n\nexport let ENV: Environment = null;\nexport function setEnvironmentGlobal(environment: Environment) {\n  ENV = environment;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from './tensor';\nimport {TensorContainer, TensorContainerArray} from './tensor_types';\nimport {upcastType} from './types';\nimport {assert} from './util';\n\nexport function makeTypesMatch<T extends Tensor>(a: T, b: T): [T, T] {\n  if (a.dtype === b.dtype) {\n    return [a, b];\n  }\n  const dtype = upcastType(a.dtype, b.dtype);\n  return [a.cast(dtype), b.cast(dtype)];\n}\n\nexport function assertTypesMatch(a: Tensor, b: Tensor): void {\n  assert(\n      a.dtype === b.dtype,\n      () => `The dtypes of the first(${a.dtype}) and` +\n          ` second(${b.dtype}) input must match`);\n}\n\nexport function isTensorInList(tensor: Tensor, tensorList: Tensor[]): boolean {\n  return tensorList.some(x => x.id === tensor.id);\n}\n\n/**\n * Extracts any `Tensor`s found within the provided object.\n *\n * @param container an object that may be a `Tensor` or may directly contain\n *   `Tensor`s, such as a `Tensor[]` or `{key: Tensor, ...}`. In general it\n *   is safe to pass any object here, except that `Promise`s are not\n *   supported.\n * @returns An array of `Tensors` found within the passed object. If the\n *   argument is simply a `Tensor', a list containing that `Tensor` is\n *   returned. If the object is not a `Tensor` or does not\n *   contain `Tensors`, an empty list is returned.\n */\nexport function getTensorsInContainer(result: TensorContainer): Tensor[] {\n  const list: Tensor[] = [];\n  const seen = new Set<{}|void>();\n  walkTensorContainer(result, list, seen);\n  return list;\n}\n\nfunction walkTensorContainer(\n    container: TensorContainer, list: Tensor[], seen: Set<{}|void>): void {\n  if (container == null) {\n    return;\n  }\n  if (container instanceof Tensor) {\n    list.push(container);\n    return;\n  }\n  if (!isIterable(container)) {\n    return;\n  }\n  // Iteration over keys works also for arrays.\n  const iterable = container as TensorContainerArray;\n  for (const k in iterable) {\n    const val = iterable[k];\n    if (!seen.has(val)) {\n      seen.add(val);\n      walkTensorContainer(val, list, seen);\n    }\n  }\n}\n\n// tslint:disable-next-line:no-any\nfunction isIterable(obj: any): boolean {\n  return Array.isArray(obj) || typeof obj === 'object';\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Scalar} from '../tensor';\nimport {DataType} from '../types';\nimport {isTypedArray} from '../util';\nimport {makeTensor} from './tensor_ops_util';\n\n/**\n * Creates rank-0 `tf.Tensor` (scalar) with the provided value and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.scalar` as it makes the code more readable.\n *\n * ```js\n * tf.scalar(3.14).print();\n * ```\n *\n * @param value The value of the scalar.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function scalar(\n    value: number|boolean|string|Uint8Array, dtype?: DataType): Scalar {\n  if (((isTypedArray(value) && dtype !== 'string') || Array.isArray(value)) &&\n      dtype !== 'complex64') {\n    throw new Error(\n        'Error creating a new Scalar: value must be a primitive ' +\n        '(number|boolean|string)');\n  }\n  if (dtype === 'string' && isTypedArray(value) &&\n      !(value instanceof Uint8Array)) {\n    throw new Error(\n        'When making a scalar from encoded string, ' +\n        'the value must be `Uint8Array`.');\n  }\n  const shape: number[] = [];\n  const inferredShape: number[] = [];\n  return makeTensor(value, shape, inferredShape, dtype) as Scalar;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelBackend} from './backends/backend';\nimport {ENGINE, Engine, MemoryInfo, ProfileInfo, ScopeFn, TimingInfo} from './engine';\nimport {env} from './environment';\n\nimport {Platform} from './platforms/platform';\nimport {setDeprecationWarningFn, Tensor} from './tensor';\nimport {TensorContainer} from './tensor_types';\nimport {getTensorsInContainer} from './tensor_util';\n\n/**\n * Enables production mode which disables correctness checks in favor of\n * performance.\n *\n * @doc {heading: 'Environment'}\n */\nexport function enableProdMode(): void {\n  env().set('PROD', true);\n}\n\n/**\n * Enables debug mode which will log information about all executed kernels:\n * the elapsed time of the kernel execution, as well as the rank, shape, and\n * size of the output tensor.\n *\n * Debug mode will significantly slow down your application as it will\n * download the result of every operation to the CPU. This should not be used in\n * production. Debug mode does not affect the timing information of the kernel\n * execution as we do not measure download time in the kernel execution time.\n *\n * See also: `tf.profile`, `tf.memory`.\n *\n * @doc {heading: 'Environment'}\n */\nexport function enableDebugMode(): void {\n  env().set('DEBUG', true);\n}\n\n/** Globally disables deprecation warnings */\nexport function disableDeprecationWarnings(): void {\n  env().set('DEPRECATION_WARNINGS_ENABLED', false);\n  console.warn(`TensorFlow.js deprecation warnings have been disabled.`);\n}\n\n/** Warn users about deprecated functionality. */\nexport function deprecationWarn(msg: string) {\n  if (env().getBool('DEPRECATION_WARNINGS_ENABLED')) {\n    console.warn(\n        msg + ' You can disable deprecation warnings with ' +\n        'tf.disableDeprecationWarnings().');\n  }\n}\nsetDeprecationWarningFn(deprecationWarn);\n\n/**\n * Dispose all variables kept in backend engine.\n *\n * @doc {heading: 'Environment'}\n */\nexport function disposeVariables(): void {\n  ENGINE.disposeVariables();\n}\n\n/**\n * It returns the global engine that keeps track of all tensors and backends.\n *\n * @doc {heading: 'Environment'}\n */\nexport function engine(): Engine {\n  return ENGINE;\n}\n\n/**\n * Returns memory info at the current time in the program. The result is an\n * object with the following properties:\n *\n * - `numBytes`: Number of bytes allocated (undisposed) at this time.\n * - `numTensors`: Number of unique tensors allocated.\n * - `numDataBuffers`: Number of unique data buffers allocated\n *   (undisposed) at this time, which is ≤ the number of tensors\n *   (e.g. `a.reshape(newShape)` makes a new Tensor that shares the same\n *   data buffer with `a`).\n * - `unreliable`: True if the memory usage is unreliable. See `reasons` when\n *    `unreliable` is true.\n * - `reasons`: `string[]`, reasons why the memory is unreliable, present if\n *    `unreliable` is true.\n *\n * WebGL Properties:\n * - `numBytesInGPU`: Number of bytes allocated (undisposed) in the GPU only at\n *     this time.\n *\n * @doc {heading: 'Performance', subheading: 'Memory'}\n */\nexport function memory(): MemoryInfo {\n  return ENGINE.memory();\n}\n\n/**\n * Executes the provided function `f()` and returns a promise that resolves\n * with information about the function's memory use:\n * - `newBytes`: the number of new bytes allocated\n * - `newTensors`: the number of new tensors created\n * - `peakBytes`: the peak number of bytes allocated\n * - `kernels`: an array of objects for each kernel involved that reports\n * their input and output shapes, number of bytes used, and number of new\n * tensors created.\n * - `kernelNames`: an array of unique strings with just the names of the\n * kernels in the `kernels` array.\n *\n * ```js\n * const profile = await tf.profile(() => {\n *   const x = tf.tensor1d([1, 2, 3]);\n *   let x2 = x.square();\n *   x2.dispose();\n *   x2 = x.square();\n *   x2.dispose();\n *   return x;\n * });\n *\n * console.log(`newBytes: ${profile.newBytes}`);\n * console.log(`newTensors: ${profile.newTensors}`);\n * console.log(`byte usage over all kernels: ${profile.kernels.map(k =>\n * k.totalBytesSnapshot)}`);\n * ```\n *\n *\n * @doc {heading: 'Performance', subheading: 'Profile'}\n */\nexport function profile(f: () => (TensorContainer | Promise<TensorContainer>)):\n    Promise<ProfileInfo> {\n  return ENGINE.profile(f);\n}\n\n/**\n * Executes the provided function `fn` and after it is executed, cleans up all\n * intermediate tensors allocated by `fn` except those returned by `fn`.\n * `fn` must not return a Promise (async functions not allowed). The returned\n * result can be a complex object.\n *\n * Using this method helps avoid memory leaks. In general, wrap calls to\n * operations in `tf.tidy` for automatic memory cleanup.\n *\n * NOTE: Variables do *not* get cleaned up when inside a tidy(). If you want to\n * dispose variables, please use `tf.disposeVariables` or call dispose()\n * directly on variables.\n *\n * ```js\n * // y = 2 ^ 2 + 1\n * const y = tf.tidy(() => {\n *   // a, b, and one will be cleaned up when the tidy ends.\n *   const one = tf.scalar(1);\n *   const a = tf.scalar(2);\n *   const b = a.square();\n *\n *   console.log('numTensors (in tidy): ' + tf.memory().numTensors);\n *\n *   // The value returned inside the tidy function will return\n *   // through the tidy, in this case to the variable y.\n *   return b.add(one);\n * });\n *\n * console.log('numTensors (outside tidy): ' + tf.memory().numTensors);\n * y.print();\n * ```\n *\n * @param nameOrFn The name of the closure, or the function to execute.\n *     If a name is provided, the 2nd argument should be the function.\n *     If debug mode is on, the timing and the memory usage of the function\n *     will be tracked and displayed on the console using the provided name.\n * @param fn The function to execute.\n *\n * @doc {heading: 'Performance', subheading: 'Memory'}\n */\nexport function tidy<T extends TensorContainer>(\n    nameOrFn: string|ScopeFn<T>, fn?: ScopeFn<T>): T {\n  return ENGINE.tidy(nameOrFn, fn);\n}\n\n/**\n * Disposes any `tf.Tensor`s found within the provided object.\n *\n * @param container an object that may be a `tf.Tensor` or may directly\n *     contain `tf.Tensor`s, such as a `Tensor[]` or `{key: Tensor, ...}`. If\n *     the object is not a `tf.Tensor` or does not contain `Tensors`, nothing\n *     happens. In general it is safe to pass any object here, except that\n *     `Promise`s are not supported.\n *\n * @doc {heading: 'Performance', subheading: 'Memory'}\n */\nexport function dispose(container: TensorContainer) {\n  const tensors = getTensorsInContainer(container);\n  tensors.forEach(tensor => tensor.dispose());\n}\n\n/**\n * Keeps a `tf.Tensor` generated inside a `tf.tidy` from being disposed\n * automatically.\n *\n * ```js\n * let b;\n * const y = tf.tidy(() => {\n *   const one = tf.scalar(1);\n *   const a = tf.scalar(2);\n *\n *   // b will not be cleaned up by the tidy. a and one will be cleaned up\n *   // when the tidy ends.\n *   b = tf.keep(a.square());\n *\n *   console.log('numTensors (in tidy): ' + tf.memory().numTensors);\n *\n *   // The value returned inside the tidy function will return\n *   // through the tidy, in this case to the variable y.\n *   return b.add(one);\n * });\n *\n * console.log('numTensors (outside tidy): ' + tf.memory().numTensors);\n * console.log('y:');\n * y.print();\n * console.log('b:');\n * b.print();\n * ```\n *\n * @param result The tensor to keep from being disposed.\n *\n * @doc {heading: 'Performance', subheading: 'Memory'}\n */\nexport function keep<T extends Tensor>(result: T): T {\n  return ENGINE.keep(result);\n}\n\n/**\n * Executes `f()` and returns a promise that resolves with timing\n * information.\n *\n * The result is an object with the following properties:\n *\n * - `wallMs`: Wall execution time.\n * - `kernelMs`: Kernel execution time, ignoring data transfer. If using the\n * WebGL backend and the query timer extension is not available, this will\n * return an error object.\n * - On `WebGL` The following additional properties exist:\n *   - `uploadWaitMs`: CPU blocking time on texture uploads.\n *   - `downloadWaitMs`: CPU blocking time on texture downloads (readPixels).\n *\n * ```js\n * const x = tf.randomNormal([20, 20]);\n * const time = await tf.time(() => x.matMul(x));\n *\n * console.log(`kernelMs: ${time.kernelMs}, wallTimeMs: ${time.wallMs}`);\n * ```\n *\n * @param f The function to execute and time.\n *\n * @doc {heading: 'Performance', subheading: 'Timing'}\n */\nexport function time(f: () => void): Promise<TimingInfo> {\n  return ENGINE.time(f);\n}\n\n/**\n * Sets the backend (cpu, webgl, wasm, etc) responsible for creating tensors and\n * executing operations on those tensors. Returns a promise that resolves\n * to a boolean if the backend initialization was successful.\n *\n * Note this disposes the current backend, if any, as well as any tensors\n * associated with it. A new backend is initialized, even if it is of the\n * same type as the previous one.\n *\n * @param backendName The name of the backend. Currently supports\n *     `'webgl'|'cpu'` in the browser, `'tensorflow'` under node.js\n *     (requires tfjs-node), and `'wasm'` (requires tfjs-backend-wasm).\n *\n * @doc {heading: 'Backends'}\n */\nexport function setBackend(backendName: string): Promise<boolean> {\n  return ENGINE.setBackend(backendName);\n}\n\n/**\n * Returns a promise that resolves when the currently selected backend (or the\n * highest priority one) has initialized. Await this promise when you are using\n * a backend that has async initialization.\n *\n * @doc {heading: 'Backends'}\n */\nexport function ready(): Promise<void> {\n  return ENGINE.ready();\n}\n\n/**\n * Returns the current backend name (cpu, webgl, etc). The backend is\n * responsible for creating tensors and executing operations on those tensors.\n *\n * @doc {heading: 'Backends'}\n */\nexport function getBackend(): string {\n  return ENGINE.backendName;\n}\n\n/**\n * Removes a backend and the registered factory.\n *\n * @doc {heading: 'Backends'}\n */\nexport function removeBackend(name: string): void {\n  ENGINE.removeBackend(name);\n}\n\n/**\n * Finds the backend registered under the provided name. Returns null if the\n * name is not in the registry, or the registration hasn't finished yet.\n */\nexport function findBackend(name: string): KernelBackend {\n  return ENGINE.findBackend(name);\n}\n\n/**\n * Finds the backend factory registered under the provided name. Returns a\n * function that produces a new backend when called. Returns null if the name\n * is not in the registry.\n */\nexport function findBackendFactory(name: string): () =>\n    KernelBackend | Promise<KernelBackend> {\n  return ENGINE.findBackendFactory(name);\n}\n\n/**\n * Registers a global backend. The registration should happen when importing\n * a module file (e.g. when importing `backend_webgl.ts`), and is used for\n * modular builds (e.g. custom tfjs bundle with only webgl support).\n *\n * @param factory The backend factory function. When called, it should\n * return a backend instance, or a promise of an instance.\n * @param priority The priority of the backend (higher = more important).\n *     In case multiple backends are registered, the priority is used to find\n *     the best backend. Defaults to 1.\n * @return False if there is already a registered backend under this name, true\n *     if not.\n *\n * @doc {heading: 'Backends'}\n */\nexport function registerBackend(\n    name: string, factory: () => KernelBackend | Promise<KernelBackend>,\n    priority = 1): boolean {\n  return ENGINE.registerBackend(name, factory, priority);\n}\n\n/**\n * Gets the current backend. If no backends have been initialized, this will\n * attempt to initialize the best backend. Will throw an error if the highest\n * priority backend has async initialization, in which case, you should call\n * 'await tf.ready()' before running other code.\n *\n * @doc {heading: 'Backends'}\n */\nexport function backend(): KernelBackend {\n  return ENGINE.backend;\n}\n\n/**\n * Sets the global platform.\n *\n * @param platformName The name of this platform.\n * @param platform A platform implementation.\n */\nexport function setPlatform(platformName: string, platform: Platform) {\n  env().setPlatform(platformName, platform);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {RealDiv, RealDivInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {floorDiv} from './floorDiv';\nimport {op} from './operation';\n\n/**\n * Divides two `tf.Tensor`s element-wise, A / B. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 9, 16]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n *\n * a.div(b).print();  // or tf.div(a, b)\n * ```\n *\n * ```js\n * // Broadcast div a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(2);\n *\n * a.div(b).print();  // or tf.div(a, b)\n * ```\n *\n * @param a The first tensor as the numerator.\n * @param b The second tensor as the denominator. Must have the same dtype as\n * `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction div_<T extends Tensor>(a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'div');\n  let $b = convertToTensor(b, 'b', 'div');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  if ($a.dtype === 'int32' && $b.dtype === 'int32') {\n    return floorDiv($a, $b);\n  }\n\n  const inputs: RealDivInputs = {a: $a, b: $b};\n  const attrs = {};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  return ENGINE.runKernel(RealDiv, inputs as {} as NamedTensorMap, attrs) as T;\n}\n\nexport const div = op({div_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, TypedArray} from './types';\nimport {computeStrides, isString, rightPad, sizeFromShape} from './util';\n\n// Maximum number of values before we decide to show ellipsis.\nconst FORMAT_LIMIT_NUM_VALS = 20;\n// Number of first and last values to show when displaying a, b,...,y, z.\nconst FORMAT_NUM_FIRST_LAST_VALS = 3;\n// Number of significant digits to show.\nconst FORMAT_NUM_SIG_DIGITS = 7;\n\nexport function tensorToString(\n    vals: TypedArray|string[], shape: number[], dtype: DataType,\n    verbose: boolean) {\n  const strides = computeStrides(shape);\n  const padPerCol = computeMaxSizePerColumn(vals, shape, dtype, strides);\n  const rank = shape.length;\n  const valsLines = subTensorToString(vals, shape, dtype, strides, padPerCol);\n  const lines = ['Tensor'];\n  if (verbose) {\n    lines.push(`  dtype: ${dtype}`);\n    lines.push(`  rank: ${rank}`);\n    lines.push(`  shape: [${shape}]`);\n    lines.push(`  values:`);\n  }\n  lines.push(valsLines.map(l => '    ' + l).join('\\n'));\n  return lines.join('\\n');\n}\n\nfunction computeMaxSizePerColumn(\n    vals: TypedArray|string[], shape: number[], dtype: DataType,\n    strides: number[]): number[] {\n  const n = sizeFromShape(shape);\n  const numCols = strides[strides.length - 1];\n  const padPerCol = new Array(numCols).fill(0);\n  const rank = shape.length;\n  const valuesOrTuples =\n      dtype === 'complex64' ? createComplexTuples(vals) : vals;\n\n  if (rank > 1) {\n    for (let row = 0; row < n / numCols; row++) {\n      const offset = row * numCols;\n      for (let j = 0; j < numCols; j++) {\n        padPerCol[j] = Math.max(\n            padPerCol[j],\n            valToString(valuesOrTuples[offset + j], 0, dtype).length);\n      }\n    }\n  }\n  return padPerCol;\n}\n\nfunction valToString(\n    val: number|string|[number, number], pad: number, dtype: DataType) {\n  let valStr: string;\n  if (Array.isArray(val)) {\n    valStr = `${parseFloat(val[0].toFixed(FORMAT_NUM_SIG_DIGITS))} + ` +\n        `${parseFloat(val[1].toFixed(FORMAT_NUM_SIG_DIGITS))}j`;\n  } else if (isString(val)) {\n    valStr = `'${val}'`;\n  } else if (dtype === 'bool') {\n    valStr = boolNumToString(val);\n  } else {\n    valStr = parseFloat(val.toFixed(FORMAT_NUM_SIG_DIGITS)).toString();\n  }\n\n  return rightPad(valStr, pad);\n}\n\nfunction boolNumToString(v: number): string {\n  return v === 0 ? 'false' : 'true';\n}\n\nfunction subTensorToString(\n    vals: TypedArray|string[], shape: number[], dtype: DataType,\n    strides: number[], padPerCol: number[], isLast = true): string[] {\n  const storagePerElement = dtype === 'complex64' ? 2 : 1;\n\n  const size = shape[0];\n  const rank = shape.length;\n  if (rank === 0) {\n    if (dtype === 'complex64') {\n      const complexTuple = createComplexTuples(vals);\n      return [valToString(complexTuple[0], 0, dtype)];\n    }\n    if (dtype === 'bool') {\n      return [boolNumToString(vals[0] as number)];\n    }\n    return [vals[0].toString()];\n  }\n\n  if (rank === 1) {\n    if (size > FORMAT_LIMIT_NUM_VALS) {\n      const firstValsSize = FORMAT_NUM_FIRST_LAST_VALS * storagePerElement;\n\n      let firstVals = Array.from<number|string|[number, number]>(\n          vals.slice(0, firstValsSize));\n      let lastVals = Array.from<number|string|[number, number]>(vals.slice(\n          (size - FORMAT_NUM_FIRST_LAST_VALS) * storagePerElement,\n          size * storagePerElement));\n      if (dtype === 'complex64') {\n        firstVals = createComplexTuples(firstVals);\n        lastVals = createComplexTuples(lastVals);\n      }\n      return [\n        '[' +\n        firstVals.map((x, i) => valToString(x, padPerCol[i], dtype))\n            .join(', ') +\n        ', ..., ' +\n        lastVals\n            .map(\n                (x, i) => valToString(\n                    x, padPerCol[size - FORMAT_NUM_FIRST_LAST_VALS + i], dtype))\n            .join(', ') +\n        ']'\n      ];\n    }\n    const displayVals: Array<number|string|[number, number]> =\n        dtype === 'complex64' ? createComplexTuples(vals) :\n                                Array.from<number|string>(vals);\n\n    return [\n      '[' +\n      displayVals.map((x, i) => valToString(x, padPerCol[i], dtype))\n          .join(', ') +\n      ']'\n    ];\n  }\n\n  // The array is rank 2 or more.\n  const subshape = shape.slice(1);\n  const substrides = strides.slice(1);\n  const stride = strides[0] * storagePerElement;\n  const lines: string[] = [];\n  if (size > FORMAT_LIMIT_NUM_VALS) {\n    for (let i = 0; i < FORMAT_NUM_FIRST_LAST_VALS; i++) {\n      const start = i * stride;\n      const end = start + stride;\n      lines.push(...subTensorToString(\n          vals.slice(start, end), subshape, dtype, substrides, padPerCol,\n          false /* isLast */));\n    }\n    lines.push('...');\n    for (let i = size - FORMAT_NUM_FIRST_LAST_VALS; i < size; i++) {\n      const start = i * stride;\n      const end = start + stride;\n      lines.push(...subTensorToString(\n          vals.slice(start, end), subshape, dtype, substrides, padPerCol,\n          i === size - 1 /* isLast */));\n    }\n  } else {\n    for (let i = 0; i < size; i++) {\n      const start = i * stride;\n      const end = start + stride;\n      lines.push(...subTensorToString(\n          vals.slice(start, end), subshape, dtype, substrides, padPerCol,\n          i === size - 1 /* isLast */));\n    }\n  }\n  const sep = rank === 2 ? ',' : '';\n  lines[0] = '[' + lines[0] + sep;\n  for (let i = 1; i < lines.length - 1; i++) {\n    lines[i] = ' ' + lines[i] + sep;\n  }\n  let newLineSep = ',\\n';\n  for (let i = 2; i < rank; i++) {\n    newLineSep += '\\n';\n  }\n  lines[lines.length - 1] =\n      ' ' + lines[lines.length - 1] + ']' + (isLast ? '' : newLineSep);\n  return lines;\n}\n\nfunction createComplexTuples(vals: Array<{}>|\n                             TypedArray): Array<[number, number]> {\n  const complexTuples: Array<[number, number]> = [];\n  for (let i = 0; i < vals.length; i += 2) {\n    complexTuples.push([vals[i], vals[i + 1]] as [number, number]);\n  }\n  return complexTuples;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {getGlobal} from './global_util';\nimport {tensorToString} from './tensor_format';\nimport {ArrayMap, BackendValues, DataType, DataTypeMap, DataValues, NumericDataType, Rank, ShapeMap, SingleValueMap, TypedArray} from './types';\nimport * as util from './util';\nimport {computeStrides, toNestedArray} from './util';\n\nexport interface TensorData<D extends DataType> {\n  dataId?: DataId;\n  values?: DataTypeMap[D];\n}\n\n// This interface mimics KernelBackend (in backend.ts), which would create a\n// circular dependency if imported.\nexport interface Backend {}\n\n/**\n * A mutable object, similar to `tf.Tensor`, that allows users to set values\n * at locations before converting to an immutable `tf.Tensor`.\n *\n * See `tf.buffer` for creating a tensor buffer.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\nexport class TensorBuffer<R extends Rank, D extends DataType = 'float32'> {\n  size: number;\n  shape: ShapeMap[R];\n  strides: number[];\n  values: DataTypeMap[D];\n\n  constructor(shape: ShapeMap[R], public dtype: D, values?: DataTypeMap[D]) {\n    this.shape = shape.slice() as ShapeMap[R];\n    this.size = util.sizeFromShape(shape);\n\n    if (values != null) {\n      const n = values.length;\n      util.assert(\n          n === this.size,\n          () => `Length of values '${n}' does not match the size ` +\n              `inferred by the shape '${this.size}'.`);\n    }\n    if (dtype === 'complex64') {\n      throw new Error(\n          `complex64 dtype TensorBuffers are not supported. Please create ` +\n          `a TensorBuffer for the real and imaginary parts separately and ` +\n          `call tf.complex(real, imag).`);\n    }\n    this.values = values || util.getArrayFromDType(dtype, this.size);\n    this.strides = computeStrides(shape);\n  }\n\n  /**\n   * Sets a value in the buffer at a given location.\n   *\n   * @param value The value to set.\n   * @param locs  The location indices.\n   *\n   * @doc {heading: 'Tensors', subheading: 'Creation'}\n   */\n  set(value: SingleValueMap[D], ...locs: number[]): void {\n    if (locs.length === 0) {\n      locs = [0];\n    }\n    util.assert(\n        locs.length === this.rank,\n        () => `The number of provided coordinates (${locs.length}) must ` +\n            `match the rank (${this.rank})`);\n\n    const index = this.locToIndex(locs);\n    this.values[index] = value as number;\n  }\n\n  /**\n   * Returns the value in the buffer at the provided location.\n   *\n   * @param locs The location indices.\n   *\n   * @doc {heading: 'Tensors', subheading: 'Creation'}\n   */\n  get(...locs: number[]): SingleValueMap[D] {\n    if (locs.length === 0) {\n      locs = [0];\n    }\n    let i = 0;\n    for (const loc of locs) {\n      if (loc < 0 || loc >= this.shape[i]) {\n        const msg = `Requested out of range element at ${locs}. ` +\n            `  Buffer shape=${this.shape}`;\n        throw new Error(msg);\n      }\n      i++;\n    }\n    let index = locs[locs.length - 1];\n    for (let i = 0; i < locs.length - 1; ++i) {\n      index += this.strides[i] * locs[i];\n    }\n    return this.values[index] as SingleValueMap[D];\n  }\n\n  locToIndex(locs: number[]): number {\n    if (this.rank === 0) {\n      return 0;\n    } else if (this.rank === 1) {\n      return locs[0];\n    }\n    let index = locs[locs.length - 1];\n    for (let i = 0; i < locs.length - 1; ++i) {\n      index += this.strides[i] * locs[i];\n    }\n    return index;\n  }\n\n  indexToLoc(index: number): number[] {\n    if (this.rank === 0) {\n      return [];\n    } else if (this.rank === 1) {\n      return [index];\n    }\n    const locs: number[] = new Array(this.shape.length);\n    for (let i = 0; i < locs.length - 1; ++i) {\n      locs[i] = Math.floor(index / this.strides[i]);\n      index -= locs[i] * this.strides[i];\n    }\n    locs[locs.length - 1] = index;\n    return locs;\n  }\n\n  get rank() {\n    return this.shape.length;\n  }\n\n  /**\n   * Creates an immutable `tf.Tensor` object from the buffer.\n   *\n   * @doc {heading: 'Tensors', subheading: 'Creation'}\n   */\n  toTensor(): Tensor<R> {\n    return trackerFn().makeTensor(this.values, this.shape, this.dtype) as\n        Tensor<R>;\n  }\n}\n\nexport interface TensorTracker {\n  makeTensor(\n      values: DataValues, shape: number[], dtype: DataType,\n      backend?: Backend): Tensor;\n  makeVariable(\n      initialValue: Tensor, trainable?: boolean, name?: string,\n      dtype?: DataType): Variable;\n  incRef(a: Tensor, backend: Backend): void;\n  disposeTensor(t: Tensor): void;\n  disposeVariable(v: Variable): void;\n  read(dataId: DataId): Promise<BackendValues>;\n  readSync(dataId: DataId): BackendValues;\n}\n\n/**\n * The Tensor class calls into this handler to delegate chaining operations.\n */\nexport interface OpHandler {\n  cast<T extends Tensor>(x: T, dtype: DataType): T;\n  buffer<R extends Rank, D extends DataType>(\n      shape: ShapeMap[R], dtype: D,\n      values?: DataTypeMap[D]): TensorBuffer<R, D>;\n  print<T extends Tensor>(x: T, verbose: boolean): void;\n  clone<T extends Tensor>(x: T): T;\n  // TODO(yassogba) bring reshape back?\n}\n\n// For tracking tensor creation and disposal.\nlet trackerFn: () => TensorTracker = null;\n// Used by chaining methods to call into ops.\nlet opHandler: OpHandler = null;\n// Used to warn about deprecated methods.\nlet deprecationWarningFn: (msg: string) => void = null;\n// This here so that we can use this method on dev branches and keep the\n// functionality at master.\n// tslint:disable-next-line:no-unused-expression\n[deprecationWarningFn];\n\n/**\n * An external consumer can register itself as the tensor tracker. This way\n * the Tensor class can notify the tracker for every tensor created and\n * disposed.\n */\nexport function setTensorTracker(fn: () => TensorTracker) {\n  trackerFn = fn;\n}\n\n/**\n * An external consumer can register itself as the op handler. This way the\n * Tensor class can have chaining methods that call into ops via the op\n * handler.\n */\nexport function setOpHandler(handler: OpHandler) {\n  opHandler = handler;\n}\n\n/**\n * Sets the deprecation warning function to be used by this file. This way the\n * Tensor class can be a leaf but still use the environment.\n */\nexport function setDeprecationWarningFn(fn: (msg: string) => void) {\n  deprecationWarningFn = fn;\n}\n\n/**\n * We wrap data id since we use weak map to avoid memory leaks.\n * Since we have our own memory management, we have a reference counter\n * mapping a tensor to its data, so there is always a pointer (even if that\n * data is otherwise garbage collectable).\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/\n * Global_Objects/WeakMap\n */\nexport type DataId = object;  // object instead of {} to force non-primitive.\n\n// Declare this namespace to make Tensor class augmentation work in google3.\nexport declare namespace Tensor {}\n/**\n * A `tf.Tensor` object represents an immutable, multidimensional array of\n * numbers that has a shape and a data type.\n *\n * For performance reasons, functions that create tensors do not necessarily\n * perform a copy of the data passed to them (e.g. if the data is passed as a\n * `Float32Array`), and changes to the data will change the tensor. This is not\n * a feature and is not supported. To avoid this behavior, use the tensor before\n * changing the input data or create a copy with `copy = tf.add(yourTensor, 0)`.\n *\n * See `tf.tensor` for details on how to create a `tf.Tensor`.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\nexport class Tensor<R extends Rank = Rank> {\n  /** Unique id of this tensor. */\n  readonly id: number;\n  /**\n   * Id of the bucket holding the data for this tensor. Multiple arrays can\n   * point to the same bucket (e.g. when calling array.reshape()).\n   */\n  dataId: DataId;\n  /** The shape of the tensor. */\n  readonly shape: ShapeMap[R];\n  /** Number of elements in the tensor. */\n  readonly size: number;\n  /** The data type for the array. */\n  readonly dtype: DataType;\n  /** The rank type for the array (see `Rank` enum). */\n  readonly rankType: R;\n\n  /** Whether this tensor has been globally kept. */\n  kept = false;\n  /** The id of the scope this tensor is being tracked in. */\n  scopeId: number;\n\n  /**\n   * Number of elements to skip in each dimension when indexing. See\n   * https://docs.scipy.org/doc/numpy/reference/generated/\\\n   * numpy.ndarray.strides.html\n   */\n  readonly strides: number[];\n\n  constructor(shape: ShapeMap[R], dtype: DataType, dataId: DataId, id: number) {\n    this.shape = shape.slice() as ShapeMap[R];\n    this.dtype = dtype || 'float32';\n    this.size = util.sizeFromShape(shape);\n    this.strides = computeStrides(shape);\n    this.dataId = dataId;\n    this.id = id;\n    this.rankType = (this.rank < 5 ? this.rank.toString() : 'higher') as R;\n  }\n\n  get rank(): number {\n    return this.shape.length;\n  }\n\n  /**\n   * Returns a promise of `tf.TensorBuffer` that holds the underlying data.\n   *\n   * @doc {heading: 'Tensors', subheading: 'Classes'}\n   */\n  async buffer<D extends DataType = 'float32'>(): Promise<TensorBuffer<R, D>> {\n    const vals = await this.data<D>();\n    return opHandler.buffer(this.shape, this.dtype as D, vals);\n  }\n\n  /**\n   * Returns a `tf.TensorBuffer` that holds the underlying data.\n   * @doc {heading: 'Tensors', subheading: 'Classes'}\n   */\n  bufferSync<D extends DataType = 'float32'>(): TensorBuffer<R, D> {\n    return opHandler.buffer(this.shape, this.dtype as D, this.dataSync());\n  }\n\n  /**\n   * Returns the tensor data as a nested array. The transfer of data is done\n   * asynchronously.\n   *\n   * @doc {heading: 'Tensors', subheading: 'Classes'}\n   */\n  async array(): Promise<ArrayMap[R]> {\n    const vals = await this.data();\n    return toNestedArray(this.shape, vals, this.dtype === 'complex64') as\n        ArrayMap[R];\n  }\n\n  /**\n   * Returns the tensor data as a nested array. The transfer of data is done\n   * synchronously.\n   *\n   * @doc {heading: 'Tensors', subheading: 'Classes'}\n   */\n  arraySync(): ArrayMap[R] {\n    return toNestedArray(\n               this.shape, this.dataSync(), this.dtype === 'complex64') as\n        ArrayMap[R];\n  }\n\n  /**\n   * Asynchronously downloads the values from the `tf.Tensor`. Returns a\n   * promise of `TypedArray` that resolves when the computation has finished.\n   *\n   * @doc {heading: 'Tensors', subheading: 'Classes'}\n   */\n  async data<D extends DataType = NumericDataType>(): Promise<DataTypeMap[D]> {\n    this.throwIfDisposed();\n    const data = trackerFn().read(this.dataId);\n    if (this.dtype === 'string') {\n      const bytes = await data as Uint8Array[];\n      try {\n        return bytes.map(b => util.decodeString(b)) as DataTypeMap[D];\n      } catch {\n        throw new Error(\n            'Failed to decode the string bytes into utf-8. ' +\n            'To get the original bytes, call tensor.bytes().');\n      }\n    }\n    return data as Promise<DataTypeMap[D]>;\n  }\n\n  /**\n   * Synchronously downloads the values from the `tf.Tensor`. This blocks the\n   * UI thread until the values are ready, which can cause performance issues.\n   *\n   * @doc {heading: 'Tensors', subheading: 'Classes'}\n   */\n  dataSync<D extends DataType = NumericDataType>(): DataTypeMap[D] {\n    this.throwIfDisposed();\n    const data = trackerFn().readSync(this.dataId);\n    if (this.dtype === 'string') {\n      try {\n        return (data as Uint8Array[]).map(b => util.decodeString(b)) as\n            DataTypeMap[D];\n      } catch {\n        throw new Error(\n            'Failed to decode the string bytes into utf-8. ' +\n            'To get the original bytes, call tensor.bytes().');\n      }\n    }\n    return data as DataTypeMap[D];\n  }\n\n  /** Returns the underlying bytes of the tensor's data. */\n  async bytes(): Promise<Uint8Array[]|Uint8Array> {\n    this.throwIfDisposed();\n    const data = await trackerFn().read(this.dataId);\n    if (this.dtype === 'string') {\n      return data as Uint8Array[];\n    } else {\n      return new Uint8Array((data as TypedArray).buffer);\n    }\n  }\n\n  /**\n   * Disposes `tf.Tensor` from memory.\n   *\n   * @doc {heading: 'Tensors', subheading: 'Classes'}\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    trackerFn().disposeTensor(this);\n    this.isDisposedInternal = true;\n  }\n\n  protected isDisposedInternal = false;\n  get isDisposed(): boolean {\n    return this.isDisposedInternal;\n  }\n\n  throwIfDisposed() {\n    if (this.isDisposed) {\n      throw new Error(`Tensor is disposed.`);\n    }\n  }\n\n  /**\n   * Prints the `tf.Tensor`. See `tf.print` for details.\n   *\n   * @param verbose Whether to print verbose information about the tensor,\n   *    including dtype and size.\n   *\n   * @doc {heading: 'Tensors', subheading: 'Classes'}\n   */\n  print(verbose = false): void {\n    return opHandler.print(this, verbose);\n  }\n\n  /**\n   * Returns a copy of the tensor. See `tf.clone` for details.\n   * @doc {heading: 'Tensors', subheading: 'Classes'}\n   */\n  clone<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.clone(this);\n  }\n\n  /**\n   * Returns a human-readable description of the tensor. Useful for logging.\n   *\n   * @doc {heading: 'Tensors', subheading: 'Classes'}\n   */\n  toString(verbose = false): string {\n    const vals = this.dataSync();\n    return tensorToString(vals, this.shape, this.dtype, verbose);\n  }\n\n  cast<T extends this>(dtype: DataType): T {\n    this.throwIfDisposed();\n    return opHandler.cast(this as T, dtype);\n  }\n  variable(trainable = true, name?: string, dtype?: DataType): Variable<R> {\n    this.throwIfDisposed();\n    return trackerFn().makeVariable(this, trainable, name, dtype) as\n        Variable<R>;\n  }\n}\nObject.defineProperty(Tensor, Symbol.hasInstance, {\n  value: (instance: Tensor) => {\n    // Implementation note: we should use properties of the object that will be\n    // defined before the constructor body has finished executing (methods).\n    // This is because when this code is transpiled by babel, babel will call\n    // classCallCheck before the constructor body is run.\n    // See https://github.com/tensorflow/tfjs/issues/3384 for backstory.\n    return !!instance && instance.data != null && instance.dataSync != null &&\n        instance.throwIfDisposed != null;\n  }\n});\n\nexport function getGlobalTensorClass() {\n  // Use getGlobal so that we can augment the Tensor class across package\n  // boundaries becase the node resolution alg may result in different modules\n  // being returned for this file depending on the path they are loaded from.\n  return getGlobal('Tensor', () => {\n    return Tensor;\n  });\n}\n\n// Global side effect. Cache global reference to Tensor class\ngetGlobalTensorClass();\n\nexport interface NumericTensor<R extends Rank = Rank> extends Tensor<R> {\n  dtype: NumericDataType;\n  dataSync<D extends DataType = NumericDataType>(): DataTypeMap[D];\n  data<D extends DataType = NumericDataType>(): Promise<DataTypeMap[D]>;\n}\n\nexport interface StringTensor<R extends Rank = Rank> extends Tensor<R> {\n  dtype: 'string';\n  dataSync<D extends DataType = 'string'>(): DataTypeMap[D];\n  data<D extends DataType = 'string'>(): Promise<DataTypeMap[D]>;\n}\n\n/** @doclink Tensor */\nexport type Scalar = Tensor<Rank.R0>;\n/** @doclink Tensor */\nexport type Tensor1D = Tensor<Rank.R1>;\n/** @doclink Tensor */\nexport type Tensor2D = Tensor<Rank.R2>;\n/** @doclink Tensor */\nexport type Tensor3D = Tensor<Rank.R3>;\n/** @doclink Tensor */\nexport type Tensor4D = Tensor<Rank.R4>;\n/** @doclink Tensor */\nexport type Tensor5D = Tensor<Rank.R5>;\n/** @doclink Tensor */\nexport type Tensor6D = Tensor<Rank.R6>;\n\n/**\n * A mutable `tf.Tensor`, useful for persisting state, e.g. for training.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\nexport class Variable<R extends Rank = Rank> extends Tensor<R> {\n  name: string;\n\n  constructor(\n      initialValue: Tensor<R>, public trainable: boolean, name: string,\n      tensorId: number) {\n    super(\n        initialValue.shape, initialValue.dtype, initialValue.dataId, tensorId);\n    this.name = name;\n  }\n\n  /**\n   * Assign a new `tf.Tensor` to this variable. The new `tf.Tensor` must have\n   * the same shape and dtype as the old `tf.Tensor`.\n   *\n   * @param newValue New tensor to be assigned to this variable.\n   *\n   * @doc {heading: 'Tensors', subheading: 'Classes'}\n   */\n  assign(newValue: Tensor<R>): void {\n    if (newValue.dtype !== this.dtype) {\n      throw new Error(\n          `dtype of the new value (${newValue.dtype}) and ` +\n          `previous value (${this.dtype}) must match`);\n    }\n    if (!util.arraysEqual(newValue.shape, this.shape)) {\n      throw new Error(\n          `shape of the new value (${newValue.shape}) and ` +\n          `previous value (${this.shape}) must match`);\n    }\n    trackerFn().disposeTensor(this);\n    this.dataId = newValue.dataId;\n    trackerFn().incRef(this, null /* backend */);\n  }\n\n  dispose(): void {\n    trackerFn().disposeVariable(this);\n    this.isDisposedInternal = true;\n  }\n}\n\nObject.defineProperty(Variable, Symbol.hasInstance, {\n  value: (instance: Variable) => {\n    return instance instanceof Tensor && instance.assign != null &&\n        instance.assign instanceof Function;\n  }\n});\n","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Cast, CastAttrs, CastInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {DataType, TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\n\n/**\n * Casts a `tf.Tensor` to a new dtype.\n *\n * ```js\n * const x = tf.tensor1d([1.5, 2.5, 3]);\n * tf.cast(x, 'int32').print();\n * ```\n * @param x The input tensor to be casted.\n * @param dtype The dtype to cast the input tensor to.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction cast_<T extends Tensor>(x: T|TensorLike, dtype: DataType): T {\n  const $x = convertToTensor(x, 'x', 'cast');\n\n  // Sanity checks.\n  if (!util.isValidDtype(dtype)) {\n    throw new Error(`Failed to cast to unknown dtype ${dtype}`);\n  }\n  if (dtype === 'string' && $x.dtype !== 'string' ||\n      dtype !== 'string' && $x.dtype === 'string') {\n    throw new Error('Only strings can be casted to strings');\n  }\n\n  const inputs: CastInputs = {x: $x};\n  const attrs: CastAttrs = {dtype};\n\n  return ENGINE.runKernel(\n      Cast, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const cast = op({cast_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {BatchMatMul, BatchMatMulAttrs, BatchMatMulInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes the dot product of two matrices, A * B. These must be matrices.\n *\n * ```js\n * const a = tf.tensor2d([1, 2], [1, 2]);\n * const b = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * a.matMul(b).print();  // or tf.matMul(a, b)\n * ```\n * @param a First matrix in dot product operation.\n * @param b Second matrix in dot product operation.\n * @param transposeA If true, `a` is transposed before multiplication.\n * @param transposeB If true, `b` is transposed before multiplication.\n *\n * @doc {heading: 'Operations', subheading: 'Matrices'}\n */\nfunction matMul_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike, transposeA = false,\n    transposeB = false): T {\n  let $a = convertToTensor(a, 'a', 'matMul');\n  let $b = convertToTensor(b, 'b', 'matMul');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  const inputs: BatchMatMulInputs = {a: $a, b: $b};\n  const attrs: BatchMatMulAttrs = {transposeA, transposeB};\n\n  return ENGINE.runKernel(\n      BatchMatMul, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const matMul = op({matMul_});\n","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Returns the dimensions in the input shape that are broadcasted to\n * produce the provided output shape.\n *\n * The returned dimensions are 0-indexed and sorted. An example:\n * inShape = [4, 1, 3]\n * outShape = [5, 4, 3, 3]\n * result = [1]. Dimension 1 (2nd dimension of input) gets broadcasted 1 => 3.\n */\nexport function getBroadcastDims(\n    inShape: number[], outShape: number[]): number[] {\n  const inRank = inShape.length;\n  const dims: number[] = [];\n  for (let i = 0; i < inRank; i++) {\n    const dim = inRank - 1 - i;\n    const a = inShape[dim] || 1;\n    const b = outShape[outShape.length - 1 - i] || 1;\n    if (b > 1 && a === 1) {\n      dims.unshift(dim);\n    }\n  }\n  return dims;\n}\n\n/**\n * Returns the axes in the output space that should be reduced to produce\n * the input space.\n */\nexport function getReductionAxes(\n    inShape: number[], outShape: number[]): number[] {\n  const result: number[] = [];\n  for (let i = 0; i < outShape.length; i++) {\n    const inDim = inShape[inShape.length - i - 1];\n    const outAxis = outShape.length - i - 1;\n    const outDim = outShape[outAxis];\n    if (inDim == null || (inDim === 1 && outDim > 1)) {\n      result.unshift(outAxis);\n    }\n  }\n  return result;\n}\n\nexport function assertAndGetBroadcastShape(\n    shapeA: number[], shapeB: number[]): number[] {\n  const result: number[] = [];\n  const l = Math.max(shapeA.length, shapeB.length);\n\n  for (let i = 0; i < l; i++) {\n    let a = shapeA[shapeA.length - i - 1];\n    if (a == null) {\n      a = 1;\n    }\n    let b = shapeB[shapeB.length - i - 1];\n    if (b == null) {\n      b = 1;\n    }\n    if (a === 1) {\n      result.unshift(b);\n    } else if (b === 1) {\n      result.unshift(a);\n    } else if (a !== b) {\n      const errMsg = `Operands could not be broadcast together with shapes ` +\n          `${shapeA} and ${shapeB}.`;\n      throw Error(errMsg);\n    } else {\n      result.unshift(a);\n    }\n  }\n  return result;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Slice, SliceAttrs, SliceInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {Rank, TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Extracts a slice from a `tf.Tensor` starting at coordinates `begin`\n * and is of size `size`.\n *\n * Also available are stricter rank-specific methods with the same signature\n * as this method that assert that `x` is of the given rank:\n *   - `tf.slice1d`\n *   - `tf.slice2d`\n *   - `tf.slice3d`\n *   - `tf.slice4d`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n *\n * x.slice([1], [2]).print();\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * x.slice([1, 0], [1, 2]).print();\n * ```\n * @param x The input `tf.Tensor` to slice from.\n * @param begin The coordinates to start the slice from. The length can be\n *     less than the rank of x - the rest of the axes will have implicit 0 as\n *     start. Can also be a single number, in which case it specifies the\n *     first axis.\n * @param size The size of the slice. The length can be less than the rank of\n *     x - the rest of the axes will have implicit -1. A value of -1 requests\n *     the rest of the dimensions in the axis. Can also be a single number,\n *     in which case it specifies the size of the first axis.\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction slice_<R extends Rank, T extends Tensor<R>>(\n    x: T|TensorLike, begin: number|number[], size?: number|number[]): T {\n  const $x = convertToTensor(x, 'x', 'slice', 'string_or_numeric');\n\n  if ($x.rank === 0) {\n    throw new Error('Slicing scalar is not possible');\n  }\n\n  const inputs: SliceInputs = {x: $x};\n  const attrs: SliceAttrs = {begin, size};\n\n  return ENGINE.runKernel(\n      Slice, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const slice = op({slice_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Sum, SumAttrs, SumInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {cast} from './cast';\nimport {op} from './operation';\n\n/**\n * Computes the sum of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If axes has no entries, all dimensions are reduced, and a\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.sum().print();  // or tf.sum(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.sum(axis).print();  // or tf.sum(x, axis)\n * ```\n *\n * @param x The input tensor to compute the sum over. If the dtype is `bool`\n *   it will be converted to `int32` and the output dtype will be `int32`.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction sum_<T extends Tensor>(\n    x: Tensor|TensorLike, axis: number|number[] = null, keepDims = false): T {\n  let $x = convertToTensor(x, 'x', 'sum');\n  if ($x.dtype === 'bool') {\n    $x = cast($x, 'int32');\n  }\n\n  const inputs: SumInputs = {x: $x};\n  const attrs: SumAttrs = {axis, keepDims};\n\n  return ENGINE.runKernel(\n      Sum, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const sum = op({sum_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {complex} from '../ops/complex';\nimport {tensor} from '../ops/tensor';\nimport {NamedTensor, NamedTensorMap} from '../tensor_types';\nimport {TypedArray} from '../types';\nimport {sizeFromShape} from '../util';\n\nimport {DTYPE_VALUE_SIZE_MAP, ModelArtifacts, ModelArtifactsInfo, ModelJSON, WeightGroup, WeightsManifestConfig, WeightsManifestEntry} from './types';\n\n/** Number of bytes reserved for the length of the string. (32bit integer). */\nconst NUM_BYTES_STRING_LENGTH = 4;\n\n/**\n * Encode a map from names to weight values as an ArrayBuffer, along with an\n * `Array` of `WeightsManifestEntry` as specification of the encoded weights.\n *\n * This function does not perform sharding.\n *\n * This function is the reverse of `decodeWeights`.\n *\n * @param tensors A map (\"dict\") from names to tensors.\n * @param group Group to which the weights belong (optional).\n * @returns A `Promise` of\n *   - A flat `ArrayBuffer` with all the binary values of the `Tensor`s\n *     concatenated.\n *   - An `Array` of `WeightManifestEntry`s, carrying information including\n *     tensor names, `dtype`s and shapes.\n * @throws Error: on unsupported tensor `dtype`.\n */\nexport async function encodeWeights(\n    tensors: NamedTensorMap|NamedTensor[], group?: WeightGroup):\n    Promise<{data: ArrayBuffer, specs: WeightsManifestEntry[]}> {\n  // TODO(adarob, cais): Support quantization.\n  const specs: WeightsManifestEntry[] = [];\n  const dataPromises: Array<Promise<TypedArray>> = [];\n\n  const names: string[] = Array.isArray(tensors) ?\n      tensors.map(tensor => tensor.name) :\n      Object.keys(tensors);\n\n  for (let i = 0; i < names.length; ++i) {\n    const name = names[i];\n    const t = Array.isArray(tensors) ? tensors[i].tensor : tensors[name];\n    if (t.dtype !== 'float32' && t.dtype !== 'int32' && t.dtype !== 'bool' &&\n        t.dtype !== 'string' && t.dtype !== 'complex64') {\n      throw new Error(`Unsupported dtype in weight '${name}': ${t.dtype}`);\n    }\n    const spec: WeightsManifestEntry = {name, shape: t.shape, dtype: t.dtype};\n    if (t.dtype === 'string') {\n      const utf8bytes = new Promise<TypedArray>(async resolve => {\n        const vals = await t.bytes() as Uint8Array[];\n        const totalNumBytes = vals.reduce((p, c) => p + c.length, 0) +\n            NUM_BYTES_STRING_LENGTH * vals.length;\n        const bytes = new Uint8Array(totalNumBytes);\n        let offset = 0;\n        for (let i = 0; i < vals.length; i++) {\n          const val = vals[i];\n          const bytesOfLength =\n              new Uint8Array(new Uint32Array([val.length]).buffer);\n          bytes.set(bytesOfLength, offset);\n          offset += NUM_BYTES_STRING_LENGTH;\n          bytes.set(val, offset);\n          offset += val.length;\n        }\n        resolve(bytes);\n      });\n      dataPromises.push(utf8bytes);\n    } else {\n      dataPromises.push(t.data());\n    }\n    if (group != null) {\n      spec.group = group;\n    }\n    specs.push(spec);\n  }\n\n  const tensorValues = await Promise.all(dataPromises);\n  return {data: concatenateTypedArrays(tensorValues), specs};\n}\n\n/**\n * Decode flat ArrayBuffer as weights.\n *\n * This function does not handle sharding.\n *\n * This function is the reverse of `encodeWeights`.\n *\n * @param buffer A flat ArrayBuffer carrying the binary values of the tensors\n *   concatenated in the order specified in `specs`.\n * @param specs Specifications of the names, dtypes and shapes of the tensors\n *   whose value are encoded by `buffer`.\n * @return A map from tensor name to tensor value, with the names corresponding\n *   to names in `specs`.\n * @throws Error, if any of the tensors has unsupported dtype.\n */\nexport function decodeWeights(\n    buffer: ArrayBuffer, specs: WeightsManifestEntry[]): NamedTensorMap {\n  // TODO(adarob, cais): Support quantization.\n  const out: NamedTensorMap = {};\n  let float16Decode: (buffer: Uint16Array) => Float32Array | undefined;\n  let offset = 0;\n  for (const spec of specs) {\n    const name = spec.name;\n    const dtype = spec.dtype;\n    const shape = spec.shape;\n    const size = sizeFromShape(shape);\n    let values: TypedArray|string[]|Uint8Array[];\n\n    if ('quantization' in spec) {\n      const quantization = spec.quantization;\n      if (quantization.dtype === 'uint8' || quantization.dtype === 'uint16') {\n        if (!('min' in quantization && 'scale' in quantization)) {\n          throw new Error(\n              `Weight ${spec.name} with quantization ${quantization.dtype} ` +\n              `doesn't have corresponding metadata min and scale.`);\n        }\n      } else if (quantization.dtype === 'float16') {\n        if (dtype !== 'float32') {\n          throw new Error(\n              `Weight ${spec.name} is quantized with ${quantization.dtype} ` +\n              `which only supports weights of type float32 not ${dtype}.`);\n        }\n      } else {\n        throw new Error(\n            `Weight ${spec.name} has unknown ` +\n            `quantization dtype ${quantization.dtype}. ` +\n            `Supported quantization dtypes are: ` +\n            `'uint8', 'uint16', and 'float16'.`);\n      }\n      const quantizationSizeFactor = DTYPE_VALUE_SIZE_MAP[quantization.dtype];\n      const byteBuffer =\n          buffer.slice(offset, offset + size * quantizationSizeFactor);\n      const quantizedArray = (quantization.dtype === 'uint8') ?\n          new Uint8Array(byteBuffer) :\n          new Uint16Array(byteBuffer);\n      if (dtype === 'float32') {\n        if (quantization.dtype === 'uint8' || quantization.dtype === 'uint16') {\n          values = new Float32Array(quantizedArray.length);\n          for (let i = 0; i < quantizedArray.length; i++) {\n            const v = quantizedArray[i];\n            values[i] = v * quantization.scale + quantization.min;\n          }\n        } else if (quantization.dtype === 'float16') {\n          if (float16Decode === undefined) {\n            float16Decode = getFloat16Decoder();\n          }\n          values = float16Decode(quantizedArray as Uint16Array);\n        } else {\n          throw new Error(\n              `Unsupported quantization type ${quantization.dtype} ` +\n              `for weight type float32.`);\n        }\n      } else if (dtype === 'int32') {\n        if (quantization.dtype !== 'uint8' && quantization.dtype !== 'uint16') {\n          throw new Error(\n              `Unsupported quantization type ${quantization.dtype} ` +\n              `for weight type int32.`);\n        }\n        values = new Int32Array(quantizedArray.length);\n        for (let i = 0; i < quantizedArray.length; i++) {\n          const v = quantizedArray[i];\n          values[i] = Math.round(v * quantization.scale + quantization.min);\n        }\n      } else {\n        throw new Error(`Unsupported dtype in weight '${name}': ${dtype}`);\n      }\n      offset += size * quantizationSizeFactor;\n    } else if (dtype === 'string') {\n      const size = sizeFromShape(spec.shape);\n      values = [];\n      for (let i = 0; i < size; i++) {\n        const byteLength = new Uint32Array(\n            buffer.slice(offset, offset + NUM_BYTES_STRING_LENGTH))[0];\n        offset += NUM_BYTES_STRING_LENGTH;\n        const bytes = new Uint8Array(buffer.slice(offset, offset + byteLength));\n        (values as Uint8Array[]).push(bytes);\n        offset += byteLength;\n      }\n    } else {\n      const dtypeFactor = DTYPE_VALUE_SIZE_MAP[dtype];\n      const byteBuffer = buffer.slice(offset, offset + size * dtypeFactor);\n\n      if (dtype === 'float32') {\n        values = new Float32Array(byteBuffer);\n      } else if (dtype === 'int32') {\n        values = new Int32Array(byteBuffer);\n      } else if (dtype === 'bool') {\n        values = new Uint8Array(byteBuffer);\n      } else if (dtype === 'complex64') {\n        values = new Float32Array(byteBuffer);\n        const real = new Float32Array(values.length / 2);\n        const image = new Float32Array(values.length / 2);\n        for (let i = 0; i < real.length; i++) {\n          real[i] = values[i * 2];\n          image[i] = values[i * 2 + 1];\n        }\n        const realTensor = tensor(real, shape, 'float32');\n        const imageTensor = tensor(image, shape, 'float32');\n        out[name] = complex(realTensor, imageTensor);\n        realTensor.dispose();\n        imageTensor.dispose();\n      } else {\n        throw new Error(`Unsupported dtype in weight '${name}': ${dtype}`);\n      }\n      offset += size * dtypeFactor;\n    }\n    if (dtype !== 'complex64') {\n      out[name] = tensor(values, shape, dtype);\n    }\n  }\n  return out;\n}\n\n/**\n * Concatenate TypedArrays into an ArrayBuffer.\n */\nexport function concatenateTypedArrays(xs: TypedArray[]): ArrayBuffer {\n  // TODO(adarob, cais): Support quantization.\n  if (xs === null) {\n    throw new Error(`Invalid input value: ${JSON.stringify(xs)}`);\n  }\n\n  let totalByteLength = 0;\n\n  // `normalizedXs` is here for this reason: a `TypedArray`'s `buffer'\n  // can have a different byte length from that of the `TypedArray` itself,\n  // for example, when the `TypedArray` is created from an offset in an\n  // `ArrayBuffer`. `normliazedXs` holds `TypedArray`s whose `buffer`s match\n  // the `TypedArray` in byte length. If an element of `xs` does not show\n  // this property, a new `TypedArray` that satisfy this property will be\n  // constructed and pushed into `normalizedXs`.\n  const normalizedXs: TypedArray[] = [];\n  xs.forEach((x: TypedArray) => {\n    totalByteLength += x.byteLength;\n    // tslint:disable:no-any\n    normalizedXs.push(\n        x.byteLength === x.buffer.byteLength ? x :\n                                               new (x.constructor as any)(x));\n    if (!(x as any instanceof Float32Array || x as any instanceof Int32Array ||\n          x as any instanceof Uint8Array)) {\n      throw new Error(`Unsupported TypedArray subtype: ${x.constructor.name}`);\n    }\n    // tslint:enable:no-any\n  });\n\n  const y = new Uint8Array(totalByteLength);\n  let offset = 0;\n  normalizedXs.forEach((x: TypedArray) => {\n    y.set(new Uint8Array(x.buffer), offset);\n    offset += x.byteLength;\n  });\n\n  return y.buffer;\n}\n\n// Use Buffer on Node.js instead of Blob/atob/btoa\nconst useNodeBuffer = typeof Buffer !== 'undefined' &&\n    (typeof Blob === 'undefined' || typeof atob === 'undefined' ||\n     typeof btoa === 'undefined');\n\n/**\n * Calculate the byte length of a JavaScript string.\n *\n * Note that a JavaScript string can contain wide characters, therefore the\n * length of the string is not necessarily equal to the byte length.\n *\n * @param str Input string.\n * @returns Byte length.\n */\nexport function stringByteLength(str: string): number {\n  if (useNodeBuffer) {\n    return Buffer.byteLength(str);\n  }\n  return new Blob([str]).size;\n}\n\n/**\n * Encode an ArrayBuffer as a base64 encoded string.\n *\n * @param buffer `ArrayBuffer` to be converted.\n * @returns A string that base64-encodes `buffer`.\n */\nexport function arrayBufferToBase64String(buffer: ArrayBuffer): string {\n  if (useNodeBuffer) {\n    return Buffer.from(buffer).toString('base64');\n  }\n  const buf = new Uint8Array(buffer);\n  let s = '';\n  for (let i = 0, l = buf.length; i < l; i++) {\n    s += String.fromCharCode(buf[i]);\n  }\n  return btoa(s);\n}\n\n/**\n * Decode a base64 string as an ArrayBuffer.\n *\n * @param str Base64 string.\n * @returns Decoded `ArrayBuffer`.\n */\nexport function base64StringToArrayBuffer(str: string): ArrayBuffer {\n  if (useNodeBuffer) {\n    const buf = Buffer.from(str, 'base64');\n    return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n  }\n  const s = atob(str);\n  const buffer = new Uint8Array(s.length);\n  for (let i = 0; i < s.length; ++i) {\n    buffer.set([s.charCodeAt(i)], i);\n  }\n  return buffer.buffer;\n}\n\n/**\n * Concatenate a number of ArrayBuffers into one.\n *\n * @param buffers A number of array buffers to concatenate.\n * @returns Result of concatenating `buffers` in order.\n */\nexport function concatenateArrayBuffers(buffers: ArrayBuffer[]): ArrayBuffer {\n  if (buffers.length === 1) {\n    return buffers[0];\n  }\n\n  let totalByteLength = 0;\n  buffers.forEach((buffer: ArrayBuffer) => {\n    totalByteLength += buffer.byteLength;\n  });\n\n  const temp = new Uint8Array(totalByteLength);\n  let offset = 0;\n  buffers.forEach((buffer: ArrayBuffer) => {\n    temp.set(new Uint8Array(buffer), offset);\n    offset += buffer.byteLength;\n  });\n  return temp.buffer;\n}\n\n/**\n * Get the basename of a path.\n *\n * Behaves in a way analogous to Linux's basename command.\n *\n * @param path\n */\nexport function basename(path: string): string {\n  const SEPARATOR = '/';\n  path = path.trim();\n  while (path.endsWith(SEPARATOR)) {\n    path = path.slice(0, path.length - 1);\n  }\n  const items = path.split(SEPARATOR);\n  return items[items.length - 1];\n}\n\n/**\n * Create `ModelJSON` from `ModelArtifacts`.\n *\n * @param artifacts Model artifacts, describing the model and its weights.\n * @param manifest Weight manifest, describing where the weights of the\n *     `ModelArtifacts` are stored, and some metadata about them.\n * @returns Object representing the `model.json` file describing the model\n *     artifacts and weights\n */\nexport function getModelJSONForModelArtifacts(\n    artifacts: ModelArtifacts, manifest: WeightsManifestConfig): ModelJSON {\n  const result: ModelJSON = {\n    modelTopology: artifacts.modelTopology,\n    format: artifacts.format,\n    generatedBy: artifacts.generatedBy,\n    convertedBy: artifacts.convertedBy,\n    weightsManifest: manifest\n  };\n  if (artifacts.signature != null) {\n    result.signature = artifacts.signature;\n  }\n  if (artifacts.userDefinedMetadata != null) {\n    result.userDefinedMetadata = artifacts.userDefinedMetadata;\n  }\n  if (artifacts.modelInitializer != null) {\n    result.modelInitializer = artifacts.modelInitializer;\n  }\n  if (artifacts.trainingConfig != null) {\n    result.trainingConfig = artifacts.trainingConfig;\n  }\n  return result;\n}\n\n/**\n * Create `ModelArtifacts` from a JSON file.\n *\n * @param modelJSON Object containing the parsed JSON of `model.json`\n * @param loadWeights Function that takes the JSON file's weights manifest,\n *     reads weights from the listed path(s), and returns a Promise of the\n *     weight manifest entries along with the weights data.\n * @returns A Promise of the `ModelArtifacts`, as described by the JSON file.\n */\nexport async function getModelArtifactsForJSON(\n    modelJSON: ModelJSON,\n    loadWeights: (weightsManifest: WeightsManifestConfig) => Promise<[\n      /* weightSpecs */ WeightsManifestEntry[], /* weightData */ ArrayBuffer\n    ]>): Promise<ModelArtifacts> {\n  const modelArtifacts: ModelArtifacts = {\n    modelTopology: modelJSON.modelTopology,\n    format: modelJSON.format,\n    generatedBy: modelJSON.generatedBy,\n    convertedBy: modelJSON.convertedBy\n  };\n\n  if (modelJSON.trainingConfig != null) {\n    modelArtifacts.trainingConfig = modelJSON.trainingConfig;\n  }\n  if (modelJSON.weightsManifest != null) {\n    const [weightSpecs, weightData] =\n        await loadWeights(modelJSON.weightsManifest);\n    modelArtifacts.weightSpecs = weightSpecs;\n    modelArtifacts.weightData = weightData;\n  }\n  if (modelJSON.signature != null) {\n    modelArtifacts.signature = modelJSON.signature;\n  }\n  if (modelJSON.userDefinedMetadata != null) {\n    modelArtifacts.userDefinedMetadata = modelJSON.userDefinedMetadata;\n  }\n  if (modelJSON.modelInitializer != null) {\n    modelArtifacts.modelInitializer = modelJSON.modelInitializer;\n  }\n\n  return modelArtifacts;\n}\n\n/**\n * Populate ModelArtifactsInfo fields for a model with JSON topology.\n * @param modelArtifacts\n * @returns A ModelArtifactsInfo object.\n */\nexport function getModelArtifactsInfoForJSON(modelArtifacts: ModelArtifacts):\n    ModelArtifactsInfo {\n  if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n    throw new Error('Expected JSON model topology, received ArrayBuffer.');\n  }\n\n  return {\n    dateSaved: new Date(),\n    modelTopologyType: 'JSON',\n    modelTopologyBytes: modelArtifacts.modelTopology == null ?\n        0 :\n        stringByteLength(JSON.stringify(modelArtifacts.modelTopology)),\n    weightSpecsBytes: modelArtifacts.weightSpecs == null ?\n        0 :\n        stringByteLength(JSON.stringify(modelArtifacts.weightSpecs)),\n    weightDataBytes: modelArtifacts.weightData == null ?\n        0 :\n        modelArtifacts.weightData.byteLength,\n  };\n}\n\n/**\n * Computes mantisa table for casting Float16 to Float32\n * See http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n *\n * @returns Uint32Array, 2048 mantissa lookup values.\n */\nfunction computeFloat16MantisaTable(): Uint32Array {\n  const convertMantissa = (i: number): number => {\n    let m = i << 13;\n    let e = 0;\n\n    while ((m & 0x00800000) === 0) {\n      e -= 0x00800000;\n      m <<= 1;\n    }\n    m &= ~0x00800000;\n    e += 0x38800000;\n\n    return m | e;\n  };\n\n  const mantisaTable = new Uint32Array(2048);\n\n  mantisaTable[0] = 0;\n  for (let i = 1; i < 1024; i++) {\n    mantisaTable[i] = convertMantissa(i);\n  }\n  for (let i = 1024; i < 2048; i++) {\n    mantisaTable[i] = 0x38000000 + ((i - 1024) << 13);\n  }\n\n  return mantisaTable;\n}\n\n/**\n * Computes exponent table for casting Float16 to Float32\n * See http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n *\n * @returns Uint32Array, 64 exponent lookup values.\n */\nfunction computeFloat16ExponentTable(): Uint32Array {\n  const exponentTable = new Uint32Array(64);\n\n  exponentTable[0] = 0;\n  exponentTable[31] = 0x47800000;\n  exponentTable[32] = 0x80000000;\n  exponentTable[63] = 0xc7800000;\n  for (let i = 1; i < 31; i++) {\n    exponentTable[i] = i << 23;\n  }\n  for (let i = 33; i < 63; i++) {\n    exponentTable[i] = 0x80000000 + ((i - 32) << 23);\n  }\n\n  return exponentTable;\n}\n\n/**\n * Computes offset table for casting Float16 to Float32\n * See http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n *\n * @returns Uint32Array, 6d offset values.\n */\nfunction computeFloat16OffsetTable(): Uint32Array {\n  const offsetTable = new Uint32Array(64);\n\n  for (let i = 0; i < 64; i++) {\n    offsetTable[i] = 1024;\n  }\n  offsetTable[0] = offsetTable[32] = 0;\n\n  return offsetTable;\n}\n\n/**\n * Retrieve a Float16 decoder which will decode a ByteArray of Float16 values\n * to a Float32Array.\n *\n * @returns Function (buffer: Uint16Array) => Float32Array which decodes\n *          the Uint16Array of Float16 bytes to a Float32Array.\n */\nexport function getFloat16Decoder(): (buffer: Uint16Array) => Float32Array {\n  // Algorithm is based off of\n  // http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\n  // Cache lookup tables\n  const mantisaTable = computeFloat16MantisaTable();\n  const exponentTable = computeFloat16ExponentTable();\n  const offsetTable = computeFloat16OffsetTable();\n\n  return (quantizedArray: Uint16Array) => {\n    const buffer = new ArrayBuffer(4 * quantizedArray.length);\n    const bufferUint32View = new Uint32Array(buffer);\n    for (let index = 0; index < quantizedArray.length; index++) {\n      const float16Bits = quantizedArray[index];\n      const float32Bits =\n          mantisaTable[offsetTable[float16Bits >> 10] + (float16Bits & 0x3ff)] +\n          exponentTable[float16Bits >> 10];\n      bufferUint32View[index] = float32Bits;\n    }\n    return new Float32Array(buffer);\n  };\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {CustomGradientFunc, ENGINE} from './engine';\nimport {Scalar, Tensor, Variable} from './tensor';\nimport {NamedTensorMap} from './tensor_types';\nimport {convertToTensor, convertToTensorArray} from './tensor_util_env';\nimport {TensorLike} from './types';\nimport * as util from './util';\n\n/**\n * Provided `f(x)`, returns another function `g(x, dy?)`, which gives the\n * gradient of `f(x)` with respect to `x`.\n *\n * If `dy` is provided, the gradient of `f(x).mul(dy).sum()` with respect to\n * `x` is computed instead. `f(x)` must take a single tensor `x` and return a\n * single tensor `y`. If `f()` takes multiple inputs, use `tf.grads` instead.\n *\n * ```js\n * // f(x) = x ^ 2\n * const f = x => x.square();\n * // f'(x) = 2x\n * const g = tf.grad(f);\n *\n * const x = tf.tensor1d([2, 3]);\n * g(x).print();\n * ```\n *\n * ```js\n * // f(x) = x ^ 3\n * const f = x => x.pow(tf.scalar(3, 'int32'));\n * // f'(x) = 3x ^ 2\n * const g = tf.grad(f);\n * // f''(x) = 6x\n * const gg = tf.grad(g);\n *\n * const x = tf.tensor1d([2, 3]);\n * gg(x).print();\n * ```\n *\n * @param f The function f(x), to compute gradient for.\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\nfunction grad(f: (x: Tensor) => Tensor): (\n    x: TensorLike|Tensor, dy?: TensorLike|Tensor) => Tensor {\n  util.assert(\n      util.isFunction(f), () => 'The f passed in grad(f) must be a function');\n  return (x: TensorLike|Tensor, dy?: TensorLike|Tensor): Tensor => {\n    // x can be of any dtype, thus null as the last argument.\n    const $x = convertToTensor(x, 'x', 'tf.grad', 'string_or_numeric');\n    const $dy: Tensor =\n        (dy != null) ? convertToTensor(dy, 'dy', 'tf.grad') : null;\n    return ENGINE.tidy(() => {\n      const {value, grads} = ENGINE.gradients(() => f($x), [$x], $dy);\n      if ($dy != null) {\n        util.assertShapesMatch(\n            value.shape, $dy.shape,\n            'The shape of dy passed in grad(f)(x, dy) must match the shape ' +\n                'returned by f(x)');\n      }\n      checkGrads(grads);\n      return grads[0];\n    });\n  };\n}\n\n/**\n * Provided `f(x1, x2,...)`, returns another function `g([x1, x2,...], dy?)`,\n * which gives an array of gradients of `f()` with respect to each input\n * [`x1`,`x2`,...].\n *\n * If `dy` is passed when calling `g()`, the gradient of\n * `f(x1,...).mul(dy).sum()` with respect to each input is computed instead.\n * The provided `f` must take one or more tensors and return a single tensor\n * `y`. If `f()` takes a single input, we recommend using `tf.grad` instead.\n *\n * ```js\n * // f(a, b) = a * b\n * const f = (a, b) => a.mul(b);\n * // df / da = b, df / db = a\n * const g = tf.grads(f);\n *\n * const a = tf.tensor1d([2, 3]);\n * const b = tf.tensor1d([-2, -3]);\n * const [da, db] = g([a, b]);\n * console.log('da');\n * da.print();\n * console.log('db');\n * db.print();\n * ```\n *\n * @param f The function `f(x1, x2,...)` to compute gradients for.\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\nfunction grads(f: (...args: Tensor[]) => Tensor): (\n    args: Array<Tensor|TensorLike>, dy?: Tensor|TensorLike) => Tensor[] {\n  util.assert(\n      util.isFunction(f), () => 'The f passed in grads(f) must be a function');\n  return (args: Array<Tensor|TensorLike>, dy?: Tensor|TensorLike): Tensor[] => {\n    util.assert(\n        Array.isArray(args),\n        () => 'The args passed in grads(f)(args) must be an array ' +\n            'of `Tensor`s or `TensorLike`s');\n    // args can be of any dtype, thus null as the last argument.\n    const $args =\n        convertToTensorArray(args, 'args', 'tf.grads', 'string_or_numeric');\n    const $dy: Tensor =\n        (dy != null) ? convertToTensor(dy, 'dy', 'tf.grads') : null;\n    return ENGINE.tidy(() => {\n      const {value, grads} = ENGINE.gradients(() => f(...$args), $args, $dy);\n      if ($dy != null) {\n        util.assertShapesMatch(\n            value.shape, $dy.shape,\n            'The shape of dy passed in grads(f)([x1,...], dy) must ' +\n                'match the shape returned by f([x1,...])');\n      }\n      checkGrads(grads);\n      return grads;\n    });\n  };\n}\n\n/**\n * Like `tf.grad`, but also returns the value of `f()`. Useful when `f()`\n * returns a metric you want to show.\n *\n * The result is a rich object with the following properties:\n * - grad: The gradient of `f(x)` w.r.t `x` (result of `tf.grad`).\n * - value: The value returned by `f(x)`.\n *\n * ```js\n * // f(x) = x ^ 2\n * const f = x => x.square();\n * // f'(x) = 2x\n * const g = tf.valueAndGrad(f);\n *\n * const x = tf.tensor1d([2, 3]);\n * const {value, grad} = g(x);\n *\n * console.log('value');\n * value.print();\n * console.log('grad');\n * grad.print();\n * ```\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\nfunction valueAndGrad<I extends Tensor, O extends Tensor>(f: (x: I) => O): (\n    x: I, dy?: O) => {\n  value: O;\n  grad: I;\n} {\n  util.assert(\n      util.isFunction(f),\n      () => 'The f passed in valueAndGrad(f) must be a function');\n  return (x: I, dy?: O) => {\n    util.assert(\n        x instanceof Tensor,\n        () => 'The x passed in valueAndGrad(f)(x) must be a tensor');\n    util.assert(\n        dy == null || dy instanceof Tensor,\n        () => 'The dy passed in valueAndGrad(f)(x, dy) must be a tensor');\n    const {grads, value} = ENGINE.gradients(() => f(x), [x], dy);\n    checkGrads(grads);\n    return {grad: grads[0] as I, value};\n  };\n}\n\n/**\n * Like `tf.grads`, but returns also the value of `f()`. Useful when `f()`\n * returns a metric you want to show.\n *\n * The result is a rich object with the following properties:\n * - grads: The gradients of `f()` w.r.t each input (result of `tf.grads`).\n * - value: The value returned by `f(x)`.\n *\n * ```js\n * // f(a, b) = a * b\n * const f = (a, b) => a.mul(b);\n * // df/da = b, df/db = a\n * const g = tf.valueAndGrads(f);\n *\n * const a = tf.tensor1d([2, 3]);\n * const b = tf.tensor1d([-2, -3]);\n * const {value, grads} = g([a, b]);\n *\n * const [da, db] = grads;\n *\n * console.log('value');\n * value.print();\n *\n * console.log('da');\n * da.print();\n * console.log('db');\n * db.print();\n * ```\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\nfunction valueAndGrads<O extends Tensor>(f: (...args: Tensor[]) => O): (\n    args: Tensor[], dy?: O) => {\n  grads: Tensor[];\n  value: O;\n} {\n  util.assert(\n      util.isFunction(f),\n      () => 'The f passed in valueAndGrads(f) must be a function');\n  return (args: Tensor[], dy?: O) => {\n    util.assert(\n        Array.isArray(args) && args.every(arg => arg instanceof Tensor),\n        () => 'The args passed in valueAndGrads(f)(args) must be array of ' +\n            'tensors');\n    util.assert(\n        dy == null || dy instanceof Tensor,\n        () => 'The dy passed in valueAndGrads(f)(args, dy) must be a tensor');\n    const res = ENGINE.gradients(() => f(...args), args, dy);\n    if (dy != null) {\n      util.assertShapesMatch(\n          res.value.shape, dy.shape,\n          'The shape of dy passed in valueAndGrads(f)([x1,...], dy) must ' +\n              'match the shape returned by f([x1,...])');\n    }\n    checkGrads(res.grads);\n    return res;\n  };\n}\n\n/**\n * Computes and returns the gradient of f(x) with respect to the list of\n * trainable variables provided by `varList`. If no list is provided, it\n * defaults to all trainable variables.\n *\n * ```js\n * const a = tf.variable(tf.tensor1d([3, 4]));\n * const b = tf.variable(tf.tensor1d([5, 6]));\n * const x = tf.tensor1d([1, 2]);\n *\n * // f(a, b) = a * x ^ 2 + b * x\n * const f = () => a.mul(x.square()).add(b.mul(x)).sum();\n * // df/da = x ^ 2, df/db = x\n * const {value, grads} = tf.variableGrads(f);\n *\n * Object.keys(grads).forEach(varName => grads[varName].print());\n * ```\n *\n * @param f The function to execute. f() should return a scalar.\n * @param varList The list of variables to compute the gradients with respect\n *     to. Defaults to all trainable variables.\n * @returns An object with the following keys and values:\n *   - `value`: The value of the function `f`.\n *   - `grads`: A map from the names of the variables to the gradients.\n *     If the `varList` argument is provided explicitly and contains a subset of\n *     non-trainable variables, this map in the return value will contain keys\n *     that map the names of the non-trainable variables to `null`.\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\nfunction variableGrads(f: () => Scalar, varList?: Variable[]):\n    {value: Scalar, grads: NamedTensorMap} {\n  util.assert(\n      util.isFunction(f),\n      () => 'The f passed in variableGrads(f) must be a function');\n  util.assert(\n      varList == null ||\n          Array.isArray(varList) && varList.every(v => v instanceof Variable),\n      () =>\n          'The varList passed in variableGrads(f, varList) must be an array ' +\n          'of variables');\n\n  const specifiedVarList = varList != null;\n  if (!specifiedVarList) {\n    // Get all of the trainable variables.\n    varList = [];\n    for (const varName in ENGINE.registeredVariables) {\n      varList.push(ENGINE.registeredVariables[varName]);\n    }\n  }\n\n  const specifiedNonTrainable: Variable[] =\n      specifiedVarList ? varList.filter(variable => !variable.trainable) : null;\n\n  // Prune non-trainable variables.\n  const originalVarCount = varList.length;\n  varList = varList.filter(variable => variable.trainable);\n  util.assert(\n      varList.length > 0,\n      () => `variableGrads() expects at least one of the input variables to ` +\n          `be trainable, but none of the ${originalVarCount} variables is ` +\n          `trainable.`);\n\n  const allowNoGradients = true;\n  const {value, grads} = ENGINE.gradients(f, varList, null, allowNoGradients);\n\n  util.assert(\n      grads.some(g => g != null),\n      () => 'Cannot find a connection between any variable and the result of ' +\n          'the loss function y=f(x). Please make sure the operations that ' +\n          'use variables are inside the function f passed to minimize().');\n  util.assert(\n      value.rank === 0,\n      () => `The f passed in variableGrads(f) must return a scalar, but it ` +\n          `returned a rank-${value.rank} tensor`);\n\n  const namedGrads: NamedTensorMap = {};\n  varList.forEach((v, i) => {\n    if (grads[i] != null) {\n      namedGrads[v.name] = grads[i];\n    }\n  });\n  if (specifiedNonTrainable != null) {\n    // If varList is explicitly provided and contains non-trainable values,\n    // add them to the returned gradients with `null` values.\n    specifiedNonTrainable.forEach(v => namedGrads[v.name] = null);\n  }\n  return {value, grads: namedGrads};\n}\n\n/**\n * Overrides the gradient computation of a function `f`.\n *\n * Takes a function\n * `f(...inputs, save) => {value: Tensor, gradFunc: (dy, saved) => Tensor[]}`\n * and returns another function `g(...inputs)` which takes the same inputs as\n * `f`. When called, `g` returns `f().value`. In backward mode, custom gradients\n * with respect to each input of `f` are computed using `f().gradFunc`.\n *\n * The `save` function passsed to `f` should be used for saving tensors needed\n * in the gradient. And the `saved` passed to the `gradFunc` is a\n * `NamedTensorMap`, which contains those saved tensor.\n *\n * ```js\n * const customOp = tf.customGrad((x, save) => {\n *   // Save x to make sure it's available later for the gradient.\n *   save([x]);\n *   // Override gradient of our custom x ^ 2 op to be dy * abs(x);\n *   return {\n *     value: x.square(),\n *     // Note `saved.x` which points to the `x` we saved earlier.\n *     gradFunc: (dy, saved) => [dy.mul(saved[0].abs())]\n *   };\n * });\n *\n * const x = tf.tensor1d([-1, -2, 3]);\n * const dx = tf.grad(x => customOp(x));\n *\n * console.log(`f(x):`);\n * customOp(x).print();\n * console.log(`f'(x):`);\n * dx(x).print();\n * ```\n *\n * @param f The function to evaluate in forward mode, which should return\n *     `{value: Tensor, gradFunc: (dy, saved) => Tensor[]}`, where `gradFunc`\n *     returns the custom gradients of `f` with respect to its inputs.\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\nfunction customGrad<T extends Tensor>(f: CustomGradientFunc<T>):\n    (...args: Tensor[]) => T {\n  return ENGINE.customGrad(f);\n}\n\nfunction checkGrads(grads: Tensor[]) {\n  const numNullGradients = grads.filter(g => g == null).length;\n  if (numNullGradients > 0) {\n    throw new Error(\n        `Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.`);\n  }\n}\n\nexport {\n  customGrad,\n  variableGrads,\n  valueAndGrad,\n  valueAndGrads,\n  grad,\n  grads,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Concat, ConcatAttrs, ConcatInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensorArray} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {assert} from '../util';\n\nimport {clone} from './clone';\nimport {op} from './operation';\n\n/**\n * Concatenates a list of `tf.Tensor`s along a given axis.\n *\n * The tensors ranks and types must match, and their sizes must match in all\n * dimensions except `axis`.\n *\n * Also available are stricter rank-specific methods that assert that\n * `tensors` are of the given rank:\n *   - `tf.concat1d`\n *   - `tf.concat2d`\n *   - `tf.concat3d`\n *   - `tf.concat4d`\n *\n * Except `tf.concat1d` (which does not have axis param), all methods have\n * same signature as this method.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * a.concat(b).print();  // or a.concat(b)\n * ```\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * const c = tf.tensor1d([5, 6]);\n * tf.concat([a, b, c]).print();\n * ```\n *\n * ```js\n * const a = tf.tensor2d([[1, 2], [10, 20]]);\n * const b = tf.tensor2d([[3, 4], [30, 40]]);\n * const axis = 1;\n * tf.concat([a, b], axis).print();\n * ```\n * @param tensors A list of tensors to concatenate.\n * @param axis The axis to concate along. Defaults to 0 (the first dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction concat_<T extends Tensor>(tensors: Array<T|TensorLike>, axis = 0): T {\n  assert(tensors.length >= 1, () => 'Pass at least one tensor to concat');\n\n  const $tensors =\n      convertToTensorArray(tensors, 'tensors', 'concat', 'string_or_numeric');\n\n  if ($tensors[0].dtype === 'complex64') {\n    $tensors.forEach(tensor => {\n      if (tensor.dtype !== 'complex64') {\n        throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${tensor.dtype}. `);\n      }\n    });\n  }\n\n  if ($tensors.length === 1) {\n    return clone($tensors[0]);\n  }\n\n  const inputs: ConcatInputs = $tensors;\n  const attr: ConcatAttrs = {axis};\n\n  return ENGINE.runKernel(\n      Concat, inputs as {} as NamedTensorMap, attr as {} as NamedAttrMap);\n}\n\nexport const concat = op({concat_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport enum Reduction {\n  NONE,\n  MEAN,\n  SUM,\n  SUM_BY_NONZERO_WEIGHTS\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\ntype PadType = 'SAME'|'VALID'|'NUMBER'|'EXPLICIT';\n\n// For NHWC should be in the following form:\n//  [[0, 0], [pad_top,pad_bottom], [pad_left, pad_right], [0, 0]]\n// For NCHW should be in the following form:\n//  [[0, 0], [0, 0], [pad_top,pad_bottom], [pad_left, pad_right]]\n// Reference: https://www.tensorflow.org/api_docs/python/tf/nn/conv2d\nexport type ExplicitPadding =\n    [[number, number], [number, number], [number, number], [number, number]];\n\nexport type PadInfo = {\n  top: number,\n  left: number,\n  right: number,\n  bottom: number,\n  type: PadType\n};\n\nexport type PadInfo3D = {\n  top: number,\n  left: number,\n  right: number,\n  bottom: number,\n  front: number,\n  back: number,\n  type: PadType\n};\n\n/**\n * Information about the forward pass of a convolution/pooling operation.\n * It includes input and output shape, strides, filter size and padding\n * information.\n */\nexport type Conv2DInfo = {\n  batchSize: number,\n  inHeight: number,\n  inWidth: number,\n  inChannels: number,\n  outHeight: number,\n  outWidth: number,\n  outChannels: number,\n  dataFormat: 'channelsFirst'|'channelsLast',\n  strideHeight: number,\n  strideWidth: number,\n  dilationHeight: number,\n  dilationWidth: number,\n  filterHeight: number,\n  filterWidth: number,\n  effectiveFilterHeight: number,\n  effectiveFilterWidth: number,\n  padInfo: PadInfo,\n  inShape: [number, number, number, number],\n  outShape: [number, number, number, number],\n  filterShape: [number, number, number, number]\n};\n\n/**\n *\n * @param inputShape Input tensor shape is of the following dimensions:\n *     `[batch, height, width, inChannels]`.\n * @param filterShape The filter shape is of the following dimensions:\n *     `[filterHeight, filterWidth, depth]`.\n * @param strides The strides of the sliding window for each dimension of the\n *     input tensor: `[strideHeight, strideWidth]`.\n *     If `strides` is a single number,\n *     then `strideHeight == strideWidth`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1*1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dataFormat The data format of the input and output data.\n *     Defaults to 'NHWC'.\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`.\n *     Defaults to `[1, 1]`. If `dilations` is a single number, then\n *     `dilationHeight == dilationWidth`.\n */\nexport function computeDilation2DInfo(\n    inputShape: [number, number, number, number],\n    filterShape: [number, number, number], strides: number|[number, number],\n    pad: 'same'|'valid'|number, dataFormat: 'NHWC' = 'NHWC',\n    dilations: number|[number, number]) {\n  // `computerConv2DInfo` require filterShape to be in the dimension of:\n  // `[filterHeight, filterWidth, depth, outDepth]`, dilation2d doesn't have\n  // outDepth, it should have the same depth as the input.\n  // Input shape: [batch, height, width, inChannels]\n  const inputChannels = inputShape[3];\n  const $filterShape =\n      [...filterShape, inputChannels] as [number, number, number, number];\n  const $dataFormat = convertConv2DDataFormat(dataFormat);\n\n  return computeConv2DInfo(\n      inputShape, $filterShape, strides, dilations, pad,\n      null /* roundingMode */, null /* depthWise */, $dataFormat);\n}\n\nexport function computePool2DInfo(\n    inShape: [number, number, number, number],\n    filterSize: [number, number]|number, strides: number|[number, number],\n    dilations: number|[number, number],\n    pad: 'same'|'valid'|number|ExplicitPadding,\n    roundingMode?: 'floor'|'round'|'ceil',\n    dataFormat: 'channelsFirst'|'channelsLast' = 'channelsLast'): Conv2DInfo {\n  const [filterHeight, filterWidth] = parseTupleParam(filterSize);\n\n  let filterShape: [number, number, number, number];\n  if (dataFormat === 'channelsLast') {\n    filterShape = [filterHeight, filterWidth, inShape[3], inShape[3]];\n  } else if (dataFormat === 'channelsFirst') {\n    filterShape = [filterHeight, filterWidth, inShape[1], inShape[1]];\n  } else {\n    throw new Error(`Unknown dataFormat ${dataFormat}`);\n  }\n\n  return computeConv2DInfo(\n      inShape, filterShape, strides, dilations, pad, roundingMode, false,\n      dataFormat);\n}\n\n/**\n * Computes the information for a forward pass of a pooling3D operation.\n */\nexport function computePool3DInfo(\n    inShape: [number, number, number, number, number],\n    filterSize: number|[number, number, number],\n    strides: number|[number, number, number],\n    dilations: number|[number, number, number], pad: 'same'|'valid'|number,\n    roundingMode?: 'floor'|'round'|'ceil',\n    dataFormat: 'NDHWC'|'NCDHW' = 'NDHWC'): Conv3DInfo {\n  const [filterDepth, filterHeight, filterWidth] = parse3TupleParam(filterSize);\n\n  let filterShape: [number, number, number, number, number];\n  let $dataFormat: 'channelsFirst'|'channelsLast';\n  if (dataFormat === 'NDHWC') {\n    $dataFormat = 'channelsLast';\n    filterShape =\n        [filterDepth, filterHeight, filterWidth, inShape[4], inShape[4]];\n  } else if (dataFormat === 'NCDHW') {\n    $dataFormat = 'channelsFirst';\n    filterShape =\n        [filterDepth, filterHeight, filterWidth, inShape[1], inShape[1]];\n  } else {\n    throw new Error(`Unknown dataFormat ${dataFormat}`);\n  }\n\n  return computeConv3DInfo(\n      inShape, filterShape, strides, dilations, pad, false, $dataFormat,\n      roundingMode);\n}\n\n/**\n * Computes the information for a forward pass of a convolution/pooling\n * operation.\n */\nexport function computeConv2DInfo(\n    inShape: [number, number, number, number],\n    filterShape: [number, number, number, number],\n    strides: number|[number, number], dilations: number|[number, number],\n    pad: 'same'|'valid'|number|ExplicitPadding,\n    roundingMode?: 'floor'|'round'|'ceil', depthwise = false,\n    dataFormat: 'channelsFirst'|'channelsLast' = 'channelsLast'): Conv2DInfo {\n  let [batchSize, inHeight, inWidth, inChannels] = [-1, -1, -1, -1];\n  if (dataFormat === 'channelsLast') {\n    [batchSize, inHeight, inWidth, inChannels] = inShape;\n  } else if (dataFormat === 'channelsFirst') {\n    [batchSize, inChannels, inHeight, inWidth] = inShape;\n  } else {\n    throw new Error(`Unknown dataFormat ${dataFormat}`);\n  }\n\n  const [filterHeight, filterWidth, , filterChannels] = filterShape;\n  const [strideHeight, strideWidth] = parseTupleParam(strides);\n  const [dilationHeight, dilationWidth] = parseTupleParam(dilations);\n\n  const effectiveFilterHeight =\n      getEffectiveFilterSize(filterHeight, dilationHeight);\n  const effectiveFilterWidth =\n      getEffectiveFilterSize(filterWidth, dilationWidth);\n  const {padInfo, outHeight, outWidth} = getPadAndOutInfo(\n      pad, inHeight, inWidth, strideHeight, strideWidth, effectiveFilterHeight,\n      effectiveFilterWidth, roundingMode, dataFormat);\n\n  const outChannels = depthwise ? filterChannels * inChannels : filterChannels;\n\n  let outShape: [number, number, number, number];\n  if (dataFormat === 'channelsFirst') {\n    outShape = [batchSize, outChannels, outHeight, outWidth];\n  } else if (dataFormat === 'channelsLast') {\n    outShape = [batchSize, outHeight, outWidth, outChannels];\n  }\n\n  return {\n    batchSize,\n    dataFormat,\n    inHeight,\n    inWidth,\n    inChannels,\n    outHeight,\n    outWidth,\n    outChannels,\n    padInfo,\n    strideHeight,\n    strideWidth,\n    filterHeight,\n    filterWidth,\n    effectiveFilterHeight,\n    effectiveFilterWidth,\n    dilationHeight,\n    dilationWidth,\n    inShape,\n    outShape,\n    filterShape\n  };\n}\n\n/**\n * Information about the forward pass of a 3D convolution/pooling operation.\n * It includes input and output shape, strides, filter size and padding\n * information.\n */\nexport type Conv3DInfo = {\n  batchSize: number,\n  inDepth: number,\n  inHeight: number,\n  inWidth: number,\n  inChannels: number,\n  outDepth: number,\n  outHeight: number,\n  outWidth: number,\n  outChannels: number,\n  dataFormat: 'channelsFirst'|'channelsLast',\n  strideDepth: number,\n  strideHeight: number,\n  strideWidth: number,\n  dilationDepth: number,\n  dilationHeight: number,\n  dilationWidth: number,\n  filterDepth: number,\n  filterHeight: number,\n  filterWidth: number,\n  effectiveFilterDepth: number,\n  effectiveFilterHeight: number,\n  effectiveFilterWidth: number,\n  padInfo: PadInfo3D,\n  inShape: [number, number, number, number, number],\n  outShape: [number, number, number, number, number],\n  filterShape: [number, number, number, number, number]\n};\n\n/**\n * Computes the information for a forward pass of a 3D convolution/pooling\n * operation.\n */\nexport function computeConv3DInfo(\n    inShape: [number, number, number, number, number],\n    filterShape: [number, number, number, number, number],\n    strides: number|[number, number, number],\n    dilations: number|[number, number, number], pad: 'same'|'valid'|number,\n    depthwise = false,\n    dataFormat: 'channelsFirst'|'channelsLast' = 'channelsLast',\n    roundingMode?: 'floor'|'round'|'ceil'): Conv3DInfo {\n  let [batchSize, inDepth, inHeight, inWidth, inChannels] =\n      [-1, -1, -1, -1, -1];\n  if (dataFormat === 'channelsLast') {\n    [batchSize, inDepth, inHeight, inWidth, inChannels] = inShape;\n  } else if (dataFormat === 'channelsFirst') {\n    [batchSize, inChannels, inDepth, inHeight, inWidth] = inShape;\n  } else {\n    throw new Error(`Unknown dataFormat ${dataFormat}`);\n  }\n\n  const [filterDepth, filterHeight, filterWidth, , filterChannels] =\n      filterShape;\n  const [strideDepth, strideHeight, strideWidth] = parse3TupleParam(strides);\n  const [dilationDepth, dilationHeight, dilationWidth] =\n      parse3TupleParam(dilations);\n\n  const effectiveFilterDepth =\n      getEffectiveFilterSize(filterDepth, dilationDepth);\n  const effectiveFilterHeight =\n      getEffectiveFilterSize(filterHeight, dilationHeight);\n  const effectiveFilterWidth =\n      getEffectiveFilterSize(filterWidth, dilationWidth);\n  const {padInfo, outDepth, outHeight, outWidth} = get3DPadAndOutInfo(\n      pad, inDepth, inHeight, inWidth, strideDepth, strideHeight, strideWidth,\n      effectiveFilterDepth, effectiveFilterHeight, effectiveFilterWidth,\n      roundingMode);\n\n  const outChannels = depthwise ? filterChannels * inChannels : filterChannels;\n\n  let outShape: [number, number, number, number, number];\n  if (dataFormat === 'channelsFirst') {\n    outShape = [batchSize, outChannels, outDepth, outHeight, outWidth];\n  } else if (dataFormat === 'channelsLast') {\n    outShape = [batchSize, outDepth, outHeight, outWidth, outChannels];\n  }\n\n  return {\n    batchSize,\n    dataFormat,\n    inDepth,\n    inHeight,\n    inWidth,\n    inChannels,\n    outDepth,\n    outHeight,\n    outWidth,\n    outChannels,\n    padInfo,\n    strideDepth,\n    strideHeight,\n    strideWidth,\n    filterDepth,\n    filterHeight,\n    filterWidth,\n    effectiveFilterDepth,\n    effectiveFilterHeight,\n    effectiveFilterWidth,\n    dilationDepth,\n    dilationHeight,\n    dilationWidth,\n    inShape,\n    outShape,\n    filterShape\n  };\n}\n\nfunction computeOutputShape2D(\n    inShape: [number, number], fieldSize: number, stride: number,\n    zeroPad?: number, roundingMode?: 'floor'|'round'|'ceil'): [number, number] {\n  if (zeroPad == null) {\n    zeroPad = computeDefaultPad(inShape, fieldSize, stride);\n  }\n  const inputRows = inShape[0];\n  const inputCols = inShape[1];\n\n  const outputRows =\n      round((inputRows - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n  const outputCols =\n      round((inputCols - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n\n  return [outputRows, outputCols];\n}\n\nfunction computeOutputShape4D(\n    inShape: [number, number, number, number], fieldSize: number,\n    outChannels: number, stride: number, zeroPad?: number,\n    roundingMode?: 'floor'|'round'|'ceil'): [number, number, number, number] {\n  if (zeroPad == null) {\n    zeroPad = computeDefaultPad(inShape, fieldSize, stride);\n  }\n  const inputDepth = inShape[0];\n  const inputRows = inShape[1];\n  const inputCols = inShape[2];\n\n  const outputDepths =\n      round((inputDepth - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n  const outputRows =\n      round((inputRows - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n  const outputCols =\n      round((inputCols - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n\n  return [outputDepths, outputRows, outputCols, outChannels];\n}\n\nexport function computeDefaultPad(\n    inputShape: [number, number]|[number, number, number, number],\n    fieldSize: number, stride: number, dilation = 1): number {\n  const effectiveFieldSize = getEffectiveFilterSize(fieldSize, dilation);\n  return Math.floor(\n      (inputShape[0] * (stride - 1) - stride + effectiveFieldSize) / 2);\n}\n\nfunction parseTupleParam(param: number|number[]): [number, number, number] {\n  if (typeof param === 'number') {\n    return [param, param, param];\n  }\n  if (param.length === 2) {\n    return [param[0], param[1], 1];\n  }\n  return param as [number, number, number];\n}\n\nfunction parse3TupleParam(param: number|[number, number, number]):\n    [number, number, number] {\n  return typeof param === 'number' ? [param, param, param] : param;\n}\n\n/* See https://www.tensorflow.org/api_docs/python/tf/nn/atrous_conv2d\n * Atrous convolution is equivalent to standard convolution with upsampled\n * filters with effective_filter_height =\n * filter_height + (filter_height - 1) * (dilation - 1)\n * and effective_filter_width =\n * filter_width + (filter_width - 1) * (dilation - 1),\n * produced by inserting dilation - 1 zeros along consecutive elements across\n * the filters' spatial dimensions.\n * When there is a dilation, this converts a filter dimension to the\n * effective filter dimension, so it can be used in a standard convolution.\n */\nfunction getEffectiveFilterSize(filterSize: number, dilation: number) {\n  if (dilation <= 1) {\n    return filterSize;\n  }\n\n  return filterSize + (filterSize - 1) * (dilation - 1);\n}\n\nfunction getPadAndOutInfo(\n    pad: 'same'|'valid'|number|ExplicitPadding, inHeight: number,\n    inWidth: number, strideHeight: number, strideWidth: number,\n    filterHeight: number, filterWidth: number,\n    roundingMode: 'floor'|'round'|'ceil',\n    dataFormat: 'channelsFirst'|\n    'channelsLast'): {padInfo: PadInfo, outHeight: number, outWidth: number} {\n  let padInfo: PadInfo;\n  let outHeight: number;\n  let outWidth: number;\n\n  if (typeof pad === 'number') {\n    const padType = (pad === 0) ? 'VALID' : 'NUMBER';\n    padInfo = {top: pad, bottom: pad, left: pad, right: pad, type: padType};\n    const outShape = computeOutputShape2D(\n        [inHeight, inWidth], filterHeight, strideHeight, pad, roundingMode);\n    outHeight = outShape[0];\n    outWidth = outShape[1];\n  } else if (pad === 'same') {\n    outHeight = Math.ceil(inHeight / strideHeight);\n    outWidth = Math.ceil(inWidth / strideWidth);\n    const padAlongHeight =\n        Math.max(0, (outHeight - 1) * strideHeight + filterHeight - inHeight);\n    const padAlongWidth =\n        Math.max(0, (outWidth - 1) * strideWidth + filterWidth - inWidth);\n    const top = Math.floor(padAlongHeight / 2);\n    const bottom = padAlongHeight - top;\n    const left = Math.floor(padAlongWidth / 2);\n    const right = padAlongWidth - left;\n    padInfo = {top, bottom, left, right, type: 'SAME'};\n  } else if (pad === 'valid') {\n    padInfo = {top: 0, bottom: 0, left: 0, right: 0, type: 'VALID'};\n    outHeight = Math.ceil((inHeight - filterHeight + 1) / strideHeight);\n    outWidth = Math.ceil((inWidth - filterWidth + 1) / strideWidth);\n  } else if (typeof pad === 'object') {\n    const top = dataFormat === 'channelsLast' ? pad[1][0] : pad[2][0];\n    const bottom = dataFormat === 'channelsLast' ? pad[1][1] : pad[2][1];\n    const left = dataFormat === 'channelsLast' ? pad[2][0] : pad[3][0];\n    const right = dataFormat === 'channelsLast' ? pad[2][1] : pad[3][1];\n    const padType = (top === 0 && bottom === 0 && left === 0 && right === 0) ?\n        'VALID' :\n        'EXPLICIT';\n    padInfo = {top, bottom, left, right, type: padType};\n    outHeight = round(\n        (inHeight - filterHeight + top + bottom) / strideHeight + 1,\n        roundingMode);\n    outWidth = round(\n        (inWidth - filterWidth + left + right) / strideWidth + 1, roundingMode);\n  } else {\n    throw Error(`Unknown padding parameter: ${pad}`);\n  }\n  return {padInfo, outHeight, outWidth};\n}\n\nfunction get3DPadAndOutInfo(\n    pad: 'same'|'valid'|number, inDepth: number, inHeight: number,\n    inWidth: number, strideDepth: number, strideHeight: number,\n    strideWidth: number, filterDepth: number, filterHeight: number,\n    filterWidth: number, roundingMode?: 'floor'|'round'|'ceil'): {\n  padInfo: PadInfo3D,\n  outDepth: number,\n  outHeight: number,\n  outWidth: number\n} {\n  let padInfo: PadInfo3D;\n  let outDepth: number;\n  let outHeight: number;\n  let outWidth: number;\n\n  if (typeof pad === 'number') {\n    const padType = (pad === 0) ? 'VALID' : 'NUMBER';\n    padInfo = {\n      top: pad,\n      bottom: pad,\n      left: pad,\n      right: pad,\n      front: pad,\n      back: pad,\n      type: padType\n    };\n    const outShape = computeOutputShape4D(\n        [inDepth, inHeight, inWidth, 1], filterDepth, 1, strideDepth, pad,\n        roundingMode);\n    outDepth = outShape[0];\n    outHeight = outShape[1];\n    outWidth = outShape[2];\n  } else if (pad === 'same') {\n    outDepth = Math.ceil(inDepth / strideDepth);\n    outHeight = Math.ceil(inHeight / strideHeight);\n    outWidth = Math.ceil(inWidth / strideWidth);\n    const padAlongDepth = (outDepth - 1) * strideDepth + filterDepth - inDepth;\n    const padAlongHeight =\n        (outHeight - 1) * strideHeight + filterHeight - inHeight;\n    const padAlongWidth = (outWidth - 1) * strideWidth + filterWidth - inWidth;\n    const front = Math.floor(padAlongDepth / 2);\n    const back = padAlongDepth - front;\n    const top = Math.floor(padAlongHeight / 2);\n    const bottom = padAlongHeight - top;\n    const left = Math.floor(padAlongWidth / 2);\n    const right = padAlongWidth - left;\n\n    padInfo = {top, bottom, left, right, front, back, type: 'SAME'};\n  } else if (pad === 'valid') {\n    padInfo = {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      front: 0,\n      back: 0,\n      type: 'VALID'\n    };\n    outDepth = Math.ceil((inDepth - filterDepth + 1) / strideDepth);\n    outHeight = Math.ceil((inHeight - filterHeight + 1) / strideHeight);\n    outWidth = Math.ceil((inWidth - filterWidth + 1) / strideWidth);\n  } else {\n    throw Error(`Unknown padding parameter: ${pad}`);\n  }\n  return {padInfo, outDepth, outHeight, outWidth};\n}\n\n/**\n * Rounds a value depending on the rounding mode\n * @param value\n * @param roundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\nfunction round(value: number, roundingMode?: 'floor'|'round'|'ceil') {\n  if (!roundingMode) {\n    return Math.trunc(value);\n  }\n  switch (roundingMode) {\n    case 'round':\n      // used for Caffe Conv\n      return Math.round(value);\n    case 'ceil':\n      // used for Caffe Pool\n      return Math.ceil(value);\n    case 'floor':\n      return Math.floor(value);\n    default:\n      throw new Error(`Unknown roundingMode ${roundingMode}`);\n  }\n}\n\nexport function tupleValuesAreOne(param: number|number[]): boolean {\n  const [dimA, dimB, dimC] = parseTupleParam(param);\n  return dimA === 1 && dimB === 1 && dimC === 1;\n}\n\nexport function eitherStridesOrDilationsAreOne(\n    strides: number|number[], dilations: number|number[]): boolean {\n  return tupleValuesAreOne(strides) || tupleValuesAreOne(dilations);\n}\n\n/**\n * Convert Conv2D dataFormat from 'NHWC'|'NCHW' to\n *    'channelsLast'|'channelsFirst'\n * @param dataFormat in 'NHWC'|'NCHW' mode\n * @return dataFormat in 'channelsLast'|'channelsFirst' mode\n * @throws unknown dataFormat\n */\nexport function convertConv2DDataFormat(dataFormat: 'NHWC'|'NCHW'):\n    'channelsLast'|'channelsFirst' {\n  if (dataFormat === 'NHWC') {\n    return 'channelsLast';\n  } else if (dataFormat === 'NCHW') {\n    return 'channelsFirst';\n  } else {\n    throw new Error(`Unknown dataFormat ${dataFormat}`);\n  }\n}\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {ZerosLike, ZerosLikeInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Creates a `tf.Tensor` with all elements set to 0 with the same shape as the\n * given tensor.\n *\n * ```js\n * const x = tf.tensor([1, 2]);\n * tf.zerosLike(x).print();\n * ```\n *\n * @param x The tensor of required shape.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction zerosLike_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'zerosLike');\n  const inputs: ZerosLikeInputs = {x: $x};\n  return ENGINE.runKernel(ZerosLike, inputs as {} as NamedTensorMap);\n}\nexport const zerosLike = op({zerosLike_});\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {op} from './operation';\n\n/**\n * Computes square of `x` element-wise: `x ^ 2`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, Math.sqrt(2), -1]);\n *\n * x.square().print();  // or tf.square(x)\n * ```\n * @param x The input Tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction square_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'square');\n  const attrs = {};\n  return ENGINE.runKernel('Square', {x: $x}, attrs);\n}\n\nexport const square = op({square_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Abs, AbsInputs, ComplexAbs, ComplexAbsInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes absolute value element-wise: `abs(x)`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.abs().print();  // or tf.abs(x)\n * ```\n * @param x The input `tf.Tensor`.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction abs_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'abs');\n\n  if ($x.dtype === 'complex64') {\n    const inputs: ComplexAbsInputs = {x: $x};\n    return ENGINE.runKernel(ComplexAbs, inputs as {} as NamedTensorMap);\n  } else {\n    const inputs: AbsInputs = {x: $x};\n    return ENGINE.runKernel(Abs, inputs as {} as NamedTensorMap);\n  }\n}\n\nexport const abs = op({abs_});\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\n\nimport * as broadcast_util from './broadcast_util';\nimport {elu} from './elu';\nimport {Activation} from './fused_types';\nimport {leakyRelu} from './leaky_relu';\nimport {mul} from './mul';\nimport {prelu} from './prelu';\nimport {relu} from './relu';\nimport {relu6} from './relu6';\nimport {reshape} from './reshape';\nimport {sigmoid} from './sigmoid';\nimport {step} from './step';\nimport {sum} from './sum';\n\n// Returns gradient for fused activation.\nexport function getFusedDyActivation(\n    dy: Tensor, y: Tensor, activation: Activation): Tensor {\n  if (activation == null || activation === 'linear') {\n    return dy;\n  }\n  if (activation === 'relu') {\n    return mul(dy, step(y));\n  }\n  throw new Error(\n      `Cannot compute gradient for fused activation ${activation}.`);\n}\n\n// Returns gradient for fused bias.\nexport function getFusedBiasGradient(\n    bias: Tensor, dyActivation: Tensor): Tensor {\n  let res = dyActivation;\n  const reduceAxes =\n      broadcast_util.getReductionAxes(bias.shape, dyActivation.shape);\n  if (reduceAxes.length > 0) {\n    res = sum(res, reduceAxes);\n  }\n  return reshape(res, bias.shape);\n}\n\nexport function applyActivation(\n    x: Tensor, activation: Activation, preluActivationWeights?: Tensor,\n    leakyreluAlpha?: number): Tensor {\n  if (activation === 'linear') {\n    return x;\n  } else if (activation === 'relu') {\n    return relu(x);\n  } else if (activation === 'elu') {\n    return elu(x);\n  } else if (activation === 'relu6') {\n    return relu6(x);\n  } else if (activation === 'prelu') {\n    return prelu(x, preluActivationWeights);\n  } else if (activation === 'leakyrelu') {\n    return leakyRelu(x, leakyreluAlpha);\n  } else if (activation === 'sigmoid') {\n    return sigmoid(x);\n  }\n  throw new Error(`Unknown fused activation ${activation}.`);\n}\n\n// Whether we should call fused ops.\nexport const shouldFuse = (gradientDepth: number, activation: Activation) => {\n  const gradientMode = gradientDepth > 0;\n  return !gradientMode || activation === 'linear';\n};\n","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {TensorBuffer} from '../tensor';\nimport {DataType, DataTypeMap, Rank, ShapeMap} from '../types';\nimport * as util from '../util';\n\n/**\n * Creates an empty `tf.TensorBuffer` with the specified `shape` and `dtype`.\n *\n * The values are stored in CPU as `TypedArray`. Fill the buffer using\n * `buffer.set()`, or by modifying directly `buffer.values`.\n *\n * When done, call `buffer.toTensor()` to get an immutable `tf.Tensor` with\n * those values.\n *\n * ```js\n * // Create a buffer and set values at particular indices.\n * const buffer = tf.buffer([2, 2]);\n * buffer.set(3, 0, 0);\n * buffer.set(5, 1, 0);\n *\n * // Convert the buffer back to a tensor.\n * buffer.toTensor().print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param dtype The dtype of the buffer. Defaults to 'float32'.\n * @param values The values of the buffer as `TypedArray`. Defaults to\n * zeros.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function buffer<R extends Rank, D extends DataType = 'float32'>(\n    shape: ShapeMap[R], dtype: D = 'float32' as D,\n    values?: DataTypeMap[D]): TensorBuffer<R, D> {\n  dtype = dtype || 'float32' as D;\n  util.assertNonNegativeIntegerDimensions(shape);\n  return new TensorBuffer<R, D>(shape, dtype, values);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor1D} from '../tensor';\nimport {inferShape} from '../tensor_util_env';\nimport {TensorLike1D} from '../types';\nimport {DataType} from '../types';\nimport {assertNonNull} from '../util';\nimport {makeTensor} from './tensor_ops_util';\n\n/**\n * Creates rank-1 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor1d` as it makes the code more readable.\n *\n * ```js\n * tf.tensor1d([1, 2, 3]).print();\n * ```\n *\n * @param values The values of the tensor. Can be array of numbers,\n *     or a `TypedArray`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function tensor1d(values: TensorLike1D, dtype?: DataType): Tensor1D {\n  assertNonNull(values);\n  const inferredShape = inferShape(values, dtype);\n  if (inferredShape.length !== 1) {\n    throw new Error('tensor1d() requires values to be a flat/TypedArray');\n  }\n  const shape: number[] = null;\n  return makeTensor(values, shape, inferredShape, dtype) as Tensor1D;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tensor} from '../tensor';\nimport {TensorLike, TypedArray} from '../types';\nimport {DataType} from '../types';\nimport {assert, assertNonNegativeIntegerDimensions, flatten, inferDtype, isTypedArray, sizeFromShape, toTypedArray} from '../util';\n\n/** This is shared code across all tensor creation methods. */\nexport function makeTensor(\n    values: TensorLike, shape: number[], inferredShape: number[],\n    dtype?: DataType): Tensor {\n  if (dtype == null) {\n    dtype = inferDtype(values);\n  }\n  if (dtype === 'complex64') {\n    throw new Error(\n        `Cannot construct a complex64 tensor directly. ` +\n        `Please use tf.complex(real, imag).`);\n  }\n  if (!isTypedArray(values) && !Array.isArray(values) &&\n      typeof values !== 'number' && typeof values !== 'boolean' &&\n      typeof values !== 'string') {\n    throw new Error(\n        'values passed to tensor(values) must be a number/boolean/string or ' +\n        'an array of numbers/booleans/strings, or a TypedArray');\n  }\n  if (shape != null) {\n    assertNonNegativeIntegerDimensions(shape);\n\n    const providedSize = sizeFromShape(shape);\n    const inferredSize = sizeFromShape(inferredShape);\n    assert(\n        providedSize === inferredSize,\n        () =>\n            `Based on the provided shape, [${shape}], the tensor should have ` +\n            `${providedSize} values but has ${inferredSize}`);\n\n    for (let i = 0; i < inferredShape.length; ++i) {\n      const inferred = inferredShape[i];\n      const flatDimsDontMatch = i === inferredShape.length - 1 ?\n          inferred !== sizeFromShape(shape.slice(i)) :\n          true;\n      assert(\n          inferredShape[i] === shape[i] || !flatDimsDontMatch,\n          () => `Error creating a new Tensor. Inferred shape ` +\n              `(${inferredShape}) does not match the provided ` +\n              `shape (${shape}). `);\n    }\n  }\n\n  if (!isTypedArray(values) && !Array.isArray(values)) {\n    values = [values] as number[];\n  }\n\n  shape = shape || inferredShape;\n  values = dtype !== 'string' ?\n      toTypedArray(values, dtype) :\n      flatten(values as string[], [], true) as string[];\n  return ENGINE.makeTensor(values as TypedArray, shape, dtype);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Neg, NegInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes `-1 * x` element-wise.\n *\n * ```js\n * const x = tf.tensor2d([1, 2, -2, 0], [2, 2]);\n *\n * x.neg().print();  // or tf.neg(x)\n * ```\n *\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction neg_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'neg');\n\n  const inputs: NegInputs = {x: $x};\n  return ENGINE.runKernel(Neg, inputs as {} as NamedTensorMap);\n}\nexport const neg = op({neg_});\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, env} from '@tensorflow/tfjs-core';\n\nimport * as tensorflow from '../data/compiled_api';\n\nimport {getRegisteredOp} from './custom_op/register';\nimport {getNodeNameAndIndex} from './executors/utils';\nimport * as arithmetic from './op_list/arithmetic';\nimport * as basicMath from './op_list/basic_math';\nimport * as control from './op_list/control';\nimport * as convolution from './op_list/convolution';\nimport * as creation from './op_list/creation';\nimport * as dynamic from './op_list/dynamic';\nimport * as evaluation from './op_list/evaluation';\nimport * as graph from './op_list/graph';\nimport * as hashTable from './op_list/hash_table';\nimport * as image from './op_list/image';\nimport * as logical from './op_list/logical';\nimport * as matrices from './op_list/matrices';\nimport * as normalization from './op_list/normalization';\nimport * as reduction from './op_list/reduction';\nimport * as sliceJoin from './op_list/slice_join';\nimport * as sparse from './op_list/sparse';\nimport * as spectral from './op_list/spectral';\nimport * as string from './op_list/string';\nimport * as transformation from './op_list/transformation';\nimport {Graph, InputParamValue, Node, OpMapper, ParamValue} from './types';\n\nexport class OperationMapper {\n  private static _instance: OperationMapper;\n\n  private opMappers: {[key: string]: OpMapper};\n\n  // Singleton instance for the mapper\n  public static get Instance() {\n    return this._instance || (this._instance = new this());\n  }\n\n  // Loads the op mapping from the JSON file.\n  private constructor() {\n    const ops = [\n      arithmetic, basicMath, control, convolution, creation, dynamic,\n      evaluation, graph, hashTable, image, logical, matrices, normalization,\n      reduction, sliceJoin, sparse, spectral, string, transformation\n    ];\n    const mappersJson: OpMapper[] = [].concat(...ops.map(op => op.json));\n\n    this.opMappers = mappersJson.reduce<{[key: string]: OpMapper}>(\n        (map, mapper: OpMapper) => {\n          map[mapper.tfOpName] = mapper;\n          return map;\n        },\n        {});\n  }\n\n  // Converts the model inference graph from Tensorflow GraphDef to local\n  // representation for TensorFlow.js API\n  transformGraph(\n      graph: tensorflow.IGraphDef,\n      signature: tensorflow.ISignatureDef = {}): Graph {\n    const tfNodes = graph.node;\n    const placeholders: Node[] = [];\n    const weights: Node[] = [];\n    const initNodes: Node[] = [];\n    const nodes = tfNodes.reduce<{[key: string]: Node}>((map, node) => {\n      map[node.name] = this.mapNode(node);\n      if (node.op.startsWith('Placeholder')) {\n        placeholders.push(map[node.name]);\n      } else if (node.op === 'Const') {\n        weights.push(map[node.name]);\n      } else if (node.input == null || node.input.length === 0) {\n        initNodes.push(map[node.name]);\n      }\n      return map;\n    }, {});\n\n    let inputs: Node[] = [];\n    const outputs: Node[] = [];\n    let inputNodeNameToKey: {[key: string]: string} = {};\n    let outputNodeNameToKey: {[key: string]: string} = {};\n    if (signature != null) {\n      inputNodeNameToKey = this.mapSignatureEntries(signature.inputs);\n      outputNodeNameToKey = this.mapSignatureEntries(signature.outputs);\n    }\n    const allNodes = Object.keys(nodes);\n    allNodes.forEach(key => {\n      const node = nodes[key];\n      node.inputNames.forEach((name, index) => {\n        const [nodeName, , outputName] = getNodeNameAndIndex(name);\n        const inputNode = nodes[nodeName];\n        if (inputNode.outputs != null) {\n          const outputIndex = inputNode.outputs.indexOf(outputName);\n          if (outputIndex !== -1) {\n            const inputName = `${nodeName}:${outputIndex}`;\n            // update the input name to use the mapped output index directly.\n            node.inputNames[index] = inputName;\n          }\n        }\n        node.inputs.push(inputNode);\n        inputNode.children.push(node);\n      });\n    });\n\n    // if signature has not outputs set, add any node that does not have\n    // outputs.\n    if (Object.keys(outputNodeNameToKey).length === 0) {\n      allNodes.forEach(key => {\n        const node = nodes[key];\n        if (node.children.length === 0) {\n          outputs.push(node);\n        }\n      });\n    } else {\n      Object.keys(outputNodeNameToKey).forEach(name => {\n        const [nodeName, ] = getNodeNameAndIndex(name);\n        const node = nodes[nodeName];\n        if (node != null) {\n          node.signatureKey = outputNodeNameToKey[name];\n          outputs.push(node);\n        }\n      });\n    }\n\n    if (Object.keys(inputNodeNameToKey).length > 0) {\n      Object.keys(inputNodeNameToKey).forEach(name => {\n        const [nodeName, ] = getNodeNameAndIndex(name);\n        const node = nodes[nodeName];\n        if (node) {\n          node.signatureKey = inputNodeNameToKey[name];\n          inputs.push(node);\n        }\n      });\n    } else {\n      inputs = placeholders;\n    }\n\n    let functions = {};\n    if (graph.library != null && graph.library.function != null) {\n      functions = graph.library.function.reduce((functions, func) => {\n        functions[func.signature.name] = this.mapFunction(func);\n        return functions;\n      }, {} as {[key: string]: Graph});\n    }\n\n    const result: Graph =\n        {nodes, inputs, outputs, weights, placeholders, signature, functions};\n\n    if (initNodes.length > 0) {\n      result.initNodes = initNodes;\n    }\n\n    return result;\n  }\n\n  private mapSignatureEntries(entries: {[k: string]: tensorflow.ITensorInfo}) {\n    return Object.keys(entries || {})\n        .reduce<{[key: string]: string}>((prev, curr) => {\n          prev[entries[curr].name] = curr;\n          return prev;\n        }, {});\n  }\n\n  private mapNode(node: tensorflow.INodeDef): Node {\n    // Unsupported ops will cause an error at run-time (not parse time), since\n    // they may not be used by the actual execution subgraph.\n    const mapper =\n        getRegisteredOp(node.op) || this.opMappers[node.op] || {} as OpMapper;\n    if (node.attr == null) {\n      node.attr = {};\n    }\n\n    const newNode: Node = {\n      name: node.name,\n      op: node.op,\n      category: mapper.category,\n      inputNames:\n          (node.input ||\n           []).map(input => input.startsWith('^') ? input.substr(1) : input),\n      inputs: [],\n      children: [],\n      inputParams: {},\n      attrParams: {},\n      rawAttrs: node.attr,\n      outputs: mapper.outputs\n    };\n\n    if (mapper.inputs != null) {\n      newNode.inputParams =\n          mapper.inputs.reduce<{[key: string]: InputParamValue}>(\n              (map, param) => {\n                map[param.name] = {\n                  type: param.type,\n                  inputIndexStart: param.start,\n                  inputIndexEnd: param.end\n                };\n                return map;\n              },\n              {});\n    }\n    if (mapper.attrs != null) {\n      newNode.attrParams =\n          mapper.attrs.reduce<{[key: string]: ParamValue}>((map, param) => {\n            const type = param.type;\n            let value = undefined;\n            switch (param.type) {\n              case 'string':\n                value = getStringParam(\n                    node.attr, param.tfName, param.defaultValue as string);\n\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getStringParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as string);\n                }\n                break;\n              case 'string[]':\n                value = getStringArrayParam(\n                    node.attr, param.tfName, param.defaultValue as string[]);\n\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getStringArrayParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as string[]);\n                }\n                break;\n              case 'number':\n                value = getNumberParam(\n                    node.attr, param.tfName,\n                    (param.defaultValue || 0) as number);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getNumberParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as number);\n                }\n                break;\n              case 'number[]':\n                value = getNumericArrayParam(\n                    node.attr, param.tfName, param.defaultValue as number[]);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getNumericArrayParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as number[]);\n                }\n                break;\n              case 'bool':\n                value = getBoolParam(\n                    node.attr, param.tfName, param.defaultValue as boolean);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getBoolParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as boolean);\n                }\n                break;\n              case 'bool[]':\n                value = getBoolArrayParam(\n                    node.attr, param.tfName, param.defaultValue as boolean[]);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getBoolArrayParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as boolean[]);\n                }\n                break;\n              case 'shape':\n                value = getTensorShapeParam(\n                    node.attr, param.tfName, param.defaultValue as number[]);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getTensorShapeParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as number[]);\n                }\n                break;\n              case 'shape[]':\n                value = getTensorShapeArrayParam(\n                    node.attr, param.tfName, param.defaultValue as number[][]);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getTensorShapeArrayParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as number[][]);\n                }\n                break;\n              case 'dtype':\n                value = getDtypeParam(\n                    node.attr, param.tfName, param.defaultValue as DataType);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getDtypeParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as DataType);\n                }\n                break;\n              case 'dtype[]':\n                value = getDtypeArrayParam(\n                    node.attr, param.tfName, param.defaultValue as DataType[]);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getDtypeArrayParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as DataType[]);\n                }\n                break;\n              case 'func':\n                value = getFuncParam(\n                    node.attr, param.tfName, param.defaultValue as string);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getFuncParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as string);\n                }\n                break;\n              case 'tensor':\n              case 'tensors':\n                break;\n              default:\n                throw new Error(\n                    `Unsupported param type: ${param.type} for op: ${node.op}`);\n            }\n            map[param.name] = {value, type};\n            return map;\n          }, {});\n    }\n    return newNode;\n  }\n\n  // map the TFunctionDef to TFJS graph object\n  private mapFunction(functionDef: tensorflow.IFunctionDef): Graph {\n    const tfNodes = functionDef.nodeDef;\n    const placeholders: Node[] = [];\n    const weights: Node[] = [];\n    let nodes: {[key: string]: Node} = {};\n    if (tfNodes != null) {\n      nodes = tfNodes.reduce<{[key: string]: Node}>((map, node) => {\n        map[node.name] = this.mapNode(node);\n        if (node.op === 'Const') {\n          weights.push(map[node.name]);\n        }\n        return map;\n      }, {});\n    }\n    const inputs: Node[] = [];\n    const outputs: Node[] = [];\n\n    functionDef.signature.inputArg.forEach(arg => {\n      const [nodeName, ] = getNodeNameAndIndex(arg.name);\n      const node: Node = {\n        name: nodeName,\n        op: 'Placeholder',\n        inputs: [],\n        inputNames: [],\n        category: 'graph',\n        inputParams: {},\n        attrParams: {dtype: {value: parseDtypeParam(arg.type), type: 'dtype'}},\n        children: []\n      };\n      node.signatureKey = arg.name;\n      inputs.push(node);\n      nodes[nodeName] = node;\n    });\n\n    const allNodes = Object.keys(nodes);\n    allNodes.forEach(key => {\n      const node = nodes[key];\n      node.inputNames.forEach((name, index) => {\n        const [nodeName, , outputName] = getNodeNameAndIndex(name);\n        const inputNode = nodes[nodeName];\n        if (inputNode.outputs != null) {\n          const outputIndex = inputNode.outputs.indexOf(outputName);\n          if (outputIndex !== -1) {\n            const inputName = `${nodeName}:${outputIndex}`;\n            // update the input name to use the mapped output index directly.\n            node.inputNames[index] = inputName;\n          }\n        }\n        node.inputs.push(inputNode);\n        inputNode.children.push(node);\n      });\n    });\n\n    const returnNodeMap = functionDef.ret;\n\n    functionDef.signature.outputArg.forEach(output => {\n      const [nodeName, index] = getNodeNameAndIndex(returnNodeMap[output.name]);\n      const node = nodes[nodeName];\n      if (node != null) {\n        node.defaultOutput = index;\n        outputs.push(node);\n      }\n    });\n\n    const signature = this.mapArgsToSignature(functionDef);\n    return {nodes, inputs, outputs, weights, placeholders, signature};\n  }\n\n  private mapArgsToSignature(functionDef: tensorflow.IFunctionDef):\n      tensorflow.ISignatureDef {\n    return {\n      methodName: functionDef.signature.name,\n      inputs: functionDef.signature.inputArg.reduce(\n          (map, arg) => {\n            map[arg.name] = this.mapArgToTensorInfo(arg);\n            return map;\n          },\n          {} as {[key: string]: tensorflow.ITensorInfo}),\n      outputs: functionDef.signature.outputArg.reduce(\n          (map, arg) => {\n            map[arg.name] = this.mapArgToTensorInfo(arg, functionDef.ret);\n            return map;\n          },\n          {} as {[key: string]: tensorflow.ITensorInfo}),\n    };\n  }\n\n  private mapArgToTensorInfo(\n      arg: tensorflow.OpDef.IArgDef,\n      nameMap?: {[key: string]: string}): tensorflow.ITensorInfo {\n    let name = arg.name;\n    if (nameMap != null) {\n      name = nameMap[name];\n    }\n    return {name, dtype: arg.type};\n  }\n}\n\nexport function decodeBase64(text: string): string {\n  const global = env().global;\n  if (typeof global.atob !== 'undefined') {\n    return global.atob(text);\n  } else if (typeof Buffer !== 'undefined') {\n    return new Buffer(text, 'base64').toString();\n  } else {\n    throw new Error(\n        'Unable to decode base64 in this environment. ' +\n        'Missing built-in atob() or Buffer()');\n  }\n}\n\nexport function parseStringParam(s: []|string, keepCase: boolean): string {\n  const value =\n      Array.isArray(s) ? String.fromCharCode.apply(null, s) : decodeBase64(s);\n  return keepCase ? value : value.toLowerCase();\n}\n\nexport function getStringParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string, def: string,\n    keepCase = false): string {\n  const param = attrs[name];\n  if (param != null) {\n    return parseStringParam(param.s, keepCase);\n  }\n  return def;\n}\n\nexport function getBoolParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def: boolean): boolean {\n  const param = attrs[name];\n  return param ? param.b : def;\n}\n\nexport function getNumberParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def: number): number {\n  const param = attrs[name] || {};\n  const value =\n      param['i'] != null ? param['i'] : (param['f'] != null ? param['f'] : def);\n  return (typeof value === 'number') ? value : parseInt(value, 10);\n}\n\nexport function parseDtypeParam(value: string|tensorflow.DataType): DataType {\n  if (typeof (value) === 'string') {\n    // tslint:disable-next-line:no-any\n    value = tensorflow.DataType[value as any];\n  }\n  switch (value) {\n    case tensorflow.DataType.DT_FLOAT:\n      return 'float32';\n    case tensorflow.DataType.DT_INT32:\n    case tensorflow.DataType.DT_INT64:\n    case tensorflow.DataType.DT_INT8:\n    case tensorflow.DataType.DT_UINT8:\n      return 'int32';\n    case tensorflow.DataType.DT_BOOL:\n      return 'bool';\n    case tensorflow.DataType.DT_DOUBLE:\n      return 'float32';\n    case tensorflow.DataType.DT_STRING:\n      return 'string';\n    default:\n      // Unknown dtype error will happen at runtime (instead of parse time),\n      // since these nodes might not be used by the actual subgraph execution.\n      return null;\n  }\n}\n\nexport function getFuncParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def: string): string {\n  const param = attrs[name];\n  if (param && param.func) {\n    return param.func.name;\n  }\n  return def;\n}\n\nexport function getDtypeParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def: DataType): DataType {\n  const param = attrs[name];\n  if (param && param.type) {\n    return parseDtypeParam(param.type);\n  }\n  return def;\n}\n\nexport function getDtypeArrayParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def: DataType[]): DataType[] {\n  const param = attrs[name];\n  if (param && param.list && param.list.type) {\n    return param.list.type.map(v => parseDtypeParam(v));\n  }\n  return def;\n}\n\nexport function parseTensorShapeParam(shape: tensorflow.ITensorShape): number[]|\n    undefined {\n  if (shape.unknownRank) {\n    return undefined;\n  }\n  if (shape.dim != null) {\n    return shape.dim.map(\n        dim =>\n            (typeof dim.size === 'number') ? dim.size : parseInt(dim.size, 10));\n  }\n  return [];\n}\n\nexport function getTensorShapeParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def?: number[]): number[]|undefined {\n  const param = attrs[name];\n  if (param && param.shape) {\n    return parseTensorShapeParam(param.shape);\n  }\n  return def;\n}\n\nexport function getNumericArrayParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def: number[]): number[] {\n  const param = attrs[name];\n  if (param) {\n    return ((param.list.f && param.list.f.length ? param.list.f :\n                                                   param.list.i) ||\n            [])\n        .map(v => (typeof v === 'number') ? v : parseInt(v, 10));\n  }\n  return def;\n}\n\nexport function getStringArrayParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string, def: string[],\n    keepCase = false): string[] {\n  const param = attrs[name];\n  if (param && param.list && param.list.s) {\n    return param.list.s.map((v) => {\n      return parseStringParam(v, keepCase);\n    });\n  }\n  return def;\n}\n\nexport function getTensorShapeArrayParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def: number[][]): number[][] {\n  const param = attrs[name];\n  if (param && param.list && param.list.shape) {\n    return param.list.shape.map((v) => {\n      return parseTensorShapeParam(v);\n    });\n  }\n  return def;\n}\n\nexport function getBoolArrayParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def: boolean[]): boolean[] {\n  const param = attrs[name];\n  if (param && param.list && param.list.b) {\n    return param.list.b;\n  }\n  return def;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Complex, ComplexInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\n\n/**\n * Converts two real numbers to a complex number.\n *\n * Given a tensor `real` representing the real part of a complex number, and a\n * tensor `imag` representing the imaginary part of a complex number, this\n * operation returns complex numbers elementwise of the form [r0, i0, r1, i1],\n * where r represents the real part and i represents the imag part.\n *\n * The input tensors real and imag must have the same shape.\n *\n * ```js\n * const real = tf.tensor1d([2.25, 3.25]);\n * const imag = tf.tensor1d([4.75, 5.75]);\n * const complex = tf.complex(real, imag);\n *\n * complex.print();\n * ```\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction complex_<T extends Tensor>(real: T|TensorLike, imag: T|TensorLike): T {\n  const $real = convertToTensor(real, 'real', 'complex');\n  const $imag = convertToTensor(imag, 'imag', 'complex');\n  util.assertShapesMatch(\n      $real.shape, $imag.shape,\n      `real and imag shapes, ${$real.shape} and ${$imag.shape}, ` +\n          `must match in call to tf.complex().`);\n\n  const inputs: ComplexInputs = {real: $real, imag: $imag};\n  return ENGINE.runKernel(Complex, inputs as {} as NamedTensorMap);\n}\n\nexport const complex = op({complex_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Reverse, ReverseAttrs, ReverseInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Reverses a `tf.Tensor` along a specified axis.\n *\n * Also available are stricter rank-specific methods that assert that `x` is\n * of the given rank:\n *   - `tf.reverse1d`\n *   - `tf.reverse2d`\n *   - `tf.reverse3d`\n *   - `tf.reverse4d`\n *\n * Except `tf.reverse1d` (which does not have axis param), all methods have\n * same signature as this method.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n *\n * x.reverse().print();\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.reverse(axis).print();\n * ```\n * @param x The input tensor to be reversed.\n * @param axis The set of dimensions to reverse. Must be in the\n *     range [-rank(x), rank(x)). Defaults to all axes.\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction reverse_<T extends Tensor>(\n    x: T|TensorLike, axis?: number|number[]): T {\n  const $x = convertToTensor(x, 'x', 'reverse');\n\n  const inputs: ReverseInputs = {x: $x};\n  const attrs: ReverseAttrs = {dims: axis};\n\n  return ENGINE.runKernel(\n      Reverse, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const reverse = op({reverse_});\n","module.exports = function() {\n\tthrow new Error(\"define cannot be used indirect\");\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Identity, IdentityInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Creates a new tensor with the same values and shape as the specified\n * tensor.\n *\n * ```js\n * const x = tf.tensor([1, 2]);\n *\n * x.clone().print();\n * ```\n *\n * @param x The tensor to clone.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction clone_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'clone', 'string_or_numeric');\n  const inputs: IdentityInputs = {x: $x};\n\n  // Note this op is called tf.identity in python. Hence the kernel name used\n  // here.\n  return ENGINE.runKernel(Identity, inputs as {} as NamedTensorMap);\n}\n\nexport const clone = op({clone_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Sqrt, SqrtInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes square root of the input `tf.Tensor` element-wise: `y = sqrt(x)`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 4, -1]);\n *\n * x.sqrt().print();  // or tf.sqrt(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction sqrt_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'sqrt');\n\n  const inputs: SqrtInputs = {x: $x};\n\n  return ENGINE.runKernel(Sqrt, inputs as {} as NamedTensorMap);\n}\nexport const sqrt = op({sqrt_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Exp, ExpInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes exponential of the input `tf.Tensor` element-wise. `e ^ x`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, -3]);\n *\n * x.exp().print();  // or tf.exp(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction exp_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'exp');\n\n  const inputs: ExpInputs = {x: $x};\n  return ENGINE.runKernel(Exp, inputs as {} as NamedTensorMap);\n}\nexport const exp = op({exp_});\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Select, SelectInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {broadcastTo} from './broadcast_to';\nimport {assertAndGetBroadcastShape} from './broadcast_util';\nimport {op} from './operation';\n\n/**\n * Returns the elements, either `a` or `b` depending on the `condition`.\n *\n * If the condition is true, select from `a`, otherwise select from `b`.\n *\n * ```js\n * const cond = tf.tensor1d([false, false, true], 'bool');\n * const a = tf.tensor1d([1 , 2, 3]);\n * const b = tf.tensor1d([-1, -2, -3]);\n *\n * a.where(cond, b).print();\n * ```\n *\n * @param condition The input condition. Must be of dtype bool.\n * @param a If `condition` is rank 1, `a` may have a higher rank but\n *     its first dimension must match the size of `condition`.\n * @param b A tensor with the same dtype as `a` and with shape that is\n *     compatible with `a`.\n * @return A tensor with same dtype as `a` and `b`, and shape that is\n *     broadcastable from `a` and `b`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction where_<T extends Tensor>(\n    condition: Tensor|TensorLike, a: T|TensorLike, b: T|TensorLike): T {\n  const $a = convertToTensor(a, 'a', 'where');\n  const $b = convertToTensor(b, 'b', 'where');\n  const $condition = convertToTensor(condition, 'condition', 'where', 'bool');\n  // TODO: move this logic to forward function when the broadcastTo op is\n  // implemented in WASM.\n  // Find the broadcastable shape for $condition, $a, and $b.\n  const broadcastShape = assertAndGetBroadcastShape(\n      assertAndGetBroadcastShape($condition.shape, $a.shape), $b.shape);\n  const $broadcastedCondition = broadcastTo($condition, broadcastShape);\n  const $broadcastedA = broadcastTo($a, broadcastShape);\n  const $broadcastedB = broadcastTo($b, broadcastShape);\n\n  const inputs: SelectInputs = {\n    condition: $broadcastedCondition,\n    t: $broadcastedA,\n    e: $broadcastedB\n  };\n  return ENGINE.runKernel(Select, inputs as {} as NamedTensorMap);\n}\n\nexport const where = op({where_});\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {env} from './environment';\n\nimport {getGlobal} from './global_util';\nimport {NamedGradientMap} from './tape';\nimport {Tensor} from './tensor';\nimport {DataType, RecursiveArray} from './types';\n\nconst kernelRegistry =\n    getGlobal('kernelRegistry', () => new Map<string, KernelConfig>());\nconst gradRegistry =\n    getGlobal('gradRegistry', () => new Map<string, GradConfig>());\n\nexport type DataId = object;\n\ntype AttributeValue =\n    number|number[]|boolean|boolean[]|string|string[]|NamedAttrMap;\n\n/** These are extra non-tensor/primitive params passed to kernel functions. */\nexport type Attribute = AttributeValue|RecursiveArray<AttributeValue>;\n\n/** Specifies the code to run when executing a kernel. */\nexport type KernelFunc = (params: {\n  inputs: NamedTensorInfoMap,\n  backend: {},\n  attrs?: NamedAttrMap,\n}) => TensorInfo|TensorInfo[];\n\n/** The function to run when computing a gradient during backprop. */\nexport type GradFunc =\n    (dy: Tensor|Tensor[], saved: Tensor[], attrs: NamedAttrMap) =>\n        NamedGradientMap;\n\n/** Function that gets called after the backend initializes. */\nexport type KernelSetupFunc = (backend: {}) => void;\n/** Function that gets called right before the backend is disposed. */\nexport type KernelDisposeFunc = KernelSetupFunc;\n\n/** Config object for registering a kernel in the global registry. */\nexport interface KernelConfig {\n  kernelName: string;\n  backendName: string;\n  kernelFunc: KernelFunc;\n  setupFunc?: KernelSetupFunc;\n  disposeFunc?: KernelDisposeFunc;\n}\n\n/** Config object for registering a gradient in the global registry. */\nexport interface GradConfig {\n  kernelName: string;\n  inputsToSave?: string[];\n  // When saveAllInputs is true, all inputs will be saved. Only use this flag\n  // if inputs is an array of Tensors.\n  saveAllInputs?: boolean;\n  outputsToSave?: boolean[];\n  gradFunc: GradFunc;\n}\n\n/** Holds metadata for a given tensor. */\nexport interface TensorInfo {\n  dataId: DataId;\n  shape: number[];\n  dtype: DataType;\n}\n\nexport interface NamedTensorInfoMap {\n  [name: string]: TensorInfo;\n}\n\nexport interface NamedAttrMap {\n  [name: string]: Attribute;\n}\n\n/**\n * Returns the kernel function (code) associated with the provided names.\n *\n * @param kernelName The official name of the kernel.\n * @param backendName The official name of the backend.\n */\nexport function getKernel(\n    kernelName: string, backendName: string): KernelConfig {\n  const key = makeKey(kernelName, backendName);\n  return kernelRegistry.get(key);\n}\n\n/**\n * Returns the registered gradient info associated with the provided kernel.\n * @param kernelName The official TF kernel name.\n */\nexport function getGradient(kernelName: string): GradConfig {\n  return gradRegistry.get(kernelName);\n}\n\nexport function getKernelsForBackend(backendName: string): KernelConfig[] {\n  const it = kernelRegistry.entries();\n  const result: KernelConfig[] = [];\n\n  while (true) {\n    const {done, value} = it.next();\n    if (done) {\n      break;\n    }\n    const [key, config] = value;\n    const [backend, ] = key.split('_');\n    if (backend === backendName) {\n      result.push(config);\n    }\n  }\n  return result;\n}\n\n/**\n * Registers the function (forward pass) for the kernel in a global registry.\n *\n * @param config A config object with the following properties:\n * - `kernelName` The official name of the kernel.\n * - `backendName` The official name of the backend.\n * - `kernelFunc` The function to run during the forward pass of the kernel.\n * - `setupFunc` Optional. Gets called once, after the backend initializes.\n * - `disposeFunc` Optional. Gets called once, right before the backend is\n * disposed.\n */\nexport function registerKernel(config: KernelConfig) {\n  const {kernelName, backendName} = config;\n  const key = makeKey(kernelName, backendName);\n  if (kernelRegistry.has(key)) {\n    console.warn(\n        `The kernel '${kernelName}' for backend ` +\n        `'${backendName}' is already registered`);\n  }\n  kernelRegistry.set(key, config);\n}\n\n/**\n * Registers a gradient function for a given kernel in the global registry,\n * to be used during the back-propagation of that kernel.\n *\n * @param config An object with the following properties:\n * - `kernelName` The name of the kernel that the gradient function is for.\n * - `gradFunc` The function to run during back-propagation.\n */\nexport function registerGradient(config: GradConfig) {\n  const {kernelName} = config;\n\n  if (gradRegistry.has(kernelName)) {\n    // TODO (yassogba) after 3.0 assess whether we need to keep this gated\n    // to debug mode.\n    if (env().getBool('DEBUG')) {\n      console.warn(`Overriding the gradient for '${kernelName}'`);\n    }\n  }\n  gradRegistry.set(kernelName, config);\n}\n\n/**\n * Removes the kernel function from the registry.\n *\n * @param kernelName The official name of the kernel.\n * @param backendName The official name of the backend.\n *\n */\nexport function unregisterKernel(\n    kernelName: string, backendName: string): void {\n  const key = makeKey(kernelName, backendName);\n  if (!kernelRegistry.has(key)) {\n    throw new Error(\n        `The kernel '${kernelName}' for backend ` +\n        `'${backendName}' is not registered`);\n  }\n  kernelRegistry.delete(key);\n}\n\n/** Removes the registered gradient from the global registry. */\nexport function unregisterGradient(kernelName: string): void {\n  if (!gradRegistry.has(kernelName)) {\n    throw new Error(\n        `The gradient '${kernelName}' for backend is not registered`);\n  }\n  gradRegistry.delete(kernelName);\n}\n\n/**\n * Finds kernels that have already been registered to a backend and re-registers\n * them for a new backend. Useful for registering custom backends.\n * @param registeredBackendName Already registered backend.\n * @param newBackendName New backend.\n */\nexport function copyRegisteredKernels(\n    registeredBackendName: string, newBackendName: string): void {\n  const kernels = getKernelsForBackend(registeredBackendName);\n  kernels.forEach(kernelConfig => {\n    const newKernelConfig =\n        Object.assign({}, kernelConfig, {backendName: newBackendName});\n    registerKernel(newKernelConfig);\n  });\n}\n\nfunction makeKey(kernelName: string, backendName: string) {\n  return `${backendName}_${kernelName}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Inserts a value into a sorted array. This method allows duplicate, meaning it\n * allows inserting duplicate value, in which case, the element will be inserted\n * at the lowest index of the value.\n * @param arr The array to modify.\n * @param element The element to insert.\n * @param comparator Optional. If no comparator is specified, elements are\n * compared using array_util.defaultComparator, which is suitable for Strings\n * and Numbers in ascending arrays. If the array contains multiple instances of\n * the target value, the left-most instance will be returned. To provide a\n * comparator, it should take 2 arguments to compare and return a negative,\n * zero, or a positive number.\n */\nexport function binaryInsert<T>(\n    arr: T[], element: T, comparator?: (a: T, b: T) => number) {\n  const index = binarySearch(arr, element, comparator);\n  const insertionPoint = index < 0 ? -(index + 1) : index;\n  arr.splice(insertionPoint, 0, element);\n}\n\n/**\n * Searches the array for the target using binary search, returns the index\n * of the found element, or position to insert if element not found. If no\n * comparator is specified, elements are compared using array_\n * util.defaultComparator, which is suitable for Strings and Numbers in\n * ascending arrays. If the array contains multiple instances of the target\n * value, the left-most instance will be returned.\n * @param arr The array to be searched in.\n * @param target The target to be searched for.\n * @param comparator Should take 2 arguments to compare and return a negative,\n *    zero, or a positive number.\n * @return Lowest index of the target value if found, otherwise the insertion\n *    point where the target should be inserted, in the form of\n *    (-insertionPoint - 1).\n */\nexport function binarySearch<T>(\n    arr: T[], target: T, comparator?: (a: T, b: T) => number) {\n  return binarySearch_(arr, target, comparator || defaultComparator);\n}\n\n/**\n * Compares its two arguments for order.\n * @param a The first element to be compared.\n * @param b The second element to be compared.\n * @return A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nfunction defaultComparator<T>(a: T, b: T): number {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\nfunction binarySearch_<T>(\n    arr: T[], target: T, comparator: (a: T, b: T) => number) {\n  let left = 0;\n  let right = arr.length;\n  let middle = 0;\n  let found = false;\n  while (left < right) {\n    middle = left + ((right - left) >>> 1);\n    const compareResult = comparator(target, arr[middle]);\n    if (compareResult > 0) {\n      left = middle + 1;\n    } else {\n      right = middle;\n      // If compareResult is 0, the value is found. We record it is found,\n      // and then keep looking because there may be duplicate.\n      found = !compareResult;\n    }\n  }\n\n  return found ? left : -left - 1;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {TypedArray} from '../types';\nimport {binaryInsert} from './non_max_suppression_util';\n\n/**\n * Implementation of the NonMaxSuppression kernel shared between webgl and cpu.\n */\ninterface Candidate {\n  score: number;\n  boxIndex: number;\n  suppressBeginIndex: number;\n}\n\ninterface NonMaxSuppressionResult {\n  selectedIndices: number[];\n  selectedScores?: number[];\n  validOutputs?: number;\n}\n\nexport function nonMaxSuppressionV3Impl(\n    boxes: TypedArray, scores: TypedArray, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number): NonMaxSuppressionResult {\n  return nonMaxSuppressionImpl_(\n      boxes, scores, maxOutputSize, iouThreshold, scoreThreshold,\n      0 /* softNmsSigma */);\n}\n\nexport function nonMaxSuppressionV4Impl(\n    boxes: TypedArray, scores: TypedArray, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number,\n    padToMaxOutputSize: boolean): NonMaxSuppressionResult {\n  return nonMaxSuppressionImpl_(\n      boxes, scores, maxOutputSize, iouThreshold, scoreThreshold,\n      0 /* softNmsSigma */, false /* returnScoresTensor */,\n      padToMaxOutputSize /* padToMaxOutputSize */, true\n      /* returnValidOutputs */);\n}\n\nexport function nonMaxSuppressionV5Impl(\n    boxes: TypedArray, scores: TypedArray, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number,\n    softNmsSigma: number): NonMaxSuppressionResult {\n  return nonMaxSuppressionImpl_(\n      boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma,\n      true /* returnScoresTensor */);\n}\n\nfunction nonMaxSuppressionImpl_(\n    boxes: TypedArray, scores: TypedArray, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number, softNmsSigma: number,\n    returnScoresTensor = false, padToMaxOutputSize = false,\n    returnValidOutputs = false): NonMaxSuppressionResult {\n  // The list is sorted in ascending order, so that we can always pop the\n  // candidate with the largest score in O(1) time.\n  const candidates = [];\n\n  for (let i = 0; i < scores.length; i++) {\n    if (scores[i] > scoreThreshold) {\n      candidates.push({score: scores[i], boxIndex: i, suppressBeginIndex: 0});\n    }\n  }\n\n  candidates.sort(ascendingComparator);\n\n  // If softNmsSigma is 0, the outcome of this algorithm is exactly same as\n  // before.\n  const scale = softNmsSigma > 0 ? (-0.5 / softNmsSigma) : 0.0;\n\n  const selectedIndices: number[] = [];\n  const selectedScores: number[] = [];\n\n  while (selectedIndices.length < maxOutputSize && candidates.length > 0) {\n    const candidate = candidates.pop();\n    const {score: originalScore, boxIndex, suppressBeginIndex} = candidate;\n\n    if (originalScore < scoreThreshold) {\n      break;\n    }\n\n    // Overlapping boxes are likely to have similar scores, therefore we\n    // iterate through the previously selected boxes backwards in order to\n    // see if candidate's score should be suppressed. We use\n    // suppressBeginIndex to track and ensure a candidate can be suppressed\n    // by a selected box no more than once. Also, if the overlap exceeds\n    // iouThreshold, we simply ignore the candidate.\n    let ignoreCandidate = false;\n    for (let j = selectedIndices.length - 1; j >= suppressBeginIndex; --j) {\n      const iou = intersectionOverUnion(boxes, boxIndex, selectedIndices[j]);\n\n      if (iou >= iouThreshold) {\n        ignoreCandidate = true;\n        break;\n      }\n\n      candidate.score =\n          candidate.score * suppressWeight(iouThreshold, scale, iou);\n\n      if (candidate.score <= scoreThreshold) {\n        break;\n      }\n    }\n\n    // At this point, if `candidate.score` has not dropped below\n    // `scoreThreshold`, then we know that we went through all of the\n    // previous selections and can safely update `suppressBeginIndex` to the\n    // end of the selected array. Then we can re-insert the candidate with\n    // the updated score and suppressBeginIndex back in the candidate list.\n    // If on the other hand, `candidate.score` has dropped below the score\n    // threshold, we will not add it back to the candidates list.\n    candidate.suppressBeginIndex = selectedIndices.length;\n\n    if (!ignoreCandidate) {\n      // Candidate has passed all the tests, and is not suppressed, so\n      // select the candidate.\n      if (candidate.score === originalScore) {\n        selectedIndices.push(boxIndex);\n        selectedScores.push(candidate.score);\n      } else if (candidate.score > scoreThreshold) {\n        // Candidate's score is suppressed but is still high enough to be\n        // considered, so add back to the candidates list.\n        binaryInsert(candidates, candidate, ascendingComparator);\n      }\n    }\n  }\n\n  // NonMaxSuppressionV4 feature: padding output to maxOutputSize.\n  const validOutputs = selectedIndices.length;\n  const elemsToPad = maxOutputSize - validOutputs;\n\n  if (padToMaxOutputSize && elemsToPad > 0) {\n    selectedIndices.push(...new Array(elemsToPad).fill(0));\n    selectedScores.push(...new Array(elemsToPad).fill(0.0));\n  }\n\n  const result: NonMaxSuppressionResult = {selectedIndices};\n\n  if (returnScoresTensor) {\n    result['selectedScores'] = selectedScores;\n  }\n\n  if (returnValidOutputs) {\n    result['validOutputs'] = validOutputs;\n  }\n\n  return result;\n}\n\nfunction intersectionOverUnion(boxes: TypedArray, i: number, j: number) {\n  const iCoord = boxes.subarray(i * 4, i * 4 + 4);\n  const jCoord = boxes.subarray(j * 4, j * 4 + 4);\n  const yminI = Math.min(iCoord[0], iCoord[2]);\n  const xminI = Math.min(iCoord[1], iCoord[3]);\n  const ymaxI = Math.max(iCoord[0], iCoord[2]);\n  const xmaxI = Math.max(iCoord[1], iCoord[3]);\n  const yminJ = Math.min(jCoord[0], jCoord[2]);\n  const xminJ = Math.min(jCoord[1], jCoord[3]);\n  const ymaxJ = Math.max(jCoord[0], jCoord[2]);\n  const xmaxJ = Math.max(jCoord[1], jCoord[3]);\n  const areaI = (ymaxI - yminI) * (xmaxI - xminI);\n  const areaJ = (ymaxJ - yminJ) * (xmaxJ - xminJ);\n  if (areaI <= 0 || areaJ <= 0) {\n    return 0.0;\n  }\n  const intersectionYmin = Math.max(yminI, yminJ);\n  const intersectionXmin = Math.max(xminI, xminJ);\n  const intersectionYmax = Math.min(ymaxI, ymaxJ);\n  const intersectionXmax = Math.min(xmaxI, xmaxJ);\n  const intersectionArea = Math.max(intersectionYmax - intersectionYmin, 0.0) *\n      Math.max(intersectionXmax - intersectionXmin, 0.0);\n  return intersectionArea / (areaI + areaJ - intersectionArea);\n}\n\n// A Gaussian penalty function, this method always returns values in [0, 1].\n// The weight is a function of similarity, the more overlap two boxes are, the\n// smaller the weight is, meaning highly overlapping boxe will be significantly\n// penalized. On the other hand, a non-overlapping box will not be penalized.\nfunction suppressWeight(iouThreshold: number, scale: number, iou: number) {\n  const weight = Math.exp(scale * iou * iou);\n  return iou <= iouThreshold ? weight : 0.0;\n}\n\nfunction ascendingComparator(c1: Candidate, c2: Candidate) {\n  // For objects with same scores, we make the object with the larger index go\n  // first. In an array that pops from the end, this means that the object with\n  // the smaller index will be popped first. This ensures the same output as\n  // the TensorFlow python version.\n  return (c1.score - c2.score) ||\n      ((c1.score === c2.score) && (c2.boxIndex - c1.boxIndex));\n}\n","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as util from '../util';\n\n/**\n * Returns true if the axis specifies the inner most dimensions of the\n * array.\n */\nexport function axesAreInnerMostDims(axes: number[], rank: number): boolean {\n  for (let i = 0; i < axes.length; ++i) {\n    if (axes[axes.length - i - 1] !== rank - 1 - i) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function combineLocations(\n    outputLoc: number[], reduceLoc: number[], axes: number[]): number[] {\n  const rank = outputLoc.length + reduceLoc.length;\n  const loc = [];\n  let outIdx = 0;\n  let reduceIdx = 0;\n    for (let dim = 0; dim < rank; dim++) {\n    if (axes.indexOf(dim) === -1) {\n      loc.push(outputLoc[outIdx++]);\n    } else {\n      loc.push(reduceLoc[reduceIdx++]);\n    }\n  }\n  return loc;\n}\n\nexport function computeOutAndReduceShapes(\n    aShape: number[], axes: number[]): [number[], number[]] {\n  const outShape = [];\n  const rank = aShape.length;\n  for (let dim = 0; dim < rank; dim++) {\n    if (axes.indexOf(dim) === -1) {\n      outShape.push(aShape[dim]);\n    }\n  }\n  const reduceShape = axes.map(dim => aShape[dim]);\n  return [outShape, reduceShape];\n}\n\nexport function expandShapeToKeepDim(\n    shape: number[], axes: number[]): number[] {\n  const reduceSubShape = axes.map(x => 1);\n  return combineLocations(shape, reduceSubShape, axes);\n}\n\nexport function assertAxesAreInnerMostDims(\n    msg: string, axes: number[], rank: number): void {\n  util.assert(\n      axesAreInnerMostDims(axes, rank),\n      () => `${msg} supports only inner-most axes for now. ` +\n          `Got axes ${axes} and rank-${rank} input.`);\n}\n\n/**\n * Returns the axes permutation to be used with `tf.transpose`, if such\n * permutation is necessary. Otherwise it returns null. This method is used by\n * operations that operate only on inner-most axes.\n */\nexport function getAxesPermutation(axes: number[], rank: number): number[]|\n    null {\n  if (axesAreInnerMostDims(axes, rank)) {\n    return null;\n  }\n  const result: number[] = [];\n  for (let i = 0; i < rank; ++i) {\n    if (axes.indexOf(i) === -1) {\n      result.push(i);\n    }\n  }\n  axes.forEach(axis => result.push(axis));\n  return result;\n}\n\n/** Returns the axes permutation that undoes the original permutation. */\nexport function getUndoAxesPermutation(axes: number[]): number[] {\n  return axes.map((axis, i) => [i, axis])\n      .sort((a, b) => a[1] - b[1])\n      .map(x => x[0]);\n}\n\nexport function getInnerMostAxes(numAxes: number, rank: number): number[] {\n  const res: number[] = [];\n  for (let i = rank - numAxes; i < rank; ++i) {\n    res.push(i);\n  }\n  return res;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {PadV2, PadV2Attrs, PadV2Inputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Pads a `tf.Tensor` with a given value and paddings.\n *\n * This operation implements `CONSTANT` mode. For `REFLECT` and `SYMMETRIC`,\n * refer to `tf.mirrorPad`\n *\n * Also available are stricter rank-specific methods with the same signature\n * as this method that assert that `paddings` is of given length.\n *   - `tf.pad1d`\n *   - `tf.pad2d`\n *   - `tf.pad3d`\n *   - `tf.pad4d`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * x.pad([[1, 2]]).print();\n * ```\n * @param x The tensor to pad.\n * @param paddings An array of length `R` (the rank of the tensor), where\n * each element is a length-2 tuple of ints `[padBefore, padAfter]`,\n * specifying how much to pad along each dimension of the tensor.\n * @param constantValue The pad value to use. Defaults to 0.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction pad_<T extends Tensor>(\n    x: T|TensorLike, paddings: Array<[number, number]>, constantValue = 0): T {\n  const $x = convertToTensor(x, 'x', 'pad');\n  if ($x.rank === 0) {\n    throw new Error('pad(scalar) is not defined. Pass non-scalar to pad');\n  }\n\n  const attrs: PadV2Attrs = {paddings, constantValue};\n  const inputs: PadV2Inputs = {x: $x};\n  return ENGINE.runKernel(\n      PadV2, inputs as unknown as NamedTensorMap,\n      attrs as unknown as NamedAttrMap);\n}\n\nexport const pad = op({pad_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport {inferShape} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {DataType, Rank, ShapeMap} from '../types';\n\nimport {makeTensor} from './tensor_ops_util';\n\n/**\n * Creates a `tf.Tensor` with the provided values, shape and dtype.\n *\n * ```js\n * // Pass an array of values to create a vector.\n * tf.tensor([1, 2, 3, 4]).print();\n * ```\n *\n * ```js\n * // Pass a nested array of values to make a matrix or a higher\n * // dimensional tensor.\n * tf.tensor([[1, 2], [3, 4]]).print();\n * ```\n *\n * ```js\n * // Pass a flat array and specify a shape yourself.\n * tf.tensor([1, 2, 3, 4], [2, 2]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`. If the values are strings,\n *     they will be encoded as utf-8 and kept as `Uint8Array[]`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function tensor<R extends Rank>(\n    values: TensorLike, shape?: ShapeMap[R], dtype?: DataType): Tensor<R> {\n  const inferredShape = inferShape(values, dtype);\n  return makeTensor(values, shape, inferredShape, dtype) as Tensor<R>;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Sigmoid, SigmoidInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes sigmoid element-wise, `1 / (1 + exp(-x))`\n *\n * ```js\n * const x = tf.tensor1d([0, -1, 2, -3]);\n *\n * x.sigmoid().print();  // or tf.sigmoid(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction sigmoid_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'sigmoid');\n\n  const inputs: SigmoidInputs = {x: $x};\n\n  return ENGINE.runKernel(Sigmoid, inputs as {} as NamedTensorMap);\n}\nexport const sigmoid = op({sigmoid_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Max, MaxAttrs, MaxInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes the maximum of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and an\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.max().print();  // or tf.max(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.max(axis).print();  // or tf.max(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction max_<T extends Tensor>(\n    x: Tensor|TensorLike, axis: number|number[] = null, keepDims = false): T {\n  const $x = convertToTensor(x, 'x', 'max');\n\n  const inputs: MaxInputs = {x: $x};\n  const attrs: MaxAttrs = {reductionIndices: axis, keepDims};\n\n  return ENGINE.runKernel(\n      Max, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const max = op({max_});\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\n\n/* tslint:disable */\n\n/** Properties of an Any. */\nexport declare interface IAny {\n  /** Any typeUrl */\n  typeUrl?: (string|null);\n\n  /** Any value */\n  value?: (Uint8Array|null);\n}\n\n/** DataType enum. */\nexport enum DataType {\n  'DT_INVALID' = 0,\n  'DT_FLOAT' = 1,\n  'DT_DOUBLE' = 2,\n  'DT_INT32' = 3,\n  'DT_UINT8' = 4,\n  'DT_INT16' = 5,\n  'DT_INT8' = 6,\n  'DT_STRING' = 7,\n  'DT_COMPLEX64' = 8,\n  'DT_INT64' = 9,\n  'DT_BOOL' = 10,\n  'DT_QINT8' = 11,\n  'DT_QUINT8' = 12,\n  'DT_QINT32' = 13,\n  'DT_BFLOAT16' = 14,\n  'DT_FLOAT_REF' = 101,\n  'DT_DOUBLE_REF' = 102,\n  'DT_INT32_REF' = 103,\n  'DT_UINT8_REF' = 104,\n  'DT_INT16_REF' = 105,\n  'DT_INT8_REF' = 106,\n  'DT_STRING_REF' = 107,\n  'DT_COMPLEX64_REF' = 108,\n  'DT_INT64_REF' = 109,\n  'DT_BOOL_REF' = 110,\n  'DT_QINT8_REF' = 111,\n  'DT_QUINT8_REF' = 112,\n  'DT_QINT32_REF' = 113,\n  'DT_BFLOAT16_REF' = 114\n}\n\n/** Properties of a TensorShape. */\nexport declare interface ITensorShape {\n  /** TensorShape dim */\n  dim?: (TensorShape.IDim[]|null);\n\n  /** TensorShape unknownRank */\n  unknownRank?: (boolean|null);\n}\n\nexport namespace TensorShape {\n  /** Properties of a Dim. */\n  export declare interface IDim {\n    /** Dim size */\n    size?: (number|string|null);\n\n    /** Dim name */\n    name?: (string|null);\n  }\n}\n\n/** Properties of a Tensor. */\nexport declare interface ITensor {\n  /** Tensor dtype */\n  dtype?: (DataType|null);\n\n  /** Tensor tensorShape */\n  tensorShape?: (ITensorShape|null);\n\n  /** Tensor versionNumber */\n  versionNumber?: (number|null);\n\n  /** Tensor tensorContent */\n  tensorContent?: (Uint8Array|null);\n\n  /** Tensor floatVal */\n  floatVal?: (number[]|null);\n\n  /** Tensor doubleVal */\n  doubleVal?: (number[]|null);\n\n  /** Tensor intVal */\n  intVal?: (number[]|null);\n\n  /** Tensor stringVal */\n  stringVal?: (Uint8Array[]|null);\n\n  /** Tensor scomplexVal */\n  scomplexVal?: (number[]|null);\n\n  /** Tensor int64Val */\n  int64Val?: ((number | string)[]|null);\n\n  /** Tensor boolVal */\n  boolVal?: (boolean[]|null);\n\n  /** Tensor uint32Val */\n  uint32Val?: (number[]|null);\n\n  /** Tensor uint64Val */\n  uint64Val?: ((number | string)[]|null);\n}\n\n/** Properties of an AttrValue. */\nexport declare interface IAttrValue {\n  /** AttrValue list */\n  list?: (AttrValue.IListValue|null);\n\n  /** AttrValue s */\n  s?: (string|null);\n\n  /** AttrValue i */\n  i?: (number|string|null);\n\n  /** AttrValue f */\n  f?: (number|null);\n\n  /** AttrValue b */\n  b?: (boolean|null);\n\n  /** AttrValue type */\n  type?: (DataType|null);\n\n  /** AttrValue shape */\n  shape?: (ITensorShape|null);\n\n  /** AttrValue tensor */\n  tensor?: (ITensor|null);\n\n  /** AttrValue placeholder */\n  placeholder?: (string|null);\n\n  /** AttrValue func */\n  func?: (INameAttrList|null);\n}\n\nexport namespace AttrValue {\n  /** Properties of a ListValue. */\n  export declare interface IListValue {\n    /** ListValue s */\n    s?: (string[]|null);\n\n    /** ListValue i */\n    i?: ((number | string)[]|null);\n\n    /** ListValue f */\n    f?: (number[]|null);\n\n    /** ListValue b */\n    b?: (boolean[]|null);\n\n    /** ListValue type */\n    type?: (DataType[]|null);\n\n    /** ListValue shape */\n    shape?: (ITensorShape[]|null);\n\n    /** ListValue tensor */\n    tensor?: (ITensor[]|null);\n\n    /** ListValue func */\n    func?: (INameAttrList[]|null);\n  }\n}\n\n/** Properties of a NameAttrList. */\nexport declare interface INameAttrList {\n  /** NameAttrList name */\n  name?: (string|null);\n\n  /** NameAttrList attr */\n  attr?: ({[k: string]: IAttrValue}|null);\n}\n\n/** Properties of a NodeDef. */\nexport declare interface INodeDef {\n  /** NodeDef name */\n  name?: (string|null);\n\n  /** NodeDef op */\n  op?: (string|null);\n\n  /** NodeDef input */\n  input?: (string[]|null);\n\n  /** NodeDef device */\n  device?: (string|null);\n\n  /** NodeDef attr */\n  attr?: ({[k: string]: IAttrValue}|null);\n}\n\n/** Properties of a VersionDef. */\nexport declare interface IVersionDef {\n  /** VersionDef producer */\n  producer?: (number|null);\n\n  /** VersionDef minConsumer */\n  minConsumer?: (number|null);\n\n  /** VersionDef badConsumers */\n  badConsumers?: (number[]|null);\n}\n\n/** Properties of a GraphDef. */\nexport declare interface IGraphDef {\n  /** GraphDef node */\n  node?: (INodeDef[]|null);\n\n  /** GraphDef versions */\n  versions?: (IVersionDef|null);\n\n  /** GraphDef library */\n  library?: (IFunctionDefLibrary|null);\n}\n\n/** Properties of a CollectionDef. */\nexport declare interface ICollectionDef {\n  /** CollectionDef nodeList */\n  nodeList?: (CollectionDef.INodeList|null);\n\n  /** CollectionDef bytesList */\n  bytesList?: (CollectionDef.IBytesList|null);\n\n  /** CollectionDef int64List */\n  int64List?: (CollectionDef.IInt64List|null);\n\n  /** CollectionDef floatList */\n  floatList?: (CollectionDef.IFloatList|null);\n\n  /** CollectionDef anyList */\n  anyList?: (CollectionDef.IAnyList|null);\n}\n\nexport namespace CollectionDef {\n  /** Properties of a NodeList. */\n  export declare interface INodeList {\n    /** NodeList value */\n    value?: (string[]|null);\n  }\n\n  /** Properties of a BytesList. */\n  export declare interface IBytesList {\n    /** BytesList value */\n    value?: (Uint8Array[]|null);\n  }\n\n  /** Properties of an Int64List. */\n  export declare interface IInt64List {\n    /** Int64List value */\n    value?: ((number | string)[]|null);\n  }\n\n  /** Properties of a FloatList. */\n  export declare interface IFloatList {\n    /** FloatList value */\n    value?: (number[]|null);\n  }\n\n  /** Properties of an AnyList. */\n  export declare interface IAnyList {\n    /** AnyList value */\n    value?: (IAny[]|null);\n  }\n}\n\n/** Properties of a SaverDef. */\nexport declare interface ISaverDef {\n  /** SaverDef filenameTensorName */\n  filenameTensorName?: (string|null);\n\n  /** SaverDef saveTensorName */\n  saveTensorName?: (string|null);\n\n  /** SaverDef restoreOpName */\n  restoreOpName?: (string|null);\n\n  /** SaverDef maxToKeep */\n  maxToKeep?: (number|null);\n\n  /** SaverDef sharded */\n  sharded?: (boolean|null);\n\n  /** SaverDef keepCheckpointEveryNHours */\n  keepCheckpointEveryNHours?: (number|null);\n\n  /** SaverDef version */\n  version?: (SaverDef.CheckpointFormatVersion|null);\n}\n\nexport namespace SaverDef {\n  /** CheckpointFormatVersion enum. */\n  export enum CheckpointFormatVersion {'LEGACY' = 0, 'V1' = 1, 'V2' = 2}\n}\n\n/** Properties of a TensorInfo. */\nexport declare interface ITensorInfo {\n  /** TensorInfo name */\n  name?: (string|null);\n\n  /** TensorInfo cooSparse */\n  cooSparse?: (TensorInfo.ICooSparse|null);\n\n  /** TensorInfo dtype */\n  dtype?: (DataType|null);\n\n  /** TensorInfo tensorShape */\n  tensorShape?: (ITensorShape|null);\n}\n\nexport namespace TensorInfo {\n  /** Properties of a CooSparse. */\n  export declare interface ICooSparse {\n    /** CooSparse valuesTensorName */\n    valuesTensorName?: (string|null);\n\n    /** CooSparse indicesTensorName */\n    indicesTensorName?: (string|null);\n\n    /** CooSparse denseShapeTensorName */\n    denseShapeTensorName?: (string|null);\n  }\n}\n\n/** Properties of a SignatureDef. */\nexport declare interface ISignatureDef {\n  /** SignatureDef inputs */\n  inputs?: ({[k: string]: ITensorInfo}|null);\n\n  /** SignatureDef outputs */\n  outputs?: ({[k: string]: ITensorInfo}|null);\n\n  /** SignatureDef methodName */\n  methodName?: (string|null);\n}\n\n/** Properties of an AssetFileDef. */\nexport declare interface IAssetFileDef {\n  /** AssetFileDef tensorInfo */\n  tensorInfo?: (ITensorInfo|null);\n\n  /** AssetFileDef filename */\n  filename?: (string|null);\n}\n\n/** Properties of an OpDef. */\nexport declare interface IOpDef {\n  /** OpDef name */\n  name?: (string|null);\n\n  /** OpDef inputArg */\n  inputArg?: (OpDef.IArgDef[]|null);\n\n  /** OpDef outputArg */\n  outputArg?: (OpDef.IArgDef[]|null);\n\n  /** OpDef attr */\n  attr?: (OpDef.IAttrDef[]|null);\n\n  /** OpDef deprecation */\n  deprecation?: (OpDef.IOpDeprecation|null);\n\n  /** OpDef summary */\n  summary?: (string|null);\n\n  /** OpDef description */\n  description?: (string|null);\n\n  /** OpDef isCommutative */\n  isCommutative?: (boolean|null);\n\n  /** OpDef isAggregate */\n  isAggregate?: (boolean|null);\n\n  /** OpDef isStateful */\n  isStateful?: (boolean|null);\n\n  /** OpDef allowsUninitializedInput */\n  allowsUninitializedInput?: (boolean|null);\n}\n\nexport namespace OpDef {\n  /** Properties of an ArgDef. */\n  export declare interface IArgDef {\n    /** ArgDef name */\n    name?: (string|null);\n\n    /** ArgDef description */\n    description?: (string|null);\n\n    /** ArgDef type */\n    type?: (DataType|null);\n\n    /** ArgDef typeAttr */\n    typeAttr?: (string|null);\n\n    /** ArgDef numberAttr */\n    numberAttr?: (string|null);\n\n    /** ArgDef typeListAttr */\n    typeListAttr?: (string|null);\n\n    /** ArgDef isRef */\n    isRef?: (boolean|null);\n  }\n\n  /** Properties of an AttrDef. */\n  export declare interface IAttrDef {\n    /** AttrDef name */\n    name?: (string|null);\n\n    /** AttrDef type */\n    type?: (string|null);\n\n    /** AttrDef defaultValue */\n    defaultValue?: (IAttrValue|null);\n\n    /** AttrDef description */\n    description?: (string|null);\n\n    /** AttrDef hasMinimum */\n    hasMinimum?: (boolean|null);\n\n    /** AttrDef minimum */\n    minimum?: (number|string|null);\n\n    /** AttrDef allowedValues */\n    allowedValues?: (IAttrValue|null);\n  }\n\n  /** Properties of an OpDeprecation. */\n  export declare interface IOpDeprecation {\n    /** OpDeprecation version */\n    version?: (number|null);\n\n    /** OpDeprecation explanation */\n    explanation?: (string|null);\n  }\n}\n\n/** Properties of an OpList. */\nexport declare interface IOpList {\n  /** OpList op */\n  op?: (IOpDef[]|null);\n}\n\n/** Properties of a MetaGraphDef. */\nexport declare interface IMetaGraphDef {\n  /** MetaGraphDef metaInfoDef */\n  metaInfoDef?: (MetaGraphDef.IMetaInfoDef|null);\n\n  /** MetaGraphDef graphDef */\n  graphDef?: (IGraphDef|null);\n\n  /** MetaGraphDef saverDef */\n  saverDef?: (ISaverDef|null);\n\n  /** MetaGraphDef collectionDef */\n  collectionDef?: ({[k: string]: ICollectionDef}|null);\n\n  /** MetaGraphDef signatureDef */\n  signatureDef?: ({[k: string]: ISignatureDef}|null);\n\n  /** MetaGraphDef assetFileDef */\n  assetFileDef?: (IAssetFileDef[]|null);\n}\n\nexport namespace MetaGraphDef {\n  /** Properties of a MetaInfoDef. */\n  export declare interface IMetaInfoDef {\n    /** MetaInfoDef metaGraphVersion */\n    metaGraphVersion?: (string|null);\n\n    /** MetaInfoDef strippedOpList */\n    strippedOpList?: (IOpList|null);\n\n    /** MetaInfoDef anyInfo */\n    anyInfo?: (IAny|null);\n\n    /** MetaInfoDef tags */\n    tags?: (string[]|null);\n\n    /** MetaInfoDef tensorflowVersion */\n    tensorflowVersion?: (string|null);\n\n    /** MetaInfoDef tensorflowGitVersion */\n    tensorflowGitVersion?: (string|null);\n  }\n}\n\n/** Properties of a SavedModel. */\nexport declare interface ISavedModel {\n  /** SavedModel savedModelSchemaVersion */\n  savedModelSchemaVersion?: (number|string|null);\n\n  /** SavedModel metaGraphs */\n  metaGraphs?: (IMetaGraphDef[]|null);\n}\n\n/** Properties of a FunctionDefLibrary. */\nexport declare interface IFunctionDefLibrary {\n  /** FunctionDefLibrary function */\n  'function'?: (IFunctionDef[]|null);\n\n  /** FunctionDefLibrary gradient */\n  gradient?: (IGradientDef[]|null);\n}\n\n/** Properties of a FunctionDef. */\nexport declare interface IFunctionDef {\n  /** FunctionDef signature */\n  signature?: (IOpDef|null);\n\n  /** FunctionDef attr */\n  attr?: ({[k: string]: IAttrValue}|null);\n\n  /** FunctionDef nodeDef */\n  nodeDef?: (INodeDef[]|null);\n\n  /** FunctionDef ret */\n  ret?: ({[k: string]: string}|null);\n}\n\n/** Properties of a GradientDef. */\nexport declare interface IGradientDef {\n  /** GradientDef functionName */\n  functionName?: (string|null);\n\n  /** GradientDef gradientFunc */\n  gradientFunc?: (string|null);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Pow, PowInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes the power of one `tf.Tensor` to another. Supports broadcasting.\n *\n * Given a `tf.Tensor` x and a `tf.Tensor` y, this operation computes x^y for\n * corresponding elements in x and y. The result's dtype will be the upcasted\n * type of the `base` and `exp` dtypes.\n *\n * ```js\n * const a = tf.tensor([[2, 3], [4, 5]])\n * const b = tf.tensor([[1, 2], [3, 0]]).toInt();\n *\n * a.pow(b).print();  // or tf.pow(a, b)\n * ```\n *\n * ```js\n * const a = tf.tensor([[1, 2], [3, 4]])\n * const b = tf.tensor(2).toInt();\n *\n * a.pow(b).print();  // or tf.pow(a, b)\n * ```\n * We also expose `powStrict` which has the same signature as this op and\n * asserts that `base` and `exp` are the same shape (does not broadcast).\n *\n * @param base The base `tf.Tensor` to pow element-wise.\n * @param exp The exponent `tf.Tensor` to pow element-wise.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction pow_<T extends Tensor>(\n    base: Tensor|TensorLike, exp: Tensor|TensorLike): T {\n  let $base = convertToTensor(base, 'base', 'pow');\n  let $exp = convertToTensor(exp, 'exp', 'pow');\n  [$base, $exp] = makeTypesMatch($base, $exp);\n\n  const inputs: PowInputs = {a: $base, b: $exp};\n\n  return ENGINE.runKernel(Pow, inputs as {} as NamedTensorMap);\n}\n\nexport const pow = op({pow_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Log, LogInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes natural logarithm of the input `tf.Tensor` element-wise: `ln(x)`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, Math.E]);\n *\n * x.log().print();  // or tf.log(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction log_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'log');\n\n  const inputs: LogInputs = {x: $x};\n  return ENGINE.runKernel(Log, inputs as {} as NamedTensorMap);\n}\nexport const log = op({log_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {SplitV, SplitVAttrs, SplitVInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Splits a `tf.Tensor` into sub tensors.\n *\n * If `numOrSizeSplits` is a number, splits `x` along dimension `axis`\n * into `numOrSizeSplits` smaller tensors.\n * Requires that `numOrSizeSplits` evenly divides `x.shape[axis]`.\n *\n * If `numOrSizeSplits` is a number array, splits `x` into\n * `numOrSizeSplits.length` pieces. The shape of the `i`-th piece has the\n * same size as `x` except along dimension `axis` where the size is\n * `numOrSizeSplits[i]`.\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4, 5, 6, 7, 8], [2, 4]);\n * const [a, b] = tf.split(x, 2, 1);\n * a.print();\n * b.print();\n *\n * const [c, d, e] = tf.split(x, [1, 2, 1], 1);\n * c.print();\n * d.print();\n * e.print();\n * ```\n *\n * @param x The input tensor to split.\n * @param numOrSizeSplits Either an integer indicating the number of\n * splits along the axis or an array of integers containing the sizes of\n * each output tensor along the axis. If a number then it must evenly divide\n * `x.shape[axis]`; otherwise the sum of sizes must match `x.shape[axis]`.\n * Can contain one -1 indicating that dimension is to be inferred.\n * @param axis The dimension along which to split. Defaults to 0 (the first\n * dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction split_<T extends Tensor>(\n    x: Tensor|TensorLike, numOrSizeSplits: number[]|number, axis = 0): T[] {\n  const $x = convertToTensor(x, 'x', 'split');\n\n  const inputs: SplitVInputs = {x: $x};\n  const attr: SplitVAttrs = {numOrSizeSplits, axis};\n\n  return ENGINE.runKernel(\n             SplitV, inputs as {} as NamedTensorMap,\n             attr as {} as NamedAttrMap) as {} as T[];\n}\n\nexport const split = op({split_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Pack, PackAttrs, PackInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensorArray} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\n\n/**\n * Stacks a list of rank-`R` `tf.Tensor`s into one rank-`(R+1)` `tf.Tensor`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * const c = tf.tensor1d([5, 6]);\n * tf.stack([a, b, c]).print();\n * ```\n *\n * @param tensors A list of tensor objects with the same shape and dtype.\n * @param axis The axis to stack along. Defaults to 0 (the first dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction stack_<T extends Tensor>(\n    tensors: Array<T|TensorLike>, axis = 0): Tensor {\n  const $tensors =\n      convertToTensorArray(tensors, 'tensors', 'stack', 'string_or_numeric');\n\n  util.assert(\n      $tensors.length >= 1, () => 'Pass at least one tensor to tf.stack');\n\n  if ($tensors.length > 0) {\n    util.assert(\n        axis <= $tensors[0].rank, () => 'Axis must be <= rank of the tensor');\n  }\n\n  const inputs: PackInputs = $tensors;\n  const attrs: PackAttrs = {axis};\n\n  return ENGINE.runKernel(\n      Pack, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const stack = op({stack_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tensor} from '../tensor';\nimport {DataType, Rank, ShapeMap} from '../types';\nimport {makeOnesTypedArray, sizeFromShape} from '../util';\n\nimport {complex} from './complex';\nimport {zeros} from './zeros';\n\n/**\n * Creates a `tf.Tensor` with all elements set to 1.\n *\n * ```js\n * tf.ones([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param dtype The type of an element in the resulting tensor. Defaults to\n *     'float'.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function ones<R extends Rank>(\n    shape: ShapeMap[R], dtype: DataType = 'float32'): Tensor<R> {\n  if (dtype === 'complex64') {\n    const real = ones(shape, 'float32');\n    const imag = zeros(shape, 'float32');\n    return complex(real, imag);\n  }\n  const values = makeOnesTypedArray(sizeFromShape(shape), dtype);\n  return ENGINE.makeTensor(values, shape, dtype) as Tensor<R>;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {ExpandDims, ExpandDimsAttrs, ExpandDimsInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\n\n/**\n * Returns a `tf.Tensor` that has expanded rank, by inserting a dimension\n * into the tensor's shape.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * const axis = 1;\n * x.expandDims(axis).print();\n * ```\n *\n * @param x The input tensor whose dimensions to be expanded.\n * @param axis The dimension index at which to insert shape of `1`. Defaults\n *     to 0 (the first dimension).\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction expandDims_<T extends Tensor>(x: Tensor|TensorLike, axis = 0): T {\n  const $x = convertToTensor(x, 'x', 'expandDims', 'string_or_numeric');\n\n  util.assert(axis <= $x.rank, () => 'Axis must be <= rank of the tensor');\n\n  const inputs: ExpandDimsInputs = {input: $x};\n  const attrs: ExpandDimsAttrs = {dim: axis};\n\n  return ENGINE.runKernel(\n      ExpandDims, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const expandDims = op({expandDims_});\n","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/** @docalias number[] */\nexport interface ShapeMap {\n  R0: number[];\n  R1: [number];\n  R2: [number, number];\n  R3: [number, number, number];\n  R4: [number, number, number, number];\n  R5: [number, number, number, number, number];\n  R6: [number, number, number, number, number, number];\n}\n\n/** @docalias number[] */\nexport interface ArrayMap {\n  R0: number;\n  R1: number[];\n  R2: number[][];\n  R3: number[][][];\n  R4: number[][][][];\n  R5: number[][][][][];\n  R6: number[][][][][][];\n}\n\nexport interface DataTypeMap {\n  float32: Float32Array;\n  int32: Int32Array;\n  bool: Uint8Array;\n  complex64: Float32Array;\n  string: string[];\n}\n\nexport interface SingleValueMap {\n  bool: boolean;\n  int32: number;\n  float32: number;\n  complex64: number;\n  string: string;\n}\n\n/** @docalias 'float32'|'int32'|'bool'|'complex64'|'string' */\nexport type DataType = keyof DataTypeMap;\nexport type NumericDataType = 'float32'|'int32'|'bool'|'complex64';\nexport type TypedArray = Float32Array|Int32Array|Uint8Array;\n/** Tensor data used in tensor creation and user-facing API. */\nexport type DataValues = DataTypeMap[DataType];\n/** The underlying tensor data that gets stored in a backend. */\nexport type BackendValues = Float32Array|Int32Array|Uint8Array|Uint8Array[];\n\nexport enum Rank {\n  R0 = 'R0',\n  R1 = 'R1',\n  R2 = 'R2',\n  R3 = 'R3',\n  R4 = 'R4',\n  R5 = 'R5',\n  R6 = 'R6'\n}\n\nexport type FlatVector = boolean[]|number[]|TypedArray;\nexport type RegularArray<T> =\n    T[]|T[][]|T[][][]|T[][][][]|T[][][][][]|T[][][][][][];\n\n// tslint:disable-next-line:no-any\nexport interface RecursiveArray<T extends any> {\n  [index: number]: T|RecursiveArray<T>;\n}\n\n// Looks for upcasting types. Used, for example, in operations with mixed dtype\n// inputs.\nenum UpcastInt32AndMap {\n  'float32' = 'float32',\n  'int32' = 'int32',\n  'bool' = 'int32',\n  'complex64' = 'complex64'\n}\n\nenum UpcastBoolAndMap {\n  'float32' = 'float32',\n  'int32' = 'int32',\n  'bool' = 'bool',\n  'complex64' = 'complex64'\n}\n\nenum UpcastFloat32AndMap {\n  'float32' = 'float32',\n  'int32' = 'float32',\n  'bool' = 'float32',\n  'complex64' = 'complex64'\n}\n\nenum UpcastComplex64AndMap {\n  'float32' = 'complex64',\n  'int32' = 'complex64',\n  'bool' = 'complex64',\n  'complex64' = 'complex64'\n}\n\nconst upcastTypeMap = {\n  'float32': UpcastFloat32AndMap,\n  'int32': UpcastInt32AndMap,\n  'bool': UpcastBoolAndMap,\n  'complex64': UpcastComplex64AndMap\n};\n\nexport function upcastType(typeA: DataType, typeB: DataType): DataType {\n  if (typeA === 'string' || typeB === 'string') {\n    if (typeA === 'string' && typeB === 'string') {\n      return 'string';\n    }\n    throw new Error(`Can not upcast ${typeA} with ${typeB}`);\n  }\n  return upcastTypeMap[typeA][typeB];\n}\n\n/** Returns the output type after summation. */\nexport function sumOutType(type: DataType): DataType {\n  return upcastType(type, 'int32');\n}\n\n/** @docalias TypedArray|Array */\nexport type TensorLike =\n    TypedArray|number|boolean|string|RecursiveArray<number|number[]|TypedArray>|\n    RecursiveArray<boolean>|RecursiveArray<string>|Uint8Array[];\nexport type ScalarLike = number|boolean|string|Uint8Array;\n/** @docalias TypedArray|Array */\nexport type TensorLike1D = TypedArray|number[]|boolean[]|string[]|Uint8Array[];\n/** @docalias TypedArray|Array */\nexport type TensorLike2D = TypedArray|number[]|number[][]|boolean[]|boolean[][]|\n    string[]|string[][]|Uint8Array[]|Uint8Array[][];\n/** @docalias TypedArray|Array */\nexport type TensorLike3D = TypedArray|number[]|number[][][]|boolean[]|\n    boolean[][][]|string[]|string[][][]|Uint8Array[]|Uint8Array[][][];\n/** @docalias TypedArray|Array */\nexport type TensorLike4D = TypedArray|number[]|number[][][][]|boolean[]|\n    boolean[][][][]|string[]|string[][][][]|Uint8Array[]|Uint8Array[][][][];\n/** @docalias TypedArray|Array */\nexport type TensorLike5D =\n    TypedArray|number[]|number[][][][][]|boolean[]|boolean[][][][][]|string[]|\n    string[][][][][]|Uint8Array[]|Uint8Array[][][][][];\n/** @docalias TypedArray|Array */\nexport type TensorLike6D =\n    TypedArray|number[]|number[][][][][][]|boolean[]|boolean[][][][][][]|\n    string[]|string[][][][][][]|Uint8Array[]|Uint8Array[][][][][];\n\n/** Type for representing image data in Uint8Array type. */\nexport interface PixelData {\n  width: number;\n  height: number;\n  data: Uint8Array;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Fill, FillAttrs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {DataType, Rank, ShapeMap} from '../types';\n\n/**\n * Creates a `tf.Tensor` filled with a scalar value.\n *\n * ```js\n * tf.fill([2, 2], 4).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param value The scalar value to fill the tensor with.\n * @param dtype The type of an element in the resulting tensor. Defaults to\n * 'float'.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction fill<R extends Rank>(\n    shape: ShapeMap[R], value: number|string, dtype?: DataType): Tensor<R> {\n  const attrs: FillAttrs = {shape, value, dtype};\n\n  return ENGINE.runKernel(Fill, {}, attrs as {} as NamedAttrMap);\n}\n\nexport {fill};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Conv2D, Conv2DAttrs, Conv2DInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor3D, Tensor4D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport * as conv_util from './conv_util';\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Computes a 2D convolution over the input x.\n *\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels].\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `dilations` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction conv2d_<T extends Tensor3D|Tensor4D>(\n    x: T|TensorLike, filter: Tensor4D|TensorLike,\n    strides: [number, number]|number,\n    pad: 'valid'|'same'|number|conv_util.ExplicitPadding,\n    dataFormat: 'NHWC'|'NCHW' = 'NHWC',\n    dilations: [number, number]|number = [1, 1],\n    dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n  const $x = convertToTensor(x, 'x', 'conv2d');\n  const $filter = convertToTensor(filter, 'filter', 'conv2d');\n\n  let x4D = $x as Tensor4D;\n  let reshapedTo4D = false;\n\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n  }\n\n  util.assert(\n      x4D.rank === 4,\n      () => `Error in conv2d: input must be rank 4, but got rank ${x4D.rank}.`);\n  util.assert(\n      $filter.rank === 4,\n      () => `Error in conv2d: filter must be rank 4, but got rank ` +\n          `${$filter.rank}.`);\n  if (dimRoundingMode != null) {\n    util.assert(\n        util.isInt(pad as number),\n        () => `Error in conv2d: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n  }\n\n  const inDepth = dataFormat === 'NHWC' ? x4D.shape[3] : x4D.shape[1];\n  util.assert(\n      inDepth === $filter.shape[2],\n      () => `Error in conv2d: depth of input (${inDepth}) must match ` +\n          `input depth for filter ${$filter.shape[2]}.`);\n  util.assert(\n      conv_util.eitherStridesOrDilationsAreOne(strides, dilations),\n      () => 'Error in conv2D: Either strides or dilations must be 1. ' +\n          `Got strides ${strides} and dilations '${dilations}'`);\n\n  const inputs: Conv2DInputs = {x: x4D, filter: $filter};\n  const attrs:\n      Conv2DAttrs = {strides, pad, dataFormat, dilations, dimRoundingMode};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  const res = ENGINE.runKernel(\n                  Conv2D, inputs as {} as NamedTensorMap,\n                  attrs as {} as NamedAttrMap) as T;\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]) as T;\n  }\n  return res;\n}\n\nexport const conv2d = op({conv2d_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tensor} from '../tensor';\nimport {DataType, Rank, ShapeMap} from '../types';\nimport {makeZerosTypedArray, sizeFromShape} from '../util';\n\nimport {complex} from './complex';\n\n/**\n * Creates a `tf.Tensor` with all elements set to 0.\n *\n * ```js\n * tf.zeros([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param dtype The type of an element in the resulting tensor. Can\n *     be 'float32', 'int32' or 'bool'. Defaults to 'float'.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function zeros<R extends Rank>(\n    shape: ShapeMap[R], dtype: DataType = 'float32'): Tensor<R> {\n  if (dtype === 'complex64') {\n    const real = zeros(shape, 'float32');\n    const imag = zeros(shape, 'float32');\n    return complex(real, imag);\n  }\n  const values = makeZerosTypedArray(sizeFromShape(shape), dtype);\n  return ENGINE.makeTensor(values, shape, dtype) as Tensor<R>;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Relu, ReluInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes rectified linear element-wise: `max(x, 0)`.\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.relu().print();  // or tf.relu(x)\n * ```\n * @param x The input tensor. If the dtype is `bool`, the output dtype will be\n *     `int32'.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction relu_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'relu');\n\n  const inputs: ReluInputs = {x: $x};\n\n  return ENGINE.runKernel(Relu, inputs as {} as NamedTensorMap);\n}\n\nexport const relu = op({relu_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {FusedBatchNorm, FusedBatchNormAttrs, FusedBatchNormInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor, Tensor1D, Tensor4D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {Rank, TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {xAs4D} from './batchnorm_util';\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Batch normalization.\n *\n * As described in\n * [http://arxiv.org/abs/1502.03167](http://arxiv.org/abs/1502.03167).\n *\n * Mean, variance, scale, and offset can be of two shapes:\n *   - The same shape as the input.\n *   - In the common case, the depth dimension is the last dimension of x, so\n *     the values would be an `tf.Tensor1D` of shape [depth].\n *\n * Also available are stricter rank-specific methods with the same signature\n * as this method that assert that parameters passed are of given rank\n *   - `tf.batchNorm2d`\n *   - `tf.batchNorm3d`\n *   - `tf.batchNorm4d`\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction batchNorm_<R extends Rank>(\n    x: Tensor<R>|TensorLike, mean: Tensor<R>|Tensor1D|TensorLike,\n    variance: Tensor<R>|Tensor1D|TensorLike,\n    offset?: Tensor<R>|Tensor1D|TensorLike,\n    scale?: Tensor<R>|Tensor1D|TensorLike,\n    varianceEpsilon?: number): Tensor<R> {\n  if (varianceEpsilon == null) {\n    varianceEpsilon = 0.001;\n  }\n  const $x = convertToTensor(x, 'x', 'batchNorm');\n  const $mean = convertToTensor(mean, 'mean', 'batchNorm');\n  const $variance = convertToTensor(variance, 'variance', 'batchNorm');\n  let $scale: Tensor<R>|Tensor1D;\n  if (scale != null) {\n    $scale = convertToTensor(scale, 'scale', 'batchNorm');\n  }\n  let $offset: Tensor<R>|Tensor1D;\n  if (offset != null) {\n    $offset = convertToTensor(offset, 'offset', 'batchNorm');\n  }\n\n  util.assert(\n      $mean.rank === $variance.rank,\n      () => 'Batch normalization gradient requires mean and variance to have ' +\n          'equal ranks.');\n  util.assert(\n      $offset == null || $mean.rank === $offset.rank,\n      () => 'Batch normalization gradient requires mean and offset to have ' +\n          'equal ranks.');\n  util.assert(\n      $scale == null || $mean.rank === $scale.rank,\n      () => 'Batch normalization gradient requires mean and scale to have ' +\n          'equal ranks.');\n\n  const x4D: Tensor4D = xAs4D($x);\n\n  const inputs: FusedBatchNormInputs = {\n    x: x4D,\n    scale: $scale,\n    offset: $offset,\n    mean: $mean,\n    variance: $variance\n  };\n\n  const attrs: FusedBatchNormAttrs = {varianceEpsilon};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  const res = ENGINE.runKernel(\n                  FusedBatchNorm, inputs as {} as NamedTensorMap,\n                  attrs as {} as NamedAttrMap) as Tensor<R>;\n\n  return reshape(res, $x.shape);\n}\n\nexport const batchNorm = op({batchNorm_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor, Tensor4D} from '../tensor';\nimport {Rank} from '../types';\nimport {reshape} from './reshape';\n\nexport function xAs4D<R extends Rank>(x: Tensor<R>) {\n  let x4D: Tensor4D;\n  if (x.rank === 0 || x.rank === 1) {\n    x4D = reshape(x, [1, 1, 1, x.size]);\n  } else if (x.rank === 2) {\n    x4D = reshape(x, [1, 1, x.shape[0], x.shape[1]]);\n  } else if (x.rank === 3) {\n    x4D = reshape(x, [1, x.shape[0], x.shape[1], x.shape[2]]);\n  } else {\n    x4D = x as Tensor4D;\n  }\n\n  return x4D;\n}\n","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as seedrandom from 'seedrandom';\n\nimport {expectNumbersClose, testEpsilon} from '../test_util';\nimport {TypedArray} from '../types';\n\nexport interface RandomBase {\n  nextValue(): number;\n}\n\nexport interface RandomGamma {\n  nextValue(): number;\n}\n\nexport interface RandNormalDataTypes {\n  float32: Float32Array;\n  int32: Int32Array;\n}\n\nexport interface RandGammaDataTypes {\n  float32: Float32Array;\n  int32: Int32Array;\n}\n\n// https://en.wikipedia.org/wiki/Marsaglia_polar_method\nexport class MPRandGauss implements RandomBase {\n  private mean: number;\n  private stdDev: number;\n  private nextVal: number;\n  private dtype?: keyof RandNormalDataTypes;\n  private truncated?: boolean;\n  private upper?: number;\n  private lower?: number;\n  private random: seedrandom.prng;\n\n  constructor(\n      mean: number, stdDeviation: number, dtype?: keyof RandNormalDataTypes,\n      truncated?: boolean, seed?: number) {\n    this.mean = mean;\n    this.stdDev = stdDeviation;\n    this.dtype = dtype;\n    this.nextVal = NaN;\n    this.truncated = truncated;\n    if (this.truncated) {\n      this.upper = this.mean + this.stdDev * 2;\n      this.lower = this.mean - this.stdDev * 2;\n    }\n    const seedValue = seed ? seed : Math.random();\n    this.random = seedrandom.alea(seedValue.toString());\n  }\n\n  /** Returns next sample from a Gaussian distribution. */\n  public nextValue(): number {\n    if (!isNaN(this.nextVal)) {\n      const value = this.nextVal;\n      this.nextVal = NaN;\n      return value;\n    }\n\n    let resultX: number, resultY: number;\n    let isValid = false;\n    while (!isValid) {\n      let v1: number, v2: number, s: number;\n      do {\n        v1 = 2 * this.random() - 1;\n        v2 = 2 * this.random() - 1;\n        s = v1 * v1 + v2 * v2;\n      } while (s >= 1 || s === 0);\n\n      const mul = Math.sqrt(-2.0 * Math.log(s) / s);\n      resultX = this.mean + this.stdDev * v1 * mul;\n      resultY = this.mean + this.stdDev * v2 * mul;\n\n      if (!this.truncated || this.isValidTruncated(resultX)) {\n        isValid = true;\n      }\n    }\n\n    if (!this.truncated || this.isValidTruncated(resultY)) {\n      this.nextVal = this.convertValue(resultY);\n    }\n    return this.convertValue(resultX);\n  }\n\n  /** Handles proper rounding for non-floating-point numbers. */\n  private convertValue(value: number): number {\n    if (this.dtype == null || this.dtype === 'float32') {\n      return value;\n    }\n    return Math.round(value);\n  }\n\n  /** Returns true if less than 2-standard-deviations from the mean. */\n  private isValidTruncated(value: number): boolean {\n    return value <= this.upper && value >= this.lower;\n  }\n}\n\n// Marsaglia, George, and Wai Wan Tsang. 2000. \"A Simple Method for Generating\n// Gamma Variables.\"\nexport class RandGamma implements RandomGamma {\n  private alpha: number;\n  private beta: number;\n  private d: number;\n  private c: number;\n  private dtype?: keyof RandGammaDataTypes;\n  private randu: seedrandom.prng;\n  private randn: MPRandGauss;\n\n  constructor(\n      alpha: number, beta: number, dtype: keyof RandGammaDataTypes,\n      seed?: number) {\n    this.alpha = alpha;\n    this.beta = 1 / beta;  // convert rate to scale parameter\n    this.dtype = dtype;\n\n    const seedValue = seed ? seed : Math.random();\n    this.randu = seedrandom.alea(seedValue.toString());\n    this.randn = new MPRandGauss(0, 1, dtype, false, this.randu());\n\n    if (alpha < 1) {\n      this.d = alpha + (2 / 3);\n    } else {\n      this.d = alpha - (1 / 3);\n    }\n    this.c = 1 / Math.sqrt(9 * this.d);\n  }\n\n  /** Returns next sample from a gamma distribution. */\n  public nextValue(): number {\n    let x2: number, v0: number, v1: number, x: number, u: number, v: number;\n    while (true) {\n      do {\n        x = this.randn.nextValue();\n        v = 1 + (this.c * x);\n      } while (v <= 0);\n      v *= v * v;\n      x2 = x * x;\n      v0 = 1 - (0.331 * x2 * x2);\n      v1 = (0.5 * x2) + (this.d * (1 - v + Math.log(v)));\n      u = this.randu();\n      if (u < v0 || Math.log(u) < v1) {\n        break;\n      }\n    }\n    v = (1 / this.beta) * this.d * v;\n    if (this.alpha < 1) {\n      v *= Math.pow(this.randu(), 1 / this.alpha);\n    }\n    return this.convertValue(v);\n  }\n  /** Handles proper rounding for non-floating-point numbers. */\n  private convertValue(value: number): number {\n    if (this.dtype === 'float32') {\n      return value;\n    }\n    return Math.round(value);\n  }\n}\n\nexport class UniformRandom implements RandomBase {\n  private min: number;\n  private range: number;\n  private random: seedrandom.prng;\n  private dtype?: keyof RandNormalDataTypes;\n\n  constructor(\n      min = 0, max = 1, dtype?: keyof RandNormalDataTypes,\n      seed?: string|number) {\n    this.min = min;\n    this.range = max - min;\n    this.dtype = dtype;\n    if (seed == null) {\n      seed = Math.random();\n    }\n    if (typeof seed === 'number') {\n      seed = seed.toString();\n    }\n\n    if (!this.canReturnFloat() && this.range <= 1) {\n      throw new Error(\n          `The difference between ${min} - ${max} <= 1 and dtype is not float`);\n    }\n    this.random = seedrandom.alea(seed);\n  }\n\n  /** Handles proper rounding for non floating point numbers. */\n  private canReturnFloat = () =>\n      (this.dtype == null || this.dtype === 'float32');\n\n  private convertValue(value: number): number {\n    if (this.canReturnFloat()) {\n      return value;\n    }\n    return Math.round(value);\n  }\n\n  nextValue() {\n    return this.convertValue(this.min + this.range * this.random());\n  }\n}\n\nexport function jarqueBeraNormalityTest(values: TypedArray|number[]) {\n  // https://en.wikipedia.org/wiki/Jarque%E2%80%93Bera_test\n  const n = values.length;\n  const s = skewness(values);\n  const k = kurtosis(values);\n  const jb = n / 6 * (Math.pow(s, 2) + 0.25 * Math.pow(k - 3, 2));\n  // JB test requires 2-degress of freedom from Chi-Square @ 0.95:\n  // http://www.itl.nist.gov/div898/handbook/eda/section3/eda3674.htm\n  const CHI_SQUARE_2DEG = 5.991;\n  if (jb > CHI_SQUARE_2DEG) {\n    throw new Error(`Invalid p-value for JB: ${jb}`);\n  }\n}\n\nexport function expectArrayInMeanStdRange(\n    actual: TypedArray|number[], expectedMean: number, expectedStdDev: number,\n    epsilon?: number) {\n  if (epsilon == null) {\n    epsilon = testEpsilon();\n  }\n  const actualMean = mean(actual);\n  expectNumbersClose(actualMean, expectedMean, epsilon);\n  expectNumbersClose(\n      standardDeviation(actual, actualMean), expectedStdDev, epsilon);\n}\n\nfunction mean(values: TypedArray|number[]) {\n  let sum = 0;\n  for (let i = 0; i < values.length; i++) {\n    sum += values[i];\n  }\n  return sum / values.length;\n}\n\nfunction standardDeviation(values: TypedArray|number[], mean: number) {\n  let squareDiffSum = 0;\n  for (let i = 0; i < values.length; i++) {\n    const diff = values[i] - mean;\n    squareDiffSum += diff * diff;\n  }\n  return Math.sqrt(squareDiffSum / values.length);\n}\n\nfunction kurtosis(values: TypedArray|number[]) {\n  // https://en.wikipedia.org/wiki/Kurtosis\n  const valuesMean = mean(values);\n  const n = values.length;\n  let sum2 = 0;\n  let sum4 = 0;\n  for (let i = 0; i < n; i++) {\n    const v = values[i] - valuesMean;\n    sum2 += Math.pow(v, 2);\n    sum4 += Math.pow(v, 4);\n  }\n  return (1 / n) * sum4 / Math.pow((1 / n) * sum2, 2);\n}\n\nfunction skewness(values: TypedArray|number[]) {\n  // https://en.wikipedia.org/wiki/Skewness\n  const valuesMean = mean(values);\n  const n = values.length;\n  let sum2 = 0;\n  let sum3 = 0;\n  for (let i = 0; i < n; i++) {\n    const v = values[i] - valuesMean;\n    sum2 += Math.pow(v, 2);\n    sum3 += Math.pow(v, 3);\n  }\n  return (1 / n) * sum3 / Math.pow((1 / (n - 1)) * sum2, 3 / 2);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Range, RangeAttrs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor1D} from '../tensor';\n\n/**\n * Creates a new `tf.Tensor1D` filled with the numbers in the range provided.\n *\n * The tensor is a is half-open interval meaning it includes start, but\n * excludes stop. Decrementing ranges and negative step values are also\n * supported.sv\n *\n *\n * ```js\n * tf.range(0, 9, 2).print();\n * ```\n *\n * @param start An integer start value\n * @param stop An integer stop value\n * @param step An integer increment (will default to 1 or -1)\n * @param dtype The data type of the output tensor. Defaults to 'float32'.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function range(\n    start: number, stop: number, step = 1,\n    dtype: 'float32'|'int32' = 'float32'): Tensor1D {\n  if (step === 0) {\n    throw new Error('Cannot have a step of zero');\n  }\n\n  const attrs: RangeAttrs = {start, stop, step, dtype};\n\n  return ENGINE.runKernel(Range, {} /* inputs */, attrs as {} as NamedAttrMap);\n}\n","\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpExecutor, OpMapper} from '../types';\n\nconst CUSTOM_OPS: {[key: string]: OpMapper} = {};\n\n/**\n * Register an Op for graph model executor. This allow you to register\n * TensorFlow custom op or override existing op.\n *\n * Here is an example of registering a new MatMul Op.\n * ```js\n * const customMatmul = (node) =>\n *    tf.matMul(\n *        node.inputs[0], node.inputs[1],\n *        node.attrs['transpose_a'], node.attrs['transpose_b']);\n *\n * tf.registerOp('MatMul', customMatmul);\n * ```\n * The inputs and attrs of the node object is based on the TensorFlow op\n * registry.\n *\n * @param name The Tensorflow Op name.\n * @param opFunc An op function which is called with the current graph node\n * during execution and needs to return a tensor or a list of tensors. The node\n * has the following attributes:\n *    - attr: A map from attribute name to its value\n *    - inputs: A list of input tensors\n *\n * @doc {heading: 'Models', subheading: 'Op Registry'}\n */\nexport function registerOp(name: string, opFunc: OpExecutor) {\n  const opMapper: OpMapper = {\n    tfOpName: name,\n    category: 'custom',\n    inputs: [],\n    attrs: [],\n    customExecutor: opFunc\n  };\n\n  CUSTOM_OPS[name] = opMapper;\n}\n\n/**\n * Retrieve the OpMapper object for the registered op.\n *\n * @param name The Tensorflow Op name.\n *\n * @doc {heading: 'Models', subheading: 'Op Registry'}\n */\nexport function getRegisteredOp(name: string): OpMapper {\n  return CUSTOM_OPS[name];\n}\n\n/**\n * Deregister the Op for graph model executor.\n *\n * @param name The Tensorflow Op name.\n *\n * @doc {heading: 'Models', subheading: 'Op Registry'}\n */\nexport function deregisterOp(name: string) {\n  delete CUSTOM_OPS[name];\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Greater, GreaterInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {assertAndGetBroadcastShape} from './broadcast_util';\nimport {op} from './operation';\n\n/**\n * Returns the truth value of (a > b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.greater(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction greater_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'greater', 'string_or_numeric');\n  let $b = convertToTensor(b, 'b', 'greater', 'string_or_numeric');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  const inputs: GreaterInputs = {a: $a, b: $b};\n\n  return ENGINE.runKernel(Greater, inputs as {} as NamedTensorMap);\n}\n\nexport const greater = op({greater_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {LogicalAnd, LogicalAndInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {assertAndGetBroadcastShape} from './broadcast_util';\nimport {op} from './operation';\n\n/**\n * Returns the truth value of `a AND b` element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([false, false, true, true], 'bool');\n * const b = tf.tensor1d([false, true, false, true], 'bool');\n *\n * a.logicalAnd(b).print();\n * ```\n *\n * @param a The first input tensor. Must be of dtype bool.\n * @param b The second input tensor. Must be of dtype bool.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction logicalAnd_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  const $a = convertToTensor(a, 'a', 'logicalAnd', 'bool');\n  const $b = convertToTensor(b, 'b', 'logicalAnd', 'bool');\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  const inputs: LogicalAndInputs = {a: $a, b: $b};\n\n  return ENGINE.runKernel(LogicalAnd, inputs as {} as NamedTensorMap);\n}\n\nexport const logicalAnd = op({logicalAnd_});\n","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Mean, MeanAttrs, MeanInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes the mean of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces `x` along the dimensions given in `axis`. Unless `keepDims` is\n * true, the rank of the `tf.Tensor` is reduced by 1 for each entry in `axis`.\n * If `keepDims` is true, the reduced dimensions are retained with length 1.\n * If `axis` has no entries, all dimensions are reduced, and a `tf.Tensor` with\n * a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.mean().print();  // or tf.mean(a)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.mean(axis).print();  // or tf.mean(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction mean_<T extends Tensor>(\n    x: Tensor|TensorLike, axis: number|number[] = null, keepDims = false): T {\n  const $x = convertToTensor(x, 'x', 'mean');\n\n  const inputs: MeanInputs = {x: $x};\n  const attrs: MeanAttrs = {axis, keepDims};\n\n  return ENGINE.runKernel(\n      Mean, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const mean = op({mean_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Real, RealInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {op} from './operation';\n\n/**\n * Returns the real part of a complex (or real) tensor.\n *\n * Given a tensor input, this operation returns a tensor of type float that is\n * the real part of each element in input considered as a complex number.\n *\n * If the input is real, it simply makes a clone.\n *\n * ```js\n * const x = tf.complex([-2.25, 3.25], [4.75, 5.75]);\n * tf.real(x).print();\n * ```\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction real_<T extends Tensor>(input: T|TensorLike): T {\n  const $input = convertToTensor(input, 'input', 'real');\n\n  const inputs: RealInputs = {input: $input};\n  return ENGINE.runKernel(Real, inputs as {} as NamedTensorMap);\n}\n\nexport const real = op({real_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {IFFT, IFFTInputs} from '../../kernel_names';\nimport {Tensor} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {assert} from '../../util';\nimport {op} from '../operation';\n\n/**\n * Inverse fast Fourier transform.\n *\n * Computes the inverse 1-dimensional discrete Fourier transform over the\n * inner-most dimension of input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n * const imag = tf.tensor1d([1, 2, 3]);\n * const x = tf.complex(real, imag);\n *\n * x.ifft().print();  // tf.spectral.ifft(x).print();\n * ```\n * @param input The complex input to compute an ifft over.\n *\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\nfunction ifft_(input: Tensor): Tensor {\n  assert(\n      input.dtype === 'complex64',\n      () => `The dtype for tf.spectral.ifft() must be complex64 ` +\n          `but got ${input.dtype}.`);\n\n  const inputs: IFFTInputs = {input};\n\n  return ENGINE.runKernel(IFFT, inputs as {} as NamedTensorMap);\n}\n\nexport const ifft = op({ifft_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Transpose, TransposeAttrs, TransposeInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\n\n/**\n * Transposes the `tf.Tensor`. Permutes the dimensions according to `perm`.\n *\n * The returned `tf.Tensor`'s dimension `i` will correspond to the input\n * dimension `perm[i]`. If `perm` is not given, it is set to `[n-1...0]`,\n * where `n` is the rank of the input `tf.Tensor`. Hence by default, this\n * operation performs a regular matrix transpose on 2-D input `tf.Tensor`s.\n *\n * ```js\n * const a = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\n *\n * a.transpose().print();  // or tf.transpose(a)\n * ```\n *\n * @param x The tensor to transpose.\n * @param perm The permutation of the dimensions of a.\n *\n * @doc {heading: 'Operations', subheading: 'Matrices'}\n */\nfunction transpose_<T extends Tensor>(x: T|TensorLike, perm?: number[]): T {\n  const $x = convertToTensor(x, 'x', 'transpose');\n\n  if (perm == null) {\n    perm = $x.shape.map((s, i) => i).reverse();\n  }\n  util.assert(\n      $x.rank === perm.length,\n      () => `Error in transpose: rank of input ${$x.rank} ` +\n          `must match length of perm ${perm}.`);\n  perm.forEach(axis => {\n    util.assert(\n        axis >= 0 && axis < $x.rank,\n        () => `All entries in 'perm' must be between 0 and ${$x.rank - 1}` +\n            ` but got ${perm}`);\n  });\n\n  if ($x.rank <= 1) {\n    return $x.clone();\n  }\n\n  const inputs: TransposeInputs = {x: $x};\n  const attrs: TransposeAttrs = {perm};\n\n  return ENGINE.runKernel(\n      Transpose, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const transpose = op({transpose_});\n","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// Note that the identifier globalNameSpace is scoped to this module, but will\n// always resolve to the same global object regardless of how the module is\n// resolved.\n// tslint:disable-next-line:no-any\nlet globalNameSpace: {_tfGlobals: Map<string, any>};\n// tslint:disable-next-line:no-any\nexport function getGlobalNamespace(): {_tfGlobals: Map<string, any>} {\n  if (globalNameSpace == null) {\n    // tslint:disable-next-line:no-any\n    let ns: any;\n    if (typeof (window) !== 'undefined') {\n      ns = window;\n    } else if (typeof (global) !== 'undefined') {\n      ns = global;\n    } else if (typeof (process) !== 'undefined') {\n      ns = process;\n    } else if (typeof (self) !== 'undefined') {\n      ns = self;\n    } else {\n      throw new Error('Could not find a global object');\n    }\n    globalNameSpace = ns;\n  }\n  return globalNameSpace;\n}\n\n// tslint:disable-next-line:no-any\nfunction getGlobalMap(): Map<string, any> {\n  const ns = getGlobalNamespace();\n  if (ns._tfGlobals == null) {\n    ns._tfGlobals = new Map();\n  }\n  return ns._tfGlobals;\n}\n\n/**\n * Returns a globally accessible 'singleton' object.\n *\n * @param key the name of the object\n * @param init a function to initialize to initialize this object\n *             the first time it is fetched.\n */\nexport function getGlobal<T>(key: string, init: () => T): T {\n  const globalMap = getGlobalMap();\n  if (globalMap.has(key)) {\n    return globalMap.get(key);\n  } else {\n    const singleton = init();\n    globalMap.set(key, singleton);\n    return globalMap.get(key);\n  }\n}\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Scalar, Tensor1D, Tensor2D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {add} from './add';\nimport {concat} from './concat';\nimport {matMul} from './mat_mul';\nimport {mul} from './mul';\nimport {op} from './operation';\nimport {sigmoid} from './sigmoid';\nimport {slice} from './slice';\nimport {tanh} from './tanh';\n\n/**\n * Computes the next state and output of a BasicLSTMCell.\n *\n * Returns `[newC, newH]`.\n *\n * Derived from tf.contrib.rnn.BasicLSTMCell.\n *\n * @param forgetBias Forget bias for the cell.\n * @param lstmKernel The weights for the cell.\n * @param lstmBias The bias for the cell.\n * @param data The input to the cell.\n * @param c Previous cell state.\n * @param h Previous cell output.\n *\n * @doc {heading: 'Operations', subheading: 'RNN'}\n */\nfunction basicLSTMCell_(\n    forgetBias: Scalar|TensorLike, lstmKernel: Tensor2D|TensorLike,\n    lstmBias: Tensor1D|TensorLike, data: Tensor2D|TensorLike,\n    c: Tensor2D|TensorLike, h: Tensor2D|TensorLike): [Tensor2D, Tensor2D] {\n  const $forgetBias =\n      convertToTensor(forgetBias, 'forgetBias', 'basicLSTMCell');\n  const $lstmKernel =\n      convertToTensor(lstmKernel, 'lstmKernel', 'basicLSTMCell');\n  const $lstmBias = convertToTensor(lstmBias, 'lstmBias', 'basicLSTMCell');\n  const $data = convertToTensor(data, 'data', 'basicLSTMCell');\n  const $c = convertToTensor(c, 'c', 'basicLSTMCell');\n  const $h = convertToTensor(h, 'h', 'basicLSTMCell');\n\n  const combined = concat([$data, $h], 1);\n  const weighted = matMul(combined, $lstmKernel);\n  const res: Tensor2D = add(weighted, $lstmBias);\n\n  // i = input_gate, j = new_input, f = forget_gate, o = output_gate\n  const batchSize = res.shape[0];\n  const sliceCols = res.shape[1] / 4;\n  const sliceSize: [number, number] = [batchSize, sliceCols];\n  const i = slice(res, [0, 0], sliceSize);\n  const j = slice(res, [0, sliceCols], sliceSize);\n  const f = slice(res, [0, sliceCols * 2], sliceSize);\n  const o = slice(res, [0, sliceCols * 3], sliceSize);\n\n  const newC: Tensor2D =\n      add(mul(sigmoid(i), tanh(j)),\n          mul($c, sigmoid(add($forgetBias, f)) as Tensor2D));\n  const newH: Tensor2D = mul(tanh(newC), sigmoid(o));\n  return [newC, newH];\n}\n\nexport const basicLSTMCell = op({basicLSTMCell_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor1D, Tensor2D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {batchNorm} from './batchnorm';\nimport {op} from './operation';\n\n/**\n * Batch normalization, strictly for 2D. For the more relaxed version, see\n * `tf.batchNorm`.\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n */\nfunction batchNorm2d_(\n    x: Tensor2D|TensorLike, mean: Tensor2D|Tensor1D|TensorLike,\n    variance: Tensor2D|Tensor1D|TensorLike,\n    offset?: Tensor2D|Tensor1D|TensorLike, scale?: Tensor2D|Tensor1D|TensorLike,\n    varianceEpsilon?: number): Tensor2D {\n  const $x = convertToTensor(x, 'x', 'batchNorm');\n  const $mean = convertToTensor(mean, 'mean', 'batchNorm');\n  const $variance = convertToTensor(variance, 'variance', 'batchNorm');\n  let $scale: Tensor2D|Tensor1D;\n  if (scale != null) {\n    $scale = convertToTensor(scale, 'scale', 'batchNorm');\n  }\n  let $offset: Tensor2D|Tensor1D;\n  if (offset != null) {\n    $offset = convertToTensor(offset, 'offset', 'batchNorm');\n  }\n  util.assert(\n      $x.rank === 2,\n      () => `Error in batchNorm2D: x must be rank 2 but got rank ` +\n          `${$x.rank}.`);\n  util.assert(\n      $mean.rank === 2 || $mean.rank === 1,\n      () => `Error in batchNorm2D: mean must be rank 2 or rank 1 but ` +\n          `got rank ${$mean.rank}.`);\n  util.assert(\n      $variance.rank === 2 || $variance.rank === 1,\n      () => `Error in batchNorm2D: variance must be rank 2 or rank 1 ` +\n          `but got rank ${$variance.rank}.`);\n  if ($scale != null) {\n    util.assert(\n        $scale.rank === 2 || $scale.rank === 1,\n        () => `Error in batchNorm2D: scale must be rank 2 or rank 1 ` +\n            `but got rank ${$scale.rank}.`);\n  }\n  if ($offset != null) {\n    util.assert(\n        $offset.rank === 2 || $offset.rank === 1,\n        () => `Error in batchNorm2D: offset must be rank 2 or rank 1 ` +\n            `but got rank ${$offset.rank}.`);\n  }\n\n  return batchNorm($x, $mean, $variance, $offset, $scale, varianceEpsilon);\n}\n\nexport const batchNorm2d = op({batchNorm2d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor1D, Tensor3D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {batchNorm} from './batchnorm';\nimport {op} from './operation';\n\n/**\n * Batch normalization, strictly for 3D. For the more relaxed version, see\n * `tf.batchNorm`.\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n */\nfunction batchNorm3d_(\n    x: Tensor3D|TensorLike, mean: Tensor3D|Tensor1D|TensorLike,\n    variance: Tensor3D|Tensor1D|TensorLike,\n    offset?: Tensor3D|Tensor1D|TensorLike, scale?: Tensor3D|Tensor1D|TensorLike,\n    varianceEpsilon?: number): Tensor3D {\n  const $x = convertToTensor(x, 'x', 'batchNorm');\n  const $mean = convertToTensor(mean, 'mean', 'batchNorm');\n  const $variance = convertToTensor(variance, 'variance', 'batchNorm');\n  let $scale: Tensor3D|Tensor1D;\n  if (scale != null) {\n    $scale = convertToTensor(scale, 'scale', 'batchNorm');\n  }\n  let $offset: Tensor3D|Tensor1D;\n  if (offset != null) {\n    $offset = convertToTensor(offset, 'offset', 'batchNorm');\n  }\n  util.assert(\n      $x.rank === 3,\n      () => `Error in batchNorm3D: x must be rank 3 but got rank ` +\n          `${$x.rank}.`);\n  util.assert(\n      $mean.rank === 3 || $mean.rank === 1,\n      () => `Error in batchNorm3D: mean must be rank 3 or rank 1 but ` +\n          `got rank ${$mean.rank}.`);\n  util.assert(\n      $variance.rank === 3 || $variance.rank === 1,\n      () => `Error in batchNorm3D: variance must be rank 3 or rank 1 ` +\n          `but got rank ${$variance.rank}.`);\n  if ($scale != null) {\n    util.assert(\n        $scale.rank === 3 || $scale.rank === 1,\n        () => `Error in batchNorm3D: scale must be rank 3 or rank 1 ` +\n            `but got rank ${$scale.rank}.`);\n  }\n  if ($offset != null) {\n    util.assert(\n        $offset.rank === 3 || $offset.rank === 1,\n        () => `Error in batchNorm3D: offset must be rank 3 or rank 1 ` +\n            `but got rank ${$offset.rank}.`);\n  }\n\n  return batchNorm($x, $mean, $variance, $offset, $scale, varianceEpsilon);\n}\n\nexport const batchNorm3d = op({batchNorm3d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor1D, Tensor4D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {batchNorm} from './batchnorm';\nimport {op} from './operation';\n\n/**\n * Batch normalization, strictly for 4D. For the more relaxed version, see\n * `tf.batchNorm`.\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n */\nfunction batchNorm4d_(\n    x: Tensor4D|TensorLike, mean: Tensor4D|Tensor1D|TensorLike,\n    variance: Tensor4D|Tensor1D|TensorLike,\n    offset?: Tensor4D|Tensor1D|TensorLike, scale?: Tensor4D|Tensor1D|TensorLike,\n    varianceEpsilon?: number): Tensor4D {\n  const $x = convertToTensor(x, 'x', 'batchNorm');\n  const $mean = convertToTensor(mean, 'mean', 'batchNorm');\n  const $variance = convertToTensor(variance, 'variance', 'batchNorm');\n  let $scale: Tensor4D|Tensor1D;\n  if (scale != null) {\n    $scale = convertToTensor(scale, 'scale', 'batchNorm');\n  }\n  let $offset: Tensor4D|Tensor1D;\n  if (offset != null) {\n    $offset = convertToTensor(offset, 'offset', 'batchNorm');\n  }\n  util.assert(\n      $x.rank === 4,\n      () => `Error in batchNorm4D: x must be rank 4 but got rank ` +\n          `${$x.rank}.`);\n  util.assert(\n      $mean.rank === 4 || $mean.rank === 1,\n      () => `Error in batchNorm4D: mean must be rank 4 or rank 1 but ` +\n          `got rank ${$mean.rank}.`);\n  util.assert(\n      $variance.rank === 4 || $variance.rank === 1,\n      () => `Error in batchNorm4D: variance must be rank 4 or rank 1 ` +\n          `but got rank ${$variance.rank}.`);\n  if ($scale != null) {\n    util.assert(\n        $scale.rank === 4 || $scale.rank === 1,\n        () => `Error in batchNorm4D: scale must be rank 4 or rank 1 ` +\n            `but got rank ${$scale.rank}.`);\n  }\n  if ($offset != null) {\n    util.assert(\n        $offset.rank === 4 || $offset.rank === 1,\n        () => `Error in batchNorm4D: offset must be rank 4 or rank 1 ` +\n            `but got rank ${$offset.rank}.`);\n  }\n  return batchNorm($x, $mean, $variance, $offset, $scale, varianceEpsilon);\n}\n\nexport const batchNorm4d = op({batchNorm4d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor1D} from '../tensor';\nimport {TensorLike} from '../types';\n\nimport {concat} from './concat';\nimport {op} from './operation';\n\n/**\n * Concatenates a list of`tf.Tensor1D`s along an axis. See `concat` for details.\n *\n * For example, if:\n * A: shape(3) = |r1, g1, b1|\n * B: shape(2) = |r2, g2|\n * C = tf.concat1d([A, B]) == |r1, g1, b1, r2, g2|\n *\n * @param tensors A list of`tf.Tensor`s to concatenate.\n * @return The concatenated array.\n */\nfunction concat1d_(tensors: Array<Tensor1D|TensorLike>): Tensor1D {\n  return concat(tensors, 0 /* axis */);\n}\n\nexport const concat1d = op({concat1d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor2D} from '../tensor';\nimport {TensorLike} from '../types';\n\nimport {concat} from './concat';\nimport {op} from './operation';\n\n/**\n * Concatenates a list of`tf.Tensor2D`s along an axis. See `concat` for details.\n *\n * For example, if:\n * A: shape(2, 3) = | r1, g1, b1 |\n *                  | r2, g2, b2 |\n *\n * B: shape(2, 3) = | r3, g3, b3 |\n *                  | r4, g4, b4 |\n *\n * C = tf.concat2d([A, B], axis)\n *\n * if axis = 0:\n * C: shape(4, 3) = | r1, g1, b1 |\n *                  | r2, g2, b2 |\n *                  | r3, g3, b3 |\n *                  | r4, g4, b4 |\n *\n * if axis = 1:\n * C = shape(2, 6) = | r1, g1, b1, r3, g3, b3 |\n *                   | r2, g2, b2, r4, g4, b4 |\n *\n *\n * @param tensors A list of `tf.Tensor`s to concatenate.\n * @param axis The axis to concatenate along.\n * @return The concatenated array.\n */\nfunction concat2d_(\n    tensors: Array<Tensor2D|TensorLike>, axis: number): Tensor2D {\n  return concat(tensors, axis);\n}\n\nexport const concat2d = op({concat2d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor3D} from '../tensor';\nimport {TensorLike} from '../types';\n\nimport {concat} from './concat';\nimport {op} from './operation';\n\n/**\n * Concatenates a list of `tf.Tensor3D`s along an axis.\n * See `concat` for details.\n *\n * For example, if:\n * A: shape(2, 1, 3) = | r1, g1, b1 |\n *                     | r2, g2, b2 |\n *\n * B: shape(2, 1, 3) = | r3, g3, b3 |\n *                     | r4, g4, b4 |\n *\n * C = tf.concat3d([A, B], axis)\n *\n * if axis = 0:\n * C: shape(4, 1, 3) = | r1, g1, b1 |\n *                     | r2, g2, b2 |\n *                     | r3, g3, b3 |\n *                     | r4, g4, b4 |\n *\n * if axis = 1:\n * C: shape(2, 2, 3) = | r1, g1, b1, r3, g3, b3 |\n *                     | r2, g2, b2, r4, g4, b4 |\n *\n * if axis = 2:\n * C = shape(2, 1, 6) = | r1, g1, b1, r3, g3, b3 |\n *                      | r2, g2, b2, r4, g4, b4 |\n *\n * @param tensors A list of`tf.Tensor`s to concatenate.\n * @param axis The axis to concate along.\n * @return The concatenated array.\n */\nfunction concat3d_(\n    tensors: Array<Tensor3D|TensorLike>, axis: number): Tensor3D {\n  return concat(tensors, axis);\n}\n\nexport const concat3d = op({concat3d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor4D} from '../tensor';\nimport {TensorLike} from '../types';\n\nimport {concat} from './concat';\nimport {op} from './operation';\n\n/**\n * Concatenates a list of `tf.Tensor4D`s along an axis.\n * See `concat` for details.\n *\n * @param tensors A list of `tf.Tensor`s to concatenate.\n * @param axis The axis to concate along.\n * @return The concatenated array.\n */\nfunction concat4d_(\n    tensors: Array<Tensor4D|TensorLike>, axis: number): Tensor4D {\n  return concat(tensors, axis);\n}\n\nexport const concat4d = op({concat4d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Conv3DBackpropInputV2, Conv3DBackpropInputV2Attrs, Conv3DBackpropInputV2Inputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor4D, Tensor5D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport * as util from '../util';\n\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Computes the derivative of the input of a 3D convolution.\n *\n * @param xShape The shape of the input: [batch, depth, height, width,\n * in_channels]. If length of 4, batch of 1 is assumed.\n * @param dy The derivative of the output, of rank 5 or rank 4 of shape\n *   `[batch, outDepth, outHeight, outWidth, in_channels]`.\n * If rank 4, batch of 1 is assumed.\n * @param filter The filter, rank 5, of shape\n *     `[filterDepth, filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideDepth, strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm used:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n */\nfunction conv3DBackpropInput_<T extends Tensor4D|Tensor5D>(\n    xShape:\n        [number, number, number, number,\n         number]|[number, number, number, number],\n    dy: T, filter: Tensor5D, strides: [number, number, number]|number,\n    pad: 'valid'|'same'): T {\n  util.assert(\n      xShape.length === dy.rank,\n      () => `Length of inShape ` +\n          `(${xShape.length}) and rank of dy (${dy.rank}) must match`);\n\n  let xShape5D = xShape as [number, number, number, number, number];\n  let dy5D = dy as Tensor5D;\n  let reshapedTo5D = false;\n  if (dy.rank === 4) {\n    reshapedTo5D = true;\n    dy5D = reshape(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2], dy.shape[3]]);\n    xShape5D = [1, xShape[0], xShape[1], xShape[2], xShape[3]];\n  }\n\n  const inDepth = xShape5D[4];\n  const outDepth = dy5D.shape[4];\n  util.assert(\n      xShape5D.length === 5,\n      () =>\n          `Error in conv3dDerInput: inShape must be length 5, but got length ` +\n          `${xShape5D.length}.`);\n  util.assert(\n      dy5D.rank === 5,\n      () => `Error in conv3dDerInput: dy must be rank 5, but got ` +\n          `rank ${dy5D.rank}`);\n  util.assert(\n      filter.rank === 5,\n      () => `Error in conv3dDerInput: filter must be rank 5, but got ` +\n          `rank ${filter.rank}`);\n  util.assert(\n      inDepth === filter.shape[3],\n      () => `Error in conv3dDerInput: depth of input (${inDepth}) must ` +\n          `match input depth for filter ${filter.shape[3]}.`);\n  util.assert(\n      outDepth === filter.shape[4],\n      () => `Error in conv3dDerInput: depth of output (${outDepth}) must ` +\n          `match output depth for filter ${filter.shape[4]}.`);\n\n  const inputs: Conv3DBackpropInputV2Inputs = {dy: dy5D, filter};\n\n  const attrs:\n      Conv3DBackpropInputV2Attrs = {pad, strides, inputShape: xShape5D};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  const res = ENGINE.runKernel(\n                  Conv3DBackpropInputV2, inputs as {} as NamedTensorMap,\n                  attrs as {} as NamedAttrMap) as T;\n\n  if (reshapedTo5D) {\n    return reshape(\n               res, [res.shape[1], res.shape[2], res.shape[3], res.shape[4]]) as\n        T;\n  }\n  return res;\n}\n\nexport const conv3DBackpropInput = op({conv3DBackpropInput_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor4D, Tensor5D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {conv3DBackpropInput} from './conv3d_backprop_input';\nimport {op} from './operation';\n\n/**\n * Computes the transposed 3D convolution of a volume, also known as a\n * deconvolution.\n *\n * @param x The input image, of rank 5 or rank 4, of shape\n *   `[batch, depth, height, width, inDepth]`. If rank 4, batch of 1 is assumed.\n * @param filter The filter, rank 4, of shape\n *     `[depth, filterHeight, filterWidth, outDepth, inDepth]`.\n *     `inDepth` must match `inDepth` in `x`.\n * @param outputShape Output shape, of rank 5 or rank 4:\n *     `[batch, depth, height, width, outDepth]`. If rank 3, batch of 1 is\n *    assumed.\n * @param strides The strides of the original convolution:\n *     `[strideDepth, strideHeight, strideWidth]`.\n * @param pad  The type of padding algorithm used in the non-transpose version\n *    of the op.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction conv3dTranspose_<T extends Tensor4D|Tensor5D>(\n    x: T|TensorLike, filter: Tensor5D|TensorLike,\n    outputShape:\n        [number, number, number, number,\n         number]|[number, number, number, number],\n    strides: [number, number, number]|number, pad: 'valid'|'same'): T {\n  const $x = convertToTensor(x, 'x', 'conv3dTranspose');\n  const $filter = convertToTensor(filter, 'filter', 'conv3dTranspose');\n\n  return conv3DBackpropInput(outputShape, $x, $filter, strides, pad);\n}\n\nexport const conv3dTranspose = op({conv3dTranspose_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Diag, DiagInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\n\nimport {op} from './operation';\n\n/**\n * Returns a diagonal tensor with a given diagonal values.\n *\n * Given a diagonal, this operation returns a tensor with the diagonal and\n * everything else padded with zeros.\n *\n * Assume the input has dimensions `[D1,..., Dk]`, then the output is a tensor\n * of rank 2k with dimensions `[D1,..., Dk, D1,..., Dk]`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n *\n * tf.diag(x).print()\n * ```\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4, 5, 6, 6, 8], [4, 2])\n *\n * tf.diag(x).print()\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction diag_(x: Tensor): Tensor {\n  const $x = convertToTensor(x, 'x', 'diag');\n\n  const inputs: DiagInputs = {x: $x};\n\n  return ENGINE.runKernel(Diag, inputs as {} as NamedTensorMap);\n}\n\nexport const diag = op({diag_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor,} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {matMul} from './mat_mul';\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Computes the dot product of two matrices and/or vectors, `t1` and `t2`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor2d([[1, 2], [3, 4]]);\n * const c = tf.tensor2d([[1, 2, 3], [4, 5, 6]]);\n *\n * a.dot(b).print();  // or tf.dot(a, b)\n * b.dot(a).print();\n * b.dot(c).print();\n * ```\n * @param t1 The first tensor in the dot operation.\n * @param t2 The second tensor in the dot operation.\n *\n * @doc {heading: 'Operations', subheading: 'Matrices'}\n */\nfunction dot_(t1: Tensor|TensorLike, t2: Tensor|TensorLike): Tensor {\n  const $t1 = convertToTensor(t1, 't1', 'dot');\n  const $t2 = convertToTensor(t2, 't2', 'dot');\n\n  util.assert(\n      ($t1.rank === 1 || $t1.rank === 2) && ($t2.rank === 1 || $t2.rank === 2),\n      () => `Error in dot: inputs must all be rank 1 or 2, but got ranks ` +\n          `${$t1.rank} and ${$t2.rank}.`);\n\n  const t1Inner = ($t1.rank === 1 ? $t1.size : $t1.shape[1]);\n  const t2Inner = ($t2.rank === 1 ? $t2.size : $t2.shape[0]);\n\n  util.assert(\n      t1Inner === t2Inner,\n      () => `Error in dot: inner dimensions of inputs must match, but got ` +\n          `${t1Inner} and ${t2Inner}.`);\n\n  if ($t1.rank === 1 && $t2.rank === 1) {\n    const t12D = reshape($t1, [1, -1]);\n    const t22D = reshape($t2, [-1, 1]);\n    const t1t2 = matMul(t12D, t22D);\n    return reshape(t1t2, []);\n  } else if ($t1.rank === 1 && $t2.rank === 2) {\n    const t12D = reshape($t1, [1, -1]);\n    const t22D = reshape($t2, [$t2.shape[0], $t2.shape[1]]);\n    const t1t2 = matMul(t12D, t22D);\n    return reshape(t1t2, [t1t2.size]);\n  } else if ($t1.rank === 2 && $t2.rank === 1) {\n    const t22D = reshape($t2, [-1, 1]);\n    const t1t2 = matMul($t1, t22D);\n    return reshape(t1t2, [t1t2.size]);\n  } else {\n    const t22D = reshape($t2, [$t2.shape[0], $t2.shape[1]]);\n    const t1t2 = matMul($t1, t22D);\n    return t1t2;\n  }\n}\n\nexport const dot = op({dot_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor2D} from '../tensor';\nimport {DataType} from '../types';\n\nimport {buffer} from './buffer';\nimport {expandDims} from './expand_dims';\nimport {op} from './operation';\nimport {reshape} from './reshape';\nimport {tile} from './tile';\n\n/**\n * Create an identity matrix.\n *\n * @param numRows Number of rows.\n * @param numColumns Number of columns. Defaults to `numRows`.\n * @param batchShape If provided, will add the batch shape to the beginning\n *   of the shape of the returned `tf.Tensor` by repeating the identity\n *   matrix.\n * @param dtype Data type.\n * @returns Identity matrix of the specified size and data type, possibly\n *   with batch repetition if `batchShape` is specified.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction eye_(\n    numRows: number, numColumns?: number,\n    batchShape?:\n        [\n          number\n        ]|[number,\n           number]|[number, number, number]|[number, number, number, number],\n    dtype: DataType = 'float32'): Tensor2D {\n  if (numColumns == null) {\n    numColumns = numRows;\n  }\n  const buff = buffer([numRows, numColumns], dtype);\n  const n = numRows <= numColumns ? numRows : numColumns;\n  for (let i = 0; i < n; ++i) {\n    buff.set(1, i, i);\n  }\n  const out: Tensor2D = reshape(buff.toTensor(), [numRows, numColumns]);\n  if (batchShape == null) {\n    return out;\n  } else {\n    if (batchShape.length === 1) {\n      return tile(expandDims(out, 0), [batchShape[0], 1, 1]) as Tensor2D;\n    } else if (batchShape.length === 2) {\n      // tslint:disable-next-line:no-unnecessary-type-assertion\n      return tile(\n                 expandDims(expandDims(out, 0), 0),\n                 [batchShape[0], batchShape[1], 1, 1]) as Tensor2D;\n    } else if (batchShape.length === 3) {\n      // tslint:disable-next-line:no-unnecessary-type-assertion\n      return tile(expandDims(expandDims(expandDims(out, 0), 0), 0), [\n               batchShape[0], batchShape[1], batchShape[2], 1, 1\n             ]) as Tensor2D;\n    } else {\n      throw new Error(\n          `eye() currently supports only 1D and 2D ` +\n          // tslint:disable-next-line:no-any\n          `batchShapes, but received ${(batchShape as any).length}D.`);\n    }\n  }\n}\n\nexport const eye = op({eye_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {IsFinite, IsFiniteInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Returns which elements of x are finite.\n *\n * ```js\n * const x = tf.tensor1d([NaN, Infinity, -Infinity, 0, 1]);\n *\n * x.isFinite().print();  // or tf.isNaN(x)\n * ```\n * @param x The input Tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction isFinite_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'isFinite');\n\n  const inputs: IsFiniteInputs = {x: $x};\n\n  return ENGINE.runKernel(IsFinite, inputs as {} as NamedTensorMap);\n}\nexport const isFinite = op({isFinite_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {IsInf, IsInfInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Returns which elements of x are Infinity or -Infinity.\n *\n * ```js\n * const x = tf.tensor1d([NaN, Infinity, -Infinity, 0, 1]);\n *\n * x.isInf().print();  // or tf.isNaN(x)\n * ```\n * @param x The input Tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction isInf_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'isInf');\n\n  const inputs: IsInfInputs = {x: $x};\n\n  return ENGINE.runKernel(IsInf, inputs as {} as NamedTensorMap);\n}\nexport const isInf = op({isInf_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {customGrad} from '../gradients';\nimport {Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {mul} from './mul';\nimport {neg} from './neg';\nimport {op} from './operation';\nimport {sigmoid} from './sigmoid';\nimport {softplus} from './softplus';\n\n/**\n * Computes log sigmoid of the input `tf.Tensor` element-wise:\n * `logSigmoid(x)`. For numerical stability, we use `-tf.softplus(-x)`.\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.logSigmoid().print();  // or tf.logSigmoid(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction logSigmoid_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'logSigmoid');\n\n  // Use a custom gradient to maintain previous implementation.\n  // There is no LogSigmoid kernel in TF so we can't use engine.runKernel\n  // directly\n  const customOp = customGrad((x: Tensor) => {\n    // TODO(yassogba) we can remove the chained softplus call here only\n    // after backends have modualrized softplus at which point we can call\n    // engine runKernel(..., Sotfplus, ...) directly.\n    const value = neg(softplus(neg(x)));\n\n    const gradFunc = (dy: T) => {\n      const derX = mul(dy, sigmoid(neg(x)));\n      return derX;\n    };\n    return {value, gradFunc};\n  });\n\n  return customOp($x) as T;\n}\nexport const logSigmoid = op({logSigmoid_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {parseAxisParam} from '../util';\n\nimport {add} from './add';\nimport {expandShapeToKeepDim} from './axis_util';\nimport {exp} from './exp';\nimport {log} from './log';\nimport {max} from './max';\nimport {op} from './operation';\nimport {reshape} from './reshape';\nimport {sub} from './sub';\nimport {sum} from './sum';\n\n/**\n * Computes the log(sum(exp(elements across the reduction dimensions)).\n *\n * Reduces the input along the dimensions given in `axis`. Unless `keepDims`\n * is true, the rank of the array is reduced by 1 for each entry in `axis`.\n * If `keepDims` is true, the reduced dimensions are retained with length 1.\n * If `axis` has no entries, all dimensions are reduced, and an array with a\n * single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.logSumExp().print();  // or tf.logSumExp(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.logSumExp(axis).print();  // or tf.logSumExp(a, axis)\n * ```\n * @param x The input tensor.\n * @param axis The dimension(s) to reduce. If null (the default),\n *     reduces all dimensions.\n * @param keepDims If true, retains reduced dimensions with length\n *     of 1. Defaults to false.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction logSumExp_<T extends Tensor>(\n    x: Tensor|TensorLike, axis: number|number[] = null, keepDims = false): T {\n  const $x = convertToTensor(x, 'x', 'logSumExp');\n\n  const axes = parseAxisParam(axis, $x.shape);\n  const xMax = max($x, axes, true /* keepDims */);\n  const a = sub($x, xMax);\n  const b = exp(a);\n  const c = sum(b, axes);\n  const d = log(c);\n  const res = add(reshape(xMax, d.shape), d);\n\n  if (keepDims) {\n    const newShape = expandShapeToKeepDim(res.shape, axes);\n    return reshape(res, newShape) as T;\n  }\n  return res as T;\n}\n\nexport const logSumExp = op({logSumExp_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {assertAndGetBroadcastShape} from './broadcast_util';\nimport {logicalAnd} from './logical_and';\nimport {logicalNot} from './logical_not';\nimport {logicalOr} from './logical_or';\nimport {op} from './operation';\n\n/**\n * Returns the truth value of `a XOR b` element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([false, false, true, true], 'bool');\n * const b = tf.tensor1d([false, true, false, true], 'bool');\n *\n * a.logicalXor(b).print();\n * ```\n *\n * @param a The first input tensor. Must be of dtype bool.\n * @param b The second input tensor. Must be of dtype bool.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction logicalXor_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  const $a = convertToTensor(a, 'a', 'logicalXor', 'bool');\n  const $b = convertToTensor(b, 'b', 'logicalXor', 'bool');\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  // x ^ y = (x | y) & ~(x & y)\n  return logicalAnd(logicalOr(a, b), logicalNot(logicalAnd(a, b)));\n}\n\nexport const logicalXor = op({logicalXor_});\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {matMul} from './mat_mul';\nimport {ones} from './ones';\nimport {reshape} from './reshape';\nimport {Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {sizeFromShape} from '../util_base';\n\n/**\n * Broadcasts parameters for evaluation on an N-D grid.\n *\n * Given N one-dimensional coordinate arrays `*args`, returns a list `outputs`\n * of N-D coordinate arrays for evaluating expressions on an N-D grid.\n *\n * Notes:\n * `meshgrid` supports cartesian ('xy') and matrix ('ij') indexing conventions.\n * When the `indexing` argument is set to 'xy' (the default), the broadcasting\n * instructions for the first two dimensions are swapped.\n * Examples:\n * Calling `const [X, Y] = meshgrid(x, y)` with the tensors\n *\n * ```javascript\n * const x = [1, 2, 3];\n * const y = [4, 5, 6];\n * const [X, Y] = tf.meshgrid(x, y);\n * // X = [[1, 2, 3],\n * //      [1, 2, 3],\n * //      [1, 2, 3]]\n * // Y = [[4, 4, 4],\n * //      [5, 5, 5],\n * //      [6, 6, 6]]\n * ```\n *\n * @param x Tensor with rank geq 1.\n * @param y Tensor with rank geq 1.\n * @param indexing\n *\n * @doc {heading: 'Operations', subheading: 'Slicing and Joining'}\n */\nexport function meshgrid<T extends Tensor>(\n    x?: T|TensorLike, y?: T|TensorLike, {indexing = 'xy'} = {}): T[] {\n  if (indexing !== 'xy' && indexing !== 'ij') {\n    throw new TypeError(\n        `${indexing} is not a valid third argument to meshgrid`);\n  }\n  if (x === undefined) {\n    return [];\n  }\n  let $x = convertToTensor(\n      x, 'x', 'meshgrid', x instanceof Tensor ? x.dtype : 'float32');\n\n  if (y === undefined) {\n    return [$x];\n  }\n  let $y = convertToTensor(\n      y, 'y', 'meshgrid', y instanceof Tensor ? y.dtype : 'float32');\n\n  const w = sizeFromShape($x.shape);\n  const h = sizeFromShape($y.shape);\n\n  if (indexing === 'xy') {\n    $x = reshape($x, [1, -1]) as T;\n    $y = reshape($y, [-1, 1]) as T;\n    return [\n      matMul(ones([h, 1], $x.dtype), $x),\n      matMul($y, ones([1, w], $y.dtype)),\n    ];\n  }\n\n  $x = reshape($x, [-1, 1]) as T;\n  $y = reshape($y, [1, -1]) as T;\n  return [\n    matMul($x, ones([1, h], $x.dtype)),\n    matMul(ones([w, 1], $y.dtype), $y),\n  ];\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {parseAxisParam} from '../util';\n\nimport {expandShapeToKeepDim} from './axis_util';\nimport {cast} from './cast';\nimport {mean} from './mean';\nimport {op} from './operation';\nimport {reshape} from './reshape';\nimport {square} from './square';\nimport {sub} from './sub';\n\n/**\n * Calculates the mean and variance of `x`. The mean and variance are\n * calculated by aggregating the contents of `x` across `axes`. If `x` is\n * 1-D and `axes = [0]` this is just the mean and variance of a vector.\n *\n * @param x The input tensor.\n * @param axis The dimension(s) along with to compute mean and\n *     variance. By default it reduces all dimensions.\n * @param keepDims If true, the moments have the same dimensionality as the\n *     input.\n * @return An object with two keys: `mean` and `variance`.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction moments_(\n    x: Tensor|TensorLike, axis: number|number[] = null,\n    keepDims = false): {mean: Tensor, variance: Tensor} {\n  x = convertToTensor(x, 'x', 'moments');\n  const axes = parseAxisParam(axis, x.shape);\n  const xMean = mean(x, axes, keepDims);\n  let keepDimsShape = xMean.shape;\n  if (!keepDims) {\n    keepDimsShape = expandShapeToKeepDim(xMean.shape, axes);\n  }\n  const devSquared =\n      square(sub(cast(x, 'float32'), reshape(xMean, keepDimsShape)));\n  const variance = mean(devSquared, axes, keepDims);\n  return {mean: xMean, variance};\n}\n\nexport const moments = op({moments_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor2D} from '../tensor';\nimport {convertToTensor, convertToTensorArray} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {op} from './operation';\n\n/**\n * @docalias (data: Tensor2D, c: Tensor2D, h: Tensor2D): [Tensor2D, Tensor2D]\n */\nexport type LSTMCellFunc = {\n  (data: Tensor2D, c: Tensor2D, h: Tensor2D): [Tensor2D, Tensor2D];\n};\n\n/**\n * Computes the next states and outputs of a stack of LSTMCells.\n *\n * Each cell output is used as input to the next cell.\n *\n * Returns `[cellState, cellOutput]`.\n *\n * Derived from tf.contrib.rn.MultiRNNCell.\n *\n * @param lstmCells Array of LSTMCell functions.\n * @param data The input to the cell.\n * @param c Array of previous cell states.\n * @param h Array of previous cell outputs.\n *\n * @doc {heading: 'Operations', subheading: 'RNN'}\n */\nfunction multiRNNCell_(\n    lstmCells: LSTMCellFunc[], data: Tensor2D|TensorLike,\n    c: Array<Tensor2D|TensorLike>,\n    h: Array<Tensor2D|TensorLike>): [Tensor2D[], Tensor2D[]] {\n  const $data = convertToTensor(data, 'data', 'multiRNNCell');\n  const $c = convertToTensorArray(c, 'c', 'multiRNNCell');\n  const $h = convertToTensorArray(h, 'h', 'multiRNNCell');\n\n  let input = $data;\n  const newStates = [];\n  for (let i = 0; i < lstmCells.length; i++) {\n    const output = lstmCells[i](input, $c[i], $h[i]);\n    newStates.push(output[0]);\n    newStates.push(output[1]);\n    input = output[1];\n  }\n  const newC: Tensor2D[] = [];\n  const newH: Tensor2D[] = [];\n  for (let i = 0; i < newStates.length; i += 2) {\n    newC.push(newStates[i]);\n    newH.push(newStates[i + 1]);\n  }\n  return [newC, newH];\n}\nexport const multiRNNCell = op({multiRNNCell_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor1D, Tensor2D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {matMul} from './mat_mul';\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Computes the outer product of two vectors, `v1` and `v2`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([3, 4, 5]);\n *\n * tf.outerProduct(a, b).print();\n * ```\n * @param v1 The first vector in the outer product operation.\n * @param v2 The second vector in the outer product operation.\n *\n * @doc {heading: 'Operations', subheading: 'Matrices'}\n */\nfunction outerProduct_(\n    v1: Tensor1D|TensorLike, v2: Tensor1D|TensorLike): Tensor2D {\n  const $v1 = convertToTensor(v1, 'v1', 'outerProduct');\n  const $v2 = convertToTensor(v2, 'v2', 'outerProduct');\n\n  util.assert(\n      $v1.rank === 1 && $v2.rank === 1,\n      () => `Error in outerProduct: inputs must be rank 1, but got ranks ` +\n          `${$v1.rank} and ${$v2.rank}.`);\n\n  const v12D = reshape($v1, [-1, 1]);\n  const v22D = reshape($v2, [1, -1]);\n  return matMul(v12D, v22D);\n}\n\nexport const outerProduct = op({outerProduct_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor1D} from '../tensor';\nimport {TensorLike} from '../types';\nimport {assert} from '../util';\nimport {op} from './operation';\nimport {pad} from './pad';\n\n/**\n * Pads a `tf.Tensor1D` with a given value and paddings. See `pad` for details.\n */\nfunction pad1d_(\n    x: Tensor1D|TensorLike, paddings: [number, number],\n    constantValue = 0): Tensor1D {\n  assert(\n      paddings.length === 2,\n      () => 'Invalid number of paddings. Must be length of 2.');\n  return pad(x, [paddings], constantValue);\n}\n\nexport const pad1d = op({pad1d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor2D} from '../tensor';\nimport {TensorLike} from '../types';\nimport {assert} from '../util';\nimport {op} from './operation';\nimport {pad} from './pad';\n\n/**\n * Pads a `tf.Tensor2D` with a given value and paddings. See `pad` for details.\n */\nfunction pad2d_(\n    x: Tensor2D|TensorLike, paddings: [[number, number], [number, number]],\n    constantValue = 0): Tensor2D {\n  assert(\n      paddings.length === 2 && paddings[0].length === 2 &&\n          paddings[1].length === 2,\n      () => 'Invalid number of paddings. Must be length of 2 each.');\n  return pad(x, paddings, constantValue);\n}\n\nexport const pad2d = op({pad2d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor3D} from '../tensor';\nimport {TensorLike} from '../types';\nimport {assert} from '../util';\nimport {op} from './operation';\nimport {pad} from './pad';\n\n/**\n * Pads a `tf.Tensor3D` with a given value and paddings. See `pad` for details.\n */\nfunction pad3d_(\n    x: Tensor3D|TensorLike,\n    paddings: [[number, number], [number, number], [number, number]],\n    constantValue = 0): Tensor3D {\n  assert(\n      paddings.length === 3 && paddings[0].length === 2 &&\n          paddings[1].length === 2 && paddings[2].length === 2,\n      () => 'Invalid number of paddings. Must be length of 2 each.');\n  return pad(x, paddings, constantValue);\n}\n\nexport const pad3d = op({pad3d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor4D} from '../tensor';\nimport {TensorLike} from '../types';\nimport {assert} from '../util';\nimport {op} from './operation';\nimport {pad} from './pad';\n\n/**\n * Pads a `tf.Tensor4D` with a given value and paddings. See `pad` for details.\n */\nfunction pad4d_(\n    x: Tensor4D|TensorLike,\n    paddings:\n        [\n          [number, number], [number, number], [number, number], [number, number]\n        ],\n    constantValue = 0): Tensor4D {\n  assert(\n      paddings.length === 4 && paddings[0].length === 2 &&\n          paddings[1].length === 2 && paddings[2].length === 2 &&\n          paddings[3].length === 2,\n      () => 'Invalid number of paddings. Must be length of 2 each.');\n  return pad(x, paddings, constantValue);\n}\n\nexport const pad4d = op({pad4d_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor3D, Tensor4D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {avgPool} from './avg_pool';\nimport {batchToSpaceND} from './batch_to_space_nd';\nimport * as conv_util from './conv_util';\nimport {maxPool} from './max_pool';\nimport {op} from './operation';\nimport {reshape} from './reshape';\nimport {spaceToBatchND} from './space_to_batch_nd';\n\n/**\n * Performs an N-D pooling operation\n *\n * @param input The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param windowShape The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param poolingType The type of pooling, either 'max' or 'avg'.\n * @param pad The type of padding algorithm:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *         https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in dilated pooling. Defaults to `[1, 1]`. If `dilationRate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction pool_<T extends Tensor3D|Tensor4D>(\n    input: T|TensorLike, windowShape: [number, number]|number,\n    poolingType: 'avg'|'max',\n    pad: 'valid'|'same'|number|conv_util.ExplicitPadding,\n    dilations?: [number, number]|number, strides?: [number, number]|number) {\n  if (dilations == null) {\n    dilations = [1, 1];\n  }\n  if (strides == null) {\n    strides = 1;\n  }\n  if (pad === 0) {\n    pad = 'valid';\n  }\n\n  const $x = convertToTensor(input, 'x', 'maxPool');\n  let x4D = $x as Tensor4D;\n  let reshapedTo4D = false;\n\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n  }\n\n  util.assert(\n      conv_util.eitherStridesOrDilationsAreOne(strides, dilations),\n      () => 'Error in pool: Either strides or dilations must be 1. ' +\n          `Got strides ${strides} and dilations '${dilations}'`);\n\n  const convInfo = conv_util.computePool2DInfo(\n      x4D.shape, windowShape, strides, dilations, pad);\n  const dilation: [number, number] =\n      [convInfo.dilationHeight, convInfo.dilationWidth];\n\n  // The following implementation does batchToSpace(pool(spaceToBatch(x)))\n  // whenever dilation > 1 since the TF kernels do not support dilation > 1.\n  // tslint:disable-next-line:max-line-length\n  // https://github.com/tensorflow/tensorflow/blob/50f6bb67dc98c9b74630b6047aae7a4f8a40fd02/tensorflow/python/ops/nn_ops.py#L1037\n\n  let basePadding: number[][];\n  if (pad === 'same') {\n    basePadding = withSpaceToBatchBasePaddings(\n        [convInfo.filterHeight, convInfo.filterWidth], dilation);\n  } else {\n    basePadding = [[0, 0], [0, 0]];\n  }\n\n  const isDilationOne = dilation[0] === 1 && dilation[1] === 1;\n  const [adjustedPadding, adjustedCrops] = requiredSpaceToBatchPaddings(\n      [convInfo.inHeight, convInfo.inWidth], dilation, basePadding);\n  const convertedPad = isDilationOne ? pad : 'valid';\n  const convertedX =\n      isDilationOne ? x4D : spaceToBatchND(x4D, dilation, adjustedPadding);\n\n  const forwardOp = poolingType === 'avg' ?\n      () => avgPool(convertedX, windowShape, strides, convertedPad) :\n      () => maxPool(convertedX, windowShape, strides, convertedPad);\n  const y = forwardOp();\n\n  const res = isDilationOne ? y : batchToSpaceND(y, dilation, adjustedCrops);\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]) as T;\n  }\n\n  return res as T;\n}\n\n// Helper function to compute crops and paddings for pool with dilation > 1.\n// tslint:disable-next-line:max-line-length\n// https://github.com/tensorflow/tensorflow/blob/50f6bb67dc98c9b74630b6047aae7a4f8a40fd02/tensorflow/python/ops/array_ops.py#L2184\nfunction requiredSpaceToBatchPaddings(\n    inputShape: [number, number], blockShape: [number, number],\n    basePadding: number[][]) {\n  const padStart = basePadding.map(b => b[0]);\n  const origPadEnd = basePadding.map(b => b[1]);\n  const fullInputShape = inputShape.concat(padStart, origPadEnd);\n  const padEndExtra = blockShape.map((b, i) => (b - fullInputShape[i] % b) % b);\n  const padEnd = origPadEnd.map((s, i) => s + padEndExtra[i]);\n  const paddings = blockShape.map((_, i) => [padStart[i], padEnd[i]]);\n  const crops = blockShape.map((_, i) => [0, padEndExtra[i]]);\n  return [paddings, crops];\n}\n\n// Helper function to compute base paddings for pool with dilation > 1.\n// tslint:disable-next-line:max-line-length\n// https://github.com/tensorflow/tensorflow/blob/50f6bb67dc98c9b74630b6047aae7a4f8a40fd02/tensorflow/python/ops/nn_ops.py#L524\nfunction withSpaceToBatchBasePaddings(\n    filterShape: [number, number], dilation: [number, number]) {\n  // Spatial dimensions of the filters and the upsampled filters in which we\n  // introduce (rate - 1) zeros between consecutive filter values.\n  const dilatedFilterShape = filterShape.map((s, i) => {\n    return s + (s - 1) * (dilation[i] - 1);\n  });\n  const padExtraShape = dilatedFilterShape.map(s => s - 1);\n\n  // When padding is odd, we pad more at end, following the same\n  // convention as conv2d.\n  const padExtraStart = padExtraShape.map(s => Math.floor(s / 2));\n  const padExtraEnd = padExtraShape.map((s, i) => s - padExtraStart[i]);\n  return padExtraShape.map((_, i) => {\n    return [padExtraStart[i], padExtraEnd[i]];\n  });\n}\n\nexport const pool = op({pool_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tensor} from '../tensor';\nimport {DataType, Rank, ShapeMap} from '../types';\nimport {sizeFromShape} from '../util';\n\nimport {op} from './operation';\n\n/**\n * Creates a `tf.Tensor` with values sampled from a random number generator\n * function defined by the user.\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param randFunction A random number generator function which is called\n * for each element in the output tensor.\n * @param dtype The data type of the output tensor. Defaults to 'float32'.\n *\n * @doc {heading: 'Tensors', subheading: 'Random'}\n */\nfunction rand_<R extends Rank>(\n    shape: ShapeMap[R], randFunction: () => number,\n    dtype?: DataType): Tensor<R> {\n  const size = sizeFromShape(shape);\n  let values = null;\n  if (dtype == null || dtype === 'float32') {\n    values = new Float32Array(size);\n  } else if (dtype === 'int32') {\n    values = new Int32Array(size);\n  } else if (dtype === 'bool') {\n    values = new Uint8Array(size);\n  } else {\n    throw new Error(`Unknown data type ${dtype}`);\n  }\n  for (let i = 0; i < size; i++) {\n    values[i] = randFunction();\n  }\n  return ENGINE.makeTensor(values, shape, dtype) as Tensor<R>;\n}\n\nexport const rand = op({rand_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport {Rank, ShapeMap} from '../types';\n\nimport {buffer} from './buffer';\nimport {op} from './operation';\nimport {RandGamma} from './rand_util';\n\n/**\n * Creates a `tf.Tensor` with values sampled from a gamma distribution.\n *\n * ```js\n * tf.randomGamma([2, 2], 1).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param alpha The shape parameter of the gamma distribution.\n * @param beta The inverse scale parameter of the gamma distribution. Defaults\n *     to 1.\n * @param dtype The data type of the output. Defaults to float32.\n * @param seed The seed for the random number generator.\n *\n * @doc {heading: 'Tensors', subheading: 'Random'}\n */\nfunction randomGamma_<R extends Rank>(\n    shape: ShapeMap[R], alpha: number, beta = 1,\n    dtype: 'float32'|'int32' = 'float32', seed?: number): Tensor<R> {\n  if (beta == null) {\n    beta = 1;\n  }\n  if (dtype == null) {\n    dtype = 'float32';\n  }\n  if (dtype !== 'float32' && dtype !== 'int32') {\n    throw new Error(`Unsupported data type ${dtype}`);\n  }\n  const rgamma = new RandGamma(alpha, beta, dtype, seed);\n  const res = buffer(shape, dtype);\n  for (let i = 0; i < res.values.length; i++) {\n    res.values[i] = rgamma.nextValue();\n  }\n  return res.toTensor();\n}\n\nexport const randomGamma = op({randomGamma_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport {DataType, Rank, ShapeMap} from '../types';\n\nimport {buffer} from './buffer';\nimport {op} from './operation';\nimport {MPRandGauss} from './rand_util';\n\n/**\n * Creates a `tf.Tensor` with values sampled from a normal distribution.\n *\n * ```js\n * tf.randomNormal([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param mean The mean of the normal distribution.\n * @param stdDev The standard deviation of the normal distribution.\n * @param dtype The data type of the output.\n * @param seed The seed for the random number generator.\n *\n * @doc {heading: 'Tensors', subheading: 'Random'}\n */\nfunction randomNormal_<R extends Rank>(\n    shape: ShapeMap[R], mean = 0, stdDev = 1, dtype?: 'float32'|'int32',\n    seed?: number): Tensor<R> {\n  if (dtype != null && (dtype as DataType) === 'bool') {\n    throw new Error(`Unsupported data type ${dtype}`);\n  }\n  const randGauss =\n      new MPRandGauss(mean, stdDev, dtype, false /* truncated */, seed);\n  const res = buffer(shape, dtype);\n  for (let i = 0; i < res.values.length; i++) {\n    res.values[i] = randGauss.nextValue();\n  }\n  return res.toTensor();\n}\n\nexport const randomNormal = op({randomNormal_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor1D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\nimport {op} from './operation';\nimport {reverse} from './reverse';\n\n/**\n * Reverses a `tf.Tensor1D`.\n *\n * @param x The input tensor.\n */\nfunction reverse1d_(x: Tensor1D|TensorLike): Tensor1D {\n  const $x = convertToTensor(x, 'x', 'reverse');\n  util.assert(\n      $x.rank === 1,\n      () => `Error in reverse1D: x must be rank 1 but got rank ${$x.rank}.`);\n  return reverse($x, 0);\n}\n\nexport const reverse1d = op({reverse1d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor2D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\nimport {op} from './operation';\nimport {reverse} from './reverse';\n\n/**\n * Reverses a `tf.Tensor2D` along a specified axis.\n *\n * @param x The input tensor.\n * @param axis The set of dimensions to reverse. Must be in the\n *     range [-rank(x), rank(x)). Defaults to all axes.\n */\nfunction reverse2d_(x: Tensor2D|TensorLike, axis?: number|number[]): Tensor2D {\n  const $x = convertToTensor(x, 'x', 'reverse');\n  util.assert(\n      $x.rank === 2,\n      () => `Error in reverse2D: x must be rank 2 but got rank ${$x.rank}.`);\n  return reverse($x, axis);\n}\n\nexport const reverse2d = op({reverse2d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor3D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\nimport {op} from './operation';\nimport {reverse} from './reverse';\n\n/**\n * Reverses a `tf.Tensor3D` along a specified axis.\n *\n * @param x The input tensor.\n * @param axis The set of dimensions to reverse. Must be in the\n *     range [-rank(x), rank(x)). Defaults to all axes.\n */\nfunction reverse3d_(x: Tensor3D|TensorLike, axis?: number|number[]): Tensor3D {\n  const $x = convertToTensor(x, 'x', 'reverse');\n  util.assert(\n      $x.rank === 3,\n      () => `Error in reverse3D: x must be rank 3 but got rank ${$x.rank}.`);\n  return reverse($x, axis);\n}\n\nexport const reverse3d = op({reverse3d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor4D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\nimport {op} from './operation';\nimport {reverse} from './reverse';\n\n/**\n * Reverses a `tf.Tensor4D` along a specified axis.\n *\n * @param x The input tensor.\n * @param axis The set of dimensions to reverse. Must be in the\n *     range [-rank(x), rank(x)). Defaults to all axes.\n */\nfunction reverse4d_(x: Tensor4D|TensorLike, axis?: number|number[]): Tensor4D {\n  const $x = convertToTensor(x, 'x', 'reverse');\n  util.assert(\n      $x.rank === 4,\n      () => `Error in reverse4D: x must be rank 4 but got rank ${$x.rank}.`);\n  return reverse($x, axis);\n}\n\nexport const reverse4d = op({reverse4d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor3D, Tensor4D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {conv2d} from './conv2d';\nimport {depthwiseConv2d} from './depthwise_conv2d';\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * 2-D convolution with separable filters.\n *\n * Performs a depthwise convolution that acts separately on channels followed\n * by a pointwise convolution that mixes channels. Note that this is\n * separability between dimensions [1, 2] and 3, not spatial separability\n * between dimensions 1 and 2.\n *\n * See\n * [https://www.tensorflow.org/api_docs/python/tf/nn/separable_conv2d](\n *     https://www.tensorflow.org/api_docs/python/tf/nn/separable_conv2d)\n * for more details.\n *\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param depthwiseFilter The depthwise filter tensor, rank 4, of shape\n *     `[filterHeight, filterWidth, inChannels, channelMultiplier]`. This is\n *     the filter used in the first step.\n * @param pointwiseFilter The pointwise filter tensor, rank 4, of shape\n *     `[1, 1, inChannels * channelMultiplier, outChannels]`. This is\n *     the filter used in the second step.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`. If strides is a single number, then `strideHeight ==\n * strideWidth`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `rate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction separableConv2d_<T extends Tensor3D|Tensor4D>(\n    x: T|TensorLike, depthwiseFilter: Tensor4D|TensorLike,\n    pointwiseFilter: Tensor4D|TensorLike, strides: [number, number]|number,\n    pad: 'valid'|'same', dilation: [number, number]|number = [1, 1],\n    dataFormat: 'NHWC'|'NCHW' = 'NHWC'): T {\n  const $x = convertToTensor(x, 'x', 'separableConv2d');\n  const $depthwiseFilter =\n      convertToTensor(depthwiseFilter, 'depthwiseFilter', 'separableConv2d');\n  const $pointwiseFilter =\n      convertToTensor(pointwiseFilter, 'pointwiseFilter', 'separableConv2d');\n\n  let x4D = $x as Tensor4D;\n  let reshapedTo4D = false;\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n  }\n\n  if (dataFormat === 'NCHW') {\n    throw new Error(\n        'separableConv2d currently does not support dataFormat NCHW; only ' +\n        'NHWC is supported');\n  }\n\n  util.assert(\n      x4D.rank === 4,\n      () => `Error in separableConv2d: input must be rank 4, but got ` +\n          `rank ${x4D.rank}.`);\n  util.assert(\n      $depthwiseFilter.rank === 4,\n      () => `Error in separableConv2d: depthwise filter must be rank 4, but ` +\n          `got rank ${$depthwiseFilter.rank}.`);\n  util.assert(\n      $pointwiseFilter.rank === 4,\n      () => `Error in separableConv2d: pointwise filter must be rank 4, but ` +\n          `got rank ${$depthwiseFilter.rank}.`);\n  util.assert(\n      $pointwiseFilter.shape[0] === 1,\n      () =>\n          `Error in separableConv2d: the first dimension of pointwise filter ` +\n          ` must be 1, but got ${$pointwiseFilter.shape[0]}.`);\n  util.assert(\n      $pointwiseFilter.shape[1] === 1,\n      () => `Error in separableConv2d: the second dimension of pointwise ` +\n          `filter must be 1, but got ${$pointwiseFilter.shape[1]}.`);\n\n  const inChannels = $depthwiseFilter.shape[2];\n  const channelMultiplier = $depthwiseFilter.shape[3];\n  util.assert(\n      $pointwiseFilter.shape[2] === inChannels * channelMultiplier,\n      () =>\n          `Error in separableConv2d: the third dimension of pointwise filter ` +\n          `must be ${inChannels * channelMultiplier}, ` +\n          `but got ${$pointwiseFilter.shape[2]}.`);\n\n  const depthwise = depthwiseConv2d(\n      x4D, $depthwiseFilter, strides, pad, dataFormat, dilation);\n  const pointwiseStride = 1;\n  const res =\n      conv2d(depthwise, $pointwiseFilter, pointwiseStride, 'valid', dataFormat);\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]) as T;\n  }\n  return res as T;\n}\n\nexport const separableConv2d = op({separableConv2d_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor1D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\nimport {slice} from './slice';\n\n/**\n * Extracts a 1D slice from 1D array starting at coordinates `begin` and is\n * of length `size`. See `slice` for details.\n */\nfunction slice1d_(\n    x: Tensor1D|TensorLike, begin: number, size: number): Tensor1D {\n  const $x = convertToTensor(x, 'x', 'slice1d');\n  util.assert(\n      $x.rank === 1,\n      () =>\n          `slice1d expects a rank-1 tensor, but got a rank-${$x.rank} tensor`);\n  return slice($x, [begin], [size]);\n}\nexport const slice1d = op({slice1d_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor2D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\nimport {slice} from './slice';\n\n/**\n * Extracts a 2D slice from a 2D array starting at coordinates `begin` and\n * is of size `size`. See `slice` for details.\n */\nfunction slice2d_(\n    x: Tensor2D|TensorLike, begin: [number, number],\n    size: [number, number]): Tensor2D {\n  const $x = convertToTensor(x, 'x', 'slice2d');\n  util.assert(\n      $x.rank === 2,\n      () =>\n          `slice2d expects a rank-2 tensor, but got a rank-${$x.rank} tensor`);\n  return slice($x, begin, size);\n}\nexport const slice2d = op({slice2d_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor3D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\nimport {slice} from './slice';\n\n/**\n * Extracts a 3D slice from a 3D array starting at coordinates `begin` and\n * is of size `size`. See `slice` for details.\n */\nfunction slice3d_(\n    x: Tensor3D|TensorLike, begin: [number, number, number],\n    size: [number, number, number]): Tensor3D {\n  const $x = convertToTensor(x, 'x', 'slice3d');\n  util.assert(\n      $x.rank === 3,\n      () =>\n          `slice3d expects a rank-3 tensor, but got a rank-${$x.rank} tensor`);\n  return slice($x, begin, size);\n}\nexport const slice3d = op({slice3d_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor4D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\nimport {slice} from './slice';\n\n/**\n * Extracts a 4D slice from a 4D array starting at coordinates `begin` and\n * is of size `size`. See `slice` for details.\n */\nfunction slice4d_(\n    x: Tensor4D|TensorLike, begin: [number, number, number, number],\n    size: [number, number, number, number]): Tensor4D {\n  const $x = convertToTensor(x, 'x', 'slice4d');\n  util.assert(\n      $x.rank === 4,\n      () =>\n          `slice4d expects a rank-4 tensor, but got a rank-${$x.rank} tensor`);\n  return slice($x, begin, size);\n}\nexport const slice4d = op({slice4d_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor2D} from '../tensor';\nimport {inferShape} from '../tensor_util_env';\nimport {TensorLike2D} from '../types';\nimport {DataType} from '../types';\nimport {assertNonNull} from '../util';\nimport {makeTensor} from './tensor_ops_util';\n\n/**\n * Creates rank-2 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor2d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor2d([[1, 2], [3, 4]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor2d([1, 2, 3, 4], [2, 2]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. If not provided, it is inferred from\n *     `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function tensor2d(\n    values: TensorLike2D, shape?: [number, number],\n    dtype?: DataType): Tensor2D {\n  assertNonNull(values);\n  if (shape != null && shape.length !== 2) {\n    throw new Error('tensor2d() requires shape to have two numbers');\n  }\n  const inferredShape = inferShape(values, dtype);\n  if (inferredShape.length !== 2 && inferredShape.length !== 1) {\n    throw new Error(\n        'tensor2d() requires values to be number[][] or flat/TypedArray');\n  }\n  if (inferredShape.length === 1 && shape == null) {\n    throw new Error(\n        'tensor2d() requires shape to be provided when `values` ' +\n        'are a flat/TypedArray');\n  }\n  return makeTensor(values, shape, inferredShape, dtype) as Tensor2D;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor4D} from '../tensor';\nimport {inferShape} from '../tensor_util_env';\nimport {TensorLike4D} from '../types';\nimport {DataType} from '../types';\nimport {assertNonNull} from '../util';\nimport {makeTensor} from './tensor_ops_util';\n\n/**\n * Creates rank-4 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor4d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor4d([[[[1], [2]], [[3], [4]]]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor4d([1, 2, 3, 4], [1, 2, 2, 1]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function tensor4d(\n    values: TensorLike4D, shape?: [number, number, number, number],\n    dtype?: DataType): Tensor4D {\n  assertNonNull(values);\n  if (shape != null && shape.length !== 4) {\n    throw new Error('tensor4d() requires shape to have four numbers');\n  }\n  const inferredShape = inferShape(values, dtype);\n  if (inferredShape.length !== 4 && inferredShape.length !== 1) {\n    throw new Error(\n        'tensor4d() requires values to be number[][][][] or flat/TypedArray');\n  }\n  if (inferredShape.length === 1 && shape == null) {\n    throw new Error(\n        'tensor4d() requires shape to be provided when `values` ' +\n        'are a flat array');\n  }\n  return makeTensor(values, shape, inferredShape, dtype) as Tensor4D;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor5D} from '../tensor';\nimport {inferShape} from '../tensor_util_env';\nimport {TensorLike5D} from '../types';\nimport {DataType} from '../types';\nimport {assertNonNull} from '../util';\nimport {makeTensor} from './tensor_ops_util';\n\n/**\n * Creates rank-5 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor5d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor5d([[[[[1],[2]],[[3],[4]]],[[[5],[6]],[[7],[8]]]]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor5d([1, 2, 3, 4, 5, 6, 7, 8], [1, 2, 2, 2, 1]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function tensor5d(\n    values: TensorLike5D, shape?: [number, number, number, number, number],\n    dtype?: DataType): Tensor5D {\n  assertNonNull(values);\n  if (shape != null && shape.length !== 5) {\n    throw new Error('tensor5d() requires shape to have five numbers');\n  }\n  const inferredShape = inferShape(values, dtype);\n  if (inferredShape.length !== 5 && inferredShape.length !== 1) {\n    throw new Error(\n        'tensor5d() requires values to be ' +\n        'number[][][][][] or flat/TypedArray');\n  }\n  if (inferredShape.length === 1 && shape == null) {\n    throw new Error(\n        'tensor5d() requires shape to be provided when `values` ' +\n        'are a flat array');\n  }\n  return makeTensor(values, shape, inferredShape, dtype) as Tensor5D;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor6D} from '../tensor';\nimport {inferShape} from '../tensor_util_env';\nimport {TensorLike6D} from '../types';\nimport {DataType} from '../types';\nimport {assertNonNull} from '../util';\nimport {makeTensor} from './tensor_ops_util';\n\n/**\n * Creates rank-6 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor6d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor6d([[[[[[1],[2]],[[3],[4]]],[[[5],[6]],[[7],[8]]]]]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor6d([1, 2, 3, 4, 5, 6, 7, 8], [1, 1, 2, 2, 2, 1]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function tensor6d(\n    values: TensorLike6D,\n    shape?: [number, number, number, number, number, number],\n    dtype?: DataType): Tensor6D {\n  assertNonNull(values);\n  if (shape != null && shape.length !== 6) {\n    throw new Error('tensor6d() requires shape to have six numbers');\n  }\n  const inferredShape = inferShape(values, dtype);\n  if (inferredShape.length !== 6 && inferredShape.length !== 1) {\n    throw new Error(\n        'tensor6d() requires values to be number[][][][][][] or ' +\n        'flat/TypedArray');\n  }\n  if (inferredShape.length === 1 && shape == null) {\n    throw new Error(\n        'tensor6d() requires shape to be provided when `values` ' +\n        'are a flat array');\n  }\n  shape = shape ||\n      inferredShape as [number, number, number, number, number, number];\n  return makeTensor(values, shape, inferredShape, dtype) as Tensor6D;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {UnsortedSegmentSum, UnsortedSegmentSumAttrs, UnsortedSegmentSumInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor, Tensor1D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {assert, isInt} from '../util';\n\nimport {op} from './operation';\n\n/**\n * Computes the sum along segments of a `tf.Tensor`.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * const segmentIds = tf.tensor1d([1, 2, 0, 1], 'int32');\n * const numSegments = 3;\n *\n * x.unsortedSegmentSum(segmentIds, numSegments).print()\n * //or tf.unsortedSegmentSum(x, segmentIds, numSegments)\n * ```\n * @param x The `tf.Tensor` that will be summed along its segments.\n * @param segmentIds A `tf.Tensor1D` whose rank is equal to the rank of `x`'s\n * dimension along the `axis`.  Maps each element of `x` to a segment.\n * @param numSegments The number of distinct `segmentIds`.\n *\n * @doc {heading: 'Operations', subheading: 'Segment'}\n */\nfunction unsortedSegmentSum_<T extends Tensor>(\n    x: T|TensorLike, segmentIds: Tensor1D|TensorLike, numSegments: number): T {\n  const $x = convertToTensor(x, 'x', 'unsortedSegmentSum');\n  const $segmentIds =\n      convertToTensor(segmentIds, 'segmentIds', 'unsortedSegmentSum', 'int32');\n  assert(isInt(numSegments), () => 'numSegments must be of dtype int');\n\n  const inputs: UnsortedSegmentSumInputs = {x: $x, segmentIds: $segmentIds};\n  const attrs: UnsortedSegmentSumAttrs = {numSegments};\n\n  return ENGINE.runKernel(\n      UnsortedSegmentSum, inputs as {} as NamedTensorMap,\n      attrs as {} as NamedAttrMap);\n}\n\nexport const unsortedSegmentSum = op({unsortedSegmentSum_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tensor, Variable} from '../tensor';\nimport {DataType, Rank} from '../types';\n\n/**\n * Creates a new variable with the provided initial value.\n * ```js\n * const x = tf.variable(tf.tensor([1, 2, 3]));\n * x.assign(tf.tensor([4, 5, 6]));\n *\n * x.print();\n * ```\n *\n * @param initialValue Initial value for the tensor.\n * @param trainable If true, optimizers are allowed to update it.\n * @param name Name of the variable. Defaults to a unique id.\n * @param dtype If set, initialValue will be converted to the given type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function variable<R extends Rank>(\n    initialValue: Tensor<R>, trainable = true, name?: string,\n    dtype?: DataType): Variable<R> {\n  return ENGINE.makeVariable(initialValue, trainable, name, dtype) as\n      Variable<R>;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {gather} from './gather';\nimport {reshape} from './reshape';\nimport {squeeze} from './squeeze';\nimport {whereAsync} from './where_async';\n\n/**\n * Apply boolean mask to tensor.\n *\n * ```js\n * const tensor = tf.tensor2d([1, 2, 3, 4, 5, 6], [3, 2]);\n * const mask = tf.tensor1d([1, 0, 1], 'bool');\n * const result = await tf.booleanMaskAsync(tensor, mask);\n * result.print();\n * ```\n *\n * @param tensor N-D tensor.\n * @param mask K-D boolean tensor, K <= N and K must be known statically.\n * @param axis A 0-D int Tensor representing the axis in tensor to mask from.\n *     By default, axis is 0 which will mask from the first dimension.\n *     Otherwise K + axis <= N.\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nasync function booleanMaskAsync_(\n    tensor: Tensor|TensorLike, mask: Tensor|TensorLike,\n    axis?: number): Promise<Tensor> {\n  const $tensor = convertToTensor(tensor, 'tensor', 'boolMask');\n  const $mask = convertToTensor(mask, 'mask', 'boolMask', 'bool');\n\n  const axisFrom = axis == null ? 0 : axis;\n  const maskDim = $mask.rank;\n  const tensorShape = $tensor.shape;\n\n  util.assert(maskDim > 0, () => 'mask cannot be scalar');\n  util.assertShapesMatch(\n      tensorShape.slice(axisFrom, axisFrom + maskDim), $mask.shape,\n      `mask's shape must match the first K dimensions of tensor's shape,`);\n\n  let leadingSize = 1;\n  for (let i = axisFrom; i < axisFrom + maskDim; i++) {\n    leadingSize *= tensorShape[i];\n  }\n  const targetTensorShape =\n      tensorShape.slice(0, axisFrom)\n          .concat([leadingSize], tensorShape.slice(axisFrom + maskDim));\n  const reshapedTensor = reshape($tensor, targetTensorShape);\n  const reshapedMask = reshape($mask, [-1]);\n  const positivePositions = await whereAsync(reshapedMask);\n  const indices = squeeze(positivePositions, [1]);\n\n  const res = gather(reshapedTensor, indices, axisFrom);\n\n  // Ensure no memory leak.\n  if (tensor !== $tensor) {\n    $tensor.dispose();\n  }\n  if (mask !== $mask) {\n    $mask.dispose();\n  }\n  indices.dispose();\n  reshapedTensor.dispose();\n  reshapedMask.dispose();\n  positivePositions.dispose();\n\n  return res;\n}\n\nexport const booleanMaskAsync = booleanMaskAsync_;\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {parseAxisParam} from '../util';\n\nimport {abs} from './abs';\nimport * as axis_util from './axis_util';\nimport {max} from './max';\nimport {min} from './min';\nimport {op} from './operation';\nimport {pow} from './pow';\nimport {reshape} from './reshape';\nimport {scalar} from './scalar';\nimport {sqrt} from './sqrt';\nimport {square} from './square';\nimport {sum} from './sum';\n\n/**\n * Computes the norm of scalar, vectors, and matrices.\n * This function can compute several different vector norms (the 1-norm, the\n * Euclidean or 2-norm, the inf-norm, and in general the p-norm for p > 0)\n * and matrix norms (Frobenius, 1-norm, and inf-norm).\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n *\n * x.norm().print();  // or tf.norm(x)\n * ```\n *\n * @param x The input array.\n * @param ord Optional. Order of the norm. Supported norm types are\n * following:\n *\n *  | ord        | norm for matrices         | norm for vectors\n *  |------------|---------------------------|---------------------\n *  |'euclidean' |Frobenius norm             |2-norm\n *  |'fro'       |Frobenius norm\t           |\n *  |Infinity    |max(sum(abs(x), axis=1))   |max(abs(x))\n *  |-Infinity   |min(sum(abs(x), axis=1))   |min(abs(x))\n *  |1           |max(sum(abs(x), axis=0))   |sum(abs(x))\n *  |2           |                           |sum(abs(x)^2)^1/2*\n *\n * @param axis Optional. If axis is null (the default), the input is\n * considered a vector and a single vector norm is computed over the entire\n * set of values in the Tensor, i.e. norm(x, ord) is equivalent\n * to norm(x.reshape([-1]), ord). If axis is a integer, the input\n * is considered a batch of vectors, and axis determines the axis in x\n * over which to compute vector norms. If axis is a 2-tuple of integer it is\n * considered a batch of matrices and axis determines the axes in NDArray\n * over which to compute a matrix norm.\n * @param keepDims Optional. If true, the norm have the same dimensionality\n * as the input.\n *\n * @doc {heading: 'Operations', subheading: 'Matrices'}\n */\nfunction norm_(\n    x: Tensor|TensorLike, ord: number|'euclidean'|'fro' = 'euclidean',\n    axis: number|number[] = null, keepDims = false): Tensor {\n  x = convertToTensor(x, 'x', 'norm');\n\n  const norm = normImpl(x, ord, axis);\n  let keepDimsShape = norm.shape;\n  if (keepDims) {\n    const axes = parseAxisParam(axis, x.shape);\n    keepDimsShape = axis_util.expandShapeToKeepDim(norm.shape, axes);\n  }\n  return reshape(norm, keepDimsShape);\n}\n\nfunction normImpl(\n    x: Tensor, p: number|string, axis: number|number[] = null): Tensor {\n  if (x.rank === 0) {\n    return abs(x);\n  }\n\n  // consider vector when no axis is specified\n  if (x.rank !== 1 && axis === null) {\n    return normImpl(reshape(x, [-1]), p, axis);\n  }\n\n  // vector\n  if (x.rank === 1 || typeof axis === 'number' ||\n      Array.isArray(axis) && axis.length === 1) {\n    if (p === 1) {\n      return sum(abs(x), axis);\n    }\n    if (p === Infinity) {\n      return max(abs(x), axis);\n    }\n    if (p === -Infinity) {\n      return min(abs(x), axis);\n    }\n    if (p === 'euclidean' || p === 2) {\n      // norm(x, 2) = sum(abs(xi) ^ 2) ^ 1/2\n      return sqrt(sum(pow(abs(x), scalar(2, 'int32')), axis));\n    }\n\n    throw new Error(`Error in norm: invalid ord value: ${p}`);\n  }\n\n  // matrix (assumption axis[0] < axis[1])\n  if (Array.isArray(axis) && axis.length === 2) {\n    if (p === 1) {\n      return max(sum(abs(x), axis[0]), axis[1] - 1);\n    }\n    if (p === Infinity) {\n      return max(sum(abs(x), axis[1]), axis[0]);\n    }\n    if (p === -Infinity) {\n      return min(sum(abs(x), axis[1]), axis[0]);\n    }\n    if (p === 'fro' || p === 'euclidean') {\n      // norm(x) = sqrt(sum(pow(x, 2)))\n      return sqrt(sum(square(x), axis));\n    }\n\n    throw new Error(`Error in norm: invalid ord value: ${p}`);\n  }\n\n  throw new Error(`Error in norm: invalid axis: ${axis}`);\n}\n\nexport const norm = op({norm_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Scalar, Tensor} from '../tensor';\nimport {assertTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {add} from './add';\nimport {div} from './div';\nimport {mul} from './mul';\nimport {op} from './operation';\nimport {pow} from './pow';\nimport {scalar} from './scalar';\nimport {sub} from './sub';\n\n/**\n * Compute the moving average of a variable.\n *\n * Without zeroDebias, the moving average operation is defined by:\n *   `v += delta`\n * where\n *   `delta = (1 - decay) * (x - v)`\n *\n * With zeroDebias (default), the `delta` term is scaled to debias the\n * effect of the (assumed) zero-initialization of `v`.\n *   `delta /= (1 - decay ^ step)`\n *\n * For more details on the zero-debiasing algorithm, see:\n *   https://arxiv.org/abs/1412.6980\n *\n * Note that this function is completely stateless and does not keep track of\n * step count. The step count needs to be maintained by the caller and passed\n * in as `step`.\n *\n * @param v The current moving average value.\n * @param x New input value, must have the same shape and dtype as `v`.\n * @param decay The decay factor. Typical values are 0.95 and 0.99.\n * @param step Step count.\n * @param zeroDebias: Whether zeroDebias is to be performed (default: `true`).\n * @returns The new moving average value.\n *\n * @doc {heading: 'Operations', subheading: 'Moving Average'}\n */\nfunction movingAverage_<T extends Tensor>(\n    v: T|TensorLike, x: T|TensorLike, decay: number|Scalar,\n    step?: number|Scalar, zeroDebias = true): T {\n  const $v = convertToTensor(v, 'v', 'movingAverage');\n  const $x = convertToTensor(x, 'x', 'movingAverage');\n  const $decay = convertToTensor(decay, 'decay', 'movingAverage');\n\n  assertTypesMatch($v, $x);\n  util.assert(\n      util.arraysEqual($v.shape, $x.shape), () => 'Shape mismatch in v and x');\n\n  const one = scalar(1);\n  const oneMinusDecay = sub(one, $decay);\n\n  let update = mul(sub($x, $v), oneMinusDecay);\n  if (zeroDebias) {\n    util.assert(\n        step != null, () => 'When using zeroDebias: true, step is required.');\n    const $step = convertToTensor(step, 'step', 'movingAverage');\n    update = div(update, sub(one, pow($decay, $step)));\n  }\n  return add($v, update);\n}\n\nexport const movingAverage = op({movingAverage_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {add} from './add';\nimport {div} from './div';\nimport {getNoiseShape} from './dropout_util';\nimport {floor} from './floor';\nimport {mul} from './mul';\nimport {op} from './operation';\nimport {randomUniform} from './random_uniform';\n\n/**\n * Computes dropout.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 2, 1]);\n * const rate = 0.75;\n * const output = tf.dropout(x, rate);\n * output.print();\n * ```\n *\n * @param x A floating point Tensor or TensorLike.\n * @param rate A float in the range [0, 1). The probability that each element\n *   of x is discarded.\n * @param noiseShape An array of numbers of type int32, representing the\n * shape for randomly generated keep/drop flags. If the noiseShape has null\n * value, it will be automatically replaced with the x's relative dimension\n * size. Optional.\n * @param seed Used to create random seeds. Optional.\n * @returns A Tensor of the same shape of x.\n *\n * @doc {heading: 'Operations', subheading: 'Dropout'}\n */\nfunction dropout_(\n    x: Tensor|TensorLike, rate: number, noiseShape?: number[],\n    seed?: number|string): Tensor {\n  const $x = convertToTensor(x, 'x', 'dropout');\n\n  util.assert(\n      $x.dtype === 'float32',\n      () => `x has to be a floating point tensor since it's going to be ` +\n          `scaled, but got a ${$x.dtype} tensor instead.`);\n  util.assert(\n      rate >= 0 && rate < 1,\n      () => `rate must be a float in the range [0, 1), but got ${rate}.`);\n\n  if (rate === 0) {\n    return x instanceof Tensor ? $x.clone() : $x;\n  }\n\n  const $noiseShape = getNoiseShape($x, noiseShape);\n  const keepProb = 1 - rate;\n  const multiplier = div(\n      floor(add(randomUniform($noiseShape, 0, 1, 'float32', seed), keepProb)),\n      keepProb);\n\n  return mul($x, multiplier);\n}\n\nexport const dropout = op({dropout_});\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport * as util from '../util';\n\n/**\n * Normalize noise shape based on provided tensor and noise shape.\n *\n * @param x Tensor.\n * @param noiseShape The shape for the randomly generated keep/drop flags, as\n *   an array of numbers. Optional.\n * @returns Normalized noise shape.\n */\nexport function getNoiseShape(x: Tensor, noiseShape?: number[]): number[] {\n  if (noiseShape == null) {\n    return x.shape.slice();\n  }\n  if (util.arraysEqual(x.shape, noiseShape)) {\n    return noiseShape;\n  }\n  if (x.shape.length === noiseShape.length) {\n    const newDimension: number[] = [];\n    for (let i = 0; i < x.shape.length; i++) {\n      if (noiseShape[i] == null && x.shape[i] != null) {\n        newDimension.push(x.shape[i]);\n      } else {\n        newDimension.push(noiseShape[i]);\n      }\n    }\n    return newDimension;\n  }\n\n  return noiseShape;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor1D} from '../tensor';\nimport {tensor1d} from './tensor1d';\n\nexport function enclosingPowerOfTwo(value: number) {\n  // Return 2**N for integer N such that 2**N >= value.\n  return Math.floor(Math.pow(2, Math.ceil(Math.log(value) / Math.log(2.0))));\n}\n\nexport function cosineWindow(\n    windowLength: number, a: number, b: number): Tensor1D {\n  const even = 1 - windowLength % 2;\n  const newValues = new Float32Array(windowLength);\n  for (let i = 0; i < windowLength; ++i) {\n    const cosArg = (2.0 * Math.PI * i) / (windowLength + even - 1);\n    newValues[i] = a - b * Math.cos(cosArg);\n  }\n  return tensor1d(newValues, 'float32');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {assert, assertShapesMatch, getTypedArrayFromDType} from '../util';\nimport {tensor} from './tensor';\n\n/**\n * Returns whether the targets are in the top K predictions.\n *\n * ```js\n * const predictions = tf.tensor2d([[20, 10, 40, 30], [30, 50, -20, 10]]);\n * const targets = tf.tensor1d([2, 0]);\n * const precision = await tf.inTopKAsync(predictions, targets);\n * precision.print();\n * ```\n * @param predictions 2-D or higher `tf.Tensor` with last dimension being\n *     at least `k`.\n * @param targets 1-D or higher `tf.Tensor`.\n * @param k Optional Number of top elements to look at for computing precision,\n *     default to 1.\n *\n * @doc {heading: 'Operations', subheading: 'Evaluation'}\n */\nasync function inTopKAsync_<T extends Tensor, U extends Tensor>(\n    predictions: T|TensorLike, targets: U|TensorLike, k = 1): Promise<U> {\n  const $predictions = convertToTensor(predictions, 'predictions', 'inTopK');\n  const $targets = convertToTensor(targets, 'targets', 'inTopK');\n\n  assert(\n      $predictions.rank > 1,\n      () => 'inTopK() expects the predictions to be of rank 2 or higher, ' +\n          `but got ${$predictions.rank}`);\n  assert(\n      $predictions.rank - 1 === $targets.rank,\n      () => `predictions rank should be 1 larger than ` +\n          `targets rank, but got predictions rank ` +\n          `${$predictions.rank} and targets rank ${$targets.rank}`);\n  assertShapesMatch(\n      $predictions.shape.slice(0, $predictions.shape.length - 1),\n      $targets.shape,\n      `predictions's shape should be align with the targets' shape, ` +\n          'except the last dimension.');\n  const lastDim = $predictions.shape[$predictions.shape.length - 1];\n  assert(\n      k > 0 && k <= lastDim,\n      () => `'k' passed to inTopK() must be > 0 && <= the predictions last ` +\n          `dimension (${lastDim}), but got ${k}`);\n\n  const predictionsVals = await $predictions.data();\n  const targetsVals = await $targets.data();\n\n  // Reshape predictionsVals into a 2d tensor [batch, lastDim]\n  // and look up topK along lastDim.\n  const [batch, size] = [predictionsVals.length / lastDim, lastDim];\n  const precision = getTypedArrayFromDType('bool', batch);\n\n  for (let b = 0; b < batch; b++) {\n    const offset = b * size;\n    const vals = predictionsVals.subarray(offset, offset + size);\n    const valAndInd: Array<{value: number, index: number}> = [];\n    for (let i = 0; i < vals.length; i++) {\n      valAndInd.push({value: vals[i], index: i});\n    }\n    valAndInd.sort((a, b) => b.value - a.value);\n\n    precision[b] = 0;\n    for (let i = 0; i < k; i++) {\n      if (valAndInd[i].index === targetsVals[b]) {\n        precision[b] = 1;\n        break;\n      }\n    }\n  }\n\n  if (predictions !== $predictions) {\n    $predictions.dispose();\n  }\n  if (targets !== $targets) {\n    $targets.dispose();\n  }\n\n  // Output precision has the same shape as targets.\n  return tensor(precision, $targets.shape, 'bool') as U;\n}\n\nexport const inTopKAsync = inTopKAsync_;\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Conv2DBackpropFilter, Conv2DBackpropFilterAttrs, Conv2DBackpropFilterInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor3D, Tensor4D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport * as util from '../util';\n\nimport * as conv_util from './conv_util';\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Computes the derivative of the filter of a 2D convolution.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     [batch, height, width, inChannels]. If rank 3, batch of 1 is assumed.\n * @param dy The dy image, of rank 4 or rank 3, of shape\n *     [batch, height, width, outDepth]. If rank 3, batch of 1 is assumed.\n * @param filterShape The shape of the filter, length 4,\n *     [filterHeight, filterWidth, inDepth, outDepth].\n * @param strides The strides of the convolution: [strideHeight,\n * strideWidth].\n * @param pad A string from: 'same', 'valid'. The type of padding algorithm\n *     used in the forward prop of the op.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels].\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\nfunction conv2DBackpropFilter_<T extends Tensor3D|Tensor4D>(\n    x: T, dy: T, filterShape: [number, number, number, number],\n    strides: [number, number]|number,\n    pad: 'valid'|'same'|number|conv_util.ExplicitPadding,\n    dataFormat: 'NHWC'|'NCHW' = 'NHWC',\n    dimRoundingMode?: 'floor'|'round'|'ceil'): Tensor4D {\n  let x4D = x as Tensor4D;\n  if (x.rank === 3) {\n    x4D = reshape(x, [1, x.shape[0], x.shape[1], x.shape[2]]);\n  }\n  let dy4D = dy as Tensor4D;\n  if (dy4D.rank === 3) {\n    dy4D = reshape(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2]]);\n  }\n  util.assert(\n      x4D.rank === 4,\n      () => `Error in conv2dDerFilter: input must be rank 4, but got shape ` +\n          `${x4D.shape}.`);\n  util.assert(\n      dy4D.rank === 4,\n      () => `Error in conv2dDerFilter: dy must be rank 4, but got shape ` +\n          `${dy4D.shape}.`);\n  util.assert(\n      filterShape.length === 4,\n      () => `Error in conv2dDerFilter: filterShape must be length 4, but got ` +\n          `${filterShape}.`);\n  const inDepth = dataFormat === 'NHWC' ? x4D.shape[3] : x4D.shape[1];\n  const outDepth = dataFormat === 'NHWC' ? dy4D.shape[3] : dy4D.shape[1];\n  util.assert(\n      inDepth === filterShape[2],\n      () => `Error in conv2dDerFilter: depth of input ${inDepth}) must ` +\n          `match input depth in filter (${filterShape[2]}.`);\n  util.assert(\n      outDepth === filterShape[3],\n      () => `Error in conv2dDerFilter: depth of dy (${outDepth}) must ` +\n          `match output depth for filter (${filterShape[3]}).`);\n  if (dimRoundingMode != null) {\n    util.assert(\n        util.isInt(pad as number),\n        () => `Error in conv2dDerFilter: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n  }\n\n  const inputs: Conv2DBackpropFilterInputs = {x: x4D, dy: dy4D};\n  const attrs: Conv2DBackpropFilterAttrs =\n      {strides, pad, dataFormat, dimRoundingMode, filterShape};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  return ENGINE.runKernel(\n             Conv2DBackpropFilter, inputs as {} as NamedTensorMap,\n             attrs as {} as NamedAttrMap) as Tensor4D;\n}\n\nexport const conv2DBackpropFilter = op({conv2DBackpropFilter_});\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {customGrad} from '../../gradients';\nimport {FusedConv2D, FusedConv2DAttrs, FusedConv2DInputs} from '../../kernel_names';\nimport {NamedAttrMap} from '../../kernel_registry';\nimport {Tensor, Tensor3D, Tensor4D} from '../../tensor';\nimport {GradSaveFunc, NamedTensorMap} from '../../tensor_types';\nimport {makeTypesMatch} from '../../tensor_util';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport * as util from '../../util';\nimport {add} from '../add';\nimport * as broadcast_util from '../broadcast_util';\nimport {conv2d as unfusedConv2d} from '../conv2d';\nimport {conv2DBackpropFilter} from '../conv2d_backprop_filter';\nimport {conv2DBackpropInput} from '../conv2d_backprop_input';\nimport * as conv_util from '../conv_util';\nimport {Activation} from '../fused_types';\nimport {applyActivation, getFusedBiasGradient, getFusedDyActivation, shouldFuse} from '../fused_util';\nimport {op} from '../operation';\nimport {reshape} from '../reshape';\n\n/**\n * Computes a 2D convolution over the input x, optionally fused with adding a\n * bias and applying an activation.\n *\n * ```js\n * const inputDepth = 2;\n * const inShape = [2, 2, 2, inputDepth];\n * const outputDepth = 2;\n * const fSize = 1;\n * const pad = 0;\n * const strides = 1;\n *\n * const x = tf.tensor4d( [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n * 16], inShape);\n * const w = tf.tensor4d([-1, 1, -2, 0.5], [fSize, fSize, inputDepth,\n * outputDepth]);\n *\n * tf.fused.conv2d({ x, filter: w, strides, pad, dataFormat: 'NHWC',\n * dilations: [1, 1], bias: tf.scalar(5), activation: 'relu' }).print();\n * ```\n *\n * @param obj An object with the following properties:\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid` output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dataFormat An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `dilations` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n * @param bias Tensor to be added to the result.\n * @param activation Name of activation kernel (defaults to `linear`) to be\n *     applied\n *      after biasAdd.\n * @param preluActivationWeights Tensor of prelu weights to be applied as part\n *     of a `prelu` activation, typically the same shape as `x`.\n * @param leakyreluAlpha Optional. Alpha to be applied as part of a `leakyrelu`\n *     activation.\n */\nfunction fusedConv2d_<T extends Tensor3D|Tensor4D>({\n  x,\n  filter,\n  strides,\n  pad,\n  dataFormat = 'NHWC',\n  dilations = [1, 1],\n  dimRoundingMode,\n  bias,\n  activation = 'linear',\n  preluActivationWeights,\n  leakyreluAlpha\n}: {\n  x: T|TensorLike,\n  filter: Tensor4D|TensorLike,\n  strides: [number, number]|number,\n  pad: 'valid'|'same'|number|conv_util.ExplicitPadding,\n  dataFormat?: 'NHWC'|'NCHW',\n  dilations?: [number, number]|number,\n  dimRoundingMode?: 'floor'|'round'|'ceil',\n  bias?: Tensor|TensorLike,\n  activation?: Activation,\n  preluActivationWeights?: Tensor,\n  leakyreluAlpha?: number\n}): T {\n  activation = activation || 'linear';\n\n  if (shouldFuse(ENGINE.state.gradientDepth, activation) === false) {\n    let result = unfusedConv2d(\n        x, filter, strides, pad, dataFormat, dilations, dimRoundingMode);\n    if (bias != null) {\n      result = add(result, bias);\n    }\n\n    return applyActivation(\n               result, activation, preluActivationWeights, leakyreluAlpha) as T;\n  }\n\n  const $x = convertToTensor(x, 'x', 'conv2d');\n  const $filter = convertToTensor(filter, 'filter', 'conv2d');\n\n  let x4D = $x as Tensor4D;\n  let reshapedTo4D = false;\n\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n  }\n  util.assert(\n      x4D.rank === 4,\n      () => `Error in fused conv2d: input must be rank 4, but got rank ` +\n          `${x4D.rank}.`);\n  util.assert(\n      $filter.rank === 4,\n      () => `Error in fused conv2d: filter must be rank 4, but got rank ` +\n          `${$filter.rank}.`);\n  if (dimRoundingMode != null) {\n    util.assert(\n        util.isInt(pad as number),\n        () => `Error in fused conv2d: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n  }\n\n  util.assert(\n      x4D.shape[3] === $filter.shape[2],\n      () => `Error in conv2d: depth of input (${x4D.shape[3]}) must match ` +\n          `input depth for filter ${$filter.shape[2]}.`);\n  util.assert(\n      conv_util.eitherStridesOrDilationsAreOne(strides, dilations),\n      () => 'Error in conv2D: Either strides or dilations must be 1. ' +\n          `Got strides ${strides} and dilations '${dilations}'`);\n  util.assert(\n      dataFormat === 'NHWC',\n      () => `Error in conv2d: got dataFormat of ${\n          dataFormat} but only NHWC is currently supported.`);\n\n  const convInfo = conv_util.computeConv2DInfo(\n      x4D.shape, $filter.shape, strides, dilations, pad, dimRoundingMode);\n\n  let $bias: Tensor;\n  if (bias != null) {\n    $bias = convertToTensor(bias, 'bias', 'fused conv2d');\n    [$bias] = makeTypesMatch($bias, $x);\n\n    broadcast_util.assertAndGetBroadcastShape(convInfo.outShape, $bias.shape);\n  }\n\n  let $preluActivationWeights: Tensor;\n  if (preluActivationWeights != null) {\n    $preluActivationWeights = convertToTensor(\n        preluActivationWeights, 'prelu weights', 'fused conv2d');\n  }\n\n  const grad = (dy: Tensor4D, saved: Tensor[]) => {\n    const [$filter, x4D, y, $bias] =\n        saved as [Tensor4D, Tensor4D, Tensor4D, Tensor];\n\n    const dyActivation = getFusedDyActivation(dy, y, activation) as Tensor4D;\n\n    util.assert(\n        conv_util.tupleValuesAreOne(dilations),\n        () => 'Error in gradient of fused conv2D: ' +\n            `dilation rates greater than 1 ` +\n            `are not yet supported in gradients. Got dilations '${dilations}'`);\n\n    const xDer =\n        conv2DBackpropInput(x4D.shape, dyActivation, $filter, strides, pad);\n    const filterDer =\n        conv2DBackpropFilter(x4D, dyActivation, $filter.shape, strides, pad);\n    const der: Tensor[] = [xDer, filterDer];\n\n    if ($bias != null) {\n      const biasDer = getFusedBiasGradient($bias, dyActivation);\n      der.push(biasDer);\n    }\n    return der;\n  };\n\n  const inputs: FusedConv2DInputs = {\n    x: x4D,\n    filter: $filter,\n    bias: $bias,\n    preluActivationWeights: $preluActivationWeights\n  };\n\n  const attrs: FusedConv2DAttrs = {\n    strides,\n    pad,\n    dataFormat,\n    dilations,\n    dimRoundingMode,\n    activation,\n    leakyreluAlpha\n  };\n\n  // Depending on the the params passed in we will have different number of\n  // inputs and thus a a different number of elements in the gradient.\n  if (bias == null) {\n    const customOp =\n        customGrad((x4D: Tensor4D, filter: Tensor4D, save: GradSaveFunc) => {\n          let res: Tensor4D|Tensor3D =\n              // tslint:disable-next-line: no-unnecessary-type-assertion\n              ENGINE.runKernel(\n                  FusedConv2D, inputs as {} as NamedTensorMap,\n                  attrs as {} as NamedAttrMap);\n\n          save([filter, x4D, res]);\n\n          if (reshapedTo4D) {\n            // tslint:disable-next-line: no-unnecessary-type-assertion\n            res = reshape(res, [res.shape[1], res.shape[2], res.shape[3]]) as\n                Tensor3D;\n          }\n\n          return {value: res, gradFunc: grad};\n        });\n    return customOp(x4D, $filter) as T;\n  } else {\n    const customOpWithBias = customGrad(\n        (x4D: Tensor4D, filter: Tensor4D, bias: Tensor, save: GradSaveFunc) => {\n          let res: Tensor4D|Tensor3D = ENGINE.runKernel(\n              FusedConv2D, inputs as {} as NamedTensorMap,\n              attrs as {} as NamedAttrMap);\n\n          save([filter, x4D, res, bias]);\n\n          if (reshapedTo4D) {\n            // tslint:disable-next-line: no-unnecessary-type-assertion\n            res = reshape(res, [res.shape[1], res.shape[2], res.shape[3]]) as\n                Tensor3D;\n          }\n\n          return {value: res, gradFunc: grad};\n        });\n\n    return customOpWithBias(x4D, $filter, $bias) as T;\n  }\n}\nexport const conv2d = op({fusedConv2d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {DepthwiseConv2dNativeBackpropFilter, DepthwiseConv2dNativeBackpropFilterAttrs, DepthwiseConv2dNativeBackpropFilterInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor3D, Tensor4D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\n\nimport {ExplicitPadding} from './conv_util';\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\nfunction depthwiseConv2dNativeBackpropFilter_<T extends Tensor3D|Tensor4D>(\n    x: T, dy: T, filterShape: [number, number, number, number],\n    strides: [number, number]|number,\n    pad: 'valid'|'same'|number|ExplicitPadding,\n    dilations: [number, number]|number = [1, 1],\n    dimRoundingMode?: 'floor'|'round'|'ceil'): Tensor4D {\n  let x4D = x as Tensor4D;\n  if (x.rank === 3) {\n    x4D = reshape(x, [1, x.shape[0], x.shape[1], x.shape[2]]);\n  }\n  let dy4D = dy as Tensor4D;\n  if (dy4D.rank === 3) {\n    dy4D = reshape(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2]]);\n  }\n\n  const inputs: DepthwiseConv2dNativeBackpropFilterInputs = {x: x4D, dy: dy4D};\n  const attrs: DepthwiseConv2dNativeBackpropFilterAttrs =\n      {strides, pad, dimRoundingMode, dilations, filterShape};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  return ENGINE.runKernel(\n             DepthwiseConv2dNativeBackpropFilter,\n             inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap) as\n      Tensor4D;\n}\n\nexport const depthwiseConv2dNativeBackpropFilter =\n    op({depthwiseConv2dNativeBackpropFilter_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {DepthwiseConv2dNativeBackpropInput, DepthwiseConv2dNativeBackpropInputAttrs, DepthwiseConv2dNativeBackpropInputInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor3D, Tensor4D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\n\nimport {ExplicitPadding} from './conv_util';\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\nfunction depthwiseConv2dNativeBackpropInput_<T extends Tensor3D|Tensor4D>(\n    xShape: [number, number, number, number], dy: T, filter: Tensor4D,\n    strides: [number, number]|number,\n    pad: 'valid'|'same'|number|ExplicitPadding,\n    dilations: [number, number]|number = [1, 1],\n    dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n  let dy4D = dy as Tensor4D;\n  let reshapedTo4D = false;\n  if (dy.rank === 3) {\n    reshapedTo4D = true;\n    dy4D = reshape(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2]]);\n  }\n\n  const inputs: DepthwiseConv2dNativeBackpropInputInputs = {dy: dy4D, filter};\n  const attrs: DepthwiseConv2dNativeBackpropInputAttrs =\n      {strides, pad, dimRoundingMode, dilations, inputShape: xShape};\n\n  const res =\n      // tslint:disable-next-line: no-unnecessary-type-assertion\n      ENGINE.runKernel(\n          DepthwiseConv2dNativeBackpropInput, inputs as {} as NamedTensorMap,\n          attrs as {} as NamedAttrMap) as T;\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]) as T;\n  }\n  return res;\n}\n\nexport const depthwiseConv2dNativeBackpropInput =\n    op({depthwiseConv2dNativeBackpropInput_});\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {customGrad} from '../../gradients';\nimport {FusedDepthwiseConv2D, FusedDepthwiseConv2DAttrs, FusedDepthwiseConv2DInputs} from '../../kernel_names';\nimport {NamedAttrMap} from '../../kernel_registry';\nimport {Tensor, Tensor3D, Tensor4D} from '../../tensor';\nimport {GradSaveFunc, NamedTensorMap} from '../../tensor_types';\nimport {makeTypesMatch} from '../../tensor_util';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport * as util from '../../util';\n\nimport {add} from '../add';\nimport * as broadcast_util from '../broadcast_util';\nimport * as conv_util from '../conv_util';\nimport {depthwiseConv2d as unfusedDepthwiseConv2d} from '../depthwise_conv2d';\nimport {depthwiseConv2dNativeBackpropFilter} from '../depthwise_conv2d_native_backprop_filter';\nimport {depthwiseConv2dNativeBackpropInput} from '../depthwise_conv2d_native_backprop_input';\nimport {Activation} from '../fused_types';\nimport {applyActivation, getFusedBiasGradient, getFusedDyActivation, shouldFuse} from '../fused_util';\nimport {op} from '../operation';\nimport {reshape} from '../reshape';\n\n/**\n * Computes depthwise 2D convolution, optionally fused with adding a\n * bias and applying an activation.\n *\n * Given a 4D `input` array and a `filter` array of shape\n * `[filterHeight, filterWidth, inChannels, channelMultiplier]` containing\n * `inChannels` convolutional filters of depth 1, this op applies a\n * different filter to each input channel (expanding from 1 channel to\n * `channelMultiplier` channels for each), then concatenates the results\n * together. The output has `inChannels * channelMultiplier` channels.\n *\n * See\n * [https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d](\n *     https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d)\n * for more details.\n *\n * @param obj An object with the following properties:\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter tensor, rank 4, of shape\n *     `[filterHeight, filterWidth, inChannels, channelMultiplier]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`. If strides is a single number, then `strideHeight ==\n * strideWidth`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `rate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n * @param bias Tensor to be added to the result.\n * @param activation Name of activation kernel (defaults to `linear`).\n * @param preluActivationWeights Tensor of prelu weights to be applied as part\n *     of a `prelu` activation, typically the same shape as `x`.\n * @param leakyreluAlpha Optional. Alpha to be applied as part of a `leakyrelu`\n *     activation.\n */\nfunction fusedDepthwiseConv2d_<T extends Tensor3D|Tensor4D>({\n  x,\n  filter,\n  strides,\n  pad,\n  dataFormat = 'NHWC',\n  dilations = [1, 1],\n  dimRoundingMode,\n  bias,\n  activation = 'linear',\n  preluActivationWeights,\n  leakyreluAlpha\n}: {\n  x: T|TensorLike,\n  filter: Tensor4D|TensorLike,\n  strides: [number, number]|number,\n  pad: 'valid'|'same'|number,\n  dataFormat?: 'NHWC'|'NCHW',\n  dilations?: [number, number]|number,\n  dimRoundingMode?: 'floor'|'round'|'ceil',\n  bias?: Tensor|TensorLike,\n  activation?: Activation,\n  preluActivationWeights?: Tensor,\n  leakyreluAlpha?: number\n}): T {\n  if (shouldFuse(ENGINE.state.gradientDepth, activation) === false) {\n    let result = unfusedDepthwiseConv2d(\n        x, filter, strides, pad, dataFormat, dilations, dimRoundingMode);\n    if (bias != null) {\n      result = add(result, bias);\n    }\n\n    return applyActivation(\n               result, activation, preluActivationWeights, leakyreluAlpha) as T;\n  }\n\n  const $x = convertToTensor(x, 'x', 'depthwiseConv2d');\n  const $filter = convertToTensor(filter, 'filter', 'depthwiseConv2d');\n\n  let x4D = $x as Tensor4D;\n  let reshapedTo4D = false;\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n  }\n  util.assert(\n      x4D.rank === 4,\n      () => `Error in fused depthwiseConv2d: input must be rank 4, but got ` +\n          `rank ${x4D.rank}.`);\n  util.assert(\n      $filter.rank === 4,\n      () => `Error in fused depthwiseConv2d: filter must be rank 4, ` +\n          `but got rank ${$filter.rank}.`);\n  util.assert(\n      x4D.shape[3] === $filter.shape[2],\n      () => `Error in fused depthwiseConv2d: number of input channels ` +\n          `(${x4D.shape[3]}) must match the inChannels dimension in ` +\n          `filter ${$filter.shape[2]}.`);\n  if (dilations == null) {\n    dilations = [1, 1];\n  }\n  util.assert(\n      conv_util.eitherStridesOrDilationsAreOne(strides, dilations),\n      () =>\n          'Error in fused depthwiseConv2d: Either strides or dilations must ' +\n          `be 1. Got strides ${strides} and dilations '${dilations}'`);\n\n  if (dimRoundingMode != null) {\n    util.assert(\n        util.isInt(pad as number),\n        () => `Error in fused depthwiseConv2d: pad must be an integer when ` +\n            `using dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n  }\n\n  const convInfo = conv_util.computeConv2DInfo(\n      x4D.shape, $filter.shape, strides, dilations, pad, dimRoundingMode,\n      true /* depthwise */);\n\n  let $bias: Tensor;\n  if (bias != null) {\n    $bias = convertToTensor(bias, 'bias', 'fused conv2d');\n    [$bias] = makeTypesMatch($bias, $x);\n\n    broadcast_util.assertAndGetBroadcastShape(convInfo.outShape, $bias.shape);\n  }\n\n  let $preluActivationWeights: Tensor;\n  if (preluActivationWeights != null) {\n    $preluActivationWeights = convertToTensor(\n        preluActivationWeights, 'prelu weights', 'fused depthwiseConv2d');\n  }\n\n  const grad = (dy: Tensor4D, saved: Tensor[]) => {\n    util.assert(\n        conv_util.tupleValuesAreOne(dilations),\n        () => 'Error in gradient of fused depthwiseConv2d: dilation rates ' +\n            `greater than 1 are not yet supported. Got dilations ` +\n            `'${dilations}'`);\n    const [$filter, x4D, y, bias] = saved;\n\n    const dyActivation = getFusedDyActivation(dy, y, activation) as Tensor4D;\n\n    const xDer = depthwiseConv2dNativeBackpropInput(\n        (x4D as Tensor4D).shape, dyActivation, $filter as Tensor4D, strides,\n        pad, dilations, dimRoundingMode);\n    const filterDer = depthwiseConv2dNativeBackpropFilter(\n        x4D as Tensor4D, dyActivation, ($filter as Tensor4D).shape, strides,\n        pad, dilations, dimRoundingMode);\n\n    if (bias != null) {\n      const biasDer = getFusedBiasGradient($bias, dyActivation);\n      return [xDer, filterDer, biasDer];\n    }\n    return [xDer, filterDer];\n  };\n\n  const inputs: FusedDepthwiseConv2DInputs = {\n    x: x4D,\n    filter: $filter,\n    bias: $bias,\n    preluActivationWeights: $preluActivationWeights\n  };\n  const attrs: FusedDepthwiseConv2DAttrs = {\n    strides,\n    pad,\n    dataFormat,\n    dilations,\n    dimRoundingMode,\n    activation,\n    leakyreluAlpha\n  };\n\n  // Depending on the the params passed in we will have different number of\n  // inputs and thus a a different number of elements in the gradient.\n  if (bias == null) {\n    const customOp =\n        customGrad((x4D: Tensor4D, filter: Tensor4D, save: GradSaveFunc) => {\n          // tslint:disable-next-line: no-unnecessary-type-assertion\n          let res: Tensor4D|Tensor3D = ENGINE.runKernel(\n              FusedDepthwiseConv2D, inputs as {} as NamedTensorMap,\n              attrs as {} as NamedAttrMap);\n\n          save([filter, x4D, res]);\n\n          if (reshapedTo4D) {\n            // tslint:disable-next-line: no-unnecessary-type-assertion\n            res = reshape(res, [res.shape[1], res.shape[2], res.shape[3]]) as\n                Tensor3D;\n          }\n\n          return {value: res, gradFunc: grad};\n        });\n    return customOp(x4D, $filter) as T;\n  } else {\n    const customOpWithBias = customGrad(\n        (x4D: Tensor4D, filter: Tensor4D, bias: Tensor, save: GradSaveFunc) => {\n          // tslint:disable-next-line: no-unnecessary-type-assertion\n          let res: Tensor4D|Tensor3D = ENGINE.runKernel(\n              FusedDepthwiseConv2D, inputs as {} as NamedTensorMap,\n              attrs as {} as NamedAttrMap);\n\n          save([filter, x4D, res, bias]);\n\n          if (reshapedTo4D) {\n            // tslint:disable-next-line: no-unnecessary-type-assertion\n            res = reshape(res, [res.shape[1], res.shape[2], res.shape[3]]) as\n                Tensor3D;\n          }\n\n          return {value: res, gradFunc: grad};\n        });\n\n    return customOpWithBias(x4D, $filter, $bias) as T;\n  }\n}\nexport const depthwiseConv2d = op({fusedDepthwiseConv2d_});\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {customGrad} from '../../gradients';\nimport {_FusedMatMul, _FusedMatMulAttrs, _FusedMatMulInputs} from '../../kernel_names';\nimport {NamedAttrMap} from '../../kernel_registry';\nimport {Tensor, Tensor3D} from '../../tensor';\nimport {GradSaveFunc, NamedTensorMap} from '../../tensor_types';\nimport {makeTypesMatch} from '../../tensor_util';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport * as util from '../../util';\n\nimport {add} from '../add';\nimport * as broadcast_util from '../broadcast_util';\nimport {Activation} from '../fused_types';\nimport {applyActivation, getFusedBiasGradient, getFusedDyActivation, shouldFuse} from '../fused_util';\nimport {matMul as unfusedMatMul} from '../mat_mul';\nimport {op} from '../operation';\nimport {reshape} from '../reshape';\n\n/**\n * Computes the dot product of two matrices with optional activation and bias.\n *\n * ```js\n * const a = tf.tensor2d([-1, -2], [1, 2]);\n * const b = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n * const bias = tf.tensor2d([1, 2], [1, 2]);\n *\n * tf.fused.matMul({a, b, bias, activation: 'relu'}).print();\n * ```\n *\n * @param obj An object with the following properties:\n * - `a` First matrix in dot product operation.\n * - `b` Second matrix in dot product operation.\n * - `transposeA` If true, `a` is transposed before multiplication.\n * - `transposeB` If true, `b` is transposed before multiplication.\n * - `bias` Matrix to be added to the result.\n * - `activation` Name of activation kernel (defaults to `linear`).\n * - `preluActivationWeights` Tensor of prelu weights.\n * - `leakyreluAlpha` Alpha of leakyrelu.\n */\nfunction fusedMatMul_<T extends Tensor>({\n  a,\n  b,\n  transposeA = false,\n  transposeB = false,\n  bias,\n  activation = 'linear',\n  preluActivationWeights,\n  leakyreluAlpha,\n}: {\n  a: T|TensorLike,\n  b: T|TensorLike,\n  transposeA?: boolean,\n  transposeB?: boolean,\n  bias?: Tensor|TensorLike,\n  activation?: Activation,\n  preluActivationWeights?: Tensor\n  leakyreluAlpha?: number\n}): T {\n    if (shouldFuse(ENGINE.state.gradientDepth, activation) === false) {\n      let result = unfusedMatMul(a, b, transposeA, transposeB);\n      if (bias != null) {\n        result = add(result, bias);\n      }\n\n      return applyActivation(\n                 result, activation, preluActivationWeights, leakyreluAlpha) as\n          T;\n    }\n\n    let $a = convertToTensor(a, 'a', 'fused matMul');\n    let $b = convertToTensor(b, 'b', 'fused matMul');\n    [$a, $b] = makeTypesMatch($a, $b);\n\n    const innerShapeA =\n        transposeA ? $a.shape[$a.rank - 2] : $a.shape[$a.rank - 1];\n    const innerShapeB =\n        transposeB ? $b.shape[$b.rank - 1] : $b.shape[$b.rank - 2];\n\n    const outerShapeA =\n        transposeA ? $a.shape[$a.rank - 1] : $a.shape[$a.rank - 2];\n    const outerShapeB =\n        transposeB ? $b.shape[$b.rank - 2] : $b.shape[$b.rank - 1];\n\n    const outerDimsA = $a.shape.slice(0, -2);\n    const outerDimsB = $b.shape.slice(0, -2);\n    const batchDimA = util.sizeFromShape(outerDimsA);\n    const batchDimB = util.sizeFromShape(outerDimsB);\n\n    util.assert(\n        $a.rank >= 2 && $b.rank >= 2 && $a.rank === $b.rank,\n        () => `Error in fused matMul: inputs must have the same rank of at ` +\n            `least 2, got ranks ${$a.rank} and ${$b.rank}.`);\n\n    util.assert(\n        util.arraysEqual(outerDimsA, outerDimsB),\n        () => `Error in fused matMul: outer dimensions (${outerDimsA}) and (` +\n            `${outerDimsB}) of Tensors with shapes ${$a.shape} and ` +\n            `${$b.shape} must match.`);\n\n    util.assert(\n        innerShapeA === innerShapeB,\n        () => `Error in fused matMul: inner shapes (${innerShapeA}) and (` +\n            `${innerShapeB}) of Tensors with shapes ${$a.shape} and ` +\n            `${$b.shape} and transposeA=${transposeA}` +\n            ` and transposeB=${transposeB} must match.`);\n\n    const outShape = $a.shape.slice(0, -2).concat([outerShapeA, outerShapeB]);\n\n    const a3D: Tensor3D = transposeA ?\n        reshape($a, [batchDimA, innerShapeA, outerShapeA]) :\n        reshape($a, [batchDimA, outerShapeA, innerShapeA]);\n    const b3D: Tensor3D = transposeB ?\n        reshape($b, [batchDimB, outerShapeB, innerShapeB]) :\n        reshape($b, [batchDimB, innerShapeB, outerShapeB]);\n\n    let $bias: Tensor;\n    if (bias != null) {\n      $bias = convertToTensor(bias, 'bias', 'fused matMul');\n      [$bias] = makeTypesMatch($bias, $a);\n\n      broadcast_util.assertAndGetBroadcastShape(outShape, $bias.shape);\n    }\n\n    let $preluActivationWeights: Tensor;\n    if (preluActivationWeights != null) {\n      $preluActivationWeights = convertToTensor(\n          preluActivationWeights, 'prelu weights', 'fused matMul');\n    }\n\n    const grad = (dy: Tensor3D, saved: Tensor[]) => {\n      const [a3D, b3D, y, $bias] = saved;\n      // we reshape dy because the result of the forward is not\n      // necessarily going to be a 3d tensor due to a reshape done at the end of\n      // the customOp.\n      const dyActivation =\n          getFusedDyActivation(reshape(dy, y.shape), y, activation);\n      let aDer: Tensor;\n      let bDer: Tensor;\n\n      if (!transposeA && !transposeB) {\n        aDer = unfusedMatMul(dyActivation, b3D, false, true);\n        bDer = unfusedMatMul(a3D, dyActivation, true, false);\n      } else if (!transposeA && transposeB) {\n        aDer = unfusedMatMul(dyActivation, b3D, false, false);\n        bDer = unfusedMatMul(dyActivation, a3D, true, false);\n      } else if (transposeA && !transposeB) {\n        aDer = unfusedMatMul(b3D, dyActivation, false, true);\n        bDer = unfusedMatMul(a3D, dyActivation, false, false);\n      } else {\n        aDer = unfusedMatMul(b3D, dyActivation, true, true);\n        bDer = unfusedMatMul(dyActivation, a3D, true, true);\n      }\n\n      if (bias != null) {\n        const biasDer = getFusedBiasGradient($bias, dyActivation);\n        return [aDer, bDer, biasDer];\n      } else {\n        return [aDer, bDer];\n      }\n    };\n\n    const inputs: _FusedMatMulInputs = {\n      a: a3D,\n      b: b3D,\n      bias: $bias,\n      preluActivationWeights: $preluActivationWeights\n    };\n    const attrs: _FusedMatMulAttrs =\n        {transposeA, transposeB, activation, leakyreluAlpha};\n\n    // Depending on the the params passed in we will have different number of\n    // inputs and thus a a different number of elements in the gradient.\n    if (bias == null) {\n      const customOp =\n          customGrad((a3D: Tensor3D, b3D: Tensor3D, save: GradSaveFunc) => {\n            const res =\n                // tslint:disable-next-line: no-unnecessary-type-assertion\n                ENGINE.runKernel(\n                    _FusedMatMul, inputs as {} as NamedTensorMap,\n                    attrs as {} as NamedAttrMap) as T;\n\n            save([a3D, b3D, res]);\n\n            return {value: reshape(res, outShape), gradFunc: grad};\n          });\n      return customOp(a3D, b3D) as T;\n    } else {\n      const customOpWithBias = customGrad(\n          (a3D: Tensor3D, b3D: Tensor3D, $bias: Tensor, save: GradSaveFunc) => {\n            const res =\n                // tslint:disable-next-line: no-unnecessary-type-assertion\n                ENGINE.runKernel(\n                    _FusedMatMul, inputs as {} as NamedTensorMap,\n                    attrs as {} as NamedAttrMap) as T;\n\n            save([a3D, b3D, res, $bias]);\n\n            return {value: reshape(res, outShape), gradFunc: grad};\n          });\n\n      return customOpWithBias(a3D, b3D, $bias) as T;\n    }\n  }\n\n  export const matMul = op({fusedMatMul_});\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor1D} from '../../tensor';\nimport {op} from '../operation';\nimport {cosineWindow} from '../signal_ops_util';\n\n/**\n * Generate a hamming window.\n *\n * See: https://en.wikipedia.org/wiki/Window_function#Hann_and_Hamming_windows\n *\n * ```js\n * tf.signal.hammingWindow(10).print();\n * ```\n * @param The length of window\n *\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\n */\nfunction hammingWindow_(windowLength: number): Tensor1D {\n  return cosineWindow(windowLength, 0.54, 0.46);\n}\nexport const hammingWindow = op({hammingWindow_});\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor1D} from '../../tensor';\nimport {op} from '../operation';\nimport {cosineWindow} from '../signal_ops_util';\n\n/**\n * Generate a Hann window.\n *\n * See: https://en.wikipedia.org/wiki/Window_function#Hann_and_Hamming_windows\n *\n * ```js\n * tf.signal.hannWindow(10).print();\n * ```\n * @param The length of window\n *\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\n */\nfunction hannWindow_(windowLength: number): Tensor1D {\n  return cosineWindow(windowLength, 0.5, 0.5);\n}\n\nexport const hannWindow = op({hannWindow_});\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor, Tensor1D} from '../../tensor';\nimport {concat} from '../concat';\nimport {fill} from '../fill';\nimport {op} from '../operation';\nimport {reshape} from '../reshape';\nimport {slice} from '../slice';\nimport {tensor2d} from '../tensor2d';\n\n/**\n * Expands input into frames of frameLength.\n * Slides a window size with frameStep.\n *\n * ```js\n * tf.signal.frame([1, 2, 3], 2, 1).print();\n * ```\n * @param signal The input tensor to be expanded\n * @param frameLength Length of each frame\n * @param frameStep The frame hop size in samples.\n * @param padEnd Whether to pad the end of signal with padValue.\n * @param padValue An number to use where the input signal does\n *     not exist when padEnd is True.\n *\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\n */\nfunction frame_(\n    signal: Tensor1D, frameLength: number, frameStep: number, padEnd = false,\n    padValue = 0): Tensor {\n  let start = 0;\n  const output: Tensor[] = [];\n  while (start + frameLength <= signal.size) {\n    output.push(slice(signal, start, frameLength));\n    start += frameStep;\n  }\n\n  if (padEnd) {\n    while (start < signal.size) {\n      const padLen = (start + frameLength) - signal.size;\n      const pad = concat([\n        slice(signal, start, frameLength - padLen), fill([padLen], padValue)\n      ]);\n      output.push(pad);\n      start += frameStep;\n    }\n  }\n\n  if (output.length === 0) {\n    return tensor2d([], [0, frameLength]);\n  }\n\n  return reshape(concat(output), [output.length, frameLength]);\n}\nexport const frame = op({frame_});\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor, Tensor1D} from '../../tensor';\nimport {mul} from '../mul';\nimport {op} from '../operation';\nimport {enclosingPowerOfTwo} from '../signal_ops_util';\nimport {rfft} from '../spectral/rfft';\n\nimport {frame} from './frame';\nimport {hannWindow} from './hann_window';\n\n/**\n * Computes the Short-time Fourier Transform of signals\n * See: https://en.wikipedia.org/wiki/Short-time_Fourier_transform\n *\n * ```js\n * const input = tf.tensor1d([1, 1, 1, 1, 1])\n * tf.signal.stft(input, 3, 1).print();\n * ```\n * @param signal 1-dimensional real value tensor.\n * @param frameLength The window length of samples.\n * @param frameStep The number of samples to step.\n * @param fftLength The size of the FFT to apply.\n * @param windowFn A callable that takes a window length and returns 1-d tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\n */\nfunction stft_(\n    signal: Tensor1D, frameLength: number, frameStep: number,\n    fftLength?: number,\n    windowFn: (length: number) => Tensor1D = hannWindow): Tensor {\n  if (fftLength == null) {\n    fftLength = enclosingPowerOfTwo(frameLength);\n  }\n  const framedSignal = frame(signal, frameLength, frameStep);\n  const windowedSignal = mul(framedSignal, windowFn(frameLength));\n  return rfft(windowedSignal, fftLength);\n}\nexport const stft = op({stft_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {CropAndResize, CropAndResizeAttrs, CropAndResizeInputs} from '../../kernel_names';\nimport {NamedAttrMap} from '../../kernel_registry';\nimport {Tensor1D, Tensor2D, Tensor4D} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport * as util from '../../util';\n\nimport {op} from '../operation';\n\n/**\n * Extracts crops from the input image tensor and resizes them using bilinear\n * sampling or nearest neighbor sampling (possibly with aspect ratio change)\n * to a common output size specified by cropSize.\n *\n * @param image 4d tensor of shape `[batch,imageHeight,imageWidth, depth]`,\n *     where imageHeight and imageWidth must be positive, specifying the\n *     batch of images from which to take crops\n * @param boxes 2d float32 tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the normalized\n *     coordinates of the box in the boxInd[i]'th image in the batch\n * @param boxInd 1d int32 tensor of shape `[numBoxes]` with values in range\n *     `[0, batch)` that specifies the image that the `i`-th box refers to.\n * @param cropSize 1d int32 tensor of 2 elements `[cropHeigh, cropWidth]`\n *     specifying the size to which all crops are resized to.\n * @param method Optional string from `'bilinear' | 'nearest'`,\n *     defaults to bilinear, which specifies the sampling method for resizing\n * @param extrapolationValue A threshold for deciding when to remove boxes based\n *     on score. Defaults to 0.\n * @return A 4D tensor of the shape `[numBoxes,cropHeight,cropWidth,depth]`\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction cropAndResize_(\n    image: Tensor4D|TensorLike,\n    boxes: Tensor2D|TensorLike,\n    boxInd: Tensor1D|TensorLike,\n    cropSize: [number, number],\n    method: 'bilinear'|'nearest' = 'bilinear',\n    extrapolationValue = 0,\n    ): Tensor4D {\n  const $image = convertToTensor(image, 'image', 'cropAndResize');\n  const $boxes = convertToTensor(boxes, 'boxes', 'cropAndResize', 'float32');\n  const $boxInd = convertToTensor(boxInd, 'boxInd', 'cropAndResize', 'int32');\n\n  const numBoxes = $boxes.shape[0];\n\n  util.assert(\n      $image.rank === 4,\n      () => 'Error in cropAndResize: image must be rank 4,' +\n          `but got rank ${$image.rank}.`);\n  util.assert(\n      $boxes.rank === 2 && $boxes.shape[1] === 4,\n      () => `Error in cropAndResize: boxes must be have size [${numBoxes},4] ` +\n          `but had shape ${$boxes.shape}.`);\n  util.assert(\n      $boxInd.rank === 1 && $boxInd.shape[0] === numBoxes,\n      () => `Error in cropAndResize: boxInd must be have size [${numBoxes}] ` +\n          `but had shape ${$boxes.shape}.`);\n  util.assert(\n      cropSize.length === 2,\n      () => `Error in cropAndResize: cropSize must be of length 2, but got ` +\n          `length ${cropSize.length}.`);\n  util.assert(\n      cropSize[0] >= 1 && cropSize[1] >= 1,\n      () => `cropSize must be atleast [1,1], but was ${cropSize}`);\n  util.assert(\n      method === 'bilinear' || method === 'nearest',\n      () => `method must be bilinear or nearest, but was ${method}`);\n\n  const inputs:\n      CropAndResizeInputs = {image: $image, boxes: $boxes, boxInd: $boxInd};\n  const attrs: CropAndResizeAttrs = {method, extrapolationValue, cropSize};\n  const res = ENGINE.runKernel(\n      CropAndResize, inputs as {} as NamedTensorMap,\n      attrs as {} as NamedAttrMap);\n  return res as Tensor4D;\n}\n\nexport const cropAndResize = op({cropAndResize_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {FlipLeftRight, FlipLeftRightInputs} from '../../kernel_names';\nimport {Tensor4D} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport * as util from '../../util';\nimport {op} from '../operation';\n\n/**\n * Flips the image left to right. Currently available in the CPU, WebGL, and\n * WASM backends.\n *\n * @param image 4d tensor of shape `[batch, imageHeight, imageWidth, depth]`.\n */\n/** @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'} */\nfunction flipLeftRight_(image: Tensor4D|TensorLike): Tensor4D {\n  const $image = convertToTensor(image, 'image', 'flipLeftRight', 'float32');\n\n  util.assert(\n      $image.rank === 4,\n      () => 'Error in flipLeftRight: image must be rank 4,' +\n          `but got rank ${$image.rank}.`);\n\n  const inputs: FlipLeftRightInputs = {image: $image};\n  const res =\n      ENGINE.runKernel(FlipLeftRight, inputs as {} as NamedTensorMap, {});\n  return res as Tensor4D;\n}\n\nexport const flipLeftRight = op({flipLeftRight_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {RotateWithOffset, RotateWithOffsetAttrs, RotateWithOffsetInputs} from '../../kernel_names';\nimport {NamedAttrMap} from '../../kernel_registry';\nimport {Tensor4D} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport * as util from '../../util';\n\nimport {op} from '../operation';\n\n/**\n * Rotates the input image tensor counter-clockwise with an optional offset\n * center of rotation. Currently available in the CPU, WebGL, and WASM backends.\n *\n * @param image 4d tensor of shape `[batch, imageHeight, imageWidth, depth]`.\n * @param radians The amount of rotation.\n * @param fillValue The value to fill in the empty space leftover\n *     after rotation. Can be either a single grayscale value (0-255), or an\n *     array of three numbers `[red, green, blue]` specifying the red, green,\n *     and blue channels. Defaults to `0` (black).\n * @param center The center of rotation. Can be either a single value (0-1), or\n *     an array of two numbers `[centerX, centerY]`. Defaults to `0.5` (rotates\n *     the image around its center).\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction rotateWithOffset_(\n    image: Tensor4D|TensorLike, radians: number,\n    fillValue: number|[number, number, number] = 0,\n    center: number|[number, number] = 0.5): Tensor4D {\n  const $image = convertToTensor(image, 'image', 'rotateWithOffset', 'float32');\n\n  util.assert(\n      $image.rank === 4,\n      () => 'Error in rotateWithOffset: image must be rank 4,' +\n          `but got rank ${$image.rank}.`);\n\n  const inputs: RotateWithOffsetInputs = {image: $image};\n  const attrs: RotateWithOffsetAttrs = {radians, fillValue, center};\n  const res = ENGINE.runKernel(\n      RotateWithOffset, inputs as {} as NamedTensorMap,\n      attrs as {} as NamedAttrMap);\n  return res as Tensor4D;\n}\n\nexport const rotateWithOffset = op({rotateWithOffset_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor1D, Tensor2D} from '../tensor';\nimport * as util from '../util';\n\nfunction nonMaxSuppSanityCheck(\n    boxes: Tensor2D, scores: Tensor1D, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number, softNmsSigma?: number): {\n  maxOutputSize: number,\n  iouThreshold: number,\n  scoreThreshold: number,\n  softNmsSigma: number\n} {\n  if (iouThreshold == null) {\n    iouThreshold = 0.5;\n  }\n  if (scoreThreshold == null) {\n    scoreThreshold = Number.NEGATIVE_INFINITY;\n  }\n  if (softNmsSigma == null) {\n    softNmsSigma = 0.0;\n  }\n\n  const numBoxes = boxes.shape[0];\n  maxOutputSize = Math.min(maxOutputSize, numBoxes);\n\n  util.assert(\n      0 <= iouThreshold && iouThreshold <= 1,\n      () => `iouThreshold must be in [0, 1], but was '${iouThreshold}'`);\n  util.assert(\n      boxes.rank === 2,\n      () => `boxes must be a 2D tensor, but was of rank '${boxes.rank}'`);\n  util.assert(\n      boxes.shape[1] === 4,\n      () =>\n          `boxes must have 4 columns, but 2nd dimension was ${boxes.shape[1]}`);\n  util.assert(scores.rank === 1, () => 'scores must be a 1D tensor');\n  util.assert(\n      scores.shape[0] === numBoxes,\n      () => `scores has incompatible shape with boxes. Expected ${numBoxes}, ` +\n          `but was ${scores.shape[0]}`);\n  util.assert(\n      0 <= softNmsSigma && softNmsSigma <= 1,\n      () => `softNmsSigma must be in [0, 1], but was '${softNmsSigma}'`);\n  return {maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma};\n}\n\nexport {nonMaxSuppSanityCheck};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {NonMaxSuppressionV3} from '../../kernel_names';\nimport {Tensor1D, Tensor2D} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\n\nimport {nonMaxSuppSanityCheck} from '../nonmax_util';\nimport {op} from '../operation';\n\n/**\n * Performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @return A 1D tensor with the selected box indices.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction nonMaxSuppression_(\n    boxes: Tensor2D|TensorLike, scores: Tensor1D|TensorLike,\n    maxOutputSize: number, iouThreshold = 0.5,\n    scoreThreshold = Number.NEGATIVE_INFINITY): Tensor1D {\n  const $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppression');\n  const $scores = convertToTensor(scores, 'scores', 'nonMaxSuppression');\n\n  const inputs = nonMaxSuppSanityCheck(\n      $boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold);\n  maxOutputSize = inputs.maxOutputSize;\n  iouThreshold = inputs.iouThreshold;\n  scoreThreshold = inputs.scoreThreshold;\n\n  const attrs = {maxOutputSize, iouThreshold, scoreThreshold};\n  return ENGINE.runKernel(\n      NonMaxSuppressionV3, {boxes: $boxes, scores: $scores}, attrs);\n}\n\nexport const nonMaxSuppression = op({nonMaxSuppression_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {nonMaxSuppressionV3Impl} from '../../backends/non_max_suppression_impl';\nimport {Tensor1D, Tensor2D} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {nonMaxSuppSanityCheck} from '../nonmax_util';\nimport {tensor1d} from '../tensor1d';\n\n/**\n * Performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * This is the async version of `nonMaxSuppression`\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @return A 1D tensor with the selected box indices.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nasync function nonMaxSuppressionAsync_(\n    boxes: Tensor2D|TensorLike, scores: Tensor1D|TensorLike,\n    maxOutputSize: number, iouThreshold = 0.5,\n    scoreThreshold = Number.NEGATIVE_INFINITY): Promise<Tensor1D> {\n  const $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppressionAsync');\n  const $scores = convertToTensor(scores, 'scores', 'nonMaxSuppressionAsync');\n\n  const inputs = nonMaxSuppSanityCheck(\n      $boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold);\n  maxOutputSize = inputs.maxOutputSize;\n  iouThreshold = inputs.iouThreshold;\n  scoreThreshold = inputs.scoreThreshold;\n\n  const boxesAndScores = await Promise.all([$boxes.data(), $scores.data()]);\n  const boxesVals = boxesAndScores[0];\n  const scoresVals = boxesAndScores[1];\n\n  // We call a cpu based impl directly with the typedarray data  here rather\n  // than a kernel because all kernels are synchronous (and thus cannot await\n  // .data()).\n  const {selectedIndices} = nonMaxSuppressionV3Impl(\n      boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold);\n  if ($boxes !== boxes) {\n    $boxes.dispose();\n  }\n  if ($scores !== scores) {\n    $scores.dispose();\n  }\n\n  return tensor1d(selectedIndices, 'int32');\n}\n\nexport const nonMaxSuppressionAsync = nonMaxSuppressionAsync_;\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {NonMaxSuppressionV5, NonMaxSuppressionV5Attrs, NonMaxSuppressionV5Inputs} from '../../kernel_names';\nimport {NamedAttrMap} from '../../kernel_registry';\nimport {Tensor, Tensor1D, Tensor2D} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\n\nimport {nonMaxSuppSanityCheck} from '../nonmax_util';\nimport {op} from '../operation';\n\n/**\n * Performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * This op also supports a Soft-NMS mode (c.f.\n * Bodla et al, https://arxiv.org/abs/1704.04503) where boxes reduce the score\n * of other overlapping boxes, therefore favoring different regions of the image\n * with high scores. To enable this Soft-NMS mode, set the `softNmsSigma`\n * parameter to be larger than 0.\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @param softNmsSigma A float representing the sigma parameter for Soft NMS.\n *     When sigma is 0, it falls back to nonMaxSuppression.\n * @return A map with the following properties:\n *     - selectedIndices: A 1D tensor with the selected box indices.\n *     - selectedScores: A 1D tensor with the corresponding scores for each\n *       selected box.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction nonMaxSuppressionWithScore_(\n    boxes: Tensor2D|TensorLike, scores: Tensor1D|TensorLike,\n    maxOutputSize: number, iouThreshold = 0.5,\n    scoreThreshold = Number.NEGATIVE_INFINITY,\n    softNmsSigma = 0.0): NamedTensorMap {\n  const $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppression');\n  const $scores = convertToTensor(scores, 'scores', 'nonMaxSuppression');\n\n  const params = nonMaxSuppSanityCheck(\n      $boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold,\n      softNmsSigma);\n  maxOutputSize = params.maxOutputSize;\n  iouThreshold = params.iouThreshold;\n  scoreThreshold = params.scoreThreshold;\n  softNmsSigma = params.softNmsSigma;\n\n  const inputs: NonMaxSuppressionV5Inputs = {boxes: $boxes, scores: $scores};\n  const attrs: NonMaxSuppressionV5Attrs =\n      {maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  const result = ENGINE.runKernel(\n                     NonMaxSuppressionV5, inputs as {} as NamedTensorMap,\n                     attrs as {} as NamedAttrMap) as Tensor[];\n\n  return {selectedIndices: result[0], selectedScores: result[1]};\n}\n\nexport const nonMaxSuppressionWithScore = op({nonMaxSuppressionWithScore_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {nonMaxSuppressionV5Impl} from '../../backends/non_max_suppression_impl';\nimport {Tensor1D, Tensor2D} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {nonMaxSuppSanityCheck} from '../nonmax_util';\nimport {tensor1d} from '../tensor1d';\n\n/**\n * Asynchronously performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * This op also supports a Soft-NMS mode (c.f.\n * Bodla et al, https://arxiv.org/abs/1704.04503) where boxes reduce the score\n * of other overlapping boxes, therefore favoring different regions of the image\n * with high scores. To enable this Soft-NMS mode, set the `softNmsSigma`\n * parameter to be larger than 0.\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @param softNmsSigma A float representing the sigma parameter for Soft NMS.\n *     When sigma is 0, it falls back to nonMaxSuppression.\n * @return A map with the following properties:\n *     - selectedIndices: A 1D tensor with the selected box indices.\n *     - selectedScores: A 1D tensor with the corresponding scores for each\n *       selected box.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nasync function nonMaxSuppressionWithScoreAsync_(\n    boxes: Tensor2D|TensorLike, scores: Tensor1D|TensorLike,\n    maxOutputSize: number, iouThreshold = 0.5,\n    scoreThreshold = Number.NEGATIVE_INFINITY,\n    softNmsSigma = 0.0): Promise<NamedTensorMap> {\n  const $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppressionAsync');\n  const $scores = convertToTensor(scores, 'scores', 'nonMaxSuppressionAsync');\n\n  const params = nonMaxSuppSanityCheck(\n      $boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold,\n      softNmsSigma);\n  maxOutputSize = params.maxOutputSize;\n  iouThreshold = params.iouThreshold;\n  scoreThreshold = params.scoreThreshold;\n  softNmsSigma = params.softNmsSigma;\n\n  const boxesAndScores = await Promise.all([$boxes.data(), $scores.data()]);\n  const boxesVals = boxesAndScores[0];\n  const scoresVals = boxesAndScores[1];\n\n  // We call a cpu based impl directly with the typedarray data  here rather\n  // than a kernel because all kernels are synchronous (and thus cannot await\n  // .data()).\n  const {selectedIndices, selectedScores} = nonMaxSuppressionV5Impl(\n      boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold,\n      softNmsSigma);\n\n  if ($boxes !== boxes) {\n    $boxes.dispose();\n  }\n  if ($scores !== scores) {\n    $scores.dispose();\n  }\n\n  return {\n    selectedIndices: tensor1d(selectedIndices, 'int32'),\n    selectedScores: tensor1d(selectedScores)\n  };\n}\n\nexport const nonMaxSuppressionWithScoreAsync = nonMaxSuppressionWithScoreAsync_;\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {NonMaxSuppressionV4, NonMaxSuppressionV4Attrs, NonMaxSuppressionV4Inputs} from '../../kernel_names';\nimport {NamedAttrMap} from '../../kernel_registry';\nimport {Tensor, Tensor1D, Tensor2D} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\n\nimport {nonMaxSuppSanityCheck} from '../nonmax_util';\nimport {op} from '../operation';\n\n/**\n * Asynchronously performs non maximum suppression of bounding boxes based on\n * iou (intersection over union), with an option to pad results.\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @param padToMaxOutputSize Defalts to false. If true, size of output\n *     `selectedIndices` is padded to maxOutputSize.\n * @return A map with the following properties:\n *     - selectedIndices: A 1D tensor with the selected box indices.\n *     - validOutputs: A scalar denoting how many elements in `selectedIndices`\n *       are valid. Valid elements occur first, then padding.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction nonMaxSuppressionPadded_(\n    boxes: Tensor2D|TensorLike, scores: Tensor1D|TensorLike,\n    maxOutputSize: number, iouThreshold = 0.5,\n    scoreThreshold = Number.NEGATIVE_INFINITY,\n    padToMaxOutputSize = false): NamedTensorMap {\n  const $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppression');\n  const $scores = convertToTensor(scores, 'scores', 'nonMaxSuppression');\n\n  const params = nonMaxSuppSanityCheck(\n      $boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold,\n      null /* softNmsSigma */);\n  const $maxOutputSize = params.maxOutputSize;\n  const $iouThreshold = params.iouThreshold;\n  const $scoreThreshold = params.scoreThreshold;\n\n  const inputs: NonMaxSuppressionV4Inputs = {boxes: $boxes, scores: $scores};\n  const attrs: NonMaxSuppressionV4Attrs = {\n    maxOutputSize: $maxOutputSize,\n    iouThreshold: $iouThreshold,\n    scoreThreshold: $scoreThreshold,\n    padToMaxOutputSize\n  };\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  const result = ENGINE.runKernel(\n                     NonMaxSuppressionV4, inputs as {} as NamedTensorMap,\n                     attrs as {} as NamedAttrMap) as Tensor[];\n\n  return {selectedIndices: result[0], validOutputs: result[1]};\n}\n\nexport const nonMaxSuppressionPadded = op({nonMaxSuppressionPadded_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {nonMaxSuppressionV4Impl} from '../../backends/non_max_suppression_impl';\nimport {Tensor1D, Tensor2D} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {nonMaxSuppSanityCheck} from '../nonmax_util';\nimport {scalar} from '../scalar';\nimport {tensor1d} from '../tensor1d';\n\n/**\n * Asynchronously performs non maximum suppression of bounding boxes based on\n * iou (intersection over union), with an option to pad results.\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @param padToMaxOutputSize Defalts to false. If true, size of output\n *     `selectedIndices` is padded to maxOutputSize.\n * @return A map with the following properties:\n *     - selectedIndices: A 1D tensor with the selected box indices.\n *     - validOutputs: A scalar denoting how many elements in `selectedIndices`\n *       are valid. Valid elements occur first, then padding.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nasync function nonMaxSuppressionPaddedAsync_(\n    boxes: Tensor2D|TensorLike, scores: Tensor1D|TensorLike,\n    maxOutputSize: number, iouThreshold = 0.5,\n    scoreThreshold = Number.NEGATIVE_INFINITY,\n    padToMaxOutputSize = false): Promise<NamedTensorMap> {\n  const $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppressionAsync');\n  const $scores = convertToTensor(scores, 'scores', 'nonMaxSuppressionAsync');\n\n  const params = nonMaxSuppSanityCheck(\n      $boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold,\n      null /* softNmsSigma */);\n  const $maxOutputSize = params.maxOutputSize;\n  const $iouThreshold = params.iouThreshold;\n  const $scoreThreshold = params.scoreThreshold;\n\n  const [boxesVals, scoresVals] =\n      await Promise.all([$boxes.data(), $scores.data()]);\n\n  // We call a cpu based impl directly with the typedarray data here rather\n  // than a kernel because all kernels are synchronous (and thus cannot await\n  // .data()).\n  const {selectedIndices, validOutputs} = nonMaxSuppressionV4Impl(\n      boxesVals, scoresVals, $maxOutputSize, $iouThreshold, $scoreThreshold,\n      padToMaxOutputSize);\n\n  if ($boxes !== boxes) {\n    $boxes.dispose();\n  }\n  if ($scores !== scores) {\n    $scores.dispose();\n  }\n\n  return {\n    selectedIndices: tensor1d(selectedIndices, 'int32'),\n    validOutputs: scalar(validOutputs, 'int32')\n  };\n}\n\nexport const nonMaxSuppressionPaddedAsync = nonMaxSuppressionPaddedAsync_;\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {ResizeBilinear, ResizeBilinearAttrs, ResizeBilinearInputs} from '../../kernel_names';\nimport {NamedAttrMap} from '../../kernel_registry';\nimport {Tensor3D, Tensor4D} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport * as util from '../../util';\n\nimport {op} from '../operation';\nimport {reshape} from '../reshape';\n\n/**\n * Bilinear resize a single 3D image or a batch of 3D images to a new shape.\n *\n * @param images The images, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param size The new shape `[newHeight, newWidth]` to resize the\n *     images to. Each channel is resized individually.\n * @param alignCorners Defaults to `false`. If true, rescale\n *     input by `(new_height - 1) / (height - 1)`, which exactly aligns the 4\n *     corners of images and resized images. If false, rescale by\n *     `new_height / height`. Treat similarly the width dimension.\n * @param halfPixelCenters Defaults to `false`. Whether to assume pixel centers\n *     are at 0.5, which would make the floating point coordinates of the top\n *     left pixel 0.5, 0.5.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction resizeBilinear_<T extends Tensor3D|Tensor4D>(\n    images: T|TensorLike, size: [number, number], alignCorners = false,\n    halfPixelCenters = false): T {\n  const $images = convertToTensor(images, 'images', 'resizeBilinear');\n\n  util.assert(\n      $images.rank === 3 || $images.rank === 4,\n      () => `Error in resizeBilinear: x must be rank 3 or 4, but got ` +\n          `rank ${$images.rank}.`);\n  util.assert(\n      size.length === 2,\n      () => `Error in resizeBilinear: new shape must 2D, but got shape ` +\n          `${size}.`);\n  util.assert(\n      halfPixelCenters === false || alignCorners === false,\n      () => `Error in resizeBilinear: If halfPixelCenters is true, ` +\n          `alignCorners must be false.`);\n\n  let batchImages = $images as Tensor4D;\n  let reshapedTo4D = false;\n  if ($images.rank === 3) {\n    reshapedTo4D = true;\n    batchImages = reshape(\n        $images, [1, $images.shape[0], $images.shape[1], $images.shape[2]]);\n  }\n\n  const [] = size;\n\n  const inputs: ResizeBilinearInputs = {images: batchImages};\n  const attrs: ResizeBilinearAttrs = {alignCorners, halfPixelCenters, size};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  const res = ENGINE.runKernel(\n                  ResizeBilinear, inputs as {} as NamedTensorMap,\n                  attrs as {} as NamedAttrMap) as T;\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]) as T;\n  }\n  return res;\n}\n\nexport const resizeBilinear = op({resizeBilinear_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {ResizeNearestNeighbor, ResizeNearestNeighborAttrs, ResizeNearestNeighborInputs} from '../../kernel_names';\nimport {NamedAttrMap} from '../../kernel_registry';\nimport {Tensor3D, Tensor4D} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport * as util from '../../util';\n\nimport {op} from '../operation';\nimport {reshape} from '../reshape';\n\n/**\n * NearestNeighbor resize a batch of 3D images to a new shape.\n *\n * @param images The images, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param size The new shape `[newHeight, newWidth]` to resize the\n *     images to. Each channel is resized individually.\n * @param alignCorners Defaults to False. If true, rescale\n *     input by `(new_height - 1) / (height - 1)`, which exactly aligns the 4\n *     corners of images and resized images. If false, rescale by\n *     `new_height / height`. Treat similarly the width dimension.\n * @param halfPixelCenters Defaults to `false`. Whether to assumes pixels are of\n *      half the actual dimensions, and yields more accurate resizes. This flag\n *      would also make the floating point coordinates of the top left pixel\n *      0.5, 0.5.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction resizeNearestNeighbor_<T extends Tensor3D|Tensor4D>(\n    images: T|TensorLike, size: [number, number], alignCorners = false,\n    halfPixelCenters = false): T {\n  const $images = convertToTensor(images, 'images', 'resizeNearestNeighbor');\n\n  util.assert(\n      $images.rank === 3 || $images.rank === 4,\n      () => `Error in resizeNearestNeighbor: x must be rank 3 or 4, but got ` +\n          `rank ${$images.rank}.`);\n  util.assert(\n      size.length === 2,\n      () =>\n          `Error in resizeNearestNeighbor: new shape must 2D, but got shape ` +\n          `${size}.`);\n  util.assert(\n      $images.dtype === 'float32' || $images.dtype === 'int32',\n      () => '`images` must have `int32` or `float32` as dtype');\n  util.assert(\n      halfPixelCenters === false || alignCorners === false,\n      () => `Error in resizeNearestNeighbor: If halfPixelCenters is true, ` +\n          `alignCorners must be false.`);\n  let batchImages = $images as Tensor4D;\n  let reshapedTo4D = false;\n  if ($images.rank === 3) {\n    reshapedTo4D = true;\n    batchImages = reshape(\n        $images, [1, $images.shape[0], $images.shape[1], $images.shape[2]]);\n  }\n  const [] = size;\n\n  const inputs: ResizeNearestNeighborInputs = {images: batchImages};\n  const attrs:\n      ResizeNearestNeighborAttrs = {alignCorners, halfPixelCenters, size};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  const res = ENGINE.runKernel(\n                  ResizeNearestNeighbor, inputs as {} as NamedTensorMap,\n                  attrs as {} as NamedAttrMap) as T;\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]) as T;\n  }\n  return res;\n}\n\nexport const resizeNearestNeighbor = op({resizeNearestNeighbor_});\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport { Tensor1D, Tensor3D } from '../../tensor';\nimport { tensor1d } from '../tensor1d';\nimport { TensorLike } from '../../types';\nimport { op } from '../operation';\nimport { cast } from '../cast';\nimport { split } from '../split';\nimport { bincount } from '../bincount';\nimport { lessEqual } from '../less_equal';\nimport { greater } from '../greater';\nimport { sum } from '../sum';\nimport { add } from '../add';\nimport { mul } from '../mul';\nimport { div } from '../div';\nimport { sub } from '../sub';\nimport { round } from '../round';\nimport { where } from '../where';\nimport { fill } from '../fill';\nimport {slice} from '../slice';\nimport { range } from '../range';\nimport { tensor } from '../tensor';\nimport * as util from '../../util';\nimport { convertToTensor } from '../../tensor_util_env';\n\n/**\n * Performs image binarization with corresponding threshold\n * (depends on the method)value, which creates a binary image from a grayscale.\n * @param image 3d tensor of shape [imageHeight,imageWidth, depth],\n * where imageHeight and imageWidth must be positive.The image color\n * range should be [0, 255].\n * @param method Optional string from `'binary' | 'otsu'`\n * which specifies the method for thresholding. Defaults to 'binary'.\n * @param inverted Optional boolean whichspecifies\n * if colours should be inverted. Defaults to false.\n * @param threshValue Optional number which defines threshold value from 0 to 1.\n * Defaults to 0.5.\n * @return A 3d tensor of shape [imageHeight,imageWidth, depth], which\n * contains binarized image.\n */\n\nfunction threshold_(\n    image: Tensor3D | TensorLike,\n    method = 'binary',\n    inverted = false,\n    threshValue = 0.5\n): Tensor3D {\n    const $image = convertToTensor(image, 'image', 'threshold');\n\n    /* 0.2989, 0.5870, 0.1140 are represent luma coefficients in CCIR601.\n\tReference for converting between RGB and grayscale: https://en.wikipedia.org/wiki/Luma_%28video%29  */\n\n    const RED_INTENCITY_COEF = 0.2989;\n    const GREEN_INTENCITY_COEF = 0.5870;\n    const BLUE_INTENCITY_COEF = 0.1140;\n    const totalPixelsInImage = $image.shape[0] * $image.shape[1];\n\n    let $threshold = mul(tensor1d([threshValue]), 255);\n    let r, g, b, grayscale;\n\n    util.assert(\n        $image.rank === 3,\n        () => 'Error in threshold: image must be rank 3,' +\n            `but got rank ${$image.rank}.`);\n\n    util.assert(\n        $image.shape[2] === 3 || $image.shape[2]=== 1,\n        () => 'Error in threshold: ' +\n            'image color channel must be equal to 3 or 1' +\n            `but got ${$image.shape[2]}.`);\n\n    util.assert(\n      $image.dtype === 'int32' || $image.dtype === 'float32',\n      () => 'Error in dtype: image dtype must be int32 or float32,' +\n          `but got dtype ${$image.dtype}.`);\n\n    util.assert(\n      method === 'otsu' || method === 'binary',\n      () => `Method must be binary or otsu, but was ${method}`);\n\n    if ($image.shape[2] === 3) {\n        [r, g, b] = split($image, [1, 1, 1], -1);\n        const $r = mul(r,RED_INTENCITY_COEF);\n        const $g = mul(g,GREEN_INTENCITY_COEF);\n        const $b = mul(b,BLUE_INTENCITY_COEF);\n        grayscale = add(add($r, $g), $b);\n    } else {\n        grayscale = image;\n    }\n\n    if (method === 'otsu') {\n        const $histogram = bincount(cast(round(grayscale), 'int32') as Tensor1D,\n            tensor([]),\n            256);\n        $threshold = otsu($histogram, totalPixelsInImage);\n    }\n\n    const invCondition = inverted ?\n        lessEqual(grayscale, $threshold) : greater(grayscale, $threshold);\n\n    const result = cast(mul(invCondition,255), 'int32');\n\n    return result as Tensor3D;\n}\n\nfunction otsu(histogram: Tensor1D, total: number):Tensor1D {\n\n    let bestThresh = tensor1d([-1]);\n    let bestInBetVar = tensor1d([0]);\n    let cInBetVar = tensor1d([0]);\n    let classFirst, classSecond, meanFirst,\n        meanSec, weightForeground, weightBack;\n\n    for (let index = 0; index < histogram.size-1; index++) {\n\n        classFirst = slice(histogram, 0, index + 1);\n\n        classSecond = slice(histogram,index + 1);\n\n        weightForeground = div(sum(classFirst),total);\n\n        weightBack = div(sum(classSecond),total);\n\n        const meanFirstDivA = sum(mul(classFirst, range(0, classFirst.size)));\n\n        meanFirst = div(meanFirstDivA, sum(classFirst) );\n\n        const meanSecFill = fill(classSecond.shape, classFirst.size);\n        const meanSecAdd = add(range(0,classSecond.size),meanSecFill);\n        const meanSecMul = mul(classSecond, (meanSecAdd));\n        meanSec = div(sum(meanSecMul), sum(classSecond));\n\n        const cInBetVarSubA = sub(meanFirst, meanSec);\n        const cInBetVarSubB = sub(meanFirst, meanSec);\n        const cInBetVarMul = mul(weightForeground, weightBack);\n        cInBetVar = mul(mul(cInBetVarMul,cInBetVarSubA), cInBetVarSubB);\n\n        const condition = greater(cInBetVar, bestInBetVar);\n\n        bestInBetVar = where(condition, cInBetVar, bestInBetVar);\n\n        bestThresh = where(condition, tensor1d([index]), bestThresh);\n\n    }\n    return bestThresh;\n}\n\nexport const threshold = op({ threshold_ });\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../../engine';\nimport {Transform, TransformAttrs, TransformInputs} from '../../kernel_names';\nimport {NamedAttrMap} from '../../kernel_registry';\nimport {Tensor2D, Tensor4D} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport * as util from '../../util';\n\nimport {op} from '../operation';\n\n/**\n * Applies the given transform(s) to the image(s).\n *\n * @param image 4d tensor of shape `[batch, imageHeight, imageWidth, depth]`.\n * @param transforms Projective transform matrix/matrices. A tensor1d of length\n *     8 or tensor of size N x 8. If one row of transforms is [a0, a1, a2, b0\n *     b1, b2, c0, c1], then it maps the output point (x, y) to a transformed\n *     input point (x', y') = ((a0 x + a1 y + a2) / k, (b0 x + b1 y + b2) / k),\n *     where k = c0 x + c1 y + 1. The transforms are inverted compared to the\n *     transform mapping input points to output points.\n * @param interpolation Interpolation mode.\n *     Supported values: 'nearest', 'bilinear'. Default to 'nearest'.\n * @param fillMode Points outside the boundaries of the input are filled\n *     according to the given mode, one of 'constant', 'reflect', 'wrap',\n *     'nearest'. Default to 'constant'.\n *     'reflect': (d c b a | a b c d | d c b a ) The input is extended by\n *     reflecting about the edge of the last pixel.\n *     'constant': (k k k k | a b c d | k k k k) The input is extended by\n *     filling all values beyond the edge with the same constant value k.\n *     'wrap': (a b c d | a b c d | a b c d) The input is extended by\n *     wrapping around to the opposite edge.\n *     'nearest': (a a a a | a b c d | d d d d) The input is extended by\n *     the nearest pixel.\n * @param fillValue A float represents the value to be filled outside the\n *     boundaries when fillMode is 'constant'.\n * @param Output dimension after the transform, [height, width]. If undefined,\n *     output is the same size as input image.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction transform_(\n    image: Tensor4D|TensorLike, transforms: Tensor2D|TensorLike,\n    interpolation: 'nearest'|'bilinear' = 'nearest',\n    fillMode: 'constant'|'reflect'|'wrap'|'nearest' = 'constant', fillValue = 0,\n    outputShape?: [number, number]): Tensor4D {\n  const $image = convertToTensor(image, 'image', 'transform', 'float32');\n  const $transforms =\n      convertToTensor(transforms, 'transforms', 'transform', 'float32');\n\n  util.assert(\n      $image.rank === 4,\n      () => 'Error in transform: image must be rank 4,' +\n          `but got rank ${$image.rank}.`);\n\n  util.assert(\n      $transforms.rank === 2 &&\n          ($transforms.shape[0] === $image.shape[0] ||\n           $transforms.shape[0] === 1) &&\n          $transforms.shape[1] === 8,\n      () => `Error in transform: Input transform should be batch x 8 or 1 x 8`);\n\n  util.assert(\n      outputShape == null || outputShape.length === 2,\n      () =>\n          'Error in transform: outputShape must be [height, width] or null, ' +\n          `but got ${outputShape}.`);\n\n  const inputs: TransformInputs = {image: $image, transforms: $transforms};\n  const attrs:\n      TransformAttrs = {interpolation, fillMode, fillValue, outputShape};\n\n  return ENGINE.runKernel(\n      Transform, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const transform = op({transform_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {assert} from '../../util';\n\nimport {greaterEqual} from '../greater_equal';\nimport {lessEqual} from '../less_equal';\nimport {logicalAnd} from '../logical_and';\nimport {op} from '../operation';\nimport {range} from '../range';\nimport {reshape} from '../reshape';\nimport {scalar} from '../scalar';\nimport {stack} from '../stack';\nimport {sub} from '../sub';\nimport {unstack} from '../unstack';\nimport {where} from '../where';\nimport {zeros} from '../zeros';\n\n/**\n * Copy a tensor setting everything outside a central band in each innermost\n * matrix to zero.\n *\n * The band part is computed as follows: Assume input has `k` dimensions\n * `[I, J, K, ..., M, N]`, then the output is a tensor with the same shape where\n * `band[i, j, k, ..., m, n] = in_band(m, n) * input[i, j, k, ..., m, n]`.\n * The indicator function\n * `in_band(m, n) = (num_lower < 0 || (m-n) <= num_lower))`\n * `&& (num_upper < 0 || (n-m) <= num_upper)`\n *\n * ```js\n * const x = tf.tensor2d([[ 0,  1,  2, 3],\n *                        [-1,  0,  1, 2],\n *                        [-2, -1,  0, 1],\n *                        [-3, -2, -1, 0]]);\n * let y = tf.linalg.bandPart(x, 1, -1);\n * y.print(); // [[ 0,  1,  2, 3],\n *            //  [-1,  0,  1, 2],\n *            //  [ 0, -1,  0, 1],\n *            //  [ 0, 0 , -1, 0]]\n * let z = tf.linalg.bandPart(x, 2, 1);\n * z.print(); // [[ 0,  1,  0, 0],\n *            //  [-1,  0,  1, 0],\n *            //  [-2, -1,  0, 1],\n *            //  [ 0, -2, -1, 0]]\n * ```\n *\n * @param x Rank `k` tensor\n * @param numLower Number of subdiagonals to keep.\n *   If negative, keep entire lower triangle.\n * @param numUpper Number of subdiagonals to keep.\n *   If negative, keep entire upper triangle.\n * @returns Rank `k` tensor of the same shape as input.\n *   The extracted banded tensor.\n *\n * @doc {heading:'Operations', subheading:'Linear Algebra', namespace:'linalg'}\n */\nfunction bandPart_<T extends Tensor>(\n    a: T|TensorLike, numLower: number, numUpper: number): T {\n  assert(\n      numLower % 1 === 0,\n      () => `bandPart(): numLower must be an integer, got ${numLower}.`);\n  assert(\n      numUpper % 1 === 0,\n      () => `bandPart(): numUpper must be an integer, got ${numUpper}.`);\n\n  const $a = convertToTensor(a, 'a', 'bandPart');\n\n  assert(\n      $a.rank >= 2,\n      () => `bandPart(): Rank must be at least 2, got ${$a.rank}.`);\n\n  const shape = $a.shape;\n  const [M, N] = $a.shape.slice(-2);\n\n  if (!(numLower <= M)) {\n    throw new Error(\n        `bandPart(): numLower (${numLower})` +\n        ` must not be greater than the number of rows (${M}).`);\n  }\n  if (!(numUpper <= N)) {\n    throw new Error(\n        `bandPart(): numUpper (${numUpper})` +\n        ` must not be greater than the number of columns (${N}).`);\n  }\n\n  if (numLower < 0) {\n    numLower = M;\n  }\n  if (numUpper < 0) {\n    numUpper = N;\n  }\n\n  const i = reshape(range(0, M, 1, 'int32'), [-1, 1]);\n  const j = range(0, N, 1, 'int32');\n  const ij = sub(i, j);\n\n  const inBand = logicalAnd(\n      lessEqual(ij, scalar(+numLower, 'int32')),\n      greaterEqual(ij, scalar(-numUpper, 'int32')));\n\n  const zero = zeros([M, N], $a.dtype);\n\n  return reshape(\n             stack(unstack(reshape($a, [-1, M, N]))\n                       .map(mat => where(inBand, mat, zero))),\n             shape) as T;\n}\n\nexport const bandPart = op({bandPart_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {Tensor1D, Tensor2D} from '../../tensor';\nimport {assert} from '../../util';\n\nimport {div} from '../div';\nimport {mul} from '../mul';\nimport {norm} from '../norm';\nimport {op} from '../operation';\nimport {split} from '../split';\nimport {squeeze} from '../squeeze';\nimport {stack} from '../stack';\nimport {sub} from '../sub';\nimport {sum} from '../sum';\n\n/**\n * Gram-Schmidt orthogonalization.\n *\n * ```js\n * const x = tf.tensor2d([[1, 2], [3, 4]]);\n * let y = tf.linalg.gramSchmidt(x);\n * y.print();\n * console.log('Othogonalized:');\n * y.dot(y.transpose()).print();  // should be nearly the identity matrix.\n * console.log('First row direction maintained:');\n * const data = await y.array();\n * console.log(data[0][1] / data[0][0]);  // should be nearly 2.\n * ```\n *\n * @param xs The vectors to be orthogonalized, in one of the two following\n *   formats:\n *   - An Array of `tf.Tensor1D`.\n *   - A `tf.Tensor2D`, i.e., a matrix, in which case the vectors are the rows\n *     of `xs`.\n *   In each case, all the vectors must have the same length and the length\n *   must be greater than or equal to the number of vectors.\n * @returns The orthogonalized and normalized vectors or matrix.\n *   Orthogonalization means that the vectors or the rows of the matrix\n *   are orthogonal (zero inner products). Normalization means that each\n *   vector or each row of the matrix has an L2 norm that equals `1`.\n *\n * @doc {heading:'Operations', subheading:'Linear Algebra', namespace:'linalg'}\n */\nfunction gramSchmidt_(xs: Tensor1D[]|Tensor2D): Tensor1D[]|Tensor2D {\n  let inputIsTensor2D: boolean;\n  if (Array.isArray(xs)) {\n    inputIsTensor2D = false;\n    assert(\n        xs != null && xs.length > 0,\n        () => 'Gram-Schmidt process: input must not be null, undefined, or ' +\n            'empty');\n    const dim = xs[0].shape[0];\n    for (let i = 1; i < xs.length; ++i) {\n      assert(\n          xs[i].shape[0] === dim,\n          () =>\n              'Gram-Schmidt: Non-unique lengths found in the input vectors: ' +\n              `(${(xs as Tensor1D[])[i].shape[0]} vs. ${dim})`);\n    }\n  } else {\n    inputIsTensor2D = true;\n    xs = split(xs, xs.shape[0], 0).map(x => squeeze(x, [0]));\n  }\n\n  assert(\n      xs.length <= xs[0].shape[0],\n      () => `Gram-Schmidt: Number of vectors (${\n                (xs as Tensor1D[]).length}) exceeds ` +\n          `number of dimensions (${(xs as Tensor1D[])[0].shape[0]}).`);\n\n  const ys: Tensor1D[] = [];\n  const xs1d = xs;\n  for (let i = 0; i < xs.length; ++i) {\n    ys.push(ENGINE.tidy(() => {\n      let x = xs1d[i];\n      if (i > 0) {\n        for (let j = 0; j < i; ++j) {\n          const proj = mul(sum(mul(ys[j], x)), ys[j]);\n          x = sub(x, proj);\n        }\n      }\n      return div(x, norm(x, 'euclidean'));\n    }));\n  }\n\n  if (inputIsTensor2D) {\n    return stack(ys, 0) as Tensor2D;\n  } else {\n    return ys;\n  }\n}\n\nexport const gramSchmidt = op({gramSchmidt_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../../engine';\nimport {dispose} from '../../globals';\nimport {Tensor, Tensor2D} from '../../tensor';\nimport {assert} from '../../util';\n\nimport {clone} from '../clone';\nimport {concat} from '../concat';\nimport {div} from '../div';\nimport {eye} from '../eye';\nimport {greater} from '../greater';\nimport {matMul} from '../mat_mul';\nimport {mul} from '../mul';\nimport {neg} from '../neg';\nimport {norm} from '../norm';\nimport {op} from '../operation';\nimport {reshape} from '../reshape';\nimport {slice} from '../slice';\nimport {stack} from '../stack';\nimport {sub} from '../sub';\nimport {tensor2d} from '../tensor2d';\nimport {transpose} from '../transpose';\nimport {unstack} from '../unstack';\nimport {where} from '../where';\n\n/**\n * Compute QR decomposition of m-by-n matrix using Householder transformation.\n *\n * Implementation based on\n *   [http://www.cs.cornell.edu/~bindel/class/cs6210-f09/lec18.pdf]\n * (http://www.cs.cornell.edu/~bindel/class/cs6210-f09/lec18.pdf)\n *\n * ```js\n * const a = tf.tensor2d([[1, 2], [3, 4]]);\n * let [q, r] = tf.linalg.qr(a);\n * console.log('Q');\n * q.print();\n * console.log('R');\n * r.print();\n * console.log('Orthogonalized');\n * q.dot(q.transpose()).print()  // should be nearly the identity matrix.\n * console.log('Reconstructed');\n * q.dot(r).print(); // should be nearly [[1, 2], [3, 4]];\n * ```\n *\n * @param x The `tf.Tensor` to be QR-decomposed. Must have rank >= 2. Suppose\n *   it has the shape `[..., M, N]`.\n * @param fullMatrices An optional boolean parameter. Defaults to `false`.\n *   If `true`, compute full-sized `Q`. If `false` (the default),\n *   compute only the leading N columns of `Q` and `R`.\n * @returns An `Array` of two `tf.Tensor`s: `[Q, R]`. `Q` is a unitary matrix,\n *   i.e., its columns all have unit norm and are mutually orthogonal.\n *   If `M >= N`,\n *     If `fullMatrices` is `false` (default),\n *       - `Q` has a shape of `[..., M, N]`,\n *       - `R` has a shape of `[..., N, N]`.\n *     If `fullMatrices` is `true` (default),\n *       - `Q` has a shape of `[..., M, M]`,\n *       - `R` has a shape of `[..., M, N]`.\n *   If `M < N`,\n *     - `Q` has a shape of `[..., M, M]`,\n *     - `R` has a shape of `[..., M, N]`.\n * @throws If the rank of `x` is less than 2.\n *\n * @doc {heading:'Operations',\n *       subheading:'Linear Algebra',\n *       namespace:'linalg'}\n */\nfunction qr_(x: Tensor, fullMatrices = false): [Tensor, Tensor] {\n  assert(\n      x.rank >= 2,\n      () => `qr() requires input tensor to have a rank >= 2, but got rank ${\n          x.rank}`);\n\n  if (x.rank === 2) {\n    return qr2d(x as Tensor2D, fullMatrices);\n  } else {\n    // Rank > 2.\n    // TODO(cais): Below we split the input into individual 2D tensors,\n    //   perform QR decomposition on them and then stack the results back\n    //   together. We should explore whether this can be parallelized.\n    const outerDimsProd = x.shape.slice(0, x.shape.length - 2)\n                              .reduce((value, prev) => value * prev);\n    const x2ds = unstack(\n        reshape(\n            x,\n            [\n              outerDimsProd, x.shape[x.shape.length - 2],\n              x.shape[x.shape.length - 1]\n            ]),\n        0);\n    const q2ds: Tensor2D[] = [];\n    const r2ds: Tensor2D[] = [];\n    x2ds.forEach(x2d => {\n      const [q2d, r2d] = qr2d(x2d as Tensor2D, fullMatrices);\n      q2ds.push(q2d);\n      r2ds.push(r2d);\n    });\n    const q = reshape(stack(q2ds, 0), x.shape);\n    const r = reshape(stack(r2ds, 0), x.shape);\n    return [q, r];\n  }\n}\n\nfunction qr2d(x: Tensor2D, fullMatrices = false): [Tensor2D, Tensor2D] {\n  return ENGINE.tidy(() => {\n    assert(\n        x.shape.length === 2,\n        () => `qr2d() requires a 2D Tensor, but got a ${\n            x.shape.length}D Tensor.`);\n\n    const m = x.shape[0];\n    const n = x.shape[1];\n\n    let q = eye(m);    // Orthogonal transform so far.\n    let r = clone(x);  // Transformed matrix so far.\n\n    const one2D = tensor2d([[1]], [1, 1]);\n    let w: Tensor2D = clone(one2D);\n\n    const iters = m >= n ? n : m;\n    for (let j = 0; j < iters; ++j) {\n      // This tidy within the for-loop ensures we clean up temporary\n      // tensors as soon as they are no longer needed.\n      const rTemp = r;\n      const wTemp = w;\n      const qTemp = q;\n      [w, r, q] = ENGINE.tidy((): [Tensor2D, Tensor2D, Tensor2D] => {\n        // Find H = I - tau * w * w', to put zeros below R(j, j).\n        const rjEnd1 = slice(r, [j, j], [m - j, 1]);\n        const normX = norm(rjEnd1);\n        const rjj = slice(r, [j, j], [1, 1]);\n\n        // The sign() function returns 0 on 0, which causes division by zero.\n        const s = where(greater(rjj, 0), tensor2d([[-1]]), tensor2d([[1]]));\n\n        const u1 = sub(rjj, mul(s, normX));\n        const wPre = div(rjEnd1, u1);\n        if (wPre.shape[0] === 1) {\n          w = clone(one2D);\n        } else {\n          w = concat(\n              [\n                one2D,\n                slice(wPre, [1, 0], [wPre.shape[0] - 1, wPre.shape[1]]) as\n                    Tensor2D\n              ],\n              0);\n        }\n        const tau = neg(div(matMul(s, u1), normX)) as Tensor2D;\n\n        // -- R := HR, Q := QH.\n        const rjEndAll = slice(r, [j, 0], [m - j, n]);\n        const tauTimesW: Tensor2D = mul(tau, w);\n        const wT: Tensor2D = transpose(w);\n        if (j === 0) {\n          r = sub(rjEndAll, matMul(tauTimesW, matMul(wT, rjEndAll)));\n        } else {\n          const rTimesTau: Tensor2D =\n              sub(rjEndAll, matMul(tauTimesW, matMul(wT, rjEndAll)));\n          r = concat([slice(r, [0, 0], [j, n]), rTimesTau], 0);\n        }\n        const tawTimesWT: Tensor2D = transpose(tauTimesW);\n        const qAllJEnd = slice(q, [0, j], [m, q.shape[1] - j]);\n        if (j === 0) {\n          q = sub(qAllJEnd, matMul(matMul(qAllJEnd, w), tawTimesWT));\n        } else {\n          const qTimesTau: Tensor2D =\n              sub(qAllJEnd, matMul(matMul(qAllJEnd, w), tawTimesWT));\n          q = concat([slice(q, [0, 0], [m, j]), qTimesTau], 1);\n        }\n        return [w, r, q];\n      });\n      dispose([rTemp, wTemp, qTemp]);\n    }\n\n    if (!fullMatrices && m > n) {\n      q = slice(q, [0, 0], [m, n]);\n      r = slice(r, [0, 0], [n, n]);\n    }\n\n    return [q, r];\n  }) as [Tensor2D, Tensor2D];\n}\n\nexport const qr = op({qr_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\n\nimport {cast} from '../cast';\nimport {div} from '../div';\nimport {Reduction} from '../loss_ops_utils';\nimport {mean} from '../mean';\nimport {mul} from '../mul';\nimport {notEqual} from '../not_equal';\nimport {ones} from '../ones';\nimport {op} from '../operation';\nimport {scalar} from '../scalar';\nimport {sum} from '../sum';\n\n/**\n * Computes the weighted loss between two tensors.\n *\n * @param losses Tensor of shape `[batch_size, d1, ... dN]`.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `losses`, and must be broadcastable to `losses` (i.e., all\n *    dimensions must be either `1`, or the same as the corresponding\n *    `losses` dimension).\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction computeWeightedLoss_<T extends Tensor, O extends Tensor>(\n    losses: T|TensorLike, weights?: Tensor|TensorLike,\n    reduction = Reduction.SUM_BY_NONZERO_WEIGHTS): O {\n  const $losses = convertToTensor(losses, 'losses', 'computeWeightedLoss');\n  let $weights: Tensor = null;\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'computeWeightedLoss');\n  }\n\n  const weightedLoss = ($weights == null) ? $losses : mul($losses, $weights);\n\n  if (reduction === Reduction.NONE) {\n    return weightedLoss as O;\n  }\n  if (reduction === Reduction.SUM) {\n    return sum(weightedLoss);\n  }\n  if (reduction === Reduction.MEAN) {\n    if ($weights == null) {\n      return mean(weightedLoss);\n    } else {\n      const broadcastFactor = $losses.size / $weights.size;\n      const result = div(sum(weightedLoss), sum($weights));\n      return broadcastFactor > 1 ? div(result, scalar(broadcastFactor)) :\n                                   result as O;\n    }\n  }\n  if (reduction === Reduction.SUM_BY_NONZERO_WEIGHTS) {\n    if ($weights == null) {\n      return div(sum(weightedLoss), scalar($losses.size));\n    } else {\n      const broadcastedWeights = mul($weights, ones($losses.shape));\n\n      const numNonZeros =\n          cast(sum(notEqual(broadcastedWeights, scalar(0))), 'float32');\n      return div(sum(weightedLoss), numNonZeros);\n    }\n  }\n\n  throw Error(`Unknown reduction: ${reduction}`);\n}\nexport const computeWeightedLoss = op({computeWeightedLoss_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {assertShapesMatch} from '../../util';\nimport {abs} from '../abs';\nimport {Reduction} from '../loss_ops_utils';\nimport {op} from '../operation';\nimport {sub} from '../sub';\n\nimport {computeWeightedLoss} from './compute_weighted_loss';\n\n/**\n * Computes the absolute difference loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction absoluteDifference_<T extends Tensor, O extends Tensor>(\n    labels: T|TensorLike, predictions: T|TensorLike,\n    weights?: Tensor|TensorLike,\n    reduction = Reduction.SUM_BY_NONZERO_WEIGHTS): O {\n  const $labels = convertToTensor(labels, 'labels', 'absoluteDifference');\n  const $predictions =\n      convertToTensor(predictions, 'predictions', 'absoluteDifference');\n  let $weights: Tensor = null;\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'absoluteDifference');\n  }\n  assertShapesMatch(\n      $labels.shape, $predictions.shape, 'Error in absoluteDifference: ');\n\n  const losses = abs(sub($labels, $predictions));\n  return computeWeightedLoss(losses, $weights, reduction);\n}\n\nexport const absoluteDifference = op({absoluteDifference_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {assertShapesMatch} from '../../util';\nimport {Reduction} from '../loss_ops_utils';\nimport {mul} from '../mul';\nimport {op} from '../operation';\nimport {scalar} from '../scalar';\nimport {sub} from '../sub';\nimport {sum} from '../sum';\n\nimport {computeWeightedLoss} from './compute_weighted_loss';\n\n/**\n * Computes the cosine distance loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param axis The dimension along which the cosine distance is computed.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction cosineDistance_<T extends Tensor, O extends Tensor>(\n    labels: T|TensorLike, predictions: T|TensorLike, axis: number,\n    weights?: Tensor|TensorLike,\n    reduction = Reduction.SUM_BY_NONZERO_WEIGHTS): O {\n  const $labels = convertToTensor(labels, 'labels', 'cosineDistance');\n  const $predictions =\n      convertToTensor(predictions, 'predictions', 'cosineDistance');\n  let $weights: Tensor = null;\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'cosineDistance');\n  }\n  assertShapesMatch(\n      $labels.shape, $predictions.shape, 'Error in cosineDistance: ');\n\n  const one = scalar(1);\n  const losses = sub(one, sum(mul($labels, $predictions), axis, true));\n  return computeWeightedLoss(losses, $weights, reduction);\n}\nexport const cosineDistance = op({cosineDistance_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {assertShapesMatch} from '../../util';\nimport {Reduction} from '../loss_ops_utils';\nimport {mul} from '../mul';\nimport {op} from '../operation';\nimport {relu} from '../relu';\nimport {scalar} from '../scalar';\nimport {sub} from '../sub';\n\nimport {computeWeightedLoss} from './compute_weighted_loss';\n\n/**\n * Computes the Hinge loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction hingeLoss_<T extends Tensor, O extends Tensor>(\n    labels: T|TensorLike, predictions: T|TensorLike,\n    weights?: Tensor|TensorLike,\n    reduction = Reduction.SUM_BY_NONZERO_WEIGHTS): O {\n  let $labels = convertToTensor(labels, 'labels', 'hingeLoss');\n  const $predictions = convertToTensor(predictions, 'predictions', 'hingeLoss');\n  let $weights: Tensor = null;\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'hingeLoss');\n  }\n  assertShapesMatch($labels.shape, $predictions.shape, 'Error in hingeLoss: ');\n\n  const one = scalar(1);\n  // Convert binary labels to (-1, 1)\n  $labels = sub(mul(scalar(2), $labels), one);\n  const losses = relu(sub(one, mul($labels, $predictions)));\n  return computeWeightedLoss(losses, $weights, reduction);\n}\nexport const hingeLoss = op({hingeLoss_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {assertShapesMatch} from '../../util';\nimport {abs} from '../abs';\nimport {add} from '../add';\nimport {Reduction} from '../loss_ops_utils';\nimport {minimum} from '../minimum';\nimport {mul} from '../mul';\nimport {op} from '../operation';\nimport {scalar} from '../scalar';\nimport {square} from '../square';\nimport {sub} from '../sub';\n\nimport {computeWeightedLoss} from './compute_weighted_loss';\n\n/**\n * Computes the huber loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param delta Point where huber loss changes from quadratic to linear.\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`.\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction huberLoss_<T extends Tensor, O extends Tensor>(\n    labels: T|TensorLike, predictions: T|TensorLike,\n    weights?: Tensor|TensorLike, delta = 1.0,\n    reduction = Reduction.SUM_BY_NONZERO_WEIGHTS): O {\n  const $labels = convertToTensor(labels, 'labels', 'huberLoss');\n  const $predictions = convertToTensor(predictions, 'predictions', 'huberLoss');\n  let $weights: Tensor = null;\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'huberLoss');\n  }\n  assertShapesMatch($labels.shape, $predictions.shape, 'Error in huberLoss: ');\n\n  const deltaScalar = scalar(delta);\n  const error = abs(sub($predictions, $labels));\n  const quadratic = minimum(error, deltaScalar);\n  const linear = sub(error, quadratic);\n\n  const losses =\n      add(mul(scalar(0.5), square(quadratic)), mul(deltaScalar, linear));\n  return computeWeightedLoss(losses, $weights, reduction);\n}\nexport const huberLoss = op({huberLoss_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {assertShapesMatch} from '../../util';\nimport {add} from '../add';\nimport {log} from '../log';\nimport {Reduction} from '../loss_ops_utils';\nimport {mul} from '../mul';\nimport {neg} from '../neg';\nimport {op} from '../operation';\nimport {scalar} from '../scalar';\nimport {sub} from '../sub';\n\nimport {computeWeightedLoss} from './compute_weighted_loss';\n\n/**\n * Computes the log loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param epsilon A small increment to avoid taking log of zero\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction logLoss_<T extends Tensor, O extends Tensor>(\n    labels: T|TensorLike, predictions: T|TensorLike,\n    weights?: Tensor|TensorLike, epsilon = 1e-7,\n    reduction = Reduction.SUM_BY_NONZERO_WEIGHTS): O {\n  const $labels = convertToTensor(labels, 'labels', 'logLoss');\n  const $predictions = convertToTensor(predictions, 'predictions', 'logLoss');\n  let $weights: Tensor = null;\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'logLoss');\n  }\n  assertShapesMatch($labels.shape, $predictions.shape, 'Error in logLoss: ');\n\n  const one = scalar(1);\n  const epsilonScalar = scalar(epsilon);\n\n  const l1 = neg(mul($labels, log(add($predictions, epsilonScalar))));\n  const l2 =\n      mul(sub(one, $labels), log(add(sub(one, $predictions), epsilonScalar)));\n  const losses = sub(l1, l2);\n  return computeWeightedLoss(losses, $weights, reduction);\n}\nexport const logLoss = op({logLoss_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {assertShapesMatch} from '../../util';\nimport {Reduction} from '../loss_ops_utils';\nimport {op} from '../operation';\nimport {squaredDifference} from '../squared_difference';\n\nimport {computeWeightedLoss} from './compute_weighted_loss';\n\n/**\n * Computes the mean squared error between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction meanSquaredError_<T extends Tensor, O extends Tensor>(\n    labels: T|TensorLike, predictions: T|TensorLike,\n    weights?: Tensor|TensorLike,\n    reduction = Reduction.SUM_BY_NONZERO_WEIGHTS): O {\n  const $labels = convertToTensor(labels, 'labels', 'meanSquaredError');\n  const $predictions =\n      convertToTensor(predictions, 'predictions', 'meanSquaredError');\n  let $weights: Tensor = null;\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'meanSquaredError');\n  }\n  assertShapesMatch(\n      $labels.shape, $predictions.shape, 'Error in meanSquaredError: ');\n\n  const losses = squaredDifference($labels, $predictions);\n  return computeWeightedLoss(losses, $weights, reduction);\n}\nexport const meanSquaredError = op({meanSquaredError_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {assertShapesMatch} from '../../util';\nimport {abs} from '../abs';\nimport {add} from '../add';\nimport {exp} from '../exp';\nimport {log1p} from '../log1p';\nimport {Reduction} from '../loss_ops_utils';\nimport {mul} from '../mul';\nimport {neg} from '../neg';\nimport {op} from '../operation';\nimport {relu} from '../relu';\nimport {scalar} from '../scalar';\nimport {sub} from '../sub';\n\nimport {computeWeightedLoss} from './compute_weighted_loss';\n\nfunction sigmoidCrossEntropyWithLogits_<T extends Tensor, O extends Tensor>(\n    labels: T|TensorLike, logits: T|TensorLike): O {\n  const $labels =\n      convertToTensor(labels, 'labels', 'sigmoidCrossEntropyWithLogits');\n  const $logits =\n      convertToTensor(logits, 'logits', 'sigmoidCrossEntropyWithLogits');\n  assertShapesMatch(\n      $labels.shape, $logits.shape, 'Error in sigmoidCrossEntropyWithLogits: ');\n\n  /**\n   * Implementation Details:\n   *\n   * For brevity, let `x = logits`, `z = labels`.  The logistic loss is\n   *     z * -log(sigmoid(x)) + (1 - z) * -log(1 - sigmoid(x))\n   *   = z * -log(1 / (1 + exp(-x))) + (1 - z) * -log(exp(-x) / (1 + exp(-x)))\n   *   = z * log(1 + exp(-x)) + (1 - z) * (-log(exp(-x)) + log(1 + exp(-x)))\n   *   = z * log(1 + exp(-x)) + (1 - z) * (x + log(1 + exp(-x))\n   *   = (1 - z) * x + log(1 + exp(-x))\n   *   = x - x * z + log(1 + exp(-x))\n   *\n   *   For x < 0, to avoid overflow in exp(-x), we reformulate the above\n   *     x - x * z + log(1 + exp(-x))\n   *   = log(exp(x)) - x * z + log(1 + exp(-x))\n   *   = - x * z + log(1 + exp(x))\n   *\n   * Hence, to ensure stability and avoid overflow, the implementation uses\n   * this equivalent formulation:\n   *     max(x, 0) - x * z + log(1 + exp(-abs(x)))\n   */\n  const maxOutput = relu($logits);\n  const outputXTarget = mul($logits, $labels);\n  const sigmoidOutput = log1p(exp(neg(abs($logits))));\n\n  return add(sub(maxOutput, outputXTarget), sigmoidOutput);\n}\n\n/**\n * Computes the sigmoid cross entropy loss between two tensors.\n *\n * If labelSmoothing is nonzero, smooth the labels towards 1/2:\n *\n *   newMulticlassLabels = multiclassLabels * (1 - labelSmoothing)\n *                         + 0.5 * labelSmoothing\n *\n * @param multiClassLabels The ground truth output tensor of shape\n * [batch_size, num_classes], same dimensions as 'predictions'.\n * @param logits The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param labelSmoothing If greater than 0, then smooth the labels.\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc { heading: 'Training', subheading: 'Losses', namespace: 'losses' }\n */\nfunction sigmoidCrossEntropy_<T extends Tensor, O extends Tensor>(\n    multiClassLabels: T|TensorLike, logits: T|TensorLike,\n    weights?: Tensor|TensorLike, labelSmoothing = 0,\n    reduction = Reduction.SUM_BY_NONZERO_WEIGHTS): O {\n  let $multiClassLabels = convertToTensor(\n      multiClassLabels, 'multiClassLabels', 'sigmoidCrossEntropy');\n  const $logits = convertToTensor(logits, 'logits', 'sigmoidCrossEntropy');\n  let $weights: Tensor = null;\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'sigmoidCrossEntropy');\n  }\n  assertShapesMatch(\n      $multiClassLabels.shape, $logits.shape, 'Error in sigmoidCrossEntropy: ');\n\n  if (labelSmoothing > 0) {\n    const labelSmoothingScalar = scalar(labelSmoothing);\n    const one = scalar(1);\n    const half = scalar(0.5);\n\n    $multiClassLabels =\n        add(mul($multiClassLabels, sub(one, labelSmoothingScalar)),\n            mul(half, labelSmoothingScalar));\n  }\n  const losses = sigmoidCrossEntropyWithLogits_($multiClassLabels, $logits);\n\n  return computeWeightedLoss(losses, $weights, reduction);\n}\n\nexport const sigmoidCrossEntropy = op({sigmoidCrossEntropy_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {customGrad} from '../../gradients';\nimport {Tensor} from '../../tensor';\nimport {GradSaveFunc} from '../../tensor_types';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {assertShapesMatch} from '../../util';\nimport {add} from '../add';\nimport {expandShapeToKeepDim} from '../axis_util';\nimport {cast} from '../cast';\nimport {div} from '../div';\nimport {exp} from '../exp';\nimport {logSumExp} from '../log_sum_exp';\nimport {Reduction} from '../loss_ops_utils';\nimport {mul} from '../mul';\nimport {neg} from '../neg';\nimport {op} from '../operation';\nimport {reshape} from '../reshape';\nimport {scalar} from '../scalar';\nimport {sub} from '../sub';\nimport {sum} from '../sum';\n\nimport {computeWeightedLoss} from './compute_weighted_loss';\n\n/**\n * Computes softmax cross entropy between logits and labels.\n *\n * Measures the probability error in discrete classification tasks in which\n * the classes are mutually exclusive (each entry is in exactly one class).\n * For example, each CIFAR-10 image is labeled with one and only one label: an\n * image can be a dog or a truck, but not both.\n *\n * `NOTE`: While the classes are mutually exclusive, their probabilities need\n * not be. All that is required is that each row of labels is a valid\n * probability distribution. If they are not, the computation of the gradient\n * will be incorrect.\n *\n * `WARNING`: This op expects unscaled logits, since it performs a softmax on\n * logits internally for efficiency. Do not call this op with the output of\n * softmax, as it will produce incorrect results.\n *\n * logits and labels must have the same shape, e.g. [batch_size, num_classes]\n * and the same dtype.\n * @param labels The labels array.\n * @param logits The logits array.\n * @param dim The dimension softmax would be performed on. Defaults to `-1`\n *     which indicates the last dimension.\n */\nfunction softmaxCrossEntropyWithLogits_<T extends Tensor, O extends Tensor>(\n    labels: T, logits: T, dim = -1): O {\n  if (dim === -1) {\n    dim = logits.rank - 1;\n  }\n\n  if (dim !== logits.rank - 1) {\n    throw Error(\n        `Softmax cross entropy along a non-last dimension is not yet ` +\n        `supported. Labels / logits was rank ${logits.rank} ` +\n        `and dim was ${dim}`);\n  }\n  // Use a custom gradient for numerical stability.\n  const customOp =\n      customGrad((labels: Tensor, logits: Tensor, save: GradSaveFunc) => {\n        // Reference:\n        //   1. http://cs231n.github.io/linear-classify/#softmax\n        //   2. https://blog.feedly.com/tricks-of-the-trade-logsumexp/\n        const keepDims = true;\n        const lse = logSumExp(logits, [dim], keepDims);\n        const logResult = sub(cast(logits, 'float32'), lse);\n        save([labels, logResult]);\n\n        const costVector = neg(mul(logResult, labels));\n        const value: O = sum(costVector, [dim]);\n\n        const gradFunc = (dy: O, saved: Tensor[]) => {\n          const [labels, logResult] = saved;\n          const dyShape = expandShapeToKeepDim(dy.shape, [dim]);\n          return [\n            mul(reshape(dy, dyShape),\n                sub(cast(labels, 'float32'), exp(logResult))),\n            mul(reshape(dy, dyShape),\n                sub(exp(logResult), cast(labels, 'float32'))),\n          ];\n        };\n        return {value, gradFunc};\n      });\n\n  return customOp(labels, logits);\n}\n\n/**\n * Computes the softmax cross entropy loss between two tensors.\n *\n * If labelSmoothing is nonzero, smooth the labels towards 1/2:\n *\n *   newOnehotLabels = onehotLabels * (1 - labelSmoothing)\n *                         + labelSmoothing / numClasses\n *\n * @param onehotLabels One hot encoded labels\n *    [batch_size, num_classes], same dimensions as 'predictions'.\n * @param logits The predicted outputs.\n * @param weights Tensor whose rank is either 0, or 1, and must be\n *    broadcastable to `loss`  of shape [batch_size]\n * @param labelSmoothing If greater than 0, then smooth the labels.\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc { heading: 'Training', subheading: 'Losses', namespace: 'losses' }\n */\nfunction softmaxCrossEntropy_<T extends Tensor, O extends Tensor>(\n    onehotLabels: T|TensorLike, logits: T|TensorLike,\n    weights?: Tensor|TensorLike, labelSmoothing = 0,\n    reduction = Reduction.SUM_BY_NONZERO_WEIGHTS): O {\n  let $onehotLabels =\n      convertToTensor(onehotLabels, 'onehotLabels', 'softmaxCrossEntropy');\n  const $logits = convertToTensor(logits, 'logits', 'softmaxCrossEntropy');\n  let $weights: Tensor = null;\n\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'softmaxCrossEntropy');\n  }\n\n  assertShapesMatch(\n      $onehotLabels.shape, $logits.shape, 'Error in softmaxCrossEntropy: ');\n\n  if (labelSmoothing > 0) {\n    const labelSmoothingScalar = scalar(labelSmoothing);\n    const one = scalar(1);\n    const numClasses = scalar($onehotLabels.shape[1]);\n\n    $onehotLabels =\n        add(mul($onehotLabels, sub(one, labelSmoothingScalar)),\n            div(labelSmoothingScalar, numClasses));\n  }\n\n  const losses = softmaxCrossEntropyWithLogits_($onehotLabels, $logits);\n\n  return computeWeightedLoss(losses, $weights, reduction);\n}\n\nexport const softmaxCrossEntropy = op({softmaxCrossEntropy_});\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {SparseFillEmptyRows, SparseFillEmptyRowsInputs} from '../../kernel_names';\nimport {Scalar, Tensor, Tensor1D, Tensor2D} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {ScalarLike, TensorLike} from '../../types';\nimport {op} from '../operation';\n\n/**\n * The input SparseTensor is represented via the map of inputs {`indices`,\n * `values`, `denseShape`}. The output SparseTensor has the same `denseShape`\n * but with indices `outputIndices` and values `outputValues`. This op inserts a\n * single entry for every row that doesn't have any values. The index is created\n * as `[row, 0, ..., 0]` and the inserted value is `defaultValue`.\n *\n * For example, suppose `spInput` has shape [5, 6] and non-empty values:\n * [0, 1]: a\n * [0, 3]: b\n * [2, 0]: c\n * [3, 1]: d\n *\n * Rows 1 and 4 are empty, so the output will be of shape [5, 6] with values:\n * [0, 1]: a\n * [0, 3]: b\n * [1, 0]: `defaultValue`\n * [2, 0]: c\n * [3, 1]: d\n * [4, 0]: `defaultValue`\n *\n * The output SparseTensor will be in row-major order and will have the same\n * shape as the input.\n *\n * This op also returns an indicator vector shaped [dense_shape[0]] such that\n * emptyRowIndicator[i] = True iff row i was an empty row.\n *\n * And a reverse index map vector shaped [indices.shape[0]] that is used during\n * backpropagation, reverseIndexMap[i] = outi s.t. indices[i, j] ==\n * outputIndices[outi, j] for all j\n *\n * ```js\n * const result = tf.sparse.sparseFillEmptyRows(\n *   [[0, 0], [1, 0], [1, 3], [1, 4], [3, 2], [3, 3]],\n *   [0, 10, 13, 14, 32, 33], [5, 6], -1);\n * console.log(result);\n * result['outputIndices'].print(); // [[0, 0], [1, 0], [1, 3], [1, 4],\n *                                  //  [2, 0], [3, 2], [3, 3], [4, 0]]\n * result['outputValues'].print(); // [0, 10, 13, 14,-1, 32, 33, -1]\n * result['emptyRowIndicator'].print(); // [false, false, true, false, true]\n * result['reverseIndexMap'].print(); // [0, 1, 2, 3, 5, 6]\n * ```\n * @param indices: 2-D. the indices of the sparse tensor.\n * @param values: 1-D. the values of the sparse tensor.\n * @param denseShape: 1-D. the shape of the sparse tensor.\n * @param defaultValue: 0-D. default value to insert into location [row, 0, ...,\n *     0] for rows missing from the input sparse tensor.\n * @return A map with the following properties:\n *     - outputIndices\n *     - outputValues: 1-D. the values of the filled sparse tensor.\n *     - emptyRowIndicator: 1-D. whether the dense row was missing in the input\n * sparse tensor.\n *     - reverseIndexMap: 1-D. a map from the input indices to the output\n * indices.\n * @doc {heading: 'Operations', subheading: 'Sparse'}\n */\nfunction sparseFillEmptyRows_(\n    indices: Tensor2D|TensorLike, values: Tensor1D|TensorLike,\n    denseShape: Tensor1D|TensorLike,\n    defaultValue: Scalar|ScalarLike): NamedTensorMap {\n  const $indices = convertToTensor(indices, 'indices', 'sparseFillEmptyRows');\n  const $values = convertToTensor(values, 'values', 'sparseFillEmptyRows');\n  const $denseShape =\n      convertToTensor(denseShape, 'denseShape', 'sparseFillEmptyRows');\n  const $defaultValue = convertToTensor(\n      defaultValue, 'defaultValue', 'sparseFillEmptyRows', $values.dtype);\n\n  if ($indices.rank !== 2) {\n    throw new Error(`Indices should be Tensor2D but received shape\n        ${$indices.shape}`);\n  }\n  if ($values.rank !== 1) {\n    throw new Error(\n        `Values should be Tensor1D but received shape ${$values.shape}`);\n  }\n  if ($denseShape.rank !== 1) {\n    throw new Error(`Dense shape should be Tensor1D but received shape ${\n        $denseShape.shape}`);\n  }\n  if ($defaultValue.rank !== 0) {\n    throw new Error(`Default value should be a scalar but received shape ${\n        $defaultValue.shape}`);\n  }\n\n  const inputs: SparseFillEmptyRowsInputs = {\n    indices: $indices,\n    values: $values,\n    denseShape: $denseShape,\n    defaultValue: $defaultValue\n  };\n\n  const result: Tensor[] = ENGINE.runKernel(SparseFillEmptyRows, inputs as {});\n  return {\n    outputIndices: result[0],\n    outputValues: result[1],\n    emptyRowIndicator: result[2],\n    reverseIndexMap: result[3]\n  };\n}\n\nexport const sparseFillEmptyRows = op({sparseFillEmptyRows_});\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {SparseReshape, SparseReshapeInputs} from '../../kernel_names';\nimport {Tensor, Tensor1D, Tensor2D} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {op} from '../operation';\n\n/**\n * This operation has the same semantics as reshape on the represented dense\n * tensor. The `inputIndices` are recomputed based on the requested `newShape`.\n * If one component of `newShape` is the special value -1, the size of that\n * dimension is computed so that the total dense size remains constant. At most\n * one component of `newShape` can be -1. The number of dense elements implied\n * by `newShape` must be the same as the number of dense elements originally\n * implied by `inputShape`. Reshaping does not affect the order of values in the\n * SparseTensor. If the input tensor has rank R_in and N non-empty values, and\n * `newShape` has length R_out, then `inputIndices` has shape [N, R_in],\n * `inputShape` has length R_in, `outputIndices` has shape [N, R_out], and\n * `outputShape` has length R_out.\n *\n * ```js\n * const result = tf.sparse.sparseReshape(\n *   [[0, 0, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0], [1, 2, 3]],\n *   [2, 3, 6], [9, -1]);\n * console.log(result);\n * result['outputIndices'].print(); //[[0, 0], [0, 1], [1, 2], [4, 2], [8, 1]]\n * result['outputShape'].print(); // [9, 4]\n * ```\n * @param inputIndices: 2-D. N x R_in matrix with the indices of non-empty\n * values in a SparseTensor.\n * @param inputShape: 1-D. R_in Tensor1D with the input SparseTensor's dense\n * shape.\n * @param newShape: 1-D. R_out Tensor1D with the requested new dense shape.\n * @return A map with the following properties:\n *     - outputIndices: 2-D. N x R_out matrix with the updated indices of\n *       non-empty values in the output SparseTensor.\n *     - outputShape: 1-D. R_out vector with the full dense shape of the output\n *       SparseTensor. This is the same as newShape but with any -1 dimensions\n *        filled in.\n * @doc {heading: 'Operations', subheading: 'Sparse'}\n */\nfunction sparseReshape_(\n    inputIndices: Tensor2D|TensorLike, inputShape: Tensor1D|TensorLike,\n    newShape: Tensor1D|TensorLike): NamedTensorMap {\n  const $inputIndices =\n      convertToTensor(inputIndices, 'inputIndices', 'sparseReshape');\n  const $inputShape =\n      convertToTensor(inputShape, 'inputShape', 'sparseReshape');\n  const $newShape = convertToTensor(newShape, 'newShape', 'sparseReshape');\n\n  if ($inputIndices.rank !== 2) {\n    throw new Error(`Input indices should be Tensor2D but received shape\n        ${$inputIndices.shape}`);\n  }\n  if ($inputShape.rank !== 1) {\n    throw new Error(`Input shape should be Tensor1D but received shape ${\n        $inputShape.shape}`);\n  }\n  if ($newShape.rank !== 1) {\n    throw new Error(\n        `New shape should be Tensor1D but received shape ${$newShape.shape}`);\n  }\n\n  const inputs: SparseReshapeInputs = {\n    inputIndices: $inputIndices,\n    inputShape: $inputShape,\n    newShape: $newShape\n  };\n  const result: Tensor[] = ENGINE.runKernel(SparseReshape, inputs as {});\n  return {outputIndices: result[0], outputShape: result[1]};\n}\n\nexport const sparseReshape = op({sparseReshape_});\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {SparseSegmentMean, SparseSegmentMeanInputs} from '../../kernel_names';\nimport {Tensor, Tensor1D} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {op} from '../operation';\n\n/**\n * Computes the mean along sparse segments of a tensor.\n *\n * ```js\n * const c = tf.tensor2d([[1,2,3,4], [-1,-2,-3,-4], [6,7,8,9]]);\n * // Select two rows, one segment.\n * const result1 = tf.sparse.sparseSegmentMean(c,\n *                                           tf.tensor1d([0, 1], 'int32'),\n *                                           tf.tensor1d([0, 0], 'int32'));\n * result1.print(); // [[0, 0, 0, 0]]\n *\n * // Select two rows, two segments.\n * const result2 = tf.sparse.sparseSegmentMean(c,\n *                                             tf.tensor1d([0, 1], 'int32'),\n *                                             tf.tensor1d([0, 1], 'int32'));\n * result2.print(); // [[1, 2, 3, 4], [-1, -2, -3, -4]]\n *\n * // Select all rows, two segments.\n * const result3 = tf.sparse.sparseSegmentMean(c,\n *                                             tf.tensor1d([0, 1, 2], 'int32'),\n *                                             tf.tensor1d([0, 1, 1], 'int32'));\n * result3.print(); // [[1.0, 2.0, 3.0, 4.0], [2.5, 2.5, 2.5, 2.5]]\n * ```\n * @param data: A Tensor of at least one dimension with data that will be\n *     assembled in the output.\n * @param indices: A 1-D Tensor with indices into data. Has same rank as\n *     segmentIds.\n * @param segmentIds: A 1-D Tensor with indices into the output Tensor. Values\n *     should be sorted and can be repeated.\n * @return Has same shape as data, except for dimension 0 which has equal to\n *         the number of segments.\n *\n * @doc {heading: 'Operations', subheading: 'Sparse'}\n */\nfunction sparseSegmentMean_(\n    data: Tensor|TensorLike, indices: Tensor1D|TensorLike,\n    segmentIds: Tensor1D|TensorLike): Tensor {\n  const $data = convertToTensor(data, 'data', 'sparseSegmentMean');\n  const $indices = convertToTensor(indices, 'indices', 'sparseSegmentMean');\n  const $segmentIds =\n      convertToTensor(segmentIds, 'segmentIds', 'sparseSegmentMean');\n\n  if ($data.rank < 1) {\n    throw new Error(\n        `Data should be at least 1 dimensional but received scalar`);\n  }\n  if ($indices.rank !== 1) {\n    throw new Error(`Indices should be Tensor1D but received shape\n          ${$indices.shape}`);\n  }\n  if ($segmentIds.rank !== 1) {\n    throw new Error(`Segment ids should be Tensor1D but received shape\n          ${$segmentIds.shape}`);\n  }\n\n  const inputs: SparseSegmentMeanInputs = {\n    data: $data,\n    indices: $indices,\n    segmentIds: $segmentIds\n  };\n\n  return ENGINE.runKernel(SparseSegmentMean, inputs as {});\n}\n\nexport const sparseSegmentMean = op({sparseSegmentMean_});\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {SparseSegmentSum, SparseSegmentSumInputs} from '../../kernel_names';\nimport {Tensor, Tensor1D} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {op} from '../operation';\n\n/**\n * Computes the sum along sparse segments of a tensor.\n *\n * ```js\n * const c = tf.tensor2d([[1,2,3,4], [-1,-2,-3,-4], [5,6,7,8]]);\n * // Select two rows, one segment.\n * const result1 = tf.sparse.sparseSegmentSum(c,\n *                                           tf.tensor1d([0, 1], 'int32'),\n *                                           tf.tensor1d([0, 0], 'int32'));\n * result1.print(); // [[0, 0, 0, 0]]\n *\n * // Select two rows, two segment.\n * const result2 = tf.sparse.sparseSegmentSum(c,\n *                                           tf.tensor1d([0, 1], 'int32'),\n *                                           tf.tensor1d([0, 1], 'int32'));\n * result2.print(); // [[1, 2, 3, 4], [-1, -2, -3, -4]]\n *\n * // Select all rows, two segments.\n * const result3 = tf.sparse.sparseSegmentSum(c,\n *                                           tf.tensor1d([0, 1, 2], 'int32'),\n *                                           tf.tensor1d([0, 0, 1], 'int32'));\n * result3.print(); // [[0, 0, 0, 0], [5, 6, 7, 8]]\n * ```\n * @param data: A Tensor of at least one dimension with data that will be\n *     assembled in the output.\n * @param indices: A 1-D Tensor with indices into data. Has same rank as\n *     segmentIds.\n * @param segmentIds: A 1-D Tensor with indices into the output Tensor. Values\n *     should be sorted and can be repeated.\n * @return Has same shape as data, except for dimension 0 which has equal to\n *         the number of segments.\n *\n * @doc {heading: 'Operations', subheading: 'Sparse'}\n */\nfunction sparseSegmentSum_(\n    data: Tensor|TensorLike, indices: Tensor1D|TensorLike,\n    segmentIds: Tensor1D|TensorLike): Tensor {\n  const $data = convertToTensor(data, 'data', 'sparseSegmentSum');\n  const $indices = convertToTensor(indices, 'indices', 'sparseSegmentSum');\n  const $segmentIds =\n      convertToTensor(segmentIds, 'segmentIds', 'sparseSegmentSum');\n\n  if ($data.rank < 1) {\n    throw new Error(\n        `Data should be at least 1 dimensional but received scalar`);\n  }\n  if ($indices.rank !== 1) {\n    throw new Error(`Indices should be Tensor1D but received shape\n         ${$indices.shape}`);\n  }\n  if ($segmentIds.rank !== 1) {\n    throw new Error(`Segment ids should be Tensor1D but received shape\n         ${$segmentIds.shape}`);\n  }\n\n  const inputs: SparseSegmentSumInputs = {\n    data: $data,\n    indices: $indices,\n    segmentIds: $segmentIds\n  };\n\n  return ENGINE.runKernel(SparseSegmentSum, inputs as {});\n}\n\nexport const sparseSegmentSum = op({sparseSegmentSum_});\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {StringNGrams, StringNGramsAttrs, StringNGramsInputs} from '../../kernel_names';\nimport {Tensor, Tensor1D} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {op} from '../operation';\n\n/**\n * Creates ngrams from ragged string data.\n *\n * This op accepts a ragged tensor with 1 ragged dimension containing only\n * strings and outputs a ragged tensor with 1 ragged dimension containing ngrams\n * of that string, joined along the innermost axis.\n *\n * ```js\n * const result = tf.string.stringNGrams(\n *   ['a', 'b', 'c', 'd'], tf.tensor1d([0, 2, 4], 'int32'),\n *   '|', [1, 2], 'LP', 'RP', -1, false);\n * result['nGrams'].print(); // ['a', 'b', 'LP|a', 'a|b', 'b|RP',\n *                           //  'c', 'd', 'LP|c', 'c|d', 'd|RP']\n * result['nGramsSplits'].print(); // [0, 5, 10]\n * ```\n * @param data: The values tensor of the ragged string tensor to make ngrams out\n *     of. Must be a 1D string tensor.\n * @param dataSplits: The splits tensor of the ragged string tensor to make\n *     ngrams out of.\n * @param separator: The string to append between elements of the token. Use \"\"\n *     for no separator.\n * @param nGramWidths: The sizes of the ngrams to create.\n * @param leftPad: The string to use to pad the left side of the ngram sequence.\n *     Only used if pad_width !== 0.\n * @param rightPad: The string to use to pad the right side of the ngram\n *     sequence. Only used if pad_width !== 0.\n * @param padWidth: The number of padding elements to add to each side of each\n *     sequence. Note that padding will never be greater than `nGramWidths`-1\n *     regardless of this value. If `padWidth`=-1 , then add max(`nGramWidths)-1\n *     elements.\n * @param preserveShortSequences: If true, then ensure that at least one ngram\n *     is generated for each input sequence. In particular, if an input sequence\n *     is shorter than min(ngramWidth) + 2*padWidth, then generate a single\n *     ngram containing the entire sequence. If false, then no ngrams are\n *     generated for these short input sequences.\n * @return A map with the following properties:\n *     - nGrams: The values tensor of the output ngrams ragged tensor.\n *     - nGramsSplits: The splits tensor of the output ngrams ragged tensor.\n *\n * @doc {heading: 'Operations', subheading: 'String'}\n */\nfunction stringNGrams_(\n    data: Tensor1D|TensorLike, dataSplits: Tensor|TensorLike, separator: string,\n    nGramWidths: number[], leftPad: string, rightPad: string, padWidth: number,\n    preserveShortSequences: boolean): NamedTensorMap {\n  const $data = convertToTensor(data, 'data', 'stringNGrams', 'string');\n  if ($data.dtype !== 'string') {\n    throw new Error('Data must be of datatype string');\n  }\n  if ($data.shape.length !== 1) {\n    throw new Error(`Data must be a vector, saw: ${$data.shape}`);\n  }\n\n  const $dataSplits = convertToTensor(dataSplits, 'dataSplits', 'stringNGrams');\n  if ($dataSplits.dtype !== 'int32') {\n    throw new Error('Data splits must be of datatype int32');\n  }\n\n  const attrs: StringNGramsAttrs = {\n    separator,\n    nGramWidths,\n    leftPad,\n    rightPad,\n    padWidth,\n    preserveShortSequences\n  };\n\n  const inputs: StringNGramsInputs = {data: $data, dataSplits: $dataSplits};\n  const result: Tensor[] =\n      ENGINE.runKernel(StringNGrams, inputs as {}, attrs as {});\n  return {nGrams: result[0], nGramsSplits: result[1]};\n}\n\nexport const stringNGrams = op({stringNGrams_});\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {StringSplit, StringSplitAttrs, StringSplitInputs} from '../../kernel_names';\nimport {Scalar, Tensor, Tensor1D} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {ScalarLike, TensorLike} from '../../types';\nimport {op} from '../operation';\n\n/**\n * Split elements of `input` based on `delimiter` into a SparseTensor .\n *\n * Let N be the size of source (typically N will be the batch size). Split each\n * element of `input` based on `delimiter` and return a SparseTensor containing\n * the splitted tokens. Empty tokens are ignored if `skipEmpty` is set to True.\n *\n * `delimiter` can be empty, or a string of split characters. If `delimiter` is\n * an empty string, each element of `input` is split into individual\n * character strings. Otherwise every character of `delimiter` is a potential\n * split point.\n *\n * ```js\n * const result = tf.string.stringSplit(['hello world',  'a b c'], ' ');\n * result['indices'].print(); // [[0, 0], [0, 1], [1, 0], [1, 1], [1, 2]]\n * result['values'].print(); // ['hello', 'world', 'a', 'b', 'c']\n * result['shape'].print(); // [2, 3]\n * ```\n * @param input: 1-D. Strings to split.\n * @param delimiter: 0-D. Delimiter characters, or empty string.\n * @param skipEmpty: Optional. If true, skip the empty strings from the result.\n *     Defaults to true.\n * @return A map with the following properties:\n *     - indices: A dense matrix of int32 representing the indices of the sparse\n *       tensor.\n *     - values: A vector of strings corresponding to the splited values.\n *     - shape: a length-2 vector of int32 representing the shape of the sparse\n * tensor, where the first value is N and the second value is the maximum number\n * of tokens in a single input entry.\n *\n * @doc {heading: 'Operations', subheading: 'String'}\n */\nfunction stringSplit_(\n    input: Tensor1D|TensorLike, delimiter: Scalar|ScalarLike,\n    skipEmpty = true): NamedTensorMap {\n  const $input = convertToTensor(input, 'input', 'stringSplit', 'string');\n  const $delimiter =\n      convertToTensor(delimiter, 'delimiter', 'stringSplit', 'string');\n\n  if ($input.rank !== 1) {\n    throw new Error(\n        `Input should be Tensor1D but received shape ${$input.shape}`);\n  }\n  if ($delimiter.rank !== 0) {\n    throw new Error(\n        `Delimiter should be a scalar but received shape ${$delimiter.shape}`);\n  }\n\n  const attrs: StringSplitAttrs = {skipEmpty};\n  const inputs: StringSplitInputs = {input: $input, delimiter: $delimiter};\n  const result: Tensor[] =\n      ENGINE.runKernel(StringSplit, inputs as {}, attrs as {});\n  return {indices: result[0], values: result[1], shape: result[2]};\n}\n\nexport const stringSplit = op({stringSplit_});\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {StringToHashBucketFast, StringToHashBucketFastAttrs, StringToHashBucketFastInputs} from '../../kernel_names';\nimport {Tensor} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {op} from '../operation';\n\n/**\n * Converts each string in the input Tensor to its hash mod by a number of\n * buckets.\n *\n * The hash function is deterministic on the content of the string within the\n * process and will never change. However, it is not suitable for cryptography.\n * This function may be used when CPU time is scarce and inputs are trusted or\n * unimportant. There is a risk of adversaries constructing inputs that all hash\n * to the same bucket.\n *\n * ```js\n * const result = tf.string.stringToHashBucketFast(\n *   ['Hello', 'TensorFlow', '2.x'], 3);\n * result.print(); // [0, 2, 2]\n * ```\n * @param input: The strings to assign a hash bucket.\n * @param numBuckets: The number of buckets.\n * @return A Tensor of the same shape as the input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'String'}\n */\nfunction stringToHashBucketFast_(\n    input: Tensor|TensorLike, numBuckets: number): Tensor {\n  const $input =\n      convertToTensor(input, 'input', 'stringToHashBucketFast', 'string');\n  const attrs: StringToHashBucketFastAttrs = {numBuckets};\n\n  if (numBuckets <= 0) {\n    throw new Error(`Number of buckets must be at least 1`);\n  }\n\n  const inputs: StringToHashBucketFastInputs = {input: $input};\n  return ENGINE.runKernel(StringToHashBucketFast, inputs as {}, attrs as {});\n}\n\nexport const stringToHashBucketFast = op({stringToHashBucketFast_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// Modularized ops.\nexport {abs} from './abs';\nexport {acos} from './acos';\nexport {acosh} from './acosh';\nexport {add} from './add';\nexport {addN} from './add_n';\nexport {all} from './all';\nexport {any} from './any';\nexport {argMax} from './arg_max';\nexport {argMin} from './arg_min';\nexport {asin} from './asin';\nexport {asinh} from './asinh';\nexport {atan} from './atan';\nexport {atan2} from './atan2';\nexport {atanh} from './atanh';\nexport {avgPool} from './avg_pool';\nexport {avgPool3d} from './avg_pool_3d';\nexport {basicLSTMCell} from './basic_lstm_cell';\nexport {batchToSpaceND} from './batch_to_space_nd';\nexport {batchNorm} from './batchnorm';\nexport {batchNorm2d} from './batchnorm2d';\nexport {batchNorm3d} from './batchnorm3d';\nexport {batchNorm4d} from './batchnorm4d';\nexport {bincount} from './bincount';\nexport {broadcastTo} from './broadcast_to';\nexport {buffer} from './buffer';\nexport {cast} from './cast';\nexport {ceil} from './ceil';\nexport {clipByValue} from './clip_by_value';\nexport {clone} from './clone';\nexport {complex} from './complex';\nexport {concat} from './concat';\nexport {concat1d} from './concat_1d';\nexport {concat2d} from './concat_2d';\nexport {concat3d} from './concat_3d';\nexport {concat4d} from './concat_4d';\nexport {conv1d} from './conv1d';\nexport {conv2d} from './conv2d';\nexport {conv2dTranspose} from './conv2d_transpose';\nexport {conv3d} from './conv3d';\nexport {conv3dTranspose} from './conv3d_transpose';\nexport {cos} from './cos';\nexport {cosh} from './cosh';\nexport {cumsum} from './cumsum';\nexport {denseBincount} from './dense_bincount';\nexport {depthToSpace} from './depth_to_space';\nexport {depthwiseConv2d} from './depthwise_conv2d';\nexport {diag} from './diag';\nexport {dilation2d} from './dilation2d';\nexport {div} from './div';\nexport {divNoNan} from './div_no_nan';\nexport {dot} from './dot';\nexport {einsum} from './einsum';\nexport {elu} from './elu';\nexport {equal} from './equal';\nexport {erf} from './erf';\nexport {exp} from './exp';\nexport {expandDims} from './expand_dims';\nexport {expm1} from './expm1';\nexport {eye} from './eye';\nexport {fill} from './fill';\nexport {floor} from './floor';\nexport {floorDiv} from './floorDiv';\nexport {gather} from './gather';\nexport {greater} from './greater';\nexport {greaterEqual} from './greater_equal';\nexport {imag} from './imag';\nexport {isFinite} from './is_finite';\nexport {isInf} from './is_inf';\nexport {isNaN} from './is_nan';\nexport {leakyRelu} from './leaky_relu';\nexport {less} from './less';\nexport {lessEqual} from './less_equal';\nexport {linspace} from './linspace';\nexport {localResponseNormalization} from './local_response_normalization';\nexport {log} from './log';\nexport {log1p} from './log1p';\nexport {logSigmoid} from './log_sigmoid';\nexport {logSoftmax} from './log_softmax';\nexport {logSumExp} from './log_sum_exp';\nexport {logicalAnd} from './logical_and';\nexport {logicalNot} from './logical_not';\nexport {logicalOr} from './logical_or';\nexport {logicalXor} from './logical_xor';\nexport {matMul} from './mat_mul';\nexport {max} from './max';\nexport {maxPool} from './max_pool';\nexport {maxPool3d} from './max_pool_3d';\nexport {maxPoolWithArgmax} from './max_pool_with_argmax';\nexport {maximum} from './maximum';\nexport {mean} from './mean';\nexport {meshgrid} from './meshgrid';\nexport {min} from './min';\nexport {minimum} from './minimum';\nexport {mirrorPad} from './mirror_pad';\nexport {mod} from './mod';\nexport {moments} from './moments';\nexport {mul} from './mul';\nexport {LSTMCellFunc, multiRNNCell} from './multi_rnn_cell';\nexport {multinomial} from './multinomial';\nexport {neg} from './neg';\nexport {notEqual} from './not_equal';\nexport {oneHot} from './one_hot';\nexport {ones} from './ones';\nexport {onesLike} from './ones_like';\nexport {outerProduct} from './outer_product';\nexport {pad} from './pad';\nexport {pad1d} from './pad1d';\nexport {pad2d} from './pad2d';\nexport {pad3d} from './pad3d';\nexport {pad4d} from './pad4d';\nexport {pool} from './pool';\nexport {pow} from './pow';\nexport {prelu} from './prelu';\nexport {print} from './print';\nexport {prod} from './prod';\nexport {rand} from './rand';\nexport {randomGamma} from './random_gamma';\nexport {randomNormal} from './random_normal';\nexport {randomUniform} from './random_uniform';\nexport {range} from './range';\nexport {real} from './real';\nexport {reciprocal} from './reciprocal';\nexport {relu} from './relu';\nexport {relu6} from './relu6';\nexport {reshape} from './reshape';\nexport {reverse} from './reverse';\nexport {reverse1d} from './reverse_1d';\nexport {reverse2d} from './reverse_2d';\nexport {reverse3d} from './reverse_3d';\nexport {reverse4d} from './reverse_4d';\nexport {round} from './round';\nexport {rsqrt} from './rsqrt';\nexport {scalar} from './scalar';\nexport {selu} from './selu';\nexport {separableConv2d} from './separable_conv2d';\nexport {setdiff1dAsync} from './setdiff1d_async';\nexport {sigmoid} from './sigmoid';\nexport {sign} from './sign';\nexport {sin} from './sin';\nexport {sinh} from './sinh';\nexport {slice} from './slice';\nexport {slice1d} from './slice1d';\nexport {slice2d} from './slice2d';\nexport {slice3d} from './slice3d';\nexport {slice4d} from './slice4d';\nexport {softmax} from './softmax';\nexport {softplus} from './softplus';\nexport {spaceToBatchND} from './space_to_batch_nd';\nexport {fft} from './spectral/fft';\nexport {ifft} from './spectral/ifft';\nexport {irfft} from './spectral/irfft';\nexport {rfft} from './spectral/rfft';\nexport {split} from './split';\nexport {sqrt} from './sqrt';\nexport {square} from './square';\nexport {squaredDifference} from './squared_difference';\nexport {squeeze} from './squeeze';\nexport {stack} from './stack';\nexport {step} from './step';\nexport {stridedSlice} from './strided_slice';\nexport {sub} from './sub';\nexport {sum} from './sum';\nexport {tan} from './tan';\nexport {tanh} from './tanh';\nexport {tensor} from './tensor';\nexport {tensor1d} from './tensor1d';\nexport {tensor2d} from './tensor2d';\nexport {tensor3d} from './tensor3d';\nexport {tensor4d} from './tensor4d';\nexport {tensor5d} from './tensor5d';\nexport {tensor6d} from './tensor6d';\nexport {tile} from './tile';\nexport {topk} from './topk';\nexport {truncatedNormal} from './truncated_normal';\nexport {unique} from './unique';\nexport {unsortedSegmentSum} from './unsorted_segment_sum';\nexport {unstack} from './unstack';\nexport {variable} from './variable';\nexport {where} from './where';\nexport {whereAsync} from './where_async';\nexport {zeros} from './zeros';\nexport {zerosLike} from './zeros_like';\n\nexport * from './boolean_mask';\nexport * from './transpose';\nexport * from './norm';\nexport * from './moving_average';\nexport * from './scatter_nd';\nexport * from './sparse_to_dense';\nexport * from './gather_nd';\nexport * from './dropout';\nexport * from './signal_ops_util';\nexport * from './in_top_k';\n\nexport {op, OP_SCOPE_SUFFIX} from './operation';\n\nimport {rfft} from './spectral/rfft';\nimport {fft} from './spectral/fft';\nimport {ifft} from './spectral/ifft';\nimport {irfft} from './spectral/irfft';\nconst spectral = {\n  fft,\n  ifft,\n  rfft,\n  irfft\n};\n\nimport * as fused from './fused_ops';\n\nimport {hammingWindow} from './signal/hamming_window';\nimport {hannWindow} from './signal/hann_window';\nimport {frame} from './signal/frame';\nimport {stft} from './signal/stft';\nconst signal = {\n  hammingWindow,\n  hannWindow,\n  frame,\n  stft,\n};\n\n// Image Ops namespace\nimport {cropAndResize} from './image/crop_and_resize';\nimport {flipLeftRight} from './image/flip_left_right';\nimport {rotateWithOffset} from './image/rotate_with_offset';\nimport {nonMaxSuppression} from './image/non_max_suppression';\nimport {nonMaxSuppressionAsync} from './image/non_max_suppression_async';\nimport {nonMaxSuppressionWithScore} from './image/non_max_suppression_with_score';\nimport {nonMaxSuppressionWithScoreAsync} from './image/non_max_suppression_with_score_async';\nimport {nonMaxSuppressionPadded} from './image/non_max_suppression_padded';\nimport {nonMaxSuppressionPaddedAsync} from './image/non_max_suppression_padded_async';\nimport {resizeBilinear} from './image/resize_bilinear';\nimport {resizeNearestNeighbor} from './image/resize_nearest_neighbor';\nimport {threshold} from './image/threshold';\nimport {transform} from './image/transform';\nconst image = {\n  flipLeftRight,\n  resizeNearestNeighbor,\n  resizeBilinear,\n  rotateWithOffset,\n  cropAndResize,\n  nonMaxSuppression,\n  nonMaxSuppressionAsync,\n  nonMaxSuppressionWithScore,\n  nonMaxSuppressionWithScoreAsync,\n  nonMaxSuppressionPadded,\n  nonMaxSuppressionPaddedAsync,\n  threshold,\n  transform\n};\n\n// linalg namespace\nimport {bandPart} from './linalg/band_part';\nimport {gramSchmidt} from './linalg/gram_schmidt';\nimport {qr} from './linalg/qr';\nconst linalg = {\n  bandPart,\n  gramSchmidt,\n  qr\n};\n\n// losses namespace;\nimport {absoluteDifference} from './losses/absolute_difference';\nimport {computeWeightedLoss} from './losses/compute_weighted_loss';\nimport {cosineDistance} from './losses/cosine_distance';\nimport {hingeLoss} from './losses/hinge_loss';\nimport {huberLoss} from './losses/huber_loss';\nimport {logLoss} from './losses/log_loss';\nimport {meanSquaredError} from './losses/mean_squared_error';\nimport {sigmoidCrossEntropy} from './losses/sigmoid_cross_entropy';\nimport {softmaxCrossEntropy} from './losses/softmax_cross_entropy';\nconst losses = {\n  absoluteDifference,\n  computeWeightedLoss,\n  cosineDistance,\n  hingeLoss,\n  huberLoss,\n  logLoss,\n  meanSquaredError,\n  sigmoidCrossEntropy,\n  softmaxCrossEntropy\n};\n\nimport {sparseFillEmptyRows} from './sparse/sparse_fill_empty_rows';\nimport {sparseReshape} from './sparse/sparse_reshape';\nimport {sparseSegmentMean} from './sparse/sparse_segment_mean';\nimport {sparseSegmentSum} from './sparse/sparse_segment_sum';\nconst sparse = {\n  sparseFillEmptyRows,\n  sparseReshape,\n  sparseSegmentMean,\n  sparseSegmentSum\n};\n\nimport {stringNGrams} from './string/string_n_grams';\nimport {stringSplit} from './string/string_split';\nimport {stringToHashBucketFast} from './string/string_to_hash_bucket_fast';\n// tslint:disable-next-line:variable-name\nconst string = {\n  stringNGrams,\n  stringSplit,\n  stringToHashBucketFast\n};\n\n// Second level exports.\nexport {image, linalg, losses, spectral, fused, signal, sparse, string};\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {TensorInfo} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {computeStrides, sizeFromShape} from '../util';\n\n/**\n * Check whether updates.shape = indices.shape[:batchDim] +\n * shape[sliceDim:]\n *\n * @param x The input tensor.\n */\nexport function validateUpdateShape(\n    shape: number[], indices: Tensor, updates: Tensor) {\n  const sliceDim = (indices.rank > 1) ? indices.shape[indices.rank - 1] : 1;\n  const batchDim = (indices.rank > 1) ? indices.rank - 1 : 1;\n\n  const shapeError = 'Must have updates.shape = indices.shape[:batchDim] + ' +\n      `shape[sliceDim:], got updates.shape: ${updates.shape}` +\n      `, indices.shape: ${indices.shape}, shape: ${shape}` +\n      `, sliceDim: ${sliceDim}, and batchDim: ${batchDim}.`;\n\n  if (updates.rank < batchDim) {\n    throw new Error(shapeError + ` update.rank < ${batchDim}. `);\n  }\n  if (shape.length < sliceDim + (updates.rank - batchDim)) {\n    throw new Error(\n        shapeError +\n        ` Output shape length < ${sliceDim + (updates.rank - batchDim)}`);\n  }\n  if (updates.rank !== batchDim + shape.length - sliceDim) {\n    throw new Error(\n        shapeError + ` update.rank != ${batchDim + shape.length - sliceDim}`);\n  }\n  for (let d = 0; d < batchDim; ++d) {\n    if (updates.shape[d] !== indices.shape[d]) {\n      throw new Error(\n          shapeError +\n          ` updates.shape[${d}] (${updates.shape[d]}) != indices.shape[${d}] (${\n              indices.shape[d]}).`);\n    }\n  }\n  for (let d = 0; d < updates.rank - batchDim; ++d) {\n    if (updates.shape[d + batchDim] !== shape[d + sliceDim]) {\n      throw new Error(\n          shapeError +\n          ` updates.shape[${d + batchDim}] (${\n              updates.shape[d + batchDim]}) != shape[${d + batchDim}] (${\n              shape[d + batchDim]})`);\n    }\n  }\n}\n\nexport interface ScatterShapeInfo {\n  sliceRank: number;\n  numUpdates: number;\n  sliceSize: number;\n  strides: number[];\n  outputSize: number;\n}\n/**\n * Validate scatter nd inputs.\n *\n * @param update The tensor contains the update values.\n * @param indices The tensor contains the indices for the update values.\n * @param shape The shape of the output tensor.\n */\nexport function validateInput(\n    updates: Tensor, indices: Tensor, shape: number[]) {\n  if (indices.rank < 1) {\n    throw new Error(\n        'tf.scatterND() expects the indices to be rank 1 or higher,' +\n        ` but the rank was ${indices.rank}.`);\n  }\n  if (updates.rank < 1) {\n    throw new Error(\n        'tf.scatterND() expects the updates to be rank 1 or higher,' +\n        ` but the rank was ${updates.rank}.`);\n  }\n  if (indices.dtype !== 'int32') {\n    throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${\n        indices.dtype}`);\n  }\n  if (shape.length < 1) {\n    throw new Error(\n        `Output rank must be greater or equal to 1, but got shape: ${shape}`);\n  }\n\n  if (shape.length === 0) {\n    if (indices.size === 0) {\n      throw new Error(`Indices specified for empty output. indices shape: ${\n          indices.shape}`);\n    }\n    if (updates.size === 0) {\n      throw new Error(`Updates specified for empty output. updates shape: ${\n          updates.shape}`);\n    }\n  }\n\n  validateUpdateShape(shape, indices, updates);\n}\n\n/**\n * Calculate the shape information for the output.\n *\n * @param update The tensor contains the update values.\n * @param indices The tensor contains the indices for the update values.\n * @param shape The shape of the output tensor.\n *\n * @returns ScatterShapeInfo\n */\nexport function calculateShapes(\n    updates: TensorInfo, indices: TensorInfo,\n    shape: number[]): ScatterShapeInfo {\n  // Calculate the number of dimensions in indices\n  const indicesRank = indices.shape.length;\n  const sliceRank = (indicesRank > 1) ? indices.shape[indicesRank - 1] : 1;\n\n  // Calculate the number of elements that make up each slice of our updated\n  // tensor. This allows us to work with flattened tensors and copy over whole\n  // slices at a time.\n  const totalNd = shape.length;\n\n  let sliceSize = 1;\n  for (let i = sliceRank; i < totalNd; ++i) {\n    sliceSize *= shape[i];\n  }\n\n  const safeSliceDim = (sliceRank < 1) ? 1 : sliceRank;\n  const numUpdates = sizeFromShape(indices.shape) / safeSliceDim;\n\n  const strides = [...computeStrides(shape.slice(0, sliceRank)), 1];\n  const outputSize = sizeFromShape(shape);\n  return {sliceRank, numUpdates, sliceSize, strides, outputSize};\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {DepthwiseConv2dNative, DepthwiseConv2dNativeAttrs, DepthwiseConv2dNativeInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor3D, Tensor4D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {ExplicitPadding} from './conv_util';\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Depthwise 2D convolution.\n *\n * Given a 4D `input` array and a `filter` array of shape\n * `[filterHeight, filterWidth, inChannels, channelMultiplier]` containing\n * `inChannels` convolutional filters of depth 1, this op applies a\n * different filter to each input channel (expanding from 1 channel to\n * `channelMultiplier` channels for each), then concatenates the results\n * together. The output has `inChannels * channelMultiplier` channels.\n *\n * See\n * [https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d](\n *     https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d)\n * for more details.\n *\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter tensor, rank 4, of shape\n *     `[filterHeight, filterWidth, inChannels, channelMultiplier]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`. If strides is a single number, then `strideHeight ==\n * strideWidth`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `rate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction depthwiseConv2d_<T extends Tensor3D|Tensor4D>(\n    x: T|TensorLike, filter: Tensor4D|TensorLike,\n    strides: [number, number]|number,\n    pad: 'valid'|'same'|number|ExplicitPadding,\n    dataFormat: 'NHWC'|'NCHW' = 'NHWC',\n    dilations: [number, number]|number = [1, 1],\n    dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n  const $x = convertToTensor(x, 'x', 'depthwiseConv2d');\n  const $filter = convertToTensor(filter, 'filter', 'depthwiseConv2d');\n\n  let x4D = $x as Tensor4D;\n  let reshapedTo4D = false;\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n  }\n  util.assert(\n      x4D.rank === 4,\n      () => `Error in depthwiseConv2d: input must be rank 4, but got ` +\n          `rank ${x4D.rank}.`);\n  util.assert(\n      $filter.rank === 4,\n      () => `Error in depthwiseConv2d: filter must be rank 4, but got rank ` +\n          `${$filter.rank}.`);\n  util.assert(\n      x4D.shape[3] === $filter.shape[2],\n      () => `Error in depthwiseConv2d: number of input channels ` +\n          `(${x4D.shape[3]}) must match the inChannels dimension in ` +\n          `filter ${$filter.shape[2]}.`);\n\n  if (dimRoundingMode != null) {\n    util.assert(\n        util.isInt(pad as number),\n        () => `Error in depthwiseConv2d: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n  }\n\n  const inputs: DepthwiseConv2dNativeInputs = {x: x4D, filter: $filter};\n  const attrs: DepthwiseConv2dNativeAttrs =\n      {strides, pad, dataFormat, dilations, dimRoundingMode};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  const res = ENGINE.runKernel(\n                  DepthwiseConv2dNative, inputs as {} as NamedTensorMap,\n                  attrs as {} as NamedAttrMap) as T;\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]) as T;\n  }\n  return res;\n}\n\nexport const depthwiseConv2d = op({depthwiseConv2d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Imag, ImagInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {op} from './operation';\n/**\n * Returns the imaginary part of a complex (or real) tensor.\n *\n * Given a tensor input, this operation returns a tensor of type float that is\n * the imaginary part of each element in input considered as a complex number.\n * If input is real, a tensor of all zeros is returned.\n *\n * ```js\n * const x = tf.complex([-2.25, 3.25], [4.75, 5.75]);\n * tf.imag(x).print();\n * ```\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction imag_<T extends Tensor>(input: T|TensorLike): T {\n  const $input = convertToTensor(input, 'input', 'imag');\n\n  const inputs: ImagInputs = {input: $input};\n  return ENGINE.runKernel(Imag, inputs as {} as NamedTensorMap);\n}\n\nexport const imag = op({imag_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {LessEqual, LessEqualInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {assertAndGetBroadcastShape} from './broadcast_util';\nimport {op} from './operation';\n\n/**\n * Returns the truth value of (a <= b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.lessEqual(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction lessEqual_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'lessEqual', 'string_or_numeric');\n  let $b = convertToTensor(b, 'b', 'lessEqual', 'string_or_numeric');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  const inputs: LessEqualInputs = {a: $a, b: $b};\n\n  return ENGINE.runKernel(LessEqual, inputs as {} as NamedTensorMap);\n}\n\nexport const lessEqual = op({lessEqual_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {FFT, FFTInputs} from '../../kernel_names';\nimport {Tensor} from '../../tensor';\nimport {NamedTensorMap} from '../../tensor_types';\nimport {assert} from '../../util';\nimport {op} from '../operation';\n\n/**\n * Fast Fourier transform.\n *\n * Computes the 1-dimensional discrete Fourier transform over the inner-most\n * dimension of input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n * const imag = tf.tensor1d([1, 2, 3]);\n * const x = tf.complex(real, imag);\n *\n * x.fft().print();  // tf.spectral.fft(x).print();\n * ```\n * @param input The complex input to compute an fft over.\n *\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\nfunction fft_(input: Tensor): Tensor {\n  assert(\n      input.dtype === 'complex64',\n      () => `The dtype for tf.spectral.fft() must be complex64 ` +\n          `but got ${input.dtype}.`);\n\n  const inputs: FFTInputs = {input};\n\n  return ENGINE.runKernel(FFT, inputs as {} as NamedTensorMap);\n}\n\nexport const fft = op({fft_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../../tensor';\nimport {assert} from '../../util';\nimport {complex} from '../complex';\nimport {concat} from '../concat';\nimport {imag} from '../imag';\nimport {op} from '../operation';\nimport {real} from '../real';\nimport {reshape} from '../reshape';\nimport {slice} from '../slice';\nimport {split} from '../split';\nimport {zeros} from '../zeros';\nimport {zerosLike} from '../zeros_like';\n\nimport {fft} from './fft';\n\n/**\n * Real value input fast Fourier transform.\n *\n * Computes the 1-dimensional discrete Fourier transform over the\n * inner-most dimension of the real input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n *\n * real.rfft().print();\n * ```\n * @param input The real value input to compute an rfft over.\n *\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\nfunction rfft_(input: Tensor, fftLength?: number): Tensor {\n  assert(\n      input.dtype === 'float32',\n      () => `The dtype for rfft() must be real value but got ${input.dtype}`);\n\n  let innerDimensionSize = input.shape[input.shape.length - 1];\n  const batch = input.size / innerDimensionSize;\n\n  let adjustedInput: Tensor;\n  if (fftLength != null && fftLength < innerDimensionSize) {\n    // Need to crop\n    const begin = input.shape.map(v => 0);\n    const size = input.shape.map(v => v);\n    size[input.shape.length - 1] = fftLength;\n    adjustedInput = slice(input, begin, size);\n    innerDimensionSize = fftLength;\n  } else if (fftLength != null && fftLength > innerDimensionSize) {\n    // Need to pad with zeros\n    const zerosShape = input.shape.map(v => v);\n    zerosShape[input.shape.length - 1] = fftLength - innerDimensionSize;\n    adjustedInput = concat([input, zeros(zerosShape)], input.shape.length - 1);\n    innerDimensionSize = fftLength;\n  } else {\n    adjustedInput = input;\n  }\n\n  // Complement the input with zero imaginary numbers.\n  const zerosInput = zerosLike(adjustedInput);\n  const complexInput =\n      reshape(complex(adjustedInput, zerosInput), [batch, innerDimensionSize]);\n\n  const ret = fft(complexInput);\n\n  // Exclude complex conjugations. These conjugations are put symmetrically.\n  const half = Math.floor(innerDimensionSize / 2) + 1;\n  const realValues = real(ret);\n  const imagValues = imag(ret);\n  const realComplexConjugate = split(\n      realValues, [half, innerDimensionSize - half],\n      realValues.shape.length - 1);\n  const imagComplexConjugate = split(\n      imagValues, [half, innerDimensionSize - half],\n      imagValues.shape.length - 1);\n\n  const outputShape = adjustedInput.shape.slice();\n  outputShape[adjustedInput.shape.length - 1] = half;\n\n  return reshape(\n      complex(realComplexConjugate[0], imagComplexConjugate[0]), outputShape);\n}\n\nexport const rfft = op({rfft_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {squeezeShape} from '../util';\n\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Removes dimensions of size 1 from the shape of a `tf.Tensor`.\n *\n * ```js\n * const x = tf.tensor([1, 2, 3, 4], [1, 1, 4]);\n * x.squeeze().print();\n * ```\n *\n * @param x The input tensor to be squeezed.\n * @param axis An optional list of numbers. If specified, only\n *     squeezes the dimensions listed. The dimension index starts at 0. It\n * is an error to squeeze a dimension that is not 1.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction squeeze_<T extends Tensor>(x: Tensor|TensorLike, axis?: number[]): T {\n  const $x = convertToTensor(x, 'x', 'squeeze');\n  return reshape($x, squeezeShape($x.shape, axis).newShape) as T;\n}\n\nexport const squeeze = op({squeeze_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Unpack, UnpackAttrs, UnpackInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\n\n/**\n * Unstacks a `tf.Tensor` of rank-`R` into a list of rank-`(R-1)` `tf.Tensor`s.\n *\n * ```js\n * const a = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * tf.unstack(a).forEach(tensor => tensor.print());\n * ```\n *\n * @param x A tensor object.\n * @param axis The axis to unstack along. Defaults to 0 (the first dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction unstack_(x: Tensor|TensorLike, axis = 0): Tensor[] {\n  const $x = convertToTensor(x, 'x', 'unstack', 'string_or_numeric');\n  util.assert(\n      axis >= -$x.shape.length && axis < $x.shape.length,\n      () =>\n          `Axis = ${axis} is not in [-${$x.shape.length}, ${$x.shape.length})`);\n\n  const inputs: UnpackInputs = {value: $x};\n  const attrs: UnpackAttrs = {axis};\n\n  return ENGINE.runKernel(\n      Unpack, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const unstack = op({unstack_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tile, TileAttrs, TileInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {Rank, ShapeMap, TensorLike} from '../types';\n\nimport {clone} from './clone';\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Broadcast an array to a compatible shape NumPy-style.\n *\n * The tensor's shape is compared to the broadcast shape from end to beginning.\n * Ones are prepended to the tensor's shape until is has the same length as\n * the broadcast shape. If input.shape[i]==shape[i], the (i+1)-th axis is\n * already broadcast-compatible. If input.shape[i]==1 and shape[i]==N, then\n * the input tensor is tiled N times along that axis (using tf.tile).\n *\n * @param input The tensor that is to be broadcasted.\n * @param shape The input is to be broadcast to this shape.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction broadcastTo_<R extends Rank>(\n    x: Tensor|TensorLike, shape: ShapeMap[R]): Tensor<R> {\n  let input = convertToTensor(x, 'broadcastTo', 'x');\n  const xShape = input.shape;\n\n  if (shape.some(d => !(d > 0) || d % 1 !== 0)) {\n    throw new Error(`broadcastTo(): Invalid broadcast shape [${shape}].`);\n  }\n\n  if (shape.length < input.rank) {\n    throw new Error(`broadcastTo(): shape.length=${shape.length} < input.rank=${\n        input.rank}.`);\n  }\n\n  if (shape.length > input.rank) {\n    const newShape = input.shape.slice();\n    while (newShape.length < shape.length) {\n      newShape.unshift(1);\n    }\n    input = reshape(input, newShape);\n  }\n\n  const inputShape = input.shape;\n  const reps: number[] = Array.from(shape);\n  for (let i = shape.length - 1; i >= 0; i--) {\n    if (inputShape[i] === shape[i]) {\n      reps[i] = 1;\n    } else if (input.shape[i] !== 1) {\n      throw new Error(\n          `broadcastTo(): [${xShape}] cannot be broadcast to [${shape}].`);\n    }\n  }\n  const axes = reps.map((n, i) => n > 1 ? i : -1).filter(i => i >= 0);\n\n  if (axes.length === 0) {\n    return clone(input) as Tensor<R>;\n  }\n\n  // TODO call broadcastTo kernel directly once backends implement broadcstTo\n  const inputs: TileInputs = {x: input};\n  const attrs: TileAttrs = {reps};\n  return ENGINE.runKernel(\n      Tile, inputs as {} as NamedTensorMap, attrs as unknown as NamedAttrMap);\n}\n\nexport const broadcastTo = op({broadcastTo_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tile, TileAttrs, TileInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\n\n/**\n * Construct a tensor by repeating it the number of times given by reps.\n *\n * This operation creates a new tensor by replicating `input` `reps`\n * times. The output tensor's i'th dimension has `input.shape[i] *\n * reps[i]` elements, and the values of `input` are replicated\n * `reps[i]` times along the i'th dimension. For example, tiling\n * `[a, b, c, d]` by `[2]` produces `[a, b, c, d, a, b, c, d]`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n *\n * a.tile([2]).print();    // or a.tile([2])\n * ```\n *\n * ```js\n * const a = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * a.tile([1, 2]).print();  // or a.tile([1, 2])\n * ```\n * @param x The tensor to tile.\n * @param reps Determines the number of replications per dimension.\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction tile_<T extends Tensor>(x: T|TensorLike, reps: number[]): T {\n  const $x = convertToTensor(x, 'x', 'tile', 'string_or_numeric');\n  util.assert(\n      $x.rank === reps.length,\n      () => `Error in transpose: rank of input ${$x.rank} ` +\n          `must match length of reps ${reps}.`);\n\n  const inputs: TileInputs = {x: $x};\n  const attrs: TileAttrs = {reps};\n\n  return ENGINE.runKernel(\n      Tile, inputs as unknown as NamedTensorMap,\n      attrs as unknown as NamedAttrMap);\n}\n\nexport const tile = op({tile_});\n","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from './engine';\nimport {inferShape} from './tensor_util_env';\nimport {RecursiveArray, TensorLike, TypedArray} from './types';\nimport {arraysEqual, encodeString, flatten, isString, isTypedArray} from './util';\n\nconst TEST_EPSILON_FLOAT32 = 1e-3;\nexport const TEST_EPSILON_FLOAT16 = 1e-1;\n\nexport function expectArraysClose(\n    actual: TypedArray|number|RecursiveArray<number>,\n    expected: TypedArray|number|RecursiveArray<number>, epsilon?: number) {\n  if (epsilon == null) {\n    epsilon = testEpsilon();\n  }\n  return expectArraysPredicate(\n      actual, expected, (a, b) => areClose(a as number, b as number, epsilon));\n}\n\nexport function testEpsilon() {\n  return ENGINE.backend.floatPrecision() === 32 ? TEST_EPSILON_FLOAT32 :\n                                                  TEST_EPSILON_FLOAT16;\n}\n\nfunction expectArraysPredicate(\n    actual: TensorLike, expected: TensorLike,\n    predicate: (a: {}, b: {}) => boolean) {\n  let checkClassType = true;\n  if (isTypedArray(actual) || isTypedArray(expected)) {\n    checkClassType = false;\n  }\n  if (isTypedArray(actual) && isTypedArray(expected)) {\n    checkClassType = true;\n  }\n  if (checkClassType) {\n    const aType = actual.constructor.name;\n    const bType = expected.constructor.name;\n\n    if (aType !== bType) {\n      throw new Error(\n          `Arrays are of different type. Actual: ${aType}. ` +\n          `Expected: ${bType}`);\n    }\n  }\n\n  if (Array.isArray(actual) && Array.isArray(expected)) {\n    const actualShape = inferShape(actual);\n    const expectedShape = inferShape(expected);\n    if (!arraysEqual(actualShape, expectedShape)) {\n      throw new Error(\n          `Arrays have different shapes. ` +\n          `Actual: [${actualShape}]. Expected: [${expectedShape}]`);\n    }\n  }\n\n  const actualFlat =\n      isTypedArray(actual) ? actual : flatten(actual as RecursiveArray<number>);\n  const expectedFlat = isTypedArray(expected) ?\n      expected :\n      flatten(expected as RecursiveArray<number>);\n\n  if (actualFlat.length !== expectedFlat.length) {\n    throw new Error(\n        `Arrays have different lengths actual: ${actualFlat.length} vs ` +\n        `expected: ${expectedFlat.length}.\\n` +\n        `Actual:   ${actualFlat}.\\n` +\n        `Expected: ${expectedFlat}.`);\n  }\n  for (let i = 0; i < expectedFlat.length; ++i) {\n    const a = actualFlat[i];\n    const e = expectedFlat[i];\n\n    if (!predicate(a, e)) {\n      throw new Error(\n          `Arrays differ: actual[${i}] = ${a}, expected[${i}] = ${e}.\\n` +\n          `Actual:   ${actualFlat}.\\n` +\n          `Expected: ${expectedFlat}.`);\n    }\n  }\n}\n\nexport interface DoneFn {\n  (): void;\n  fail: (message?: Error|string) => void;\n}\n\nexport function expectPromiseToFail(fn: () => Promise<{}>, done: DoneFn): void {\n  fn().then(() => done.fail(), () => done());\n}\n\nexport function expectArraysEqual(actual: TensorLike, expected: TensorLike) {\n  const exp = typeof expected === 'string' || typeof expected === 'number' ||\n          typeof expected === 'boolean' ?\n      [expected] as number[] :\n      expected as number[];\n  if (isString(actual) || isString((actual as string[])[0]) ||\n      isString(expected) || isString((expected as string[])[0])) {\n    // tslint:disable-next-line: triple-equals\n    return expectArraysPredicate(actual, exp, (a, b) => a == b);\n  }\n  return expectArraysPredicate(\n      actual, expected, (a, b) => areClose(a as number, b as number, 0));\n}\n\nexport function expectNumbersClose(a: number, e: number, epsilon?: number) {\n  if (epsilon == null) {\n    epsilon = testEpsilon();\n  }\n  if (!areClose(a, e, epsilon)) {\n    throw new Error(`Numbers differ: actual === ${a}, expected === ${e}`);\n  }\n}\n\nfunction areClose(a: number, e: number, epsilon: number): boolean {\n  if (!isFinite(a) && !isFinite(e)) {\n    return true;\n  }\n  if (isNaN(a) || isNaN(e) || Math.abs(a - e) > epsilon) {\n    return false;\n  }\n  return true;\n}\n\nexport function expectValuesInRange(\n    actual: TypedArray|number[], low: number, high: number) {\n  for (let i = 0; i < actual.length; i++) {\n    if (actual[i] < low || actual[i] > high) {\n      throw new Error(\n          `Value out of range:${actual[i]} low: ${low}, high: ${high}`);\n    }\n  }\n}\n\nexport function expectArrayBuffersEqual(\n    actual: ArrayBuffer, expected: ArrayBuffer) {\n  // Safari & Jasmine don't like comparing ArrayBuffers directly. Wrapping in\n  // a Float32Array solves this issue.\n  expect(new Float32Array(actual)).toEqual(new Float32Array(expected));\n}\n\n/** Encodes strings into utf-8 bytes. */\nexport function encodeStrings(a: RecursiveArray<{}>):\n    RecursiveArray<Uint8Array> {\n  for (let i = 0; i < (a as Array<{}>).length; i++) {\n    const val = a[i];\n    if (Array.isArray(val)) {\n      encodeStrings(val);\n    } else {\n      a[i] = encodeString(val as string);\n    }\n  }\n  return a as RecursiveArray<Uint8Array>;\n}\n","// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport './engine';\n\nimport * as device_util from './device_util';\nimport {env} from './environment';\n\nconst ENV = env();\n\n/**\n * This file contains environment-related flag registrations.\n */\n\n/** Whether to enable debug mode. */\nENV.registerFlag('DEBUG', () => false, debugValue => {\n  if (debugValue) {\n    console.warn(\n        'Debugging mode is ON. The output of every math call will ' +\n        'be downloaded to CPU and checked for NaNs. ' +\n        'This significantly impacts performance.');\n  }\n});\n\n/** Whether we are in a browser (as versus, say, node.js) environment. */\nENV.registerFlag('IS_BROWSER', () => device_util.isBrowser());\n\n/** Whether we are in a browser (as versus, say, node.js) environment. */\nENV.registerFlag(\n    'IS_NODE',\n    () => (typeof process !== 'undefined') &&\n        (typeof process.versions !== 'undefined') &&\n        (typeof process.versions.node !== 'undefined'));\n\n/** Whether this browser is Chrome. */\nENV.registerFlag(\n    'IS_CHROME',\n    () => typeof navigator !== 'undefined' && navigator != null &&\n        navigator.userAgent != null && /Chrome/.test(navigator.userAgent) &&\n        /Google Inc/.test(navigator.vendor));\n\n/**\n * True when the environment is \"production\" where we disable safety checks\n * to gain performance.\n */\nENV.registerFlag('PROD', () => false);\n\n/**\n * Whether to do sanity checks when inferring a shape from user-provided\n * values, used when creating a new tensor.\n */\nENV.registerFlag(\n    'TENSORLIKE_CHECK_SHAPE_CONSISTENCY', () => ENV.getBool('DEBUG'));\n\n/** Whether deprecation warnings are enabled. */\nENV.registerFlag('DEPRECATION_WARNINGS_ENABLED', () => true);\n\n/** True if running unit tests. */\nENV.registerFlag('IS_TEST', () => false);\n\n/** Whether to check computation result for errors. */\nENV.registerFlag('CHECK_COMPUTATION_FOR_ERRORS', () => true);\n\n/** Whether the backend needs to wrap input to imageBitmap. */\nENV.registerFlag('WRAP_TO_IMAGEBITMAP', () => false);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Backend, DataId} from '../tensor';\nimport {BackendValues, DataType} from '../types';\n\nexport const EPSILON_FLOAT32 = 1e-7;\nexport const EPSILON_FLOAT16 = 1e-4;\n\n// Required information for all backends.\nexport interface BackendTimingInfo {\n  kernelMs: number|{error: string};\n  getExtraProfileInfo?(): string;  // a field for additional timing information\n                                   // e.g. packing / unpacking for WebGL backend\n}\n\nexport interface TensorStorage {\n  read(dataId: DataId): Promise<BackendValues>;\n  readSync(dataId: DataId): BackendValues;\n  disposeData(dataId: DataId, force?: boolean): boolean;\n  write(values: BackendValues, shape: number[], dtype: DataType): DataId;\n  move(\n      dataId: DataId, values: BackendValues, shape: number[], dtype: DataType,\n      refCount: number): void;\n  memory(): {unreliable: boolean;};  // Backend-specific information.\n  /** Returns number of data ids currently in the storage. */\n  numDataIds(): number;\n  refCount(dataId: DataId): number;\n}\n\n/** Convenient class for storing tensor-related data. */\nexport class DataStorage<T> {\n  private data = new WeakMap<DataId, T>();\n  private dataIdsCount = 0;\n\n  constructor(private backend: KernelBackend, private dataMover: DataMover) {}\n\n  get(dataId: DataId) {\n    if (!this.data.has(dataId)) {\n      this.dataMover.moveData(this.backend, dataId);\n    }\n    return this.data.get(dataId);\n  }\n\n  set(dataId: DataId, value: T): void {\n    this.dataIdsCount++;\n    this.data.set(dataId, value);\n  }\n\n  has(dataId: DataId): boolean {\n    return this.data.has(dataId);\n  }\n\n  delete(dataId: DataId): boolean {\n    this.dataIdsCount--;\n    return this.data.delete(dataId);\n  }\n\n  numDataIds(): number {\n    return this.dataIdsCount;\n  }\n}\n\nexport interface DataMover {\n  /**\n   * To be called by backends whenever they see a dataId that they don't own.\n   * Upon calling this method, the mover will fetch the tensor from another\n   * backend and register it with the current active backend.\n   */\n  moveData(backend: KernelBackend, dataId: DataId): void;\n}\n\nexport interface BackendTimer {\n  // check if backend timer is available\n  timerAvailable(): boolean;\n  time(f: () => void): Promise<BackendTimingInfo>;\n}\n\n/**\n * The interface that defines the kernels that should be implemented when\n * adding a new backend. New backends don't need to implement every one of the\n * methods, this can be done gradually (throw an error for unimplemented\n * methods).\n */\nexport class KernelBackend implements TensorStorage, Backend, BackendTimer {\n  refCount(dataId: DataId): number {\n    return notYetImplemented('refCount');\n  }\n  incRef(dataId: DataId): void {\n    return notYetImplemented('incRef');\n  }\n  timerAvailable(): boolean {\n    return true;\n  }\n  time(f: () => void): Promise<BackendTimingInfo> {\n    return notYetImplemented('time');\n  }\n  read(dataId: object): Promise<BackendValues> {\n    return notYetImplemented('read');\n  }\n  readSync(dataId: object): BackendValues {\n    return notYetImplemented('readSync');\n  }\n  numDataIds(): number {\n    return notYetImplemented('numDataIds');\n  }\n  disposeData(dataId: object, force?: boolean): boolean {\n    return notYetImplemented('disposeData');\n  }\n  write(values: BackendValues, shape: number[], dtype: DataType): DataId {\n    return notYetImplemented('write');\n  }\n  move(\n      dataId: DataId, values: BackendValues, shape: number[], dtype: DataType,\n      refCount: number): void {\n    return notYetImplemented('move');\n  }\n  memory(): {unreliable: boolean; reasons?: string[]} {\n    return notYetImplemented('memory');\n  }\n  /** Returns the highest precision for floats in bits (e.g. 16 or 32) */\n  floatPrecision(): 16|32 {\n    return notYetImplemented('floatPrecision');\n  }\n  /** Returns the smallest representable number.  */\n  epsilon(): number {\n    return this.floatPrecision() === 32 ? EPSILON_FLOAT32 : EPSILON_FLOAT16;\n  }\n  dispose(): void {\n    return notYetImplemented('dispose');\n  }\n}\n\nfunction notYetImplemented(kernelName: string): never {\n  throw new Error(\n      `'${kernelName}' not yet implemented or not found in the registry. ` +\n      `This kernel may not be supported by the tfjs backend you have chosen`);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tanh, TanhInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes hyperbolic tangent of the input `tf.Tensor` element-wise: `tanh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, 70]);\n *\n * x.tanh().print();  // or tf.tanh(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction tanh_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'tanh');\n\n  const inputs: TanhInputs = {x: $x};\n\n  return ENGINE.runKernel(Tanh, inputs as {} as NamedTensorMap);\n}\nexport const tanh = op({tanh_});\n","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Min, MinAttrs, MinInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes the minimum value from the input.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the array is reduced by 1 for each entry in `axes`.\n * If `keepDims` is true, the reduced dimensions are retained with length 1.\n * If `axes` has no entries, all dimensions are reduced, and an array with a\n * single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.min().print();  // or tf.min(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.min(axis).print();  // or tf.min(x, axis)\n * ```\n *\n * @param x The input Tensor.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction min_<T extends Tensor>(\n    x: Tensor|TensorLike, axis: number|number[] = null, keepDims = false): T {\n  const $x = convertToTensor(x, 'x', 'min');\n\n  const inputs: MinInputs = {x: $x};\n  const attrs: MinAttrs = {axis, keepDims};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  return ENGINE.runKernel(\n             Min, inputs as {} as NamedTensorMap,\n             attrs as {} as NamedAttrMap) as T;\n}\n\nexport const min = op({min_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {OneHot, OneHotAttrs, OneHotInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Creates a one-hot `tf.Tensor`. The locations represented by `indices` take\n * value `onValue` (defaults to 1), while all other locations take value\n * `offValue` (defaults to 0). If `indices` is rank `R`, the output has rank\n * `R+1` with the last axis of size `depth`.\n *\n * ```js\n * tf.oneHot(tf.tensor1d([0, 1], 'int32'), 3).print();\n * ```\n *\n * @param indices `tf.Tensor` of indices with dtype `int32`.\n * @param depth The depth of the one hot dimension.\n * @param onValue A number used to fill in the output when the index matches\n * the location.\n * @param offValue A number used to fill in the output when the index does\n *     not match the location.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction oneHot_(\n    indices: Tensor|TensorLike, depth: number, onValue = 1,\n    offValue = 0): Tensor {\n  if (depth < 2) {\n    throw new Error(`Error in oneHot: depth must be >=2, but it is ${depth}`);\n  }\n  const $indices = convertToTensor(indices, 'indices', 'oneHot', 'int32');\n\n  const inputs: OneHotInputs = {indices: $indices};\n  const attrs: OneHotAttrs = {depth, onValue, offValue};\n\n  return ENGINE.runKernel(\n      OneHot, inputs as unknown as NamedTensorMap,\n      attrs as unknown as NamedAttrMap);\n}\n\nexport const oneHot = op({oneHot_});\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/* Type definitions for exporting and importing of models. */\n\n/**\n * A map from Tensor dtype to number of bytes per element of the Tensor.\n */\nexport const DTYPE_VALUE_SIZE_MAP: {[dtype: string]: number} = {\n  'float32': 4,\n  'float16': 2,\n  'int32': 4,\n  'uint16': 2,\n  'uint8': 1,\n  'bool': 1,\n  'complex64': 8\n};\n\n/**\n * A weight manifest.\n *\n * The weight manifest consists of an ordered list of weight-manifest groups.\n * Each weight-manifest group (\"group\" for short hereafter) consists of a\n * number of weight values stored in a number of paths.\n * See the documentation of `WeightManifestGroupConfig` below for more details.\n */\nexport declare type WeightsManifestConfig = WeightsManifestGroupConfig[];\n\n/**\n * A weight-manifest group.\n *\n * Consists of an ordered list of weight values encoded in binary format,\n * stored in an ordered list of paths.\n */\nexport declare interface WeightsManifestGroupConfig {\n  /**\n   * An ordered list of paths.\n   *\n   * Paths are intentionally abstract in order to be general. For example, they\n   * can be relative URL paths or relative paths on the file system.\n   */\n  paths: string[];\n\n  /**\n   * Specifications of the weights stored in the paths.\n   */\n  weights: WeightsManifestEntry[];\n}\n\n/**\n * Group to which the weight belongs.\n *\n * - 'optimizer': Weight from a stateful optimizer.\n */\nexport type WeightGroup = 'model'|'optimizer';\n\n/**\n * An entry in the weight manifest.\n *\n * The entry contains specification of a weight.\n */\nexport declare interface WeightsManifestEntry {\n  /**\n   * Name of the weight, e.g., 'Dense_1/bias'\n   */\n  name: string;\n\n  /**\n   * Shape of the weight.\n   */\n  shape: number[];\n\n  /**\n   * Data type of the weight.\n   */\n  dtype: 'float32'|'int32'|'bool'|'string'|'complex64';\n\n  /**\n   * Type of the weight.\n   *\n   * Optional.\n   *\n   * The value 'optimizer' indicates the weight belongs to an optimizer\n   * (i.e., used only during model training and not during inference).\n   */\n  group?: WeightGroup;\n\n  /**\n   * Information for dequantization of the weight.\n   */\n  quantization?: {\n    scale?: number,  // The scaling constant to multiply by.\n    min?: number,    // The (possibly nudged) minimum weight to add.\n       dtype: 'uint16'|'uint8'|'float16'  // The dtype of the quantized weights.\n  };\n}\n\n/**\n * Options for saving a model.\n * @innamespace io\n */\nexport interface SaveConfig {\n  /**\n   * Whether to save only the trainable weights of the model, ignoring the\n   * non-trainable ones.\n   */\n  trainableOnly?: boolean;\n\n  /**\n   * Whether the optimizer will be saved (if exists).\n   *\n   * Default: `false`.\n   */\n  includeOptimizer?: boolean;\n}\n\n/**\n * Result of a saving operation.\n */\nexport interface SaveResult {\n  /**\n   * Information about the model artifacts saved.\n   */\n  modelArtifactsInfo: ModelArtifactsInfo;\n\n  /**\n   * HTTP responses from the server that handled the model-saving request (if\n   * any). This is applicable only to server-based saving routes.\n   */\n  responses?: Response[];\n\n  /**\n   * Error messages and related data (if any).\n   */\n  errors?: Array<{}|string>;\n}\n\nexport declare interface ModelArtifactsInfo {\n  /**\n   * Timestamp for when the model is saved.\n   */\n  dateSaved: Date;\n\n  /**\n   * TODO (cais,yassogba) consider removing GraphDef as GraphDefs now\n   * come in a JSON format and none of our IOHandlers support a non json\n   * format. We could conder replacing this with 'Binary' if we want to\n   * allow future handlers to save to non json formats (though they will\n   * probably want more information than 'Binary').\n   * Type of the model topology\n   *\n   * Type of the model topology\n   *\n   * Possible values:\n   *   - JSON: JSON config (human-readable, e.g., Keras JSON).\n   *   - GraphDef: TensorFlow\n   *     [GraphDef](https://www.tensorflow.org/extend/tool_developers/#graphdef)\n   *     protocol buffer (binary).\n   */\n  modelTopologyType: 'JSON'|'GraphDef';\n\n  /**\n   * Size of model topology (Keras JSON or GraphDef), in bytes.\n   */\n  modelTopologyBytes?: number;\n\n  /**\n   * Size of weight specification or manifest, in bytes.\n   */\n  weightSpecsBytes?: number;\n\n  /**\n   * Size of weight value data, in bytes.\n   */\n  weightDataBytes?: number;\n}\n\n/** Model training configuration. */\nexport declare interface TrainingConfig {\n  // TODO(cais): Tighten the typing once keras spec is available to tfjs-core.\n  // See\n  // tslint:disable-next-line:max-line-length\n  // https://github.com/tensorflow/tfjs-layers/blob/master/src/keras_format/training_config.ts\n  /** Optimizer used for the model training. */\n  optimizer_config: {};\n\n  // TODO(cais): Tighten the typing once keras spec is available to tfjs-core.\n  /** Loss function(s) for the model's output(s). */\n  loss: string|string[]|{[key: string]: string};\n\n  // TODO(cais): Tighten the typing once keras spec is available to tfjs-core.\n  /** Metric function(s) for the model's output(s). */\n  metrics?: string[]|{[key: string]: string};\n\n  // TODO(cais): Tighten the typing once keras spec is available to tfjs-core.\n  weighted_metrics?: string[];\n\n  // TODO(cais): Tighten the typing once keras spec is available to tfjs-core.\n  sample_weight_mode?: string;\n\n  loss_weights?: number[]|{[key: string]: number};\n}\n\n/**\n * The serialized artifacts of a model, including topology and weights.\n *\n * The `modelTopology`, `trainingConfig`, `weightSpecs` and `weightData` fields\n * of this interface are optional, in order to support topology- or weights-only\n * saving and loading.\n *\n * Note this interface is used internally in IOHandlers.  For the file format\n * written to disk as `model.json`, see `ModelJSON`.\n */\nexport declare interface ModelArtifacts {\n  /**\n   * Model topology.\n   *\n   * For Keras-style `tf.Model`s, this is a JSON object.\n   * For TensorFlow-style models (e.g., `SavedModel`), this is the JSON\n   * encoding of the `GraphDef` protocol buffer.\n   */\n  modelTopology?: {}|ArrayBuffer;\n\n  /**\n   * Serialized configuration for the model's training.\n   */\n  trainingConfig?: TrainingConfig;\n\n  /**\n   * Weight specifications.\n   *\n   * This corresponds to the weightsData below.\n   */\n  weightSpecs?: WeightsManifestEntry[];\n\n  /**\n   * Binary buffer for all weight values concatenated in the order specified\n   * by `weightSpecs`.\n   */\n  weightData?: ArrayBuffer;\n\n  /**\n   * Hard-coded format name for models saved from TensorFlow.js or converted\n   * by TensorFlow.js Converter.\n   */\n  format?: string;\n\n  /**\n   * What library is responsible for originally generating this artifact.\n   *\n   * Used for debugging purposes. E.g., 'TensorFlow.js v1.0.0'.\n   */\n  generatedBy?: string;\n\n  /**\n   * What library or tool is responsible for converting the original model\n   * to this format, applicable only if the model is output by a converter.\n   *\n   * Used for debugging purposes.  E.g., 'TensorFlow.js Converter v1.0.0'.\n   *\n   * A value of `null` means the model artifacts are generated without any\n   * conversion process (e.g., saved directly from a TensorFlow.js\n   * `tf.LayersModel` instance.)\n   */\n  convertedBy?: string|null;\n\n  /**\n   * Inputs and outputs signature for saved model.\n   */\n  signature?: {};\n\n  /**\n   * User-defined metadata about the model.\n   */\n  userDefinedMetadata?: {[key: string]: {}};\n\n  /**\n   * Initializer for the model.\n   */\n  modelInitializer?: {};\n}\n\n/**\n * The on-disk format of the `model.json` file.\n *\n * TF.js 1.0 always populates the optional fields when writing model.json.\n * Prior versions did not provide those fields.\n */\nexport declare interface ModelJSON {\n  /**\n   * Model topology.\n   *\n   * For Keras-style `tf.Model`s, this is a JSON object.\n   * For TensorFlow-style models (e.g., `SavedModel`), this is the JSON\n   * encoding of the `GraphDef` protocol buffer.\n   */\n  modelTopology: {};\n\n  /** Model training configuration. */\n  trainingConfig?: TrainingConfig;\n\n  /**\n   * Weights manifest.\n   *\n   * The weights manifest consists of an ordered list of weight-manifest\n   * groups. Each weight-manifest group consists of a number of weight values\n   * stored in a number of paths. See the documentation of\n   * `WeightsManifestConfig` for more details.\n   */\n  weightsManifest: WeightsManifestConfig;\n\n  /**\n   * Hard-coded format name for models saved from TensorFlow.js or converted\n   * by TensorFlow.js Converter.\n   */\n  format?: string;\n\n  /**\n   * What library is responsible for originally generating this artifact.\n   *\n   * Used for debugging purposes. E.g., 'TensorFlow.js v1.0.0'.\n   */\n  generatedBy?: string;\n\n  /**\n   * What library or tool is responsible for converting the original model\n   * to this format, applicable only if the model is output by a converter.\n   *\n   * Used for debugging purposes.  E.g., 'TensorFlow.js Converter v1.0.0'.\n   *\n   * A value of `null` means the model artifacts are generated without any\n   * conversion process (e.g., saved directly from a TensorFlow.js\n   * `tf.LayersModel` instance.)\n   */\n  convertedBy?: string|null;\n\n  /**\n   * Inputs and outputs signature for saved model.\n   */\n  signature?: {};\n\n  /**\n   * User-defined metadata about the model.\n   */\n  userDefinedMetadata?: {[key: string]: {}};\n\n  /**\n   * Initializer for the model.\n   */\n  modelInitializer?: {};\n}\n\n/**\n * Type definition for handlers of loading operations.\n */\nexport type LoadHandler = () => Promise<ModelArtifacts>;\n\n/**\n * Type definition for handlers of saving operations.\n */\nexport type SaveHandler = (modelArtifact: ModelArtifacts) =>\n    Promise<SaveResult>;\n\n/**\n * Interface for a model import/export handler.\n *\n * The `save` and `load` handlers are both optional, in order to allow handlers\n * that support only saving or loading.\n */\n// tslint:disable-next-line:interface-name\nexport interface IOHandler {\n  save?: SaveHandler;\n  load?: LoadHandler;\n}\n\n/**\n * An interface for the manager of a model store.\n *\n * A model store is defined as a storage medium on which multiple models can\n * be stored. Each stored model has a unique `path` as its identifier.\n * A `ModelStoreManager` for the store allows actions including\n *\n * - Listing the models stored in the store.\n * - Deleting a model from the store.\n */\nexport interface ModelStoreManager {\n  /**\n   * List all models in the model store.\n   *\n   * @returns A dictionary mapping paths of existing models to their\n   *   model artifacts info. Model artifacts info include type of the model's\n   *   topology, byte sizes of the topology, weights, etc.\n   */\n  listModels(): Promise<{[path: string]: ModelArtifactsInfo}>;\n\n  /**\n   * Remove a model specified by `path`.\n   *\n   * @param path\n   * @returns ModelArtifactsInfo of the deleted model (if and only if deletion\n   *   is successful).\n   * @throws Error if deletion fails, e.g., if no model exists at `path`.\n   */\n  removeModel(path: string): Promise<ModelArtifactsInfo>;\n}\n\n/**\n * Callback for the progress of a long-running action such as an HTTP\n * request for a large binary object.\n *\n * `fraction` should be a number in the [0, 1] interval, indicating how\n * much of the action has completed.\n */\nexport type OnProgressCallback = (fraction: number) => void;\n\n/** @innamespace io */\nexport interface LoadOptions {\n  /**\n   * RequestInit (options) for HTTP requests.\n   *\n   * For detailed information on the supported fields, see\n   * [https://developer.mozilla.org/en-US/docs/Web/API/Request/Request](\n   *     https://developer.mozilla.org/en-US/docs/Web/API/Request/Request)\n   */\n  requestInit?: RequestInit;\n\n  /**\n   * Progress callback.\n   */\n  onProgress?: OnProgressCallback;\n\n  /**\n   * A function used to override the `window.fetch` function.\n   */\n  fetchFunc?: Function;\n\n  /**\n   * Strict loading model: whether extraneous weights or missing\n   * weights should trigger an `Error`.\n   *\n   * If `true`, require that the provided weights exactly match those\n   * required by the layers. `false` means that both extra weights\n   * and missing weights will be silently ignored.\n   *\n   * Default: `true`.\n   */\n  strict?: boolean;\n\n  /**\n   * Path prefix for weight files, by default this is calculated from the\n   * path of the model JSON file.\n   *\n   * For instance, if the path to the model JSON file is\n   * `http://localhost/foo/model.json`, then the default path prefix will be\n   * `http://localhost/foo/`. If a weight file has the path value\n   * `group1-shard1of2` in the weight manifest, then the weight file will be\n   * loaded from `http://localhost/foo/group1-shard1of2` by default. However,\n   * if you provide a `weightPathPrefix` value of\n   * `http://localhost/foo/alt-weights`, then the weight file will be loaded\n   * from the path `http://localhost/foo/alt-weights/group1-shard1of2` instead.\n   */\n  weightPathPrefix?: string;\n\n  /**\n   * Whether the module or model is to be loaded from TF Hub.\n   *\n   * Setting this to `true` allows passing a TF-Hub module URL, omitting the\n   * standard model file name and the query parameters.\n   *\n   * Default: `false`.\n   */\n  fromTFHub?: boolean;\n\n  /**\n   * An async function to convert weight file name to URL. The weight file\n   * names are stored in model.json's weightsManifest.paths field. By default we\n   * consider weight files are colocated with the model.json file. For example:\n   *     model.json URL: https://www.google.com/models/1/model.json\n   *     group1-shard1of1.bin url:\n   *        https://www.google.com/models/1/group1-shard1of1.bin\n   *\n   * With this func you can convert the weight file name to any URL.\n   */\n  weightUrlConverter?: (weightFileName: string) => Promise<string>;\n}\n\n/**\n * Additional options for Platform.fetch\n */\nexport interface RequestDetails {\n  /**\n   * Is this request for a binary file (as opposed to a json file)\n   */\n  isBinary?: boolean;\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// tslint:disable-next-line:no-any\nfunction _isNavigatorDefined(): boolean {\n  return typeof navigator !== 'undefined' && navigator != null;\n}\n\nexport function isMobile(nav?: Navigator): boolean {\n  if (nav || _isNavigatorDefined()) {\n    if (!nav) {\n      nav = navigator;\n    }\n    if (nav.product === 'ReactNative') {\n      return true;\n    }\n\n    // tslint:disable-next-line:no-any\n    const a = nav.userAgent || nav.vendor || (window as any).opera;\n    // tslint:disable-next-line:max-line-length\n    return /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i\n               .test(a) ||\n        // tslint:disable-next-line:max-line-length\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i\n            .test(a.substr(0, 4));\n  }\n  return false;\n}\n\nexport function isBrowser(): boolean {\n  return (typeof window !== 'undefined' && window.document != null) ||\n      //@ts-ignore\n      (typeof WorkerGlobalScope !== 'undefined');\n}\n","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\n\n/**\n * Prints information about the `tf.Tensor` including its data.\n *\n * ```js\n * const verbose = true;\n * tf.tensor2d([1, 2, 3, 4], [2, 2]).print(verbose);\n * ```\n * @param x The tensor to be printed.\n * @param verbose Whether to print verbose information about the ` Tensor`,\n * including dtype and size.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function print<T extends Tensor>(x: T, verbose = false): void {\n  console.log(x.toString(verbose));\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {FloorDiv, FloorDivInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Divides two `tf.Tensor`s element-wise, A / B. Supports broadcasting.\n * The result is rounded with floor function.\n *\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 9, 16]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n *\n * a.floorDiv(b).print();  // or tf.div(a, b)\n * ```\n *\n * ```js\n * // Broadcast div a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(2);\n *\n * a.floorDiv(b).print();  // or tf.floorDiv(a, b)\n * ```\n *\n * @param a The first tensor as the numerator.\n * @param b The second tensor as the denominator. Must have the same dtype as\n * `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction floorDiv_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'floorDiv');\n  let $b = convertToTensor(b, 'b', 'floorDiv');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  const inputs: FloorDivInputs = {a: $a, b: $b};\n\n  return ENGINE.runKernel(FloorDiv, inputs as {} as NamedTensorMap);\n}\n\nexport const floorDiv = op({floorDiv_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Maximum, MaximumInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {assertAndGetBroadcastShape} from './broadcast_util';\nimport {cast} from './cast';\nimport {op} from './operation';\n\n/**\n * Returns the max of a and b (`a > b ? a : b`) element-wise.\n * Supports broadcasting.\n *\n * We also expose `tf.maximumStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 3, 16]);\n * const b = tf.tensor1d([1, 2, 9, 4]);\n *\n * a.maximum(b).print();  // or tf.maximum(a, b)\n * ```\n *\n * ```js\n * // Broadcast maximum a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(5);\n *\n * a.maximum(b).print();  // or tf.maximum(a, b)\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction maximum_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'maximum');\n  let $b = convertToTensor(b, 'b', 'maximum');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  if ($a.dtype === 'bool') {\n    $a = cast($a, 'int32');\n    $b = cast($b, 'int32');\n  }\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  const inputs: MaximumInputs = {a: $a, b: $b};\n\n  return ENGINE.runKernel(Maximum, inputs as {} as NamedTensorMap);\n}\n\nexport const maximum = op({maximum_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {AvgPool, AvgPoolAttrs, AvgPoolInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor3D, Tensor4D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {cast} from './cast';\nimport * as conv_util from './conv_util';\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Computes the 2D average pooling of an image.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param pad The type of padding algorithm:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *         https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\nfunction avgPool_<T extends Tensor3D|Tensor4D>(\n    x: T|TensorLike, filterSize: [number, number]|number,\n    strides: [number, number]|number,\n    pad: 'valid'|'same'|number|conv_util.ExplicitPadding,\n    dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n  const $x = convertToTensor(x, 'x', 'avgPool', 'float32');\n  const dilations = 1;\n\n  util.assert(\n      conv_util.eitherStridesOrDilationsAreOne(strides, dilations),\n      () => 'Error in avgPool: Either strides or dilations must be 1. ' +\n          `Got strides ${strides} and dilations '${dilations}'`);\n\n  let x4D = $x as Tensor4D;\n  let reshapedTo4D = false;\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n  }\n\n  util.assert(\n      x4D.rank === 4,\n      () => `Error in avgPool: x must be rank 4 but got rank ${x4D.rank}.`);\n\n  if (dimRoundingMode != null) {\n    util.assert(\n        util.isInt(pad as number),\n        () => `Error in avgPool: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n  }\n\n  const inputs: AvgPoolInputs = {x: x4D};\n\n  const attrs: AvgPoolAttrs = {filterSize, strides, pad, dimRoundingMode};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  let res = ENGINE.runKernel(\n                AvgPool, inputs as {} as NamedTensorMap,\n                attrs as {} as NamedAttrMap) as T;\n\n  res = cast(res, $x.dtype);\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]) as T;\n  }\n\n  return res;\n}\n\nexport const avgPool = op({avgPool_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {BatchToSpaceND, BatchToSpaceNDAttrs, BatchToSpaceNDInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\n\n/**\n * This operation reshapes the \"batch\" dimension 0 into `M + 1` dimensions of\n * shape `blockShape + [batch]`, interleaves these blocks back into the grid\n * defined by the spatial dimensions `[1, ..., M]`, to obtain a result with\n * the same rank as the input. The spatial dimensions of this intermediate\n * result are then optionally cropped according to `crops` to produce the\n * output. This is the reverse of `tf.spaceToBatchND`. See below for a precise\n * description.\n *\n * ```js\n * const x = tf.tensor4d([1, 2, 3, 4], [4, 1, 1, 1]);\n * const blockShape = [2, 2];\n * const crops = [[0, 0], [0, 0]];\n *\n * x.batchToSpaceND(blockShape, crops).print();\n * ```\n *\n * @param x A `tf.Tensor`. N-D with `x.shape` = `[batch] + spatialShape +\n * remainingShape`, where spatialShape has `M` dimensions.\n * @param blockShape A 1-D array. Must have shape `[M]`, all values must\n * be >= 1.\n * @param crops A 2-D array.  Must have shape `[M, 2]`, all values must be >= 0.\n * `crops[i] = [cropStart, cropEnd]` specifies the amount to crop from input\n * dimension `i + 1`, which corresponds to spatial dimension `i`. It is required\n * that `cropStart[i] + cropEnd[i] <= blockShape[i] * inputShape[i + 1]`\n *\n * This operation is equivalent to the following steps:\n *\n * 1. Reshape `x` to `reshaped` of shape: `[blockShape[0], ...,\n * blockShape[M-1], batch / prod(blockShape), x.shape[1], ...,\n * x.shape[N-1]]`\n *\n * 2. Permute dimensions of `reshaped`to produce `permuted` of shape `[batch /\n * prod(blockShape),x.shape[1], blockShape[0], ..., x.shape[M],\n * blockShape[M-1],x.shape[M+1], ..., x.shape[N-1]]`\n *\n * 3. Reshape `permuted` to produce `reshapedPermuted` of shape `[batch /\n * prod(blockShape),x.shape[1] * blockShape[0], ..., x.shape[M] *\n * blockShape[M-1],x.shape[M+1], ..., x.shape[N-1]]`\n *\n * 4. Crop the start and end of dimensions `[1, ..., M]` of `reshapedPermuted`\n * according to `crops` to produce the output of shape: `[batch /\n * prod(blockShape),x.shape[1] * blockShape[0] - crops[0,0] - crops[0,1],\n * ..., x.shape[M] * blockShape[M-1] - crops[M-1,0] -\n * crops[M-1,1],x.shape[M+1], ..., x.shape[N-1]]`\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction batchToSpaceND_<T extends Tensor>(\n    x: T|TensorLike, blockShape: number[], crops: number[][]): T {\n  const $x = convertToTensor(x, 'x', 'batchToSpaceND');\n  const prod = blockShape.reduce((a, b) => a * b);\n\n  util.assert(\n      $x.rank >= 1 + blockShape.length,\n      () => `input rank is ${$x.rank} but should be > than blockShape.length ${\n          blockShape.length}`);\n\n  util.assert(\n      crops.length === blockShape.length,\n      () => `crops.length is ${\n          crops.length} but should be equal to blockShape.length  ${\n          blockShape.length}`);\n\n  util.assert(\n      $x.shape[0] % prod === 0,\n      () => `input tensor batch is ${\n                $x.shape[0]} but is not divisible by the product of ` +\n          `the elements of blockShape ${blockShape.join(' * ')} === ${prod}`);\n\n  const inputs: BatchToSpaceNDInputs = {x: $x};\n  const attrs: BatchToSpaceNDAttrs = {blockShape, crops};\n\n  return ENGINE.runKernel(\n      BatchToSpaceND, inputs as {} as NamedTensorMap,\n      attrs as {} as NamedAttrMap);\n}\n\nexport const batchToSpaceND = op({batchToSpaceND_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Bincount, BincountAttrs, BincountInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor1D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\n\n/**\n * Outputs a vector with length `size` and the same dtype as `weights`.\n *\n * If `weights` are empty, then index `i` stores the number of times the value\n * `i` is counted in `x`. If `weights` are non-empty, then index `i` stores the\n * sum of the value in `weights` at each index where the corresponding value in\n * `x` is `i`.\n *\n * Values in `x` outside of the range [0, size) are ignored.\n *\n * @param x The input int tensor, rank 1.\n * @param weights The weights tensor, must have the same shape as x, or a\n *     length-0 Tensor, in which case it acts as all weights equal to 1.\n * @param size Non-negative integer.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction bincount_<T extends Tensor1D>(\n    x: T|TensorLike, weights: T|TensorLike, size: number): T {\n  const $x = convertToTensor(x, 'x', 'bincount');\n  const $weights = convertToTensor(weights, 'weights', 'bincount');\n\n  util.assert(\n      $x.dtype === 'int32',\n      () => `Error in bincount: input ` +\n          `dtype must be int32, but got ${$x.dtype}`);\n  util.assert(size >= 0, () => `size must be non-negative, but got ${size}.`);\n  util.assert(\n      $weights.size === $x.size || $weights.size === 0,\n      () => `Error in bincount: weights must have the same size as input or` +\n          `0-length, but got input shape: ${$x.shape}, weights shape: ` +\n          `${$weights.shape}.`);\n\n  const inputs: BincountInputs = {x: $x, weights: $weights};\n  const attrs: BincountAttrs = {size};\n\n  return ENGINE.runKernel(\n      Bincount, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const bincount = op({bincount_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Equal, EqualInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {assertAndGetBroadcastShape} from './broadcast_util';\nimport {op} from './operation';\n\n/**\n * Returns the truth value of (a == b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.equal(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction equal_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'equal', 'string_or_numeric');\n  let $b = convertToTensor(b, 'b', 'equal', 'string_or_numeric');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  const inputs: EqualInputs = {a: $a, b: $b};\n\n  return ENGINE.runKernel(Equal, inputs as {} as NamedTensorMap);\n}\n\nexport const equal = op({equal_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Elu, EluInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes exponential linear element-wise: `x > 0 ? e ^ x - 1 : 0`.\n *\n * ```js\n * const x = tf.tensor1d([-1, 1, -3, 2]);\n *\n * x.elu().print();  // or tf.elu(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction elu_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'elu');\n\n  const inputs: EluInputs = {x: $x};\n\n  return ENGINE.runKernel(Elu, inputs as {} as NamedTensorMap);\n}\n\nexport const elu = op({elu_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Floor, FloorInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes floor of input `tf.Tensor` element-wise: `floor(x)`.\n *\n * ```js\n * const x = tf.tensor1d([.6, 1.1, -3.3]);\n *\n * x.floor().print();  // or tf.floor(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction floor_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'floor');\n\n  const inputs: FloorInputs = {x: $x};\n  return ENGINE.runKernel(Floor, inputs as {} as NamedTensorMap);\n}\nexport const floor = op({floor_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {GatherV2, GatherV2Attrs, GatherV2Inputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Gather slices from tensor `x`'s axis `axis` according to `indices`.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * const indices = tf.tensor1d([1, 3, 3], 'int32');\n *\n * x.gather(indices).print();\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n * const indices = tf.tensor1d([1, 1, 0], 'int32');\n *\n * x.gather(indices).print();\n * ```\n * @param x The input tensor whose slices to be gathered.\n * @param indices The indices of the values to extract.\n * @param axis The axis over which to select values. Defaults to 0.\n * @param batchDims Optional. The number of batch dimensions. It must be less\n *     than or equal to rank(indices). Defaults to 0.\n *     The output tensor will have shape of\n *     `x.shape[:axis] + indices.shape[batchDims:] + x.shape[axis + 1:]`\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction gather_<T extends Tensor>(\n    x: T|TensorLike, indices: Tensor|TensorLike, axis = 0, batchDims = 0): T {\n  const $x = convertToTensor(x, 'x', 'gather');\n  const $indices = convertToTensor(indices, 'indices', 'gather', 'int32');\n\n  const inputs: GatherV2Inputs = {x: $x, indices: $indices};\n  const attrs: GatherV2Attrs = {axis, batchDims};\n\n  return ENGINE.runKernel(\n      GatherV2, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const gather = op({gather_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {GreaterEqual, GreaterEqualInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {assertAndGetBroadcastShape} from './broadcast_util';\nimport {op} from './operation';\n\n/**\n * Returns the truth value of (a >= b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.greaterEqual(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction greaterEqual_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'greaterEqual', 'string_or_numeric');\n  let $b = convertToTensor(b, 'b', 'greaterEqual', 'string_or_numeric');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  const inputs: GreaterEqualInputs = {a: $a, b: $b};\n\n  return ENGINE.runKernel(GreaterEqual, inputs as {} as NamedTensorMap);\n}\n\nexport const greaterEqual = op({greaterEqual_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {LeakyRelu, LeakyReluAttrs, LeakyReluInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes leaky rectified linear element-wise.\n *\n * See\n * [http://web.stanford.edu/~awni/papers/relu_hybrid_icml2013_final.pdf](\n *     http://web.stanford.edu/~awni/papers/relu_hybrid_icml2013_final.pdf)\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.leakyRelu(0.1).print();  // or tf.leakyRelu(x, 0.1)\n * ```\n * @param x The input tensor.\n * @param alpha The scaling factor for negative values, defaults to 0.2.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction leakyRelu_<T extends Tensor>(x: T|TensorLike, alpha = 0.2): T {\n  const $x = convertToTensor(x, 'x', 'leakyRelu');\n\n  const inputs: LeakyReluInputs = {x: $x};\n  const attrs: LeakyReluAttrs = {alpha};\n\n  return ENGINE.runKernel(\n      LeakyRelu, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const leakyRelu = op({leakyRelu_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Log1p, Log1pInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes natural logarithm of the input `tf.Tensor` plus one\n * element-wise: `ln(1 + x)`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, Math.E - 1]);\n *\n * x.log1p().print();  // or tf.log1p(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction log1p_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'log1p');\n\n  const inputs: Log1pInputs = {x: $x};\n  return ENGINE.runKernel(Log1p, inputs as {} as NamedTensorMap);\n}\nexport const log1p = op({log1p_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Softplus, SoftplusInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes softplus of the input `tf.Tensor` element-wise: `log(exp(x) + 1)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.softplus().print();  // or tf.softplus(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction softplus_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'softplus');\n\n  const inputs: SoftplusInputs = {x: $x};\n  return ENGINE.runKernel(Softplus, inputs as {} as NamedTensorMap);\n}\nexport const softplus = op({softplus_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {LogicalNot, LogicalNotInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {op} from './operation';\n\n/**\n * Returns the truth value of `NOT x` element-wise.\n *\n * ```js\n * const a = tf.tensor1d([false, true], 'bool');\n *\n * a.logicalNot().print();\n * ```\n *\n * @param x The input tensor. Must be of dtype 'bool'.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction logicalNot_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'logicalNot', 'bool');\n  const inputs: LogicalNotInputs = {x: $x};\n  return ENGINE.runKernel(LogicalNot, inputs as {} as NamedTensorMap);\n}\n\nexport const logicalNot = op({logicalNot_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {LogicalOr, LogicalOrInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {assertAndGetBroadcastShape} from './broadcast_util';\nimport {op} from './operation';\n\n/**\n * Returns the truth value of `a OR b` element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([false, false, true, true], 'bool');\n * const b = tf.tensor1d([false, true, false, true], 'bool');\n *\n * a.logicalOr(b).print();\n * ```\n * @param a The first input tensor. Must be of dtype bool.\n * @param b The second input tensor. Must be of dtype bool.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction logicalOr_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  const $a = convertToTensor(a, 'a', 'logicalOr', 'bool');\n  const $b = convertToTensor(b, 'b', 'logicalOr', 'bool');\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  const inputs: LogicalOrInputs = {a: $a, b: $b};\n  return ENGINE.runKernel(LogicalOr, inputs as {} as NamedTensorMap);\n}\nexport const logicalOr = op({logicalOr_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {MaxPool, MaxPoolAttrs, MaxPoolInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor3D, Tensor4D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport * as conv_util from './conv_util';\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Computes the 2D max pooling of an image.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in dilated pooling. Defaults to `[1, 1]`. If `dilations` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\nfunction maxPool_<T extends Tensor3D|Tensor4D>(\n    x: T|TensorLike, filterSize: [number, number]|number,\n    strides: [number, number]|number,\n    pad: 'valid'|'same'|number|conv_util.ExplicitPadding,\n    dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n  const $x = convertToTensor(x, 'x', 'maxPool');\n  const dilations = 1;\n\n  let x4D = $x as Tensor4D;\n  let reshapedTo4D = false;\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n  }\n\n  util.assert(\n      x4D.rank === 4,\n      () => `Error in maxPool: input must be rank 4 but got rank ${x4D.rank}.`);\n  util.assert(\n      conv_util.eitherStridesOrDilationsAreOne(strides, dilations),\n      () => 'Error in maxPool: Either strides or dilations must be 1. ' +\n          `Got strides ${strides} and dilations '${dilations}'`);\n  if (dimRoundingMode != null) {\n    util.assert(\n        util.isInt(pad as number),\n        () => `Error in maxPool: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n  }\n\n  const inputs: MaxPoolInputs = {x: x4D};\n\n  const attrs: MaxPoolAttrs = {filterSize, strides, pad, dimRoundingMode};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  const res = ENGINE.runKernel(\n                  MaxPool, inputs as {} as NamedTensorMap,\n                  attrs as {} as NamedAttrMap) as T;\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]) as T;\n  }\n  return res;\n}\n\nexport const maxPool = op({maxPool_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Minimum, MinimumInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {assertAndGetBroadcastShape} from './broadcast_util';\nimport {cast} from './cast';\nimport {op} from './operation';\n\n/**\n * Returns the min of a and b (`a < b ? a : b`) element-wise.\n * Supports broadcasting.\n *\n * We also expose `minimumStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 3, 16]);\n * const b = tf.tensor1d([1, 2, 9, 4]);\n *\n * a.minimum(b).print();  // or tf.minimum(a, b)\n * ```\n *\n * ```js\n * // Broadcast minimum a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(5);\n *\n * a.minimum(b).print();  // or tf.minimum(a, b)\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction minimum_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'minimum');\n  let $b = convertToTensor(b, 'b', 'minimum');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  if ($a.dtype === 'bool') {\n    $a = cast($a, 'int32');\n    $b = cast($b, 'int32');\n  }\n\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  const inputs: MinimumInputs = {a: $a, b: $b};\n\n  return ENGINE.runKernel(Minimum, inputs as {} as NamedTensorMap);\n}\n\nexport const minimum = op({minimum_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {NotEqual, NotEqualInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {assertAndGetBroadcastShape} from './broadcast_util';\nimport {op} from './operation';\n\n/**\n * Returns the truth value of (a != b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([0, 2, 3]);\n *\n * a.notEqual(b).print();\n * ```\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction notEqual_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'notEqual', 'string_or_numeric');\n  let $b = convertToTensor(b, 'b', 'notEqual', 'string_or_numeric');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  const inputs: NotEqualInputs = {a: $a, b: $b};\n\n  return ENGINE.runKernel(NotEqual, inputs as {} as NamedTensorMap);\n}\n\nexport const notEqual = op({notEqual_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {SpaceToBatchND, SpaceToBatchNDAttrs, SpaceToBatchNDInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\n\n/**\n * This operation divides \"spatial\" dimensions `[1, ..., M]` of the input into\n * a grid of blocks of shape `blockShape`, and interleaves these blocks with\n * the \"batch\" dimension (0) such that in the output, the spatial\n * dimensions `[1, ..., M]` correspond to the position within the grid,\n * and the batch dimension combines both the position within a spatial block\n * and the original batch position. Prior to division into blocks,\n * the spatial dimensions of the input are optionally zero padded\n * according to `paddings`. See below for a precise description.\n *\n * ```js\n * const x = tf.tensor4d([1, 2, 3, 4], [1, 2, 2, 1]);\n * const blockShape = [2, 2];\n * const paddings = [[0, 0], [0, 0]];\n *\n * x.spaceToBatchND(blockShape, paddings).print();\n * ```\n *\n * @param x A `tf.Tensor`. N-D with `x.shape` = `[batch] + spatialShape +\n * remainingShape`, where spatialShape has `M` dimensions.\n * @param blockShape A 1-D array. Must have shape `[M]`, all values must\n * be >= 1.\n * @param paddings A 2-D array. Must have shape `[M, 2]`, all values must be >=\n *     0. `paddings[i] = [padStart, padEnd]` specifies the amount to zero-pad\n * from input dimension `i + 1`, which corresponds to spatial dimension `i`. It\n * is required that\n * `(inputShape[i + 1] + padStart + padEnd) % blockShape[i] === 0`\n *\n * This operation is equivalent to the following steps:\n *\n * 1. Zero-pad the start and end of dimensions `[1, ..., M]` of the input\n * according to `paddings` to produce `padded` of shape paddedShape.\n *\n * 2. Reshape `padded` to `reshapedPadded` of shape:\n * `[batch] + [paddedShape[1] / blockShape[0], blockShape[0], ...,\n * paddedShape[M] / blockShape[M-1], blockShape[M-1]] + remainingShape`\n *\n * 3. Permute dimensions of `reshapedPadded` to produce `permutedReshapedPadded`\n * of shape: `blockShape + [batch] + [paddedShape[1] / blockShape[0], ...,\n * paddedShape[M] / blockShape[M-1]] + remainingShape`\n *\n * 4. Reshape `permutedReshapedPadded` to flatten `blockShape` into the\n * batch dimension, producing an output tensor of shape:\n * `[batch * prod(blockShape)] + [paddedShape[1] / blockShape[0], ...,\n * paddedShape[M] / blockShape[M-1]] + remainingShape`\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction spaceToBatchND_<T extends Tensor>(\n    x: T|TensorLike, blockShape: number[], paddings: number[][]): T {\n  const $x = convertToTensor(x, 'x', 'spaceToBatchND');\n\n  util.assert(\n      $x.rank >= 1 + blockShape.length,\n      () => `input rank ${$x.rank} should be > than [blockShape] ${\n          blockShape.length}`);\n\n  util.assert(\n      paddings.length === blockShape.length,\n      () => `paddings.shape[0] ${\n          paddings.length} must be equal to [blockShape] ${blockShape.length}`);\n\n  util.assert(\n      $x.shape.reduce(\n          (a, b, i) => {\n            if (i > 0 && i <= blockShape.length) {\n              return a &&\n                  ((b + paddings[i - 1][0] + paddings[i - 1][1]) %\n                       blockShape[i - 1] ===\n                   0);\n            }\n            return a;\n          },\n          true),\n      () => `input spatial dimensions ${$x.shape.slice(1)} with paddings ${\n          paddings.toString()} must be divisible by blockShapes ${\n          blockShape.toString()}`);\n\n  const inputs: SpaceToBatchNDInputs = {x: $x};\n  const attrs: SpaceToBatchNDAttrs = {blockShape, paddings};\n\n  return ENGINE.runKernel(\n      SpaceToBatchND, inputs as {} as NamedTensorMap,\n      attrs as {} as NamedAttrMap);\n}\n\nexport const spaceToBatchND = op({spaceToBatchND_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Prelu, PreluInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes leaky rectified linear element-wise with parametric alphas.\n *\n * `x < 0 ? alpha * x : f(x) = x`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n * const alpha = tf.scalar(0.1);\n *\n * x.prelu(alpha).print();  // or tf.prelu(x, alpha)\n * ```\n * @param x The input tensor.\n * @param alpha Scaling factor for negative values.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction prelu_<T extends Tensor>(x: T|TensorLike, alpha: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'prelu');\n  const $alpha = convertToTensor(alpha, 'alpha', 'prelu');\n\n  const inputs: PreluInputs = {x: $x, alpha: $alpha};\n  return ENGINE.runKernel(Prelu, inputs as {} as NamedTensorMap);\n}\n\nexport const prelu = op({prelu_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport {DataType, Rank, ShapeMap} from '../types';\n\nimport {buffer} from './buffer';\nimport {op} from './operation';\nimport {UniformRandom} from './rand_util';\n\n/**\n * Creates a `tf.Tensor` with values sampled from a uniform distribution.\n *\n * The generated values follow a uniform distribution in the range [minval,\n * maxval). The lower bound minval is included in the range, while the upper\n * bound maxval is excluded.\n *\n * ```js\n * tf.randomUniform([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param minval The lower bound on the range of random values to generate.\n *   Defaults to 0.\n * @param maxval The upper bound on the range of random values to generate.\n *   Defaults to 1.\n * @param dtype The data type of the output tensor. Defaults to 'float32'.\n *\n * @doc {heading: 'Tensors', subheading: 'Random'}\n */\nfunction randomUniform_<R extends Rank>(\n    shape: ShapeMap[R], minval = 0, maxval = 1, dtype: DataType = 'float32',\n    seed?: number|string): Tensor<R> {\n  const res = buffer(shape, dtype);\n  const random = new UniformRandom(minval, maxval, null, seed);\n  for (let i = 0; i < res.values.length; i++) {\n    res.values[i] = random.nextValue();\n  }\n  return res.toTensor();\n}\n\nexport const randomUniform = op({randomUniform_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Relu6, Relu6Inputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes rectified linear 6 element-wise: `min(max(x, 0), 6)`.\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 8]);\n *\n * x.relu6().print();  // or tf.relu6(x)\n * ```\n * @param x The input tensor. If the dtype is `bool`, the output dtype will be\n *     `int32'.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction relu6_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'relu6');\n\n  const inputs: Relu6Inputs = {x: $x};\n\n  return ENGINE.runKernel(Relu6, inputs as {} as NamedTensorMap);\n}\n\nexport const relu6 = op({relu6_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Round, RoundInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes round of input `tf.Tensor` element-wise: `round(x)`.\n * It implements banker's rounding.\n *\n * ```js\n * const x = tf.tensor1d([.6, 1.1, -3.3]);\n *\n * x.round().print();  // or tf.round(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction round_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'round');\n  const inputs: RoundInputs = {x: $x};\n\n  return ENGINE.runKernel(Round, inputs as {} as NamedTensorMap);\n}\n\nexport const round = op({round_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor, Tensor2D} from '../../tensor';\nimport {complex} from '../complex';\nimport {concat} from '../concat';\nimport {imag} from '../imag';\nimport {mul} from '../mul';\nimport {op} from '../operation';\nimport {real} from '../real';\nimport {reshape} from '../reshape';\nimport {reverse} from '../reverse';\nimport {scalar} from '../scalar';\nimport {slice} from '../slice';\n\nimport {ifft} from './ifft';\n\n/**\n * Inversed real value input fast Fourier transform.\n *\n * Computes the 1-dimensional inversed discrete Fourier transform over the\n * inner-most dimension of the real input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n * const imag = tf.tensor1d([0, 0, 0]);\n * const x = tf.complex(real, imag);\n *\n * x.irfft().print();\n * ```\n * @param input The real value input to compute an irfft over.\n *\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\nfunction irfft_(input: Tensor): Tensor {\n  const innerDimensionSize = input.shape[input.shape.length - 1];\n  const batch = input.size / innerDimensionSize;\n  let ret: Tensor;\n  if (innerDimensionSize <= 2) {\n    const complexInput = reshape(input, [batch, innerDimensionSize]);\n    ret = ifft(complexInput);\n  } else {\n    // The length of unique components of the DFT of a real-valued signal\n    // is 2 * (input_len - 1)\n    const outputShape = [batch, 2 * (innerDimensionSize - 1)];\n    const realInput = reshape(real(input), [batch, innerDimensionSize]);\n    const imagInput = reshape(imag(input), [batch, innerDimensionSize]);\n\n    const realConjugate =\n        reverse(slice(realInput, [0, 1], [batch, innerDimensionSize - 2]), 1);\n    const imagConjugate: Tensor2D = mul(\n        reverse(slice(imagInput, [0, 1], [batch, innerDimensionSize - 2]), 1),\n        scalar(-1));\n\n    const r = concat([realInput, realConjugate], 1);\n    const i = concat([imagInput, imagConjugate], 1);\n    const complexInput =\n        reshape(complex(r, i), [outputShape[0], outputShape[1]]);\n    ret = ifft(complexInput);\n  }\n  ret = real(ret);\n  // reshape the result if the input is 3D tensor.\n  if (input.rank === 3 && input.shape[0] !== 0) {\n    const temp = ret;\n    const batch = input.shape[0];\n    ret = reshape(ret, [batch, ret.shape[0] / batch, ret.shape[1]]);\n    temp.dispose();\n  }\n  return ret;\n}\n\nexport const irfft = op({irfft_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {SquaredDifference, SquaredDifferenceInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {assertAndGetBroadcastShape} from './broadcast_util';\nimport {op} from './operation';\n\n/**\n * Returns (a - b) * (a - b) element-wise.\n * Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 3, 16]);\n * const b = tf.tensor1d([1, 2, 9, 4]);\n *\n * a.squaredDifference(b).print();  // or tf.squaredDifference(a, b)\n * ```\n *\n * ```js\n * // Broadcast squared difference  a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(5);\n *\n * a.squaredDifference(b).print();  // or tf.squaredDifference(a, b)\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction squaredDifference_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'squaredDifference');\n  let $b = convertToTensor(b, 'b', 'squaredDifference');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  const inputs: SquaredDifferenceInputs = {a: $a, b: $b};\n  const attrs = {};\n\n  return ENGINE.runKernel(\n      SquaredDifference, inputs as unknown as NamedTensorMap, attrs);\n}\n\nexport const squaredDifference = op({squaredDifference_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Step, StepAttrs, StepInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes step of the input `tf.Tensor` element-wise: `x > 0 ? 1 : alpha * x`\n *\n * ```js\n * const x = tf.tensor1d([0, 2, -1, -3]);\n *\n * x.step(.5).print();  // or tf.step(x, .5)\n * ```\n * @param x The input tensor.\n * @param alpha The gradient when input is negative.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction step_<T extends Tensor>(x: T|TensorLike, alpha = 0.0): T {\n  const $x = convertToTensor(x, 'x', 'step');\n\n  const inputs: StepInputs = {x: $x};\n  const attrs: StepAttrs = {alpha};\n\n  return ENGINE.runKernel(\n      Step, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\nexport const step = op({step_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor3D} from '../tensor';\nimport {inferShape} from '../tensor_util_env';\nimport {TensorLike3D} from '../types';\nimport {DataType} from '../types';\nimport {assertNonNull} from '../util';\nimport {makeTensor} from './tensor_ops_util';\n\n/**\n * Creates rank-3 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor3d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor3d([[[1], [2]], [[3], [4]]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor3d([1, 2, 3, 4], [2, 2, 1]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. If not provided,  it is inferred from\n *     `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function tensor3d(\n    values: TensorLike3D, shape?: [number, number, number],\n    dtype?: DataType): Tensor3D {\n  assertNonNull(values);\n  if (shape != null && shape.length !== 3) {\n    throw new Error('tensor3d() requires shape to have three numbers');\n  }\n  const inferredShape = inferShape(values, dtype);\n  if (inferredShape.length !== 3 && inferredShape.length !== 1) {\n    throw new Error(\n        'tensor3d() requires values to be number[][][] or flat/TypedArray');\n  }\n  if (inferredShape.length === 1 && shape == null) {\n    throw new Error(\n        'tensor3d() requires shape to be provided when `values` ' +\n        'are a flat array');\n  }\n  return makeTensor(values, shape, inferredShape, dtype) as Tensor3D;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {whereImpl} from '../backends/where_impl';\nimport {Tensor, Tensor2D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\n/**\n * Returns the coordinates of true elements of condition.\n *\n * The coordinates are returned in a 2-D tensor where the first dimension (rows)\n * represents the number of true elements, and the second dimension (columns)\n * represents the coordinates of the true elements. Keep in mind, the shape of\n * the output tensor can vary depending on how many true values there are in\n * input. Indices are output in row-major order. The resulting tensor has the\n * shape `[numTrueElems, condition.rank]`.\n *\n * This is analogous to calling the python `tf.where(cond)` without an x or y.\n *\n * ```js\n * const cond = tf.tensor1d([false, false, true], 'bool');\n * const result = await tf.whereAsync(cond);\n * result.print();\n * ```\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nasync function whereAsync_(condition: Tensor|TensorLike): Promise<Tensor2D> {\n  const $condition =\n      convertToTensor(condition, 'condition', 'whereAsync', 'bool');\n  const vals = await $condition.data();\n  const res = whereImpl($condition.shape, vals);\n  if (condition !== $condition) {\n    $condition.dispose();\n  }\n  return res;\n}\n\nexport const whereAsync = whereAsync_;\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/** An implementation of the Where kernel shared between cpu and webgl */\n\nimport {buffer} from '../ops/buffer';\nimport {Tensor2D} from '../tensor';\nimport {TypedArray} from '../types';\n\nexport function whereImpl(condShape: number[], condVals: TypedArray): Tensor2D {\n  const indices = [];\n  for (let i = 0; i < condVals.length; i++) {\n    if (condVals[i]) {\n      indices.push(i);\n    }\n  }\n\n  const inBuffer = buffer(condShape, 'int32');\n\n  const out = buffer([indices.length, condShape.length], 'int32');\n  for (let i = 0; i < indices.length; i++) {\n    const loc = inBuffer.indexToLoc(indices[i]);\n    const offset = i * condShape.length;\n    out.values.set(loc, offset);\n  }\n  return out.toTensor() as Tensor2D;\n}\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Conv2DBackpropInput, Conv2DBackpropInputAttrs, Conv2DBackpropInputInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor3D, Tensor4D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport * as util from '../util';\n\nimport * as conv_util from './conv_util';\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Computes the derivative of the input of a 2D convolution.\n *\n * @param xShape The shape of the input: [batch, height, width, inDepth].\n * If length of 3, batch of 1 is assumed.\n * @param dy The derivative of the output, of rank 4 or rank 3 of shape\n *   `[batch, outHeight, outWidth, outDepth]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm used:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels].\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\nfunction conv2DBackpropInput_<T extends Tensor3D|Tensor4D>(\n    xShape: [number, number, number, number]|[number, number, number], dy: T,\n    filter: Tensor4D, strides: [number, number]|number,\n    pad: 'valid'|'same'|number|conv_util.ExplicitPadding,\n    dataFormat: 'NHWC'|'NCHW' = 'NHWC',\n    dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n  util.assert(\n      xShape.length === dy.rank,\n      () => `Length of inShape ` +\n          `(${xShape.length}) and rank of dy (${dy.rank}) must match`);\n\n  let xShape4D = xShape as [number, number, number, number];\n  let dy4D = dy as Tensor4D;\n  let reshapedTo4D = false;\n  if (dy.rank === 3) {\n    reshapedTo4D = true;\n    dy4D = reshape(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2]]);\n    xShape4D = [1, xShape[0], xShape[1], xShape[2]];\n  }\n\n  util.assert(\n      xShape4D.length === 4,\n      () =>\n          `Error in conv2dDerInput: inShape must be length 4, but got length ` +\n          `${xShape4D.length}.`);\n  util.assert(\n      dy4D.rank === 4,\n      () => `Error in conv2dDerInput: dy must be rank 4, but got ` +\n          `rank ${dy4D.rank}`);\n  util.assert(\n      filter.rank === 4,\n      () => `Error in conv2dDerInput: filter must be rank 4, but got ` +\n          `rank ${filter.rank}`);\n  const inDepth = dataFormat === 'NHWC' ? xShape4D[3] : xShape4D[1];\n  const outDepth = dataFormat === 'NHWC' ? dy4D.shape[3] : dy4D.shape[1];\n  util.assert(\n      inDepth === filter.shape[2],\n      () => `Error in conv2dDerInput: depth of input (${inDepth}) must ` +\n          `match input depth for filter ${filter.shape[2]}.`);\n  util.assert(\n      outDepth === filter.shape[3],\n      () => `Error in conv2dDerInput: depth of output (${outDepth}) must ` +\n          `match output depth for filter ${filter.shape[3]}.`);\n  if (dimRoundingMode != null) {\n    util.assert(\n        util.isInt(pad as number),\n        () => `Error in conv2dDerInput: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n  }\n\n  const inputs: Conv2DBackpropInputInputs = {dy: dy4D, filter};\n\n  const attrs: Conv2DBackpropInputAttrs =\n      {strides, pad, dataFormat, dimRoundingMode, inputShape: xShape4D};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  const res = ENGINE.runKernel(\n                  Conv2DBackpropInput, inputs as {} as NamedTensorMap,\n                  attrs as {} as NamedAttrMap) as T;\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]) as T;\n  }\n  return res;\n}\n\nexport const conv2DBackpropInput = op({conv2DBackpropInput_});\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","var settings = {\n  ignoreFocused: true,\n  timeout: 0,\n  cooldown: 0\n};\nvar available = false;\nvar cooldownActive = false;\nvar focused = true;\n\nfunction initNotifications(options) {\n  // Handle old browsers - this way we can skip polyfill Promise and Object.assign\n  if (!window.hasOwnProperty('Notification')) {\n    console.info('This browser does not support notifications');\n\n    // Mock promise always resolving to false\n    return {\n      then: function then(fn) {\n        return fn(false);\n      }\n    };\n  }\n\n  settings = Object.assign({}, settings, options);\n\n  window.onfocus = function () {\n    focused = true;\n  };\n\n  window.onblur = function () {\n    focused = false;\n  };\n\n  var availablePromise = new Promise(function (resolve, reject) {\n    if (Notification.permission === 'granted') {\n      resolve(true);\n    } else if (Notification.permission !== 'denied') {\n      Notification.requestPermission().then(function (permission) {\n        if (permission === 'granted') {\n          resolve(true);\n        }\n        resolve(false);\n      });\n    } else {\n      resolve(false);\n    }\n  });\n\n  availablePromise.then(function (result) {\n    available = result;\n  });\n\n  return availablePromise;\n}\n\nfunction notify(title, notifyOptions) {\n  if (!available || settings.ignoreFocused && focused || cooldownActive) {\n    return null;\n  }\n\n  var notification = new Notification(title, notifyOptions);\n\n  notification.onclick = function () {\n    window.focus();\n    notification.close();\n  };\n\n  if (settings.timeout !== 0) {\n    window.setTimeout(function () {\n      notification.close();\n    }, settings.timeout);\n  }\n\n  if (settings.cooldown !== 0) {\n    cooldownActive = true;\n    window.setTimeout(function () {\n      cooldownActive = false;\n    }, settings.cooldown);\n  }\n\n  return notification;\n}\n\nexport { initNotifications, notify };\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Acos, AcosInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes acos of the input `tf.Tensor` element-wise: `acos(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.acos().print();  // or tf.acos(x)\n * ```\n * @param x The input tensor.\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction acos_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'acos');\n  const inputs: AcosInputs = {x: $x};\n\n  return ENGINE.runKernel(Acos, inputs as {} as NamedTensorMap);\n}\nexport const acos = op({acos_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Acosh, AcoshInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes the inverse hyperbolic cos of the input `tf.Tensor` element-wise:\n * `acosh(x)`\n *\n * ```js\n * const x = tf.tensor1d([10, 1, 3, 5.7]);\n *\n * x.acosh().print();  // or tf.acosh(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction acosh_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'acosh');\n  const inputs: AcoshInputs = {x: $x};\n\n  return ENGINE.runKernel(Acosh, inputs as {} as NamedTensorMap);\n}\nexport const acosh = op({acosh_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {AddN, AddNInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\n\n/**\n * Adds a list of `tf.Tensor`s element-wise, each with the same shape and dtype.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * const c = tf.tensor1d([5, 6]);\n *\n * tf.addN([a, b, c]).print();\n * ```\n * @param tensors A list of tensors with the same shape and dtype.\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction addN_<T extends Tensor>(tensors: Array<T|TensorLike>): T {\n  util.assert(\n      Array.isArray(tensors),\n      () => 'The argument passed to tf.addN() must be a list of tensors');\n  util.assert(\n      tensors.length >= 1,\n      () => `Must pass at least one tensor to tf.addN(), but got ` +\n          `${tensors.length}`);\n\n  const $tensors =\n      tensors.map((t, i) => convertToTensor(t, `tensors${i}`, 'addN'));\n\n  const firstTensor = $tensors[0];\n  $tensors.forEach(t => {\n    if (t.dtype !== firstTensor.dtype) {\n      throw new Error(\n          'All tensors passed to tf.addN() must have the same dtype');\n    }\n  });\n\n  $tensors.forEach(t => {\n    if (!util.arraysEqual(t.shape, firstTensor.shape)) {\n      throw new Error(\n          'All tensors passed to tf.addN() must have the same shape');\n    }\n  });\n\n  const inputs: AddNInputs = $tensors;\n\n  return ENGINE.runKernel(AddN, inputs as {} as NamedTensorMap);\n}\n\nexport const addN = op({addN_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {All, AllAttrs, AllInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes the logical and of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and an\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 1, 1], 'bool');\n *\n * x.all().print();  // or tf.all(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 1, 0, 0], [2, 2], 'bool');\n *\n * const axis = 1;\n * x.all(axis).print();  // or tf.all(x, axis)\n * ```\n *\n * @param x The input tensor. Must be of dtype bool.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction all_<T extends Tensor>(\n    x: Tensor|TensorLike, axis: number|number[] = null, keepDims = false): T {\n  const $x = convertToTensor(x, 'x', 'all', 'bool');\n\n  const inputs: AllInputs = {x: $x};\n  const attrs: AllAttrs = {axis, keepDims};\n\n  return ENGINE.runKernel(\n      All, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const all = op({all_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Any, AnyAttrs, AnyInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes the logical or of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and an\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 1, 1], 'bool');\n *\n * x.any().print();  // or tf.any(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 1, 0, 0], [2, 2], 'bool');\n *\n * const axis = 1;\n * x.any(axis).print();  // or tf.any(x, axis)\n * ```\n *\n * @param x The input tensor. Must be of dtype bool.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction any_<T extends Tensor>(\n    x: Tensor|TensorLike, axis: number|number[] = null, keepDims = false): T {\n  const $x = convertToTensor(x, 'x', 'any', 'bool');\n\n  const inputs: AnyInputs = {x: $x};\n  const attrs: AnyAttrs = {axis, keepDims};\n\n  return ENGINE.runKernel(\n      Any, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\n// tslint:disable-next-line:variable-name\nexport const any = op({any_});\n","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {ArgMax, ArgMaxAttrs, ArgMaxInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Returns the indices of the maximum values along an `axis`.\n *\n * The result has the same shape as `input` with the dimension along `axis`\n * removed.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.argMax().print();  // or tf.argMax(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 4, 3], [2, 2]);\n *\n * const axis = 1;\n * x.argMax(axis).print();  // or tf.argMax(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension to reduce. Defaults to 0 (outer-most dimension).\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction argMax_<T extends Tensor>(x: Tensor|TensorLike, axis = 0): T {\n  const $x = convertToTensor(x, 'x', 'argMax');\n\n  const inputs: ArgMaxInputs = {x: $x};\n  const attrs: ArgMaxAttrs = {axis};\n\n  return ENGINE.runKernel(\n      ArgMax, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const argMax = op({argMax_});\n","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {ArgMin, ArgMinAttrs, ArgMinInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Returns the indices of the minimum values along an `axis`.\n *\n * The result has the same shape as `input` with the dimension along `axis`\n * removed.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.argMin().print();  // or tf.argMin(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 4, 3], [2, 2]);\n *\n * const axis = 1;\n * x.argMin(axis).print();  // or tf.argMin(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension to reduce. Defaults to 0 (outer-most dimension).\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction argMin_<T extends Tensor>(x: Tensor|TensorLike, axis = 0): T {\n  const $x = convertToTensor(x, 'x', 'argMin');\n\n  const inputs: ArgMinInputs = {x: $x};\n  const attrs: ArgMinAttrs = {axis};\n\n  return ENGINE.runKernel(\n      ArgMin, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const argMin = op({argMin_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Asin, AsinInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes asin of the input `tf.Tensor` element-wise: `asin(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.asin().print();  // or tf.asin(x)\n * ```\n * @param x The input tensor.\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction asin_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'asin');\n  const inputs: AsinInputs = {x: $x};\n\n  return ENGINE.runKernel(Asin, inputs as {} as NamedTensorMap);\n}\nexport const asin = op({asin_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Asinh, AsinhInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes inverse hyperbolic sin of the input `tf.Tensor` element-wise:\n * `asinh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.asinh().print();  // or tf.asinh(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction asinh_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'asinh');\n\n  const inputs: AsinhInputs = {x: $x};\n\n  return ENGINE.runKernel(Asinh, inputs as {} as NamedTensorMap);\n}\nexport const asinh = op({asinh_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Atan, AtanInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes atan of the input `tf.Tensor` element-wise: `atan(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.atan().print();  // or tf.atan(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction atan_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'atan');\n\n  const inputs: AtanInputs = {x: $x};\n\n  return ENGINE.runKernel(Atan, inputs as {} as NamedTensorMap);\n}\nexport const atan = op({atan_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Atan2, Atan2Inputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes arctangent of `tf.Tensor`s a / b element-wise: `atan2(a, b)`.\n * Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1.0, 1.0, -1.0, .7]);\n * const b = tf.tensor1d([2.0, 13.0, 3.5, .21]);\n *\n * tf.atan2(a, b).print()\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction atan2_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'atan2');\n  let $b = convertToTensor(b, 'b', 'atan2');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  const inputs: Atan2Inputs = {a: $a, b: $b};\n\n  return ENGINE.runKernel(Atan2, inputs as {} as NamedTensorMap);\n}\n\nexport const atan2 = op({atan2_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Atanh, AtanhInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes inverse hyperbolic tan of the input `tf.Tensor` element-wise:\n * `atanh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, .1, -.1, .7]);\n *\n * x.atanh().print();  // or tf.atanh(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction atanh_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'atanh');\n\n  const inputs: AtanhInputs = {x: $x};\n\n  return ENGINE.runKernel(Atanh, inputs as {} as NamedTensorMap);\n}\nexport const atanh = op({atanh_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {AvgPool3D, AvgPool3DAttrs, AvgPool3DInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor4D, Tensor5D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {cast} from './cast';\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Computes the 3D average pooling.\n *\n * ```js\n * const x = tf.tensor5d([1, 2, 3, 4, 5, 6, 7, 8], [1, 2, 2, 2, 1]);\n * const result = tf.avgPool3d(x, 2, 1, 'valid');\n * result.print();\n * ```\n *\n * @param x The input tensor, of rank 5 or rank 4 of shape\n *     `[batch, depth, height, width, inChannels]`.\n * @param filterSize The filter size:\n *     `[filterDepth, filterHeight, filterWidth]`.\n *     If `filterSize` is a single number,\n *     then `filterDepth == filterHeight == filterWidth`.\n * @param strides The strides of the pooling:\n *     `[strideDepth, strideHeight, strideWidth]`.\n *     If `strides` is a single number,\n *     then `strideDepth == strideHeight == strideWidth`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1*1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n * @param dataFormat An optional string from: \"NDHWC\", \"NCDHW\". Defaults to\n *     \"NDHWC\". Specify the data format of the input and output data. With the\n *     default format \"NDHWC\", the data is stored in the order of: [batch,\n *     depth, height, width, channels]. Only \"NDHWC\" is currently supported.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction avgPool3d_<T extends Tensor4D|Tensor5D>(\n    x: T|TensorLike, filterSize: [number, number, number]|number,\n    strides: [number, number, number]|number, pad: 'valid'|'same'|number,\n    dimRoundingMode?: 'floor'|'round'|'ceil',\n    dataFormat: 'NDHWC'|'NCDHW' = 'NDHWC'): T {\n  const $x = convertToTensor(x, 'x', 'avgPool3d', 'float32');\n\n  let x5D = $x as Tensor5D;\n  let reshapedTo5D = false;\n  if ($x.rank === 4) {\n    reshapedTo5D = true;\n    x5D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2], $x.shape[3]]);\n  }\n\n  util.assert(\n      x5D.rank === 5,\n      () => `Error in avgPool3d: x must be rank 5 but got rank ${x5D.rank}.`);\n  util.assert(\n      dataFormat === 'NDHWC',\n      () => `Error in avgPool3d: Only NDHWC is currently supported, ` +\n          `but got dataFormat of ${dataFormat}`);\n\n  if (dimRoundingMode != null) {\n    util.assert(\n        util.isInt(pad as number),\n        () => `Error in avgPool3d: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n  }\n\n  const inputs: AvgPool3DInputs = {x: x5D};\n\n  const attrs:\n      AvgPool3DAttrs = {filterSize, strides, pad, dimRoundingMode, dataFormat};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  let res = ENGINE.runKernel(\n                AvgPool3D, inputs as {} as NamedTensorMap,\n                attrs as {} as NamedAttrMap) as T;\n\n  res = cast(res, x5D.dtype);\n\n  if (reshapedTo5D) {\n    return reshape(\n               res, [res.shape[1], res.shape[2], res.shape[3], res.shape[4]]) as\n        T;\n  }\n\n  return res;\n}\n\nexport const avgPool3d = op({avgPool3d_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Ceil, CeilInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes ceiling of input `tf.Tensor` element-wise: `ceil(x)`\n *\n * ```js\n * const x = tf.tensor1d([.6, 1.1, -3.3]);\n *\n * x.ceil().print();  // or tf.ceil(x)\n * ```\n * @param x The input Tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction ceil_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'ceil');\n\n  const inputs: CeilInputs = {x: $x};\n  return ENGINE.runKernel(Ceil, inputs as {} as NamedTensorMap);\n}\nexport const ceil = op({ceil_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {ClipByValue, ClipByValueAttrs, ClipByValueInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\n\n/**\n * Clips values element-wise. `max(min(x, clipValueMax), clipValueMin)`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.clipByValue(-2, 3).print();  // or tf.clipByValue(x, -2, 3)\n * ```\n * @param x The input tensor.\n * @param clipValueMin Lower-bound of range to be clipped to.\n * @param clipValueMax Upper-bound of range to be clipped to.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction clipByValue_<T extends Tensor>(\n    x: T|TensorLike, clipValueMin: number, clipValueMax: number): T {\n  const $x = convertToTensor(x, 'x', 'clipByValue');\n  util.assert(\n      (clipValueMin <= clipValueMax),\n      () => `Error in clip: min (${clipValueMin}) must be ` +\n          `less than or equal to max (${clipValueMax}).`);\n\n  const inputs: ClipByValueInputs = {x: $x};\n  const attrs: ClipByValueAttrs = {clipValueMin, clipValueMax};\n\n  return ENGINE.runKernel(\n      ClipByValue, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const clipByValue = op({clipByValue_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor2D, Tensor3D, Tensor4D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {conv2d} from './conv2d';\nimport * as conv_util from './conv_util';\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Computes a 1D convolution over the input x.\n *\n * @param x The input tensor, of rank 3 or rank 2, of shape\n *     `[batch, width, inChannels]`. If rank 2, batch of 1 is assumed.\n * @param filter The filter, rank 3, of shape\n *     `[filterWidth, inDepth, outDepth]`.\n * @param stride The number of entries by which the filter is moved right at\n *     each step.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dataFormat An optional string from \"NWC\", \"NCW\". Defaults to \"NWC\",\n *     the data is stored in the order of [batch, in_width, in_channels]. Only\n *     \"NWC\" is currently supported.\n * @param dilation The dilation rate in which we sample input values in\n *     atrous convolution. Defaults to `1`. If it is greater than 1, then\n *     stride must be `1`.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction conv1d_<T extends Tensor2D|Tensor3D>(\n    x: T|TensorLike, filter: Tensor3D|TensorLike, stride: number,\n    pad: 'valid'|'same'|number|conv_util.ExplicitPadding,\n    dataFormat: 'NWC'|'NCW' = 'NWC', dilation = 1,\n    dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n  const $x = convertToTensor(x, 'x', 'conv1d');\n  const $filter = convertToTensor(filter, 'filter', 'conv1d');\n\n  let x3D = $x as Tensor3D;\n  let reshapedTo3D = false;\n  if ($x.rank === 2) {\n    reshapedTo3D = true;\n    x3D = reshape($x, [1, $x.shape[0], $x.shape[1]]);\n  }\n\n  util.assert(\n      x3D.rank === 3,\n      () => `Error in conv1d: input must be rank 3, but got rank ${x3D.rank}.`);\n  util.assert(\n      $filter.rank === 3,\n      () => `Error in conv1d: filter must be rank 3, but got rank ` +\n          `${$filter.rank}.`);\n  if (dimRoundingMode != null) {\n    util.assert(\n        util.isInt(pad as number),\n        () => `Error in conv1d: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n  }\n\n  util.assert(\n      x3D.shape[2] === $filter.shape[1],\n      () => `Error in conv1d: depth of input (${x3D.shape[2]}) must match ` +\n          `input depth for filter ${$filter.shape[1]}.`);\n  util.assert(\n      conv_util.eitherStridesOrDilationsAreOne(stride, dilation),\n      () => 'Error in conv1D: Either stride or dilation must be 1. ' +\n          `Got stride ${stride} and dilation '${dilation}'`);\n  util.assert(\n      dataFormat === 'NWC',\n      () => `Error in conv1d: got dataFormat of ${\n          dataFormat} but only NWC is currently supported.`);\n\n  const filter4D = reshape(\n      $filter, [1, $filter.shape[0], $filter.shape[1], $filter.shape[2]]);\n  const input4D = reshape(x3D, [x3D.shape[0], 1, x3D.shape[1], x3D.shape[2]]);\n  const strides: [number, number] = [1, stride];\n  const dilations: [number, number] = [1, dilation];\n\n  const conv2dDataFormat = 'NHWC';\n\n  const res = conv2d(\n      (input4D as Tensor4D), (filter4D as Tensor4D), strides, pad,\n      conv2dDataFormat, dilations, dimRoundingMode);\n\n  if (reshapedTo3D) {\n    return reshape(res, [res.shape[2], res.shape[3]]) as T;\n  }\n\n  return reshape(res, [res.shape[0], res.shape[2], res.shape[3]]) as T;\n}\n\nexport const conv1d = op({conv1d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor3D, Tensor4D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {conv2DBackpropInput} from './conv2d_backprop_input';\nimport {ExplicitPadding} from './conv_util';\nimport {op} from './operation';\n\n/**\n * Computes the transposed 2D convolution of an image, also known as a\n * deconvolution.\n *\n * @param x The input image, of rank 4 or rank 3, of shape\n *   `[batch, height, width, inDepth]`. If rank 3, batch of 1 is assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, outDepth, inDepth]`.\n *     `inDepth` must match `inDepth` in `x`.\n * @param outputShape Output shape, of rank 4 or rank 3:\n *     `[batch, height, width, outDepth]`. If rank 3, batch of 1 is assumed.\n * @param strides The strides of the original convolution:\n *     `[strideHeight, strideWidth]`.\n * @param pad  The type of padding algorithm used in the non-transpose version\n *    of the op.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction conv2dTranspose_<T extends Tensor3D|Tensor4D>(\n    x: T|TensorLike, filter: Tensor4D|TensorLike,\n    outputShape: [number, number, number, number]|[number, number, number],\n    strides: [number, number]|number,\n    pad: 'valid'|'same'|number|ExplicitPadding,\n    dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n  const $x = convertToTensor(x, 'x', 'conv2dTranspose');\n  const $filter = convertToTensor(filter, 'filter', 'conv2dTranspose');\n\n  return conv2DBackpropInput(\n      outputShape, $x, $filter, strides, pad, 'NHWC', dimRoundingMode);\n}\n\nexport const conv2dTranspose = op({conv2dTranspose_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Conv3D, Conv3DAttrs, Conv3DInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor4D, Tensor5D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {eitherStridesOrDilationsAreOne} from './conv_util';\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Computes a 3D convolution over the input x.\n *\n * @param x The input tensor, of rank 5 or rank 4, of shape\n *     `[batch, depth, height, width, channels]`. If rank 4,\n * batch of 1 is assumed.\n * @param filter The filter, rank 5, of shape\n *     `[filterDepth, filterHeight, filterWidth, inChannels, outChannels]`.\n *      inChannels must match between input and filter.\n * @param strides The strides of the convolution: `[strideDepth, strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dataFormat: An optional string from: \"NDHWC\", \"NCDHW\". Defaults to\n *     \"NDHWC\". Specify the data format of the input and output data. With the\n *     default format \"NDHWC\", the data is stored in the order of: [batch,\n *     depth, height, width, channels]. Only \"NDHWC\" is currently supported.\n * @param dilations The dilation rates: `[dilationDepth, dilationHeight,\n *     dilationWidth]` in which we sample input values across the height\n *     and width dimensions in atrous convolution. Defaults to `[1, 1, 1]`.\n *     If `dilations` is a single number, then\n *     `dilationDepth == dilationHeight == dilationWidth`. If it is greater\n *     than 1, then all values of `strides` must be 1.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction conv3d_<T extends Tensor4D|Tensor5D>(\n    x: T|TensorLike, filter: Tensor5D|TensorLike,\n    strides: [number, number, number]|number, pad: 'valid'|'same',\n    dataFormat: 'NDHWC'|'NCDHW' = 'NDHWC',\n    dilations: [number, number, number]|number = [1, 1, 1]): T {\n  const $x = convertToTensor(x, 'x', 'conv3d');\n  const $filter = convertToTensor(filter, 'filter', 'conv3d');\n\n  let x5D = $x as Tensor5D;\n  let reshapedTo5D = false;\n\n  if ($x.rank === 4) {\n    reshapedTo5D = true;\n    x5D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2], $x.shape[3]]);\n  }\n  util.assert(\n      x5D.rank === 5,\n      () => `Error in conv3d: input must be rank 5, but got rank ${x5D.rank}.`);\n  util.assert(\n      $filter.rank === 5,\n      () => `Error in conv3d: filter must be rank 5, but got rank ` +\n          `${$filter.rank}.`);\n  util.assert(\n      x5D.shape[4] === $filter.shape[3],\n      () => `Error in conv3d: depth of input (${x5D.shape[4]}) must match ` +\n          `input depth for filter ${$filter.shape[3]}.`);\n  util.assert(\n      eitherStridesOrDilationsAreOne(strides, dilations),\n      () => 'Error in conv3D: Either strides or dilations must be 1. ' +\n          `Got strides ${strides} and dilations '${dilations}'`);\n  util.assert(\n      dataFormat === 'NDHWC',\n      () => `Error in conv3d: got dataFormat of ${\n          dataFormat} but only NDHWC is currently supported.`);\n\n  const inputs: Conv3DInputs = {x: x5D, filter: $filter};\n\n  const attrs: Conv3DAttrs = {strides, pad, dataFormat, dilations};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  const res = ENGINE.runKernel(\n                  Conv3D, inputs as {} as NamedTensorMap,\n                  attrs as {} as NamedAttrMap) as T;\n\n  if (reshapedTo5D) {\n    return reshape(\n               res, [res.shape[1], res.shape[2], res.shape[3], res.shape[4]]) as\n        T;\n  }\n  return res;\n}\n\nexport const conv3d = op({conv3d_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Cos, CosInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes cos of the input `tf.Tensor` element-wise: `cos(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, Math.PI / 2, Math.PI * 3 / 4]);\n *\n * x.cos().print();  // or tf.cos(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction cos_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'cos');\n\n  const inputs: CosInputs = {x: $x};\n\n  return ENGINE.runKernel(Cos, inputs as {} as NamedTensorMap);\n}\nexport const cos = op({cos_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Cosh, CoshInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes hyperbolic cos of the input `tf.Tensor` element-wise: `cosh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.cosh().print();  // or tf.cosh(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction cosh_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'cosh');\n  const inputs: CoshInputs = {x: $x};\n\n  return ENGINE.runKernel(Cosh, inputs as {} as NamedTensorMap);\n}\nexport const cosh = op({cosh_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Cumsum, CumsumAttrs, CumsumInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes the cumulative sum of a `tf.Tensor` along `axis`.\n *\n * ```js\n * const x = tf.tensor([1, 2, 3, 4]);\n * x.cumsum().print();\n * ```\n * ```js\n * const x = tf.tensor([[1, 2], [3, 4]]);\n * x.cumsum().print();\n * ```\n *\n * @param x The input tensor to be summed.\n * @param axis The axis along which to sum. Optional. Defaults to 0.\n * @param exclusive Whether to perform exclusive cumulative sum. Optional.\n *     Defaults to false. If set to true then the sum of each tensor entry\n *     does not include its own value, but only the values previous to it\n *     along the specified axis.\n * @param reverse Whether to sum in the opposite direction. Optional.\n *     Defaults to false.\n *\n * @doc {heading: 'Operations', subheading: 'Scan'}\n */\nfunction cumsum_<T extends Tensor>(\n    x: Tensor|TensorLike, axis = 0, exclusive = false, reverse = false): T {\n  const $x = convertToTensor(x, 'x', 'cumsum');\n\n  const inputs: CumsumInputs = {x: $x};\n  const attrs: CumsumAttrs = {axis, exclusive, reverse};\n\n  return ENGINE.runKernel(\n      Cumsum, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const cumsum = op({cumsum_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {DenseBincount, DenseBincountAttrs, DenseBincountInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor1D, Tensor2D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\n\n/**\n * Outputs a vector with length `size` and the same dtype as `weights`.\n *\n * If `weights` are empty, then index `i` stores the number of times the value\n * `i` is counted in `x`. If `weights` are non-empty, then index `i` stores the\n * sum of the value in `weights` at each index where the corresponding value in\n * `x` is `i`.\n *\n * Values in `x` outside of the range [0, size) are ignored.\n *\n * @param x The input int tensor, rank 1 or rank 2.\n * @param weights The weights tensor, must have the same shape as x, or a\n *     length-0 Tensor, in which case it acts as all weights equal to 1.\n * @param size Non-negative integer.\n * @param binaryOutput Optional. Whether the kernel should count the appearance\n *     or number of occurrences. Defaults to False.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction denseBincount_<T extends Tensor1D|Tensor2D>(\n    x: T|TensorLike, weights: T|TensorLike, size: number,\n    binaryOutput = false): T {\n  const $x = convertToTensor(x, 'x', 'denseBincount');\n  const $weights = convertToTensor(weights, 'weights', 'denseBincount');\n\n  util.assert(\n      $x.dtype === 'int32',\n      () => `Error in denseBincount: input ` +\n          `dtype must be int32, but got ${$x.dtype}`);\n  util.assert(\n      $x.rank <= 2,\n      () => `Error in denseBincount: input must be at most rank 2, but got ` +\n          `rank ${$x.rank}.`);\n  util.assert(size >= 0, () => `size must be non-negative, but got ${size}.`);\n  util.assert(\n      $weights.size === $x.size || $weights.size === 0,\n      () =>\n          `Error in denseBincount: weights must have the same shape as x or ` +\n          `0-length, but got x shape: ${$x.shape}, weights shape: ` +\n          `${$weights.shape}.`);\n\n  const inputs: DenseBincountInputs = {x: $x, weights: $weights};\n  const attrs: DenseBincountAttrs = {size, binaryOutput};\n\n  return ENGINE.runKernel(\n      DenseBincount, inputs as {} as NamedTensorMap,\n      attrs as {} as NamedAttrMap);\n}\n\nexport const denseBincount = op({denseBincount_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {DepthToSpace, DepthToSpaceAttrs, DepthToSpaceInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor4D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike4D} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\n\n/**\n * Rearranges data from depth into blocks of spatial data. More specifically,\n * this op outputs a copy of the input tensor where values from the `depth`\n * dimension are moved in spatial blocks to the `height` and `width` dimensions.\n * The attr `blockSize` indicates the input block size and how the data is\n * moved.\n *\n *  - Chunks of data of size `blockSize * blockSize` from depth are rearranged\n * into non-overlapping blocks of size `blockSize x blockSize`\n *\n *  - The width the output tensor is `inputWidth * blockSize`, whereas the\n * height is `inputHeight * blockSize`\n *\n *  - The Y, X coordinates within each block of the output image are determined\n * by the high order component of the input channel index\n *\n *  - The depth of the input tensor must be divisible by `blockSize *\n * blockSize`\n *\n * The `dataFormat` attr specifies the layout of the input and output tensors\n * with the following options: \"NHWC\": [ `batch, height, width, channels` ]\n * \"NCHW\": [ `batch, channels, height, width` ]\n *\n * ```js\n * const x = tf.tensor4d([1, 2, 3, 4], [1, 1, 1, 4]);\n * const blockSize = 2;\n * const dataFormat = \"NHWC\";\n *\n * tf.depthToSpace(x, blockSize, dataFormat).print();\n * ```\n *\n * @param x The input tensor of rank 4\n * @param blockSIze  An `int` that is `>= 2`. The size of the spatial block\n * @param dataFormat An optional string from: \"NHWC\", \"NCHW\". Defaults to \"NHWC\"\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction depthToSpace_(\n    x: Tensor4D|TensorLike4D, blockSize: number,\n    dataFormat: 'NHWC'|'NCHW' = 'NHWC'): Tensor4D {\n  const $x = convertToTensor(x, 'x', 'depthToSpace') as Tensor4D;\n\n  const inputHeight = (dataFormat === 'NHWC') ? $x.shape[1] : $x.shape[2];\n  const inputWidth = (dataFormat === 'NHWC') ? $x.shape[2] : $x.shape[3];\n  const inputDepth = (dataFormat === 'NHWC') ? $x.shape[3] : $x.shape[1];\n\n  util.assert(\n      inputHeight * blockSize >= 0,\n      () => `Negative dimension size caused by overflow when multiplying\n    ${inputHeight} and ${blockSize}  for depthToSpace with input shape\n    ${$x.shape}`);\n\n  util.assert(\n      inputWidth * blockSize >= 0,\n      () => `Negative dimension size caused by overflow when multiplying\n    ${inputWidth} and ${blockSize} for depthToSpace with input shape\n        ${$x.shape}`);\n\n  util.assert(\n      (inputDepth % (blockSize * blockSize) === 0),\n      () => `Dimension size must be evenly divisible by ${\n          blockSize * blockSize} but is ${\n          inputDepth} for depthToSpace with input shape ${$x.shape}`);\n\n  const inputs: DepthToSpaceInputs = {x: $x};\n  const attrs: DepthToSpaceAttrs = {blockSize, dataFormat};\n\n  return ENGINE.runKernel(\n      DepthToSpace, inputs as {} as NamedTensorMap,\n      attrs as {} as NamedAttrMap);\n}\n\nexport const depthToSpace = op({depthToSpace_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Dilation2D, Dilation2DAttrs, Dilation2DInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor3D, Tensor4D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Computes the grayscale dilation over the input `x`.\n *\n * @param x The input tensor, rank 3 or rank 4 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filter The filter tensor, rank 3, of shape\n *     `[filterHeight, filterWidth, depth]`.\n * @param strides The strides of the sliding window for each dimension of the\n *     input tensor: `[strideHeight, strideWidth]`.\n *     If `strides` is a single number,\n *     then `strideHeight == strideWidth`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1*1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dataFormat Specify the data format of the input and output data.\n *      Defaults to 'NHWC'. Only 'NHWC' is currently supported. With the\n *      default format \"NHWC\", the data is stored in the order of: [batch,\n *      height, width, channels].\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     for atrous morphological dilation. Defaults to `[1, 1]`. If `dilations`\n *     is a single number, then `dilationHeight == dilationWidth`. If it is\n *     greater than 1, then all values of `strides` must be 1.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction dilation2d_<T extends Tensor3D|Tensor4D>(\n    x: T|TensorLike, filter: Tensor3D|TensorLike,\n    strides: [number, number]|number, pad: 'valid'|'same',\n    dilations: [number, number]|number = [1, 1],\n    dataFormat: 'NHWC' = 'NHWC'): T {\n  const $x = convertToTensor(x, 'x', 'dilation2d');\n  const $filter = convertToTensor(filter, 'filter', 'dilation2d');\n\n  util.assert(\n      $x.rank === 3 || $x.rank === 4,\n      () => `Error in dilation2d: input must be rank 3 or 4, but got rank ` +\n          `${$x.rank}.`);\n  util.assert(\n      $filter.rank === 3,\n      () => `Error in dilation2d: filter must be rank 3, but got rank ` +\n          `${$filter.rank}.`);\n  util.assert(\n      dataFormat === 'NHWC',\n      () => `Error in dilation2d: Only NHWC is currently supported, ` +\n          `but got dataFormat of ${dataFormat}`);\n\n  let x4D = $x as Tensor4D;\n  let reshapedTo4D = false;\n\n  if ($x.rank === 3) {\n    x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    reshapedTo4D = true;\n  }\n\n  const inputs: Dilation2DInputs = {x: x4D, filter: $filter};\n  const attrs: Dilation2DAttrs = {strides, pad, dilations};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  const res = ENGINE.runKernel(\n                  Dilation2D, inputs as {} as NamedTensorMap,\n                  attrs as {} as NamedAttrMap) as T;\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]) as T;\n  }\n\n  return res;\n}\n\nexport const dilation2d = op({dilation2d_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {div} from './div';\nimport {equal} from './equal';\nimport {op} from './operation';\nimport {where} from './where';\nimport {zerosLike} from './zeros_like';\n\n/**\n * Divides two `tf.Tensor`s element-wise, A / B. Supports broadcasting. Return 0\n * if denominator is 0.\n *\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 9, 16]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n * const c = tf.tensor1d([0, 0, 0, 0]);\n *\n * a.divNoNan(b).print();  // or tf.divNoNan(a, b)\n * a.divNoNan(c).print();  // or tf.divNoNan(a, c)\n * ```\n *\n * ```js\n * // Broadcast div a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(2);\n * const c = tf.scalar(0);\n *\n * a.divNoNan(b).print();  // or tf.divNoNan(a, b)\n * a.divNoNan(c).print();  // or tf.divNoNan(a, c)\n * ```\n *\n * @param a The first tensor as the numerator.\n * @param b The second tensor as the denominator. Must have the same dtype as\n * `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction divNoNan_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  // TODO: Make this into its own kernel.\n  let $a = convertToTensor(a, 'a', 'div');\n  let $b = convertToTensor(b, 'b', 'div');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  const divResult = div($a, $b);\n  const zeros = zerosLike(divResult);\n  const bEqualsZero = equal($b, zeros);\n  return where(bEqualsZero, zeros, divResult) as T;\n}\n\nexport const divNoNan = op({divNoNan_});\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Einsum, EinsumAttrs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\n\nimport {op} from './operation';\n\n/**\n * Tensor contraction over specified indices and outer product.\n *\n * `einsum` allows defining Tensors by defining their element-wise computation.\n * This computation is based on\n * [Einstein summation](https://en.wikipedia.org/wiki/Einstein_notation).\n *\n * Some special cases include:\n *\n * Matrix multiplication:\n * ```js\n * const x = tf.tensor2d([[1, 2, 3], [4, 5, 6]]);\n * const y = tf.tensor2d([[0, 1], [2, 3], [4, 5]]);\n * x.print();\n * y.print();\n * tf.einsum('ij,jk->ik', x, y).print();\n * ```\n *\n * Dot product:\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n * const y = tf.tensor1d([0, 1, 2]);\n * x.print();\n * y.print();\n * tf.einsum('i,i->', x, y).print();\n * ```\n *\n * Batch dot product:\n * ```js\n * const x = tf.tensor2d([[1, 2, 3], [4, 5, 6]]);\n * const y = tf.tensor2d([[0, 1, 2], [3, 4, 5]]);\n * x.print();\n * y.print();\n * tf.einsum('bi,bi->b', x, y).print();\n * ```\n *\n * Outer prouduct:\n * ```js\n * const x = tf.tensor1d([1, 3, 5]);\n * const y = tf.tensor1d([2, 4, 6]);\n * x.print();\n * y.print();\n * tf.einsum('i,j->ij', x, y).print();\n * ```\n *\n * Matrix transpose:\n * ```js\n * const x = tf.tensor2d([[1, 2], [3, 4]]);\n * x.print();\n * tf.einsum('ij->ji', x).print();\n * ```\n *\n * Batch matrix transpose:\n * ```js\n * const x = tf.tensor3d([[[1, 2], [3, 4]], [[-1, -2], [-3, -4]]]);\n * x.print();\n * tf.einsum('bij->bji', x).print();\n * ```\n *\n * Limitations:\n *\n * This implementation of einsum has the following limitations:\n *\n * - Does not support >2 input tensors.\n * - Does not support duplicate axes for any given input tensor. E.g., equation\n *   'ii->' is not suppoted.\n * - The `...` notation is not supported.\n *\n * @param equation a string describing the contraction, in the same format as\n * [numpy.einsum](https://numpy.org/doc/stable/reference/generated/numpy.einsum.html).\n * @param tensors the input(s) to contract (each one a Tensor), whose shapes\n *     should be consistent with equation.\n * @returns The output tensor.\n *\n * @doc {heading: 'Tensors', subheading: 'Matrices'}\n */\nexport function einsum_(equation: string, ...tensors: Tensor[]): Tensor {\n  const $tensors =\n      tensors.map((t, i) => convertToTensor(t, `tensors${i}`, 'einsum'));\n  const attrs: EinsumAttrs = {equation};\n  return ENGINE.runKernel(\n      Einsum, $tensors as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const einsum = op({einsum_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Erf, ErfInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {cast} from './cast';\nimport {op} from './operation';\n\n/**\n * Computes gause error function of the input `tf.Tensor` element-wise:\n * `erf(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, .1, -.1, .7]);\n *\n * x.erf().print(); // or tf.erf(x);\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction erf_<T extends Tensor>(x: T|TensorLike): T {\n  let $x = convertToTensor(x, 'x', 'erf');\n  util.assert(\n      $x.dtype === 'int32' || $x.dtype === 'float32',\n      () => 'Input dtype must be `int32` or `float32`.');\n\n  if ($x.dtype === 'int32') {\n    $x = cast($x, 'float32');\n  }\n\n  const inputs: ErfInputs = {x: $x};\n  return ENGINE.runKernel(Erf, inputs as {} as NamedTensorMap);\n}\nexport const erf = op({erf_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Expm1, Expm1Inputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes exponential of the input `tf.Tensor` minus one element-wise.\n * `e ^ x - 1`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, -3]);\n *\n * x.expm1().print();  // or tf.expm1(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction expm1_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'expm1');\n\n  const inputs: Expm1Inputs = {x: $x};\n  return ENGINE.runKernel(Expm1, inputs as {} as NamedTensorMap);\n}\nexport const expm1 = op({expm1_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {IsNan, IsNanInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * RReturns which elements of x are NaN.\n *\n * ```js\n * const x = tf.tensor1d([NaN, Infinity, -Infinity, 0, 1]);\n *\n * x.isNaN().print();  // or tf.isNaN(x)\n * ```\n * @param x The input Tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction isNaN_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'isNaN');\n  const inputs: IsNanInputs = {x: $x};\n\n  return ENGINE.runKernel(IsNan, inputs as {} as NamedTensorMap);\n}\nexport const isNaN = op({isNaN_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Less, LessInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {assertAndGetBroadcastShape} from './broadcast_util';\nimport {op} from './operation';\n\n/**\n * Returns the truth value of (a < b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.less(b).print();\n * ```\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction less_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'less', 'string_or_numeric');\n  let $b = convertToTensor(b, 'b', 'less', 'string_or_numeric');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  const inputs: LessInputs = {a: $a, b: $b};\n\n  return ENGINE.runKernel(Less, inputs as {} as NamedTensorMap);\n}\n\nexport const less = op({less_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {LinSpace, LinSpaceAttrs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor1D} from '../tensor';\n\n/**\n * Return an evenly spaced sequence of numbers over the given interval.\n *\n * ```js\n * tf.linspace(0, 9, 10).print();\n * ```\n * @param start The start value of the sequence.\n * @param stop The end value of the sequence.\n * @param num The number of values to generate.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function linspace(start: number, stop: number, num: number): Tensor1D {\n  if (num <= 0) {\n    throw new Error('The number of values should be positive.');\n  }\n\n  const attrs: LinSpaceAttrs = {start, stop, num};\n  return ENGINE.runKernel(LinSpace, {}, attrs as {} as NamedAttrMap);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {LRN, LRNAttrs, LRNInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor3D, Tensor4D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Normalizes the activation of a local neighborhood across or within\n * channels.\n *\n * @param x The input tensor. The 4-D input tensor is treated as a 3-D array\n *     of 1D vectors (along the last dimension), and each vector is\n *     normalized independently.\n * @param depthRadius The number of adjacent channels in the 1D normalization\n *     window.\n * @param bias A constant bias term for the basis.\n * @param alpha A scale factor, usually positive.\n * @param beta An exponent.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction localResponseNormalization_<T extends Tensor3D|Tensor4D>(\n    x: T|TensorLike, depthRadius = 5, bias = 1, alpha = 1, beta = 0.5): T {\n  const $x = convertToTensor(x, 'x', 'localResponseNormalization');\n  util.assert(\n      $x.rank === 4 || $x.rank === 3,\n      () => `Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${$x.rank}.`);\n  util.assert(\n      util.isInt(depthRadius),\n      () => `Error in localResponseNormalization: depthRadius must be an ` +\n          `integer but got depthRadius ${depthRadius}.`);\n\n  let x4D = $x as Tensor4D;\n  let reshapedTo4D = false;\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n  }\n\n  const inputs: LRNInputs = {x: x4D};\n\n  const attrs: LRNAttrs = {depthRadius, bias, alpha, beta};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  const res = ENGINE.runKernel(\n                  LRN, inputs as {} as NamedTensorMap,\n                  attrs as {} as NamedAttrMap) as T;\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]) as T;\n  } else {\n    return res;\n  }\n}\n\nexport const localResponseNormalization = op({localResponseNormalization_});\n","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {customGrad} from '../gradients';\n\nimport {Tensor} from '../tensor';\nimport {GradSaveFunc} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {cast} from './cast';\nimport {exp} from './exp';\nimport {log} from './log';\nimport {max} from './max';\nimport {mul} from './mul';\nimport {op} from './operation';\nimport {sub} from './sub';\nimport {sum} from './sum';\n\n/**\n * Computes the log softmax.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n *\n * a.logSoftmax().print();  // or tf.logSoftmax(a)\n * ```\n *\n * ```js\n * const a = tf.tensor2d([2, 4, 6, 1, 2, 3], [2, 3]);\n *\n * a.logSoftmax().print();  // or tf.logSoftmax(a)\n * ```\n *\n * @param logits The logits array.\n * @param axis The dimension softmax would be performed on. Defaults to `-1`\n *     which indicates the last dimension.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction logSoftmax_<T extends Tensor>(logits: T|TensorLike, axis = -1): T {\n  const $logits = convertToTensor(logits, 'logits', 'logSoftmax');\n\n  if (axis === -1) {\n    axis = $logits.rank - 1;\n  }\n  if (axis !== $logits.rank - 1) {\n    throw Error(\n        'Log Softmax along a non-last dimension is not yet supported. ' +\n        `Logits was rank ${$logits.rank} and axis was ${axis}`);\n  }\n\n  // const forward: ForwardFunc<Tensor> = (backend, save) => {\n  //   const keepDims = true;\n  //   const xMax = max(logits, axis, true);\n  //   const shifted = sub(logits, xMax);\n  //   const value =\n  //       sub(cast(shifted, 'float32'), log(sum(exp(shifted), axis,\n  //       keepDims)));\n  //   save([value]);\n  //   return value;\n  // };\n\n  // Use a custom gradient for numerical stability.\n  const customOp = customGrad((logits: Tensor, save: GradSaveFunc) => {\n    const keepDims = true;\n    const xMax = max(logits, axis, true);\n    const shifted = sub(logits, xMax);\n    const value =\n        sub(cast(shifted, 'float32'), log(sum(exp(shifted), axis, keepDims)));\n    save([value]);\n\n    const gradFunc = (dy: Tensor, saved: Tensor[]) => {\n      const [value] = saved;\n      const keepDims = true;\n      const softmax = exp(value);\n      return sub(dy, mul(sum(dy, axis, keepDims), softmax));\n    };\n    return {value, gradFunc};\n  });\n\n  return customOp($logits) as T;\n\n  // TODO Use Engine.runKernel when CPU/WebGL/WASM backends implement this.\n  // const inputs: LogSoftmaxInputs = {logits: $logits};\n  // const attrs: LogSoftmaxAttrs = {axis};\n  // return ENGINE.runKernel(\n  //            LogSoftmax, inputs as {} as NamedTensorMap,\n  //            attrs as {} as NamedAttrMap);\n}\n\nexport const logSoftmax = op({logSoftmax_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {MaxPool3D, MaxPool3DAttrs, MaxPool3DInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor4D, Tensor5D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Computes the 3D max pooling.\n *\n * ```js\n * const x = tf.tensor5d([1, 2, 3, 4, 5, 6, 7, 8], [1, 2, 2, 2, 1]);\n * const result = tf.maxPool3d(x, 2, 1, 'valid');\n * result.print();\n * ```\n *\n * @param x The input tensor, of rank 5 or rank 4 of shape\n *     `[batch, depth, height, width, inChannels]`.\n * @param filterSize The filter size:\n *     `[filterDepth, filterHeight, filterWidth]`.\n *     If `filterSize` is a single number,\n *     then `filterDepth == filterHeight == filterWidth`.\n * @param strides The strides of the pooling:\n *     `[strideDepth, strideHeight, strideWidth]`.\n *     If `strides` is a single number,\n *     then `strideDepth == strideHeight == strideWidth`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1*1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n * @param dataFormat An optional string from: \"NDHWC\", \"NCDHW\". Defaults to\n *     \"NDHWC\". Specify the data format of the input and output data. With the\n *     default format \"NDHWC\", the data is stored in the order of: [batch,\n *     depth, height, width, channels]. Only \"NDHWC\" is currently supported.\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction maxPool3d_<T extends Tensor4D|Tensor5D>(\n    x: T|TensorLike, filterSize: [number, number, number]|number = [1, 1, 1],\n    strides: [number, number, number]|number, pad: 'valid'|'same'|number,\n    dimRoundingMode?: 'floor'|'round'|'ceil',\n    dataFormat: 'NDHWC'|'NCDHW' = 'NDHWC'): T {\n  const $x = convertToTensor(x, 'x', 'maxPool3d');\n\n  let x5D = $x as Tensor5D;\n  let reshapedTo5D = false;\n  if ($x.rank === 4) {\n    reshapedTo5D = true;\n    x5D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2], $x.shape[3]]);\n  }\n\n  util.assert(\n      x5D.rank === 5,\n      () => `Error in maxPool3d: x must be rank 5 but got rank ${x5D.rank}.`);\n  util.assert(\n      dataFormat === 'NDHWC',\n      () => `Error in maxPool3d: Only NDHWC is currently supported, ` +\n          `but got dataFormat of ${dataFormat}`);\n  if (dimRoundingMode != null) {\n    util.assert(\n        util.isInt(pad as number),\n        () => `Error in maxPool3d: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n  }\n\n  const inputs: MaxPool3DInputs = {x: x5D};\n\n  const attrs:\n      MaxPool3DAttrs = {filterSize, strides, pad, dimRoundingMode, dataFormat};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  const res = ENGINE.runKernel(\n                  MaxPool3D, inputs as {} as NamedTensorMap,\n                  attrs as {} as NamedAttrMap) as T;\n\n  if (reshapedTo5D) {\n    return reshape(\n               res, [res.shape[1], res.shape[2], res.shape[3], res.shape[4]]) as\n        T;\n  }\n\n  return res;\n}\n\nexport const maxPool3d = op({maxPool3d_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {MaxPoolWithArgmax, MaxPoolWithArgmaxAttrs, MaxPoolWithArgmaxInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor, Tensor4D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes the 2D max pooling of an image with Argmax index.\n * The indices in argmax are flattened, so that a maximum value at position `[b,\n * y, x, c]` becomes flattened index: `(y * width + x) * channels + c` if\n * include_batch_in_index is False; `((b * height + y) * width + x) * channels\n * +c` if include_batch_in_index is True.\n *\n * The indices returned are always in `[0, height) x [0, width)` before\n * flattening.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param dataFormat An optional string from: \"NDHWC\", \"NCDHW\". Defaults to\n *     \"NDHWC\". Specify the data format of the input and output data. With the\n *     default format \"NDHWC\", the data is stored in the order of: [batch,\n *     depth, height, width, channels]. Only \"NDHWC\" is currently supported.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param includeBatchIndex Defaults to False. Whether to include batch\n *    dimension in flattened index of argmax.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction maxPoolWithArgmax_<T extends Tensor4D>(\n    x: T|TensorLike, filterSize: [number, number]|number,\n    strides: [number, number]|number, pad: 'valid'|'same'|number,\n    includeBatchInIndex = false): NamedTensorMap {\n  const $x = convertToTensor(x, 'x', 'maxPoolWithArgmax');\n\n  const inputs: MaxPoolWithArgmaxInputs = {x: $x};\n  const attrs:\n      MaxPoolWithArgmaxAttrs = {filterSize, strides, pad, includeBatchInIndex};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  const result = ENGINE.runKernel(\n                     MaxPoolWithArgmax, inputs as {} as NamedTensorMap,\n                     attrs as {} as NamedAttrMap) as Tensor[];\n\n  return {result: result[0], indexes: result[1]};\n}\n\nexport const maxPoolWithArgmax = op({maxPoolWithArgmax_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {MirrorPad, MirrorPadAttrs, MirrorPadInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\n\n/**\n * Pads a `tf.Tensor` using mirror padding.\n *\n * This operation implements the `REFLECT` and `SYMMETRIC` modes of pad.\n *\n * ```js\n * const x = tf.range(0, 9).reshape([1, 1, 3, 3]);\n * x.mirrorPad([[0, 0], [0, 0], [2, 2], [2, 2]], 'reflect').print();\n * ```\n * @param x The tensor to pad.\n * @param paddings An array of length `R` (the rank of the tensor), where\n * each element is a length-2 tuple of ints `[padBefore, padAfter]`,\n * specifying how much to pad along each dimension of the tensor.\n * In \"reflect\" mode, the padded regions do not include the borders,\n * while in \"symmetric\" mode the padded regions do include the borders.\n * For example, if the input is `[1, 2, 3]` and paddings is `[0, 2]`,\n * then the output is `[1, 2, 3, 2, 1]` in \"reflect\" mode, and\n * `[1, 2, 3, 3, 2]` in \"symmetric\" mode.\n * If `mode` is \"reflect\" then both `paddings[D, 0]` and `paddings[D, 1]`\n * must be no greater than `x.shape[D] - 1`. If mode is \"symmetric\"\n * then both `paddings[D, 0]` and `paddings[D, 1]` must be no greater than\n * `x.shape[D]`\n * @param mode String to specify padding mode. Can be `'reflect' | 'symmetric'`\n */\n/** @doc {heading: 'Tensors', subheading: 'Transformations'} */\nfunction mirrorPad_<T extends Tensor>(\n    x: T|TensorLike, paddings: Array<[number, number]>,\n    mode: 'reflect'|'symmetric'): T {\n  util.assert(\n      mode === 'reflect' || mode === 'symmetric',\n      () => `Invalid mode. Mode must be either reflect or symmetric. ` +\n          `Got ${mode}.`);\n\n  const $x = convertToTensor(x, 'x', 'mirrorPad');\n  if ($x.rank === 0) {\n    throw new Error(\n        'mirrorPad(scalar) is not defined. ' +\n        'Pass non-scalar to mirrorPad');\n  }\n  util.assert(\n      paddings.length === $x.rank,\n      () => `Padding doesn't match input. Must be ${$x.rank}. ` +\n          `Got ${paddings.length}.`);\n  const shapeOffset = mode === 'reflect' ? 1 : 0;\n  for (let i = 0; i < $x.rank; i++) {\n    util.assert(\n        paddings[i].length === 2,\n        () => `Invalid number of paddings. Must be length of 2 each.`);\n    util.assert(\n        paddings[i][0] >= 0 && paddings[i][0] <= $x.shape[i] - shapeOffset &&\n            paddings[i][1] >= 0 && paddings[i][1] <= $x.shape[i] - shapeOffset,\n        () => `Padding in dimension ${i} cannot be greater than or equal ` +\n            `to ${$x.shape[i] - shapeOffset} or less than 0 for input of ` +\n            `shape ${$x.shape}`);\n  }\n\n  const attrs: MirrorPadAttrs = {paddings, mode};\n  const inputs: MirrorPadInputs = {x: $x};\n  return ENGINE.runKernel(\n      MirrorPad, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const mirrorPad = op({mirrorPad_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Mod, ModInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Returns the mod of a and b element-wise.\n * `floor(x / y) * y + mod(x, y) = x`\n * Supports broadcasting.\n *\n * We also expose `tf.modStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 3, 16]);\n * const b = tf.tensor1d([1, 2, 9, 4]);\n *\n * a.mod(b).print();  // or tf.mod(a, b)\n * ```\n *\n * ```js\n * // Broadcast a mod b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(5);\n *\n * a.mod(b).print();  // or tf.mod(a, b)\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction mod_<T extends Tensor>(a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'mod');\n  let $b = convertToTensor(b, 'b', 'mod');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  const inputs: ModInputs = {a: $a, b: $b};\n\n  return ENGINE.runKernel(Mod, inputs as {} as NamedTensorMap);\n}\n\nexport const mod = op({mod_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Multinomial, MultinomialAttrs, MultinomialInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor1D, Tensor2D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\nimport {reshape} from './reshape';\n\n/**\n * Creates a `tf.Tensor` with values drawn from a multinomial distribution.\n *\n * ```js\n * const probs = tf.tensor([.75, .25]);\n * tf.multinomial(probs, 3).print();\n * ```\n *\n * @param logits 1D array with unnormalized log-probabilities, or\n *     2D array of shape `[batchSize, numOutcomes]`. See the `normalized`\n *     parameter.\n * @param numSamples Number of samples to draw for each row slice.\n * @param seed The seed number.\n * @param normalized Whether the provided `logits` are normalized true\n *     probabilities (sum to 1). Defaults to false.\n * @return 1D array of shape `[numSamples]`, or 2D array of shape\n *     `[batchSize, numSamples]`, depending on the rank of the input.\n *\n * @doc {heading: 'Tensors', subheading: 'Random'}\n */\nfunction multinomial_(\n    logits: Tensor1D|Tensor2D|TensorLike, numSamples: number, seed?: number,\n    normalized = false): Tensor1D|Tensor2D {\n  const $logits = convertToTensor(logits, 'logits', 'multinomial');\n  const numOutcomes = $logits.size;\n  const origRank = $logits.rank;\n  if (numOutcomes < 2) {\n    throw new Error(\n        `Error in multinomial: you need at least 2 outcomes, but got ` +\n        `${numOutcomes}.`);\n  }\n  if (origRank > 2) {\n    throw new Error(`Rank of probabilities must be 1 or 2, but is ${origRank}`);\n  }\n  // TODO(lina128): Investigate correct seed behavior. The code seems not allow\n  // setting see to 0.\n  seed = seed || Math.random();\n\n  // The kernel only accepts (and returns) rank 2 tensors.\n  const logits2D: Tensor2D =\n      origRank === 1 ? reshape($logits, [1, -1]) : $logits as Tensor2D;\n\n  const inputs: MultinomialInputs = {logits: logits2D};\n  const attrs: MultinomialAttrs = {numSamples, seed, normalized};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  const res = ENGINE.runKernel(\n                  Multinomial, inputs as {} as NamedTensorMap,\n                  attrs as {} as NamedAttrMap) as Tensor2D;\n\n  // tslint:disable-next-line:no-unnecessary-type-assertion\n  return origRank === 1 ? reshape(res, [res.size]) as Tensor1D : res;\n}\n\nexport const multinomial = op({multinomial_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {OnesLike, OnesLikeInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Creates a `tf.Tensor` with all elements set to 1 with the same shape as the\n * given tensor.\n *\n * ```js\n * const x = tf.tensor([1, 2]);\n * tf.onesLike(x).print();\n * ```\n * @param x A tensor.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction onesLike_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'onesLike');\n\n  const inputs: OnesLikeInputs = {x: $x};\n  return ENGINE.runKernel(OnesLike, inputs as {} as NamedTensorMap);\n}\n\nexport const onesLike = op({onesLike_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Prod, ProdAttrs, ProdInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {cast} from './cast';\nimport {op} from './operation';\n\n/**\n * Computes the product of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and a\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.prod().print();  // or tf.prod(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.prod(axis).print();  // or tf.prod(x, axis)\n * ```\n *\n * @param x The input tensor to compute the product over. If the dtype is `bool`\n *   it will be converted to `int32` and the output dtype will be `int32`.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction prod_<T extends Tensor>(\n    x: Tensor|TensorLike, axis: number|number[] = null, keepDims = false): T {\n  let $x = convertToTensor(x, 'x', 'prod');\n\n  if ($x.dtype === 'bool') {\n    // bool is not an allowed type for the underlying kernel.\n    $x = cast($x, 'int32');\n  }\n\n  const inputs: ProdInputs = {x: $x};\n  const attrs: ProdAttrs = {axis, keepDims};\n\n  return ENGINE.runKernel(\n      Prod, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const prod = op({prod_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Reciprocal, ReciprocalInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes reciprocal of x element-wise: `1 / x`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, 2]);\n *\n * x.reciprocal().print();  // or tf.reciprocal(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction reciprocal_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'reciprocal');\n\n  const inputs: ReciprocalInputs = {x: $x};\n  return ENGINE.runKernel(Reciprocal, inputs as {} as NamedTensorMap);\n}\nexport const reciprocal = op({reciprocal_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Rsqrt, RsqrtInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes reciprocal of square root of the input `tf.Tensor` element-wise:\n * `y = 1 / sqrt(x)`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 4, -1]);\n *\n * x.rsqrt().print();  // or tf.rsqrt(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction rsqrt_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'rsqrt');\n\n  const inputs: RsqrtInputs = {x: $x};\n\n  return ENGINE.runKernel(Rsqrt, inputs as {} as NamedTensorMap);\n}\nexport const rsqrt = op({rsqrt_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Selu, SeluInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes scaled exponential linear element-wise.\n *\n * `x < 0 ? scale * alpha * (exp(x) - 1) : x`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.selu().print();  // or tf.selu(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction selu_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'selu');\n\n  const inputs: SeluInputs = {x: $x};\n\n  return ENGINE.runKernel(Selu, inputs as {} as NamedTensorMap);\n}\n\nexport const selu = op({selu_});\n","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor, TensorBuffer} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\n/**\n * Computes the difference between two lists of numbers.\n *\n * Given a Tensor `x` and a Tensor `y`, this operation returns a Tensor `out`\n * that represents all values that are in `x` but not in `y`. The returned\n * Tensor `out` is sorted in the same order that the numbers appear in `x`\n * (duplicates are preserved). This operation also returns a Tensor indices that\n * represents the position of each out element in `x`. In other words:\n *\n * `out[i] = x[idx[i]] for i in [0, 1, ..., out.length - 1]`\n *\n * ```js\n * const x = [1, 2, 3, 4, 5, 6];\n * const y = [1, 3, 5];\n *\n * const [out, indices] = await tf.setdiff1dAsync(x, y);\n * out.print(); // [2, 4, 6]\n * indices.print(); // [1, 3, 5]\n * ```\n *\n * @param x 1-D Tensor. Values to keep.\n * @param y 1-D Tensor. Must have the same type as x. Values to exclude in the\n *     output.\n * @returns Promise of Tensor tuple [out, indices].\n *  out: Tensor with the same type as x.\n *  indices: A Tensor of type int32.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nasync function setdiff1dAsync_(\n    x: Tensor|TensorLike, y: Tensor|TensorLike): Promise<[Tensor, Tensor]> {\n  const $x = convertToTensor(x, 'x', 'setdiff1d');\n  const $y = convertToTensor(y, 'y', 'setdiff1d');\n\n  util.assert(\n      $x.dtype === $y.dtype,\n      () => `x and y should have the same dtype, but got x (${\n          $x.dtype}) and y (${$y.dtype}).`);\n\n  util.assert(\n      $x.rank === 1, () => `x should be 1D tensor, but got x (${$x.shape}).`);\n\n  util.assert(\n      $y.rank === 1, () => `y should be 1D tensor, but got y (${$y.shape}).`);\n\n  const xVals = await $x.data();\n  const yVals = await $y.data();\n  const ySet = new Set(yVals);\n\n  let outputSize = 0;\n  for (let i = 0; i < xVals.length; i++) {\n    if (!ySet.has(xVals[i])) {\n      outputSize++;\n    }\n  }\n\n  const buffer = new TensorBuffer([outputSize], $x.dtype);\n  const indices = new TensorBuffer([outputSize], 'int32');\n  for (let i = 0, p = 0; i < xVals.length; i++) {\n    if (!ySet.has(xVals[i])) {\n      buffer.values[p] = xVals[i];\n      indices.values[p] = i;\n      p++;\n    }\n  }\n  return [buffer.toTensor(), indices.toTensor()];\n}\nexport const setdiff1dAsync = setdiff1dAsync_;\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Sign, SignInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Returns an element-wise indication of the sign of a number.\n *\n * ```js\n * const x = tf.tensor1d([.6, 1.1, -3.3, NaN, 0]);\n *\n * x.sign().print();  // or tf.sign(x)\n * ```\n * @param x The input Tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction sign_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'sign');\n  const inputs: SignInputs = {x: $x};\n  return ENGINE.runKernel(Sign, inputs as {} as NamedTensorMap);\n}\nexport const sign = op({sign_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Sin, SinInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes sin of the input Tensor element-wise: `sin(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, Math.PI / 2, Math.PI * 3 / 4]);\n *\n * x.sin().print();  // or tf.sin(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction sin_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'sin');\n\n  const inputs: SinInputs = {x: $x};\n\n  return ENGINE.runKernel(Sin, inputs as {} as NamedTensorMap);\n}\nexport const sin = op({sin_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Sinh, SinhInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes hyperbolic sin of the input `tf.Tensor` element-wise: `sinh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.sinh().print();  // or tf.sinh(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction sinh_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'sinh');\n  const inputs: SinhInputs = {x: $x};\n\n  return ENGINE.runKernel(Sinh, inputs as {} as NamedTensorMap);\n}\nexport const sinh = op({sinh_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Softmax, SoftmaxAttrs, SoftmaxInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes the softmax normalized vector given the logits.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n *\n * a.softmax().print();  // or tf.softmax(a)\n * ```\n *\n * ```js\n * const a = tf.tensor2d([2, 4, 6, 1, 2, 3], [2, 3]);\n *\n * a.softmax().print();  // or tf.softmax(a)\n * ```\n *\n * @param logits The logits array.\n * @param dim The dimension softmax would be performed on. Defaults to `-1`\n *     which indicates the last dimension.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction softmax_<T extends Tensor>(logits: T|TensorLike, dim = -1): T {\n  const $logits = convertToTensor(logits, 'logits', 'softmax', 'float32');\n\n  if (dim === -1) {\n    dim = $logits.rank - 1;\n  }\n  if (dim !== $logits.rank - 1) {\n    throw Error(\n        'Softmax along a non-last dimension is not yet supported. ' +\n        `Logits was rank ${$logits.rank} and dim was ${dim}`);\n  }\n\n  const inputs: SoftmaxInputs = {logits: $logits};\n  const attrs: SoftmaxAttrs = {dim};\n\n  return ENGINE.runKernel(\n      Softmax, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n}\n\nexport const softmax = op({softmax_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {StridedSlice, StridedSliceAttrs, StridedSliceInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Extracts a strided slice of a tensor.\n *\n * Roughly speaking, this op extracts a slice of size (end-begin)/stride from\n * the given input tensor (x). Starting at the location specified by begin the\n * slice continues by adding stride to the index until all dimensions are not\n * less than end. Note that a stride can be negative, which causes a reverse\n * slice.\n *\n * ```js\n * const t = tf.tensor3d([1, 1, 1 ,2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6],\n *    [3, 2, 3]);\n * t.stridedSlice([1, 0, 0], [2, 1, 3], [1, 1, 1]).print()  // [[[3, 3, 3]]]\n * t.stridedSlice([1, 0, 0], [2, 2, 3], [1, 1, 1]).print()  // [[[3, 3, 3],\n *                                                     // [4, 4, 4]]]\n * t.stridedSlice([1, -1, 0], [2, -3, 3], [1, -1, 1]).print() // [[[4, 4, 4],\n *                                                     // [3, 3, 3]]]\n * ```\n *\n * @param x The tensor to stride slice.\n * @param begin The coordinates to start the slice from.\n * @param end: The coordinates to end the slice at.\n * @param strides: The size of the slice.\n * @param beginMask: If the ith bit of beginMask is set, begin[i] is ignored\n *      and the fullest possible range in that dimension is used instead.\n * @param endMask: If the ith bit of endMask is set, end[i] is ignored\n *      and the fullest possible range in that dimension is used instead.\n * @param shrinkAxisMask: a bitmask where bit i implies that\n * the ith specification should shrink the dimensionality. begin and end must\n * imply a slice of size 1 in the dimension.\n *\n * @doc {heading: 'Operations', subheading: 'Slicing and Joining'}\n */\nfunction stridedSlice_(\n    x: Tensor|TensorLike, begin: number[], end: number[], strides?: number[],\n    beginMask = 0, endMask = 0, ellipsisMask = 0, newAxisMask = 0,\n    shrinkAxisMask = 0): Tensor {\n  const $x = convertToTensor(x, 'x', 'stridedSlice', 'string_or_numeric');\n\n  const inputs: StridedSliceInputs = {x: $x};\n  const attrs: StridedSliceAttrs = {\n    begin,\n    end,\n    strides,\n    beginMask,\n    endMask,\n    ellipsisMask,\n    newAxisMask,\n    shrinkAxisMask\n  };\n\n  return ENGINE.runKernel(\n      StridedSlice, inputs as {} as NamedTensorMap,\n      attrs as {} as NamedAttrMap);\n}\n\nexport const stridedSlice = op({stridedSlice_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tan, TanInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Computes tan of the input `tf.Tensor` element-wise, `tan(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, Math.PI / 2, Math.PI * 3 / 4]);\n *\n * x.tan().print();  // or tf.tan(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction tan_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'tan');\n\n  const inputs: TanInputs = {x: $x};\n\n  return ENGINE.runKernel(Tan, inputs as {} as NamedTensorMap);\n}\nexport const tan = op({tan_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {TopK, TopKAttrs, TopKInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Finds the values and indices of the `k` largest entries along the last\n * dimension.\n *\n * If the input is a vector (rank=1), finds the k largest entries in the vector\n * and outputs their values and indices as vectors. Thus values[j] is the j-th\n * largest entry in input, and its index is indices[j].\n * For higher rank inputs, computes the top k entries along the last dimension.\n *\n * If two elements are equal, the lower-index element appears first.\n *\n * ```js\n * const a = tf.tensor2d([[1, 5], [4, 3]]);\n * const {values, indices} = tf.topk(a);\n * values.print();\n * indices.print();\n * ```\n * @param x 1-D or higher `tf.Tensor` with last dimension being at least `k`.\n * @param k Number of top elements to look for along the last dimension.\n * @param sorted If true, the resulting `k` elements will be sorted by the\n *     values in descending order.\n *\n * @doc {heading: 'Operations', subheading: 'Evaluation'}\n */\nfunction topk_<T extends Tensor>(\n    x: T|TensorLike, k = 1, sorted = true): {values: T, indices: T} {\n  const $x = convertToTensor(x, 'x', 'topk');\n  if ($x.rank === 0) {\n    throw new Error('topk() expects the input to be of rank 1 or higher');\n  }\n  const lastDim = $x.shape[$x.shape.length - 1];\n\n  if (k < 0) {\n    throw new Error(`'k' passed to topk() must be >= 0 but got ${k}`);\n  }\n\n  if (k > lastDim) {\n    throw new Error(\n        `'k' passed to topk() must be <= the last dimension (${lastDim}) ` +\n        `but got ${k}`);\n  }\n\n  const inputs: TopKInputs = {x: $x};\n  const attrs: TopKAttrs = {k, sorted};\n\n  const [values, indices] = ENGINE.runKernel(\n      TopK, inputs as {} as NamedTensorMap, attrs as {} as NamedAttrMap);\n\n  return {values, indices} as {values: T, indices: T};\n}\n\nexport const topk = op({topk_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport {DataType, Rank, ShapeMap} from '../types';\n\nimport {buffer} from './buffer';\nimport {op} from './operation';\nimport {MPRandGauss} from './rand_util';\n\n/**\n * Creates a `tf.Tensor` with values sampled from a truncated normal\n * distribution.\n *\n * ```js\n * tf.truncatedNormal([2, 2]).print();\n * ```\n *\n * The generated values follow a normal distribution with specified mean and\n * standard deviation, except that values whose magnitude is more than 2\n * standard deviations from the mean are dropped and re-picked.\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param mean The mean of the normal distribution.\n * @param stdDev The standard deviation of the normal distribution.\n * @param dtype The data type of the output tensor.\n * @param seed The seed for the random number generator.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction truncatedNormal_<R extends Rank>(\n    shape: ShapeMap[R], mean = 0, stdDev = 1, dtype?: 'float32'|'int32',\n    seed?: number): Tensor<R> {\n  if (dtype != null && (dtype as DataType) === 'bool') {\n    throw new Error(`Unsupported data type $ { dtype }`);\n  }\n  const randGauss =\n      new MPRandGauss(mean, stdDev, dtype, true /* truncated */, seed);\n  const res = buffer(shape, dtype);\n  for (let i = 0; i < res.values.length; i++) {\n    res.values[i] = randGauss.nextValue();\n  }\n  return res.toTensor();\n}\n\nexport const truncatedNormal = op({truncatedNormal_});\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Unique, UniqueAttrs, UniqueInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor, Tensor1D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {assert} from '../util';\n\nimport {op} from './operation';\n\n/**\n * Finds unique elements along an axis of a tensor.\n *\n * It returns a tensor `values` containing all of the unique elements along the\n * `axis` of the given tensor `x` in the same order that they occur along the\n * `axis` in `x`; `x` does not need to be sorted. It also returns a tensor\n * `indices` the same size as the number of the elements in `x` along the `axis`\n * dimension. It contains the index in the unique output `values`.\n *\n * ```js\n * // A 1-D tensor\n * const a = tf.tensor1d([1, 1, 2, 4, 4, 4, 7, 8, 8]);\n * const {values, indices} = tf.unique(a);\n * values.print();   // [1, 2, 4, 7, 8,]\n * indices.print();  // [0, 0, 1, 2, 2, 2, 3, 4, 4]\n * ```\n *\n * ```js\n * // A 2-D tensor with axis=0\n * //\n * // 'a' is: [[1, 0, 0],\n * //          [1, 0, 0],\n * //          [2, 0, 0]]\n * const a = tf.tensor2d([[1, 0, 0], [1, 0, 0], [2, 0, 0]]);\n * const {values, indices} = tf.unique(a, 0)\n * values.print();   // [[1, 0, 0],\n *                   //  [2, 0, 0]]\n * indices.print();  // [0, 0, 1]\n * ```\n *\n * ```js\n * // A 2-D tensor with axis=1\n * //\n * // 'a' is: [[1, 0, 0],\n * //          [1, 0, 0],\n * //          [2, 0, 0]]\n * const a = tf.tensor2d([[1, 0, 0], [1, 0, 0], [2, 0, 0]]);\n * const {values, indices} = tf.unique(a, 1)\n * values.print();   // [[1, 0],\n *                   //  [1, 0],\n *                   //  [2, 0]]\n * indices.print();  // [0, 1, 1]\n * ```\n * @param x A tensor (int32, string, bool).\n * @param axis The axis of the tensor to find the unique elements.\n * @returns [uniqueElements, indices] (see above for details)\n *\n * @doc {heading: 'Operations', subheading: 'Evaluation'}\n */\nfunction unique_<T extends Tensor>(\n    x: T|TensorLike, axis = 0): {values: T, indices: Tensor1D} {\n  const $x = convertToTensor(x, 'x', 'unique', 'string_or_numeric');\n  assert($x.rank > 0, () => 'The input tensor must be at least 1D');\n\n  const inputs: UniqueInputs = {x: $x};\n  const attrs: UniqueAttrs = {axis};\n  const [values, indices] = ENGINE.runKernel(\n                                Unique, inputs as {} as NamedTensorMap,\n                                attrs as {} as NamedAttrMap) as [T, Tensor1D];\n  return {values, indices};\n}\n\nexport const unique = op({unique_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {ScatterNd, ScatterNdAttrs, ScatterNdInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {Rank, ShapeMap, TensorLike} from '../types';\n\nimport {op} from './operation';\nimport * as scatter_nd_util from './scatter_nd_util';\n\n/**\n * Creates a new tensor by applying sparse updates to individual\n * values or slices within a zero tensor of the given shape tensor according to\n * indices. This operator is the inverse of the `tf.gatherND` operator which\n * extracts values or slices from a given tensor.\n *\n * ```js\n * const indices = tf.tensor2d([4, 3, 1, 7], [4, 1], 'int32');\n * const updates = tf.tensor1d([9, 10, 11, 12]);\n * const shape = [8];\n * tf.scatterND(indices, updates, shape).print() //[0, 11, 0, 10, 9, 0, 0, 12]\n * ```\n *\n * @param indices The tensor contains the indices into the output tensor.\n * @param updates The tensor contains the value for the indices.\n * @param shape: The shape of the output tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Slicing and Joining'}\n */\nfunction scatterND_<R extends Rank>(\n    indices: Tensor|TensorLike, updates: Tensor|TensorLike,\n    shape: ShapeMap[R]): Tensor<R> {\n  const $indices = convertToTensor(indices, 'indices', 'scatterND', 'int32');\n  const $updates = convertToTensor(updates, 'updates', 'scatterND');\n  scatter_nd_util.validateInput($updates, $indices, shape);\n\n  const inputs: ScatterNdInputs = {indices: $indices, updates: $updates};\n  const attrs: ScatterNdAttrs = {shape};\n\n  // tslint:disable-next-line: no-unnecessary-type-assertion\n  return ENGINE.runKernel(\n             ScatterNd, inputs as {} as NamedTensorMap,\n             attrs as {} as NamedAttrMap) as Tensor<R>;\n}\n\nexport const scatterND = op({scatterND_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {GatherNd, GatherNdInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {op} from './operation';\n\n/**\n * Gather slices from input tensor into a Tensor with shape specified by\n * `indices`.\n *\n * `indices` is an K-dimensional integer tensor, best thought of as a\n * (K-1)-dimensional tensor of indices into input, where each element defines a\n * slice of input:\n * output[\\\\(i_0, ..., i_{K-2}\\\\)] = input[indices[\\\\(i_0, ..., i_{K-2}\\\\)]]\n *\n * Whereas in `tf.gather`, `indices` defines slices into the first dimension of\n * input, in `tf.gatherND`, `indices` defines slices into the first N dimensions\n * of input, where N = indices.shape[-1].\n *\n * The last dimension of indices can be at most the rank of input:\n * indices.shape[-1] <= input.rank\n *\n * The last dimension of `indices` corresponds to elements\n * (if indices.shape[-1] == input.rank) or slices\n * (if indices.shape[-1] < input.rank) along dimension indices.shape[-1] of\n * input.\n * The output tensor has shape\n * indices.shape[:-1] + input.shape[indices.shape[-1]:]\n *\n * Note that on CPU, if an out of bound index is found, an error is returned. On\n * GPU, if an out of bound index is found, a 0 is stored in the corresponding\n * output value.\n *\n * ```js\n * const indices = tf.tensor2d([0, 1, 1, 0], [2,2], 'int32');\n * const input = tf.tensor2d([9, 10, 11, 12], [2, 2]);\n * tf.gatherND(input, indices).print() // [10, 11]\n * ```\n *\n * @param x The tensor from which to gather values.\n * @param indices Index tensor, must be of type int32.\n *\n * @doc {heading: 'Operations', subheading: 'Slicing and Joining'}\n */\nfunction gatherND_(x: Tensor|TensorLike, indices: Tensor|TensorLike): Tensor {\n  const $indices = convertToTensor(indices, 'indices', 'gatherND', 'int32');\n  const $x = convertToTensor(x, 'x', 'gatherND', 'string_or_numeric');\n\n  const inputs: GatherNdInputs = {params: $x, indices: $indices};\n\n  return ENGINE.runKernel(GatherNd, inputs as {} as NamedTensorMap);\n}\n\nexport const gatherND = op({gatherND_});\n","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nconst delayCallback: Function = (() => {\n  if (typeof requestAnimationFrame !== 'undefined') {\n    return requestAnimationFrame;\n  } else if (typeof setImmediate !== 'undefined') {\n    return setImmediate;\n  }\n  return (f: Function) => f();  // no delays\n})();\n\n/**\n * Returns a promise that resolve when a requestAnimationFrame has completed.\n *\n * On Node.js this uses setImmediate instead of requestAnimationFrame.\n *\n * This is simply a sugar method so that users can do the following:\n * `await tf.nextFrame();`\n *\n * @doc {heading: 'Performance', subheading: 'Timing'}\n */\nfunction nextFrame(): Promise<void> {\n  return new Promise<void>(resolve => delayCallback(() => resolve()));\n}\n\nexport {nextFrame};\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor} from '../tensor';\n\n/**\n * Validate sparseToDense inputs.\n *\n * @param sparseIndices A 0-D, 1-D, or 2-D Tensor of type int32.\n * sparseIndices[i] contains the complete index where sparseValues[i] will be\n * placed.\n * @param sparseValues A 0-D or 1-D Tensor. Values\n * corresponding to each row of sparseIndices, or a scalar value to be used for\n * all sparse indices.\n * @param outputShape number[]. Shape of the dense output tensor.\n * @param validateIndices boolean. indice validation is not supported, error\n * will be thrown if it is set.\n */\nexport function validateInput(\n    sparseIndices: Tensor, sparseValues: Tensor, outputShape: number[],\n    defaultValues: Tensor) {\n  if (sparseIndices.dtype !== 'int32') {\n    throw new Error(\n        'tf.sparseToDense() expects the indices to be int32 type,' +\n        ` but the dtype was ${sparseIndices.dtype}.`);\n  }\n  if (sparseIndices.rank > 2) {\n    throw new Error(\n        'sparseIndices should be a scalar, vector, or matrix,' +\n        ` but got shape ${sparseIndices.shape}.`);\n  }\n\n  const numElems = sparseIndices.rank > 0 ? sparseIndices.shape[0] : 1;\n  const numDims = sparseIndices.rank > 1 ? sparseIndices.shape[1] : 1;\n\n  if (outputShape.length !== numDims) {\n    throw new Error(\n        'outputShape has incorrect number of elements:,' +\n        ` ${outputShape.length}, should be: ${numDims}.`);\n  }\n\n  const numValues = sparseValues.size;\n  if (!(sparseValues.rank === 0 ||\n        sparseValues.rank === 1 && numValues === numElems)) {\n    throw new Error(\n        'sparseValues has incorrect shape ' +\n        `${sparseValues.shape}, should be [] or [${numElems}]`);\n  }\n\n  if (sparseValues.dtype !== defaultValues.dtype) {\n    throw new Error('sparseValues.dtype must match defaultValues.dtype');\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {SparseToDense, SparseToDenseAttrs, SparseToDenseInputs} from '../kernel_names';\nimport {NamedAttrMap} from '../kernel_registry';\nimport * as sparse_to_dense from '../ops/sparse_to_dense_util';\nimport {Scalar, Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {Rank, ScalarLike, ShapeMap, TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Converts a sparse representation into a dense tensor.\n *\n * Builds an array dense with shape outputShape such that:\n *\n * // If sparseIndices is scalar\n * dense[i] = (i == sparseIndices ? sparseValues : defaultValue)\n *\n * // If sparseIndices is a vector, then for each i\n * dense[sparseIndices[i]] = sparseValues[i]\n *\n * // If sparseIndices is an n by d matrix, then for each i in [0, n)\n * dense[sparseIndices[i][0], ..., sparseIndices[i][d-1]] = sparseValues[i]\n * All other values in dense are set to defaultValue. If sparseValues is a\n * scalar, all sparse indices are set to this single value.\n *\n * If indices are repeated the final value is summed over all values for those\n * indices.\n *\n * ```js\n * const indices = tf.tensor1d([4, 5, 6, 1, 2, 3], 'int32');\n * const values = tf.tensor1d([10, 11, 12, 13, 14, 15], 'float32');\n * const shape = [8];\n * tf.sparseToDense(indices, values, shape).print();\n * ```\n *\n * @param sparseIndices A 0-D, 1-D, or 2-D Tensor of type int32.\n * sparseIndices[i] contains the complete index where sparseValues[i] will be\n * placed.\n * @param sparseValues A 0-D or 1-D Tensor. Values\n * corresponding to each row of sparseIndices, or a scalar value to be used for\n * all sparse indices.\n * @param outputShape Shape of the dense output tensor. the type is inferred.\n * @param defaultValue Scalar. Value to set for indices not specified in\n * sparseIndices. Defaults to zero.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction sparseToDense_<R extends Rank>(\n    sparseIndices: Tensor|TensorLike, sparseValues: Tensor|TensorLike,\n    outputShape: ShapeMap[R], defaultValue: Scalar|ScalarLike = 0): Tensor<R> {\n  const $sparseIndices =\n      convertToTensor(sparseIndices, 'sparseIndices', 'sparseToDense', 'int32');\n  const $sparseValues =\n      convertToTensor(sparseValues, 'sparseValues', 'sparseToDense');\n  const $defaultValue = convertToTensor(\n      defaultValue, 'defaultValue', 'sparseToDense', $sparseValues.dtype);\n\n  sparse_to_dense.validateInput(\n      $sparseIndices, $sparseValues, outputShape, $defaultValue);\n\n  const inputs: SparseToDenseInputs = {\n    sparseIndices: $sparseIndices,\n    sparseValues: $sparseValues,\n    defaultValue: $defaultValue\n  };\n\n  const attrs: SparseToDenseAttrs = {outputShape};\n\n  return ENGINE.runKernel(\n      SparseToDense, inputs as {} as NamedTensorMap,\n      attrs as {} as NamedAttrMap);\n}\n\nexport const sparseToDense = op({sparseToDense_});\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'Add',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'AddV2',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'AddN',\n    'category': 'arithmetic',\n    'inputs': [{'start': 0, 'end': 0, 'name': 'tensors', 'type': 'tensors'}]\n  },\n  {\n    'tfOpName': 'BiasAdd',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}, {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Sub',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'RealDiv',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Div',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'DivNoNan',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'FloorDiv',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Mul',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Maximum',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'}\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Minimum',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'}\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Pow',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'SquaredDifference',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Mod',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'FloorMod',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [{\n      'tfName': 'T',\n      'name': 'dtype',\n      'type': 'dtype',\n      'notSupported': true\n    }]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'Abs',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Acos',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Asin',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Atan',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Atan2',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'y', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Ceil',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'ClipByValue',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'clipValueMin', 'type': 'number'},\n      {'start': 2, 'name': 'clipValueMax', 'type': 'number'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Complex',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'real', 'type': 'tensor'},\n      {'start': 1, 'name': 'imag', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'ComplexAbs',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Cos',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Cosh',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Elu',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Exp',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Floor',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Log',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Imag',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}, {\n        'tfName': 'Tout',\n        'name': 'outputType',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Neg',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Real',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}, {\n        'tfName': 'Tout',\n        'name': 'outputType',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Prelu',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'alpha', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Relu',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Relu6',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Selu',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Sigmoid',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Sin',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Sinh',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Sqrt',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Rsqrt',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Square',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Tan',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Tanh',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Sign',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Round',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Expm1',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Log1p',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Reciprocal',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Softplus',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Asinh',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Acosh',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Atanh',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Erf',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Prod',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axes', 'type': 'number[]'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'keep_dims',\n        'name': 'keepDims',\n        'type': 'bool',\n        'notSupported': true\n      },\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'LeakyRelu',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'alpha',\n        'name': 'alpha',\n        'type': 'number',\n        'defaultValue': 0.2\n      },\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'IsNan',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [{\n      'tfName': 'T',\n      'name': 'dtype',\n      'type': 'dtype',\n      'notSupported': true\n    }]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'EmptyTensorList',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'elementShape', 'type': 'shape'},\n      {'start': 1, 'name': 'maxNumElements', 'type': 'number'},\n    ],\n    'attrs':\n        [{'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'LoopCond',\n    'category': 'control',\n    'inputs': [{'start': 0, 'name': 'pred', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'Switch',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'data', 'type': 'tensor'},\n      {'start': 1, 'name': 'pred', 'type': 'tensor'}\n    ]\n  },\n  {\n    'tfOpName': 'Merge',\n    'category': 'control',\n    'inputs': [{'start': 0, 'end': 0, 'name': 'tensors', 'type': 'tensors'}]\n  },\n  {\n    'tfOpName': 'Enter',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensor', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true},\n      {'tfName': 'frame_name', 'name': 'frameName', 'type': 'string'},\n      {'tfName': 'is_constant', 'name': 'isConstant', 'type': 'bool'}\n    ]\n  },\n  {\n    'tfOpName': 'Exit',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensor', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'NextIteration',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensor', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'size', 'type': 'number'},\n    ],\n    'attrs': [\n      {'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype'},\n      {'tfName': 'element_shape', 'name': 'elementShape', 'type': 'shape'},\n      {'tfName': 'dynamic_size', 'name': 'dynamicSize', 'type': 'bool'},\n      {'tfName': 'clear_after_read', 'name': 'clearAfterRead', 'type': 'bool'},\n      {\n        'tfName': 'identical_element_shapes',\n        'name': 'identicalElementShapes',\n        'type': 'bool'\n      },\n      {'tfName': 'tensor_array_name', 'name': 'name', 'type': 'string'}\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayWriteV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorArrayId', 'type': 'tensor'},\n      {'start': 1, 'name': 'index', 'type': 'number'},\n      {'start': 2, 'name': 'tensor', 'type': 'tensor'},\n      {'start': 3, 'name': 'flowIn', 'type': 'number'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayReadV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorArrayId', 'type': 'tensor'},\n      {'start': 1, 'name': 'index', 'type': 'number'},\n      {'start': 2, 'name': 'flowIn', 'type': 'number'},\n    ],\n    'attrs': [{\n      'tfName': 'dtype',\n      'name': 'dtype',\n      'type': 'dtype',\n      'notSupported': true\n    }]\n  },\n  {\n    'tfOpName': 'TensorArrayGatherV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorArrayId', 'type': 'tensor'},\n      {'start': 1, 'name': 'indices', 'type': 'number[]'},\n      {'start': 2, 'name': 'flowIn', 'type': 'number'},\n    ],\n    'attrs': [\n      {'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype'},\n      {'tfName': 'element_shape', 'name': 'elementShape', 'type': 'shape'}\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayScatterV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorArrayId', 'type': 'tensor'},\n      {'start': 1, 'name': 'indices', 'type': 'number[]'},\n      {'start': 2, 'name': 'tensor', 'type': 'tensor'},\n      {'start': 3, 'name': 'flowIn', 'type': 'number'},\n    ],\n    'attrs': [{'tfName': 'T', 'name': 'dtype', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'TensorArrayConcatV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorArrayId', 'type': 'tensor'},\n      {'start': 1, 'name': 'flowIn', 'type': 'number'},\n    ],\n    'attrs': [\n      {'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype'}, {\n        'tfName': 'element_shape_except0',\n        'name': 'elementShapeExcept0',\n        'type': 'shape',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArraySplitV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorArrayId', 'type': 'tensor'},\n      {'start': 1, 'name': 'tensor', 'type': 'tensor'},\n      {'start': 2, 'name': 'lengths', 'type': 'number[]'},\n      {'start': 3, 'name': 'flowIn', 'type': 'number'},\n    ],\n    'attrs': [{'tfName': 'T', 'name': 'dtype', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'TensorArraySizeV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorArrayId', 'type': 'tensor'},\n      {'start': 1, 'name': 'flowIn', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayCloseV3',\n    'category': 'control',\n    'inputs': [{'start': 0, 'name': 'tensorArrayId', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'StatelessIf',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'cond', 'type': 'tensor'},\n      {'start': 1, 'end': 0, 'name': 'args', 'type': 'tensors'}\n    ],\n    'attrs': [\n      {'tfName': 'then_branch', 'name': 'thenBranch', 'type': 'func'},\n      {'tfName': 'else_branch', 'name': 'elseBranch', 'type': 'func'}\n    ]\n  },\n  {\n    'tfOpName': 'If',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'cond', 'type': 'tensor'},\n      {'start': 1, 'end': 0, 'name': 'args', 'type': 'tensors'}\n    ],\n    'attrs': [\n      {'tfName': 'then_branch', 'name': 'thenBranch', 'type': 'func'},\n      {'tfName': 'else_branch', 'name': 'elseBranch', 'type': 'func'}\n    ]\n  },\n  {\n    'tfOpName': 'StatelessWhile',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'end': 0, 'name': 'args', 'type': 'tensors'},\n    ],\n    'attrs': [\n      {'tfName': 'cond', 'name': 'cond', 'type': 'func'},\n      {'tfName': 'body', 'name': 'body', 'type': 'func'}\n    ]\n  },\n  {\n    'tfOpName': 'While',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'end': 0, 'name': 'args', 'type': 'tensors'},\n    ],\n    'attrs': [\n      {'tfName': 'cond', 'name': 'cond', 'type': 'func'},\n      {'tfName': 'body', 'name': 'body', 'type': 'func'}\n    ]\n  },\n  {\n    'tfOpName': 'TensorListScatter',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensor', 'type': 'tensor'},\n      {'start': 1, 'name': 'indices', 'type': 'number[]'},\n      {'start': 2, 'name': 'elementShape', 'type': 'shape'}\n    ],\n    'attrs':\n        [{'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'TensorListScatterV2',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensor', 'type': 'tensor'},\n      {'start': 1, 'name': 'indices', 'type': 'number[]'},\n      {'start': 2, 'name': 'elementShape', 'type': 'shape'},\n      {'start': 3, 'name': 'numElements', 'type': 'number'},\n    ],\n    'attrs':\n        [{'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'TensorListGather',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorListId', 'type': 'tensor'},\n      {'start': 1, 'name': 'indices', 'type': 'number[]'},\n      {'start': 2, 'name': 'elementShape', 'type': 'shape'},\n    ],\n    'attrs':\n        [{'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'TensorListGetItem',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorListId', 'type': 'tensor'},\n      {'start': 1, 'name': 'index', 'type': 'number'},\n      {'start': 2, 'name': 'elementShape', 'type': 'shape'},\n    ],\n    'attrs':\n        [{'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'TensorListSetItem',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorListId', 'type': 'tensor'},\n      {'start': 1, 'name': 'index', 'type': 'number'},\n      {'start': 2, 'name': 'tensor', 'type': 'tensor'},\n    ],\n    'attrs':\n        [{'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'TensorListReserve',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'elementShape', 'type': 'shape'},\n      {'start': 1, 'name': 'numElements', 'type': 'number'},\n    ],\n    'attrs':\n        [{'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'TensorListFromTensor',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensor', 'type': 'tensor'},\n      {'start': 1, 'name': 'elementShape', 'type': 'shape'}\n    ],\n    'attrs':\n        [{'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'TensorListStack',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorListId', 'type': 'tensor'},\n      {'start': 1, 'name': 'elementShape', 'type': 'shape'},\n    ],\n    'attrs': [\n      {'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype'},\n      {'tfName': 'num_elements', 'name': 'numElements', 'type': 'dtype'}\n    ]\n  },\n  {\n    'tfOpName': 'TensorListSplit',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensor', 'type': 'tensor'},\n      {'start': 1, 'name': 'elementShape', 'type': 'shape'},\n      {'start': 2, 'name': 'lengths', 'type': 'number[]'},\n    ],\n    'attrs':\n        [{'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'TensorListConcat',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorListId', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'element_shape', 'name': 'elementShape', 'type': 'shape'},\n      {'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype'}\n    ]\n  },\n  {\n    'tfOpName': 'TensorListPopBack',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorListId', 'type': 'tensor'},\n      {'start': 1, 'name': 'elementShape', 'type': 'shape'},\n    ],\n    'attrs':\n        [{'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'TensorListPushBack',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorListId', 'type': 'tensor'},\n      {'start': 1, 'name': 'tensor', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype'}\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'AvgPool',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'strides', 'name': 'strides', 'type': 'number[]'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'}, {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      },\n      {'tfName': 'ksize', 'name': 'kernelSize', 'type': 'number[]'},\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'MaxPool',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'strides', 'name': 'strides', 'type': 'number[]'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'}, {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      },\n      {'tfName': 'ksize', 'name': 'kernelSize', 'type': 'number[]'}, {\n        'tfName': 'explicit_paddings',\n        'name': 'explicitPaddings',\n        'type': 'number[]',\n        'defaultValue': [],\n        'notSupported': true\n      },\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'MaxPoolWithArgmax',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'strides', 'name': 'strides', 'type': 'number[]'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'},\n      {'tfName': 'ksize', 'name': 'kernelSize', 'type': 'number[]'}, {\n        'tfName': 'include_batch_in_index',\n        'name': 'includeBatchInIndex',\n        'type': 'bool'\n      },\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'AvgPool3D',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'strides', 'name': 'strides', 'type': 'number[]'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'}, {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      },\n      {'tfName': 'ksize', 'name': 'kernelSize', 'type': 'number[]'},\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'MaxPool3D',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'strides', 'name': 'strides', 'type': 'number[]'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'}, {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      },\n      {'tfName': 'ksize', 'name': 'kernelSize', 'type': 'number[]'},\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Conv1D',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'filter', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'stride', 'name': 'stride', 'type': 'number'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'}, {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NWC'\n      },\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}, {\n        'tfName': 'dilation',\n        'name': 'dilation',\n        'type': 'number',\n        'defaultValue': 1\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Conv2D',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'filter', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true},\n      {'tfName': 'strides', 'name': 'strides', 'type': 'number[]'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'},\n      {'tfName': 'useCudnnOnGpu', 'name': 'useCudnnOnGpu', 'type': 'bool'}, {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NHWC'\n      },\n      {\n        'tfName': 'explicit_paddings',\n        'name': 'explicitPaddings',\n        'type': 'number[]',\n        'defaultValue': []\n      },\n      {'tfName': 'dilations', 'name': 'dilations', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': '_FusedConv2D',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'filter', 'type': 'tensor'},\n      {'start': 2, end: 0, 'name': 'args', 'type': 'tensors'},\n    ],\n    'attrs': [\n      {'tfName': 'num_args', 'name': 'numArgs', 'type': 'number'},\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true},\n      {'tfName': 'strides', 'name': 'strides', 'type': 'number[]'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'}, {\n        'tfName': 'explicit_paddings',\n        'name': 'explicitPaddings',\n        'type': 'number[]',\n        'defaultValue': []\n      },\n      {\n        'tfName': 'use_cudnn_on_gpu',\n        'name': 'useCudnnOnGpu',\n        'type': 'bool',\n        'defaultValue': true\n      },\n      {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NHWC'\n      },\n      {\n        'tfName': 'dilations',\n        'name': 'dilations',\n        'type': 'number[]',\n        'defaultValue': [1, 1, 1, 1]\n      },\n      {\n        'tfName': 'fused_ops',\n        'name': 'fusedOps',\n        'type': 'string[]',\n        'defaultValue': []\n      },\n      {\n        'tfName': 'epsilon',\n        'name': 'epsilon',\n        'type': 'number',\n        'defaultValue': 0.0001\n      },\n      {\n        'tfName': 'leakyrelu_alpha',\n        'name': 'leakyreluAlpha',\n        'type': 'number'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Conv2DBackpropInput',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 2, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'filter', 'type': 'tensor'},\n      {'start': 0, 'name': 'outputShape', 'type': 'number[]'},\n    ],\n    'attrs': [\n      {'tfName': 'strides', 'name': 'strides', 'type': 'number[]'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'}, {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      },\n      {\n        'tfName': 'explicit_paddings',\n        'name': 'explicitPaddings',\n        'type': 'number[]',\n        'defaultValue': []\n      },\n      {\n        'tfName': 'dilations',\n        'name': 'dilations',\n        'type': 'number[]',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'DepthwiseConv2d',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 0, 'name': 'input', 'type': 'tensor'},\n      {'start': 1, 'name': 'filter', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'strides', 'name': 'strides', 'type': 'number[]'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'}, {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NHWC'\n      },\n      {\n        'tfName': 'explicit_paddings',\n        'name': 'explicitPaddings',\n        'type': 'number[]',\n        'defaultValue': []\n      },\n      {'tfName': 'dilations', 'name': 'dilations', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'DepthwiseConv2dNative',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 0, 'name': 'input', 'type': 'tensor'},\n      {'start': 1, 'name': 'filter', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'strides', 'name': 'strides', 'type': 'number[]'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'}, {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NHWC'\n      },\n      {\n        'tfName': 'explicit_paddings',\n        'name': 'explicitPaddings',\n        'type': 'number[]',\n        'defaultValue': []\n      },\n      {'tfName': 'dilations', 'name': 'dilations', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'FusedDepthwiseConv2dNative',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'filter', 'type': 'tensor'},\n      {'start': 2, end: 0, 'name': 'args', 'type': 'tensors'},\n    ],\n    'attrs': [\n      {'tfName': 'num_args', 'name': 'numArgs', 'type': 'number'},\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true},\n      {'tfName': 'strides', 'name': 'strides', 'type': 'number[]'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'}, {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NHWC'\n      },\n      {\n        'tfName': 'dilations',\n        'name': 'dilations',\n        'type': 'number[]',\n        'defaultValue': [1, 1, 1, 1]\n      },\n      {\n        'tfName': 'fused_ops',\n        'name': 'fusedOps',\n        'type': 'string[]',\n        'defaultValue': []\n      },\n      {\n        'tfName': 'explicit_paddings',\n        'name': 'explicitPaddings',\n        'type': 'number[]',\n        'defaultValue': []\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Conv3D',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'filter', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'strides', 'name': 'strides', 'type': 'number[]'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'}, {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NHWC'\n      },\n      {'tfName': 'dilations', 'name': 'dilations', 'type': 'number[]'}\n    ],\n  },\n  {\n    'tfOpName': 'Dilation2D',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'filter', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'strides', 'name': 'strides', 'type': 'number[]'},\n      {'tfName': 'rates', 'name': 'dilations', 'type': 'number[]'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'}\n    ]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'Fill',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'shape', 'type': 'number[]'},\n      {'start': 1, 'name': 'value', 'type': 'number'},\n    ],\n    'attrs': [{'tfName': 'T', 'name': 'dtype', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'LinSpace',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'start', 'type': 'number'},\n      {'start': 1, 'name': 'stop', 'type': 'number'},\n      {'start': 2, 'name': 'num', 'type': 'number'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'OneHot',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'indices', 'type': 'tensor'},\n      {'start': 1, 'name': 'depth', 'type': 'number'},\n      {'start': 2, 'name': 'onValue', 'type': 'number', 'defaultValue': 1},\n      {'start': 3, 'name': 'offValue', 'type': 'number', 'defaultValue': 0},\n    ],\n    'attrs': [\n      {\n        'tfName': 'axis',\n        'name': 'axis',\n        'type': 'number',\n        'notSupported': true\n      },\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Ones',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'shape', 'type': 'number[]'},\n    ],\n    'attrs': [{'tfName': 'T', 'name': 'dtype', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'OnesLike',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [{'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'RandomUniform',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'shape', 'type': 'number[]'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'minval',\n        'name': 'minval',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfName': 'maxval',\n        'name': 'maxval',\n        'type': 'number',\n        'defaultValue': 1\n      },\n      {'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype'},\n      {'tfName': 'seed', 'name': 'seed', 'type': 'number', 'defaultValue': 0}, {\n        'tfName': 'seed2',\n        'name': 'seed2',\n        'type': 'number',\n        'defaultValue': 0,\n        'notSupported': true\n      },\n      {'tfName': 'T', 'name': 'T', 'type': 'number', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Range',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'start', 'type': 'number'},\n      {'start': 1, 'name': 'stop', 'type': 'number'},\n      {'start': 2, 'name': 'step', 'type': 'number', 'defaultValue': 0},\n    ],\n    'attrs': [{'tfName': 'Tidx', 'name': 'dtype', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'TruncatedNormal',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'shape', 'type': 'number[]'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'means',\n        'name': 'mean',\n        'type': 'number',\n        'defaultValue': 0.0\n      },\n      {\n        'tfName': 'stddev',\n        'name': 'stdDev',\n        'type': 'number',\n        'defaultValue': 1.0\n      },\n      {'tfName': 'seed', 'name': 'seed', 'type': 'number'}, {\n        'tfName': 'seed2',\n        'name': 'seed2',\n        'type': 'number',\n        'defaultValue': 0,\n        'notSupported': true\n      },\n      {'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype'},\n      {'tfName': 'T', 'name': 'T', 'type': 'number', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Zeros',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'shape', 'type': 'number[]'},\n    ],\n    'attrs': [{'tfName': 'T', 'name': 'dtype', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'ZerosLike',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [{'tfName': 'T', 'name': 'dtype', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'Multinomial',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'logits', 'type': 'tensor'},\n      {'start': 1, 'name': 'numSamples', 'type': 'number'},\n    ],\n    'attrs': [\n      {'tfName': 'seed', 'name': 'seed', 'type': 'number'},\n      {'tfName': 'seed2', 'name': 'seed2', 'type': 'number'},\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype'},\n      {'tfName': 'output_dtype', 'name': 'output_dtype', 'type': 'dtype'}\n    ]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'NonMaxSuppressionV2',\n    'category': 'dynamic',\n    'inputs': [\n      {'start': 0, 'name': 'boxes', 'type': 'tensor'},\n      {'start': 1, 'name': 'scores', 'type': 'tensor'},\n      {'start': 2, 'name': 'maxOutputSize', 'type': 'number'},\n      {'start': 3, 'name': 'iouThreshold', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'NonMaxSuppressionV3',\n    'category': 'dynamic',\n    'inputs': [\n      {'start': 0, 'name': 'boxes', 'type': 'tensor'},\n      {'start': 1, 'name': 'scores', 'type': 'tensor'},\n      {'start': 2, 'name': 'maxOutputSize', 'type': 'number'},\n      {'start': 3, 'name': 'iouThreshold', 'type': 'number'},\n      {'start': 4, 'name': 'scoreThreshold', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'NonMaxSuppressionV4',\n    'category': 'dynamic',\n    'inputs': [\n      {'start': 0, 'name': 'boxes', 'type': 'tensor'},\n      {'start': 1, 'name': 'scores', 'type': 'tensor'},\n      {'start': 2, 'name': 'maxOutputSize', 'type': 'number'},\n      {'start': 3, 'name': 'iouThreshold', 'type': 'number'},\n      {'start': 4, 'name': 'scoreThreshold', 'type': 'number'}\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}, {\n        'tfName': 'T_threshold',\n        'name': 'threshold',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {\n        'tfName': 'pad_to_max_output_size',\n        'name': 'padToMaxOutputSize',\n        'type': 'bool'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'NonMaxSuppressionV5',\n    'category': 'dynamic',\n    'inputs': [\n      {'start': 0, 'name': 'boxes', 'type': 'tensor'},\n      {'start': 1, 'name': 'scores', 'type': 'tensor'},\n      {'start': 2, 'name': 'maxOutputSize', 'type': 'number'},\n      {'start': 3, 'name': 'iouThreshold', 'type': 'number'},\n      {'start': 4, 'name': 'scoreThreshold', 'type': 'number'},\n      {'start': 5, 'name': 'softNmsSigma', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'Where',\n    'category': 'dynamic',\n    'inputs': [\n      {'start': 0, 'name': 'condition', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'ListDiff',\n    'category': 'dynamic',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'y', 'type': 'tensor'},\n    ],\n    'attrs': [{\n      'tfName': 'T',\n      'name': 'dtype',\n      'type': 'dtype',\n      'notSupported': true\n    }]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'TopKV2',\n    'category': 'evaluation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'k', 'type': 'number'},\n    ],\n    'attrs': [{'tfName': 'sorted', 'name': 'sorted', 'type': 'bool'}]\n  },\n  {\n    'tfOpName': 'Unique',\n    'category': 'evaluation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n  },\n  {\n    'tfOpName': 'UniqueV2',\n    'category': 'evaluation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number'},\n    ],\n  },\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'PlaceholderWithDefault',\n    'category': 'graph',\n    'inputs': [\n      {'start': 0, 'name': 'default', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'shape', 'name': 'shape', 'type': 'shape'},\n      {'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype'}\n    ]\n  },\n  {\n    'tfOpName': 'Placeholder',\n    'category': 'graph',\n    'attrs': [\n      {'tfName': 'shape', 'name': 'shape', 'type': 'shape'},\n      {'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype'}\n    ]\n  },\n  {'tfOpName': 'Const', 'category': 'graph'}, {\n    'tfOpName': 'Identity',\n    'category': 'graph',\n    'inputs': [{'start': 0, 'name': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'IdentityN',\n    'category': 'graph',\n    'inputs': [{'start': 0, 'end': 0, 'name': 'x', 'type': 'tensors'}]\n  },\n  {\n    'tfOpName': 'Snapshot',\n    'category': 'graph',\n    'inputs': [{'start': 0, 'name': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'Rank',\n    'category': 'graph',\n    'inputs': [{'start': 0, 'name': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'Size',\n    'category': 'graph',\n    'inputs': [{'start': 0, 'name': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'Shape',\n    'category': 'graph',\n    'inputs': [{'start': 0, 'name': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'ShapeN',\n    'category': 'graph',\n    'inputs': [{'start': 0, 'end': 0, 'name': 'x', 'type': 'tensors'}]\n  },\n  {\n    'tfOpName': 'Print',\n    'category': 'graph',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'data', 'type': 'tensors'},\n    ],\n    'attrs': [\n      {'tfName': 'message', 'name': 'message', 'type': 'string'}, {\n        'tfName': 'first_n',\n        'name': 'firstN',\n        'type': 'number',\n        'notSupported': true\n      },\n      {\n        'tfName': 'summarize',\n        'name': 'summarize',\n        'type': 'number',\n        'defaultValue': 3\n      }\n    ]\n  },\n  {'tfOpName': 'NoOp', 'category': 'graph', 'inputs': []}, {\n    'tfOpName': 'StopGradient',\n    'category': 'graph',\n    'inputs': [{'start': 0, 'name': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'FakeQuantWithMinMaxVars',\n    'category': 'graph',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'min', 'name': 'min', 'type': 'number'},\n      {'tfName': 'max', 'name': 'max', 'type': 'number'}\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'HashTable',\n    'category': 'hash_table',\n    'inputs': [],\n    'attrs': [\n      {'tfName': 'shared_name', 'name': 'sharedName', 'type': 'string'},\n      {\n        'tfName': 'use_node_name_sharing',\n        'name': 'useNodeNameSharing',\n        'type': 'bool'\n      },\n      {'tfName': 'key_dtype', 'name': 'keyDType', 'type': 'dtype'},\n      {'tfName': 'value_dtype', 'name': 'valueDType', 'type': 'dtype'},\n    ]\n  },\n  {\n    'tfOpName': 'HashTableV2',\n    'category': 'hash_table',\n    'inputs': [],\n    'attrs': [\n      {'tfName': 'shared_name', 'name': 'sharedName', 'type': 'string'},\n      {\n        'tfName': 'use_node_name_sharing',\n        'name': 'useNodeNameSharing',\n        'type': 'bool'\n      },\n      {'tfName': 'key_dtype', 'name': 'keyDType', 'type': 'dtype'},\n      {'tfName': 'value_dtype', 'name': 'valueDType', 'type': 'dtype'},\n    ]\n  },\n  {\n    'tfOpName': 'LookupTableImport',\n    'category': 'hash_table',\n    'inputs': [\n      {'start': 0, 'name': 'tableHandle', 'type': 'tensor'},\n      {'start': 1, 'name': 'keys', 'type': 'tensor'},\n      {'start': 2, 'name': 'values', 'type': 'tensor'}\n    ],\n    'attrs': [\n      {'tfName': 'Tin', 'name': 'tIn', 'type': 'dtype', 'notSupported': true}, {\n        'tfName': 'Tout',\n        'name': 'tOut',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LookupTableImportV2',\n    'category': 'hash_table',\n    'inputs': [\n      {'start': 0, 'name': 'tableHandle', 'type': 'tensor'},\n      {'start': 1, 'name': 'keys', 'type': 'tensor'},\n      {'start': 2, 'name': 'values', 'type': 'tensor'}\n    ],\n    'attrs': [\n      {'tfName': 'Tin', 'name': 'tIn', 'type': 'dtype', 'notSupported': true}, {\n        'tfName': 'Tout',\n        'name': 'tOut',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LookupTableFind',\n    'category': 'hash_table',\n    'inputs': [\n      {'start': 0, 'name': 'tableHandle', 'type': 'tensor'},\n      {'start': 1, 'name': 'keys', 'type': 'tensor'},\n      {'start': 2, 'name': 'defaultValue', 'type': 'tensor'}\n    ],\n    'attrs': [\n      {'tfName': 'Tin', 'name': 'tIn', 'type': 'dtype', 'notSupported': true}, {\n        'tfName': 'Tout',\n        'name': 'tOut',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LookupTableFindV2',\n    'category': 'hash_table',\n    'inputs': [\n      {'start': 0, 'name': 'tableHandle', 'type': 'tensor'},\n      {'start': 1, 'name': 'keys', 'type': 'tensor'},\n      {'start': 2, 'name': 'defaultValue', 'type': 'tensor'}\n    ],\n    'attrs': [\n      {'tfName': 'Tin', 'name': 'tIn', 'type': 'dtype', 'notSupported': true}, {\n        'tfName': 'Tout',\n        'name': 'tOut',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LookupTableSize',\n    'category': 'hash_table',\n    'inputs': [\n      {'start': 0, 'name': 'tableHandle', 'type': 'tensor'}\n    ]\n  },\n  {\n    'tfOpName': 'LookupTableSizeV2',\n    'category': 'hash_table',\n    'inputs': [\n      {'start': 0, 'name': 'tableHandle', 'type': 'tensor'}\n    ]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'ResizeBilinear',\n    'category': 'image',\n    'inputs': [\n      {'start': 0, 'name': 'images', 'type': 'tensor'},\n      {'start': 1, 'name': 'size', 'type': 'number[]'},\n    ],\n    'attrs': [\n      {'tfName': 'align_corners', 'name': 'alignCorners', 'type': 'bool'}, {\n        'tfName': 'half_pixel_centers',\n        'name': 'halfPixelCenters',\n        'type': 'bool'\n      },\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'ResizeNearestNeighbor',\n    'category': 'image',\n    'inputs': [\n      {'start': 0, 'name': 'images', 'type': 'tensor'},\n      {'start': 1, 'name': 'size', 'type': 'number[]'},\n    ],\n    'attrs': [\n      {'tfName': 'align_corners', 'name': 'alignCorners', 'type': 'bool'}, {\n        'tfName': 'half_pixel_centers',\n        'name': 'halfPixelCenters',\n        'type': 'bool'\n      },\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'CropAndResize',\n    'category': 'image',\n    'inputs': [\n      {'start': 0, 'name': 'image', 'type': 'tensor'},\n      {'start': 1, 'name': 'boxes', 'type': 'tensor'},\n      {'start': 2, 'name': 'boxInd', 'type': 'tensor'},\n      {'start': 3, 'name': 'cropSize', 'type': 'number[]'},\n    ],\n    'attrs': [\n      {'tfName': 'method', 'name': 'method', 'type': 'string'}, {\n        'tfName': 'extrapolation_value',\n        'name': 'extrapolationValue',\n        'type': 'number'\n      }\n    ]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'Equal',\n    'category': 'logical',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'NotEqual',\n    'category': 'logical',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Greater',\n    'category': 'logical',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'GreaterEqual',\n    'category': 'logical',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Less',\n    'category': 'logical',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'LessEqual',\n    'category': 'logical',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'LogicalAnd',\n    'category': 'logical',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'LogicalNot',\n    'category': 'logical',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'LogicalOr',\n    'category': 'logical',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Select',\n    'category': 'logical',\n    'inputs': [\n      {'start': 0, 'name': 'condition', 'type': 'tensor'},\n      {'start': 1, 'name': 'a', 'type': 'tensor'},\n      {'start': 2, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'SelectV2',\n    'category': 'logical',\n    'inputs': [\n      {'start': 0, 'name': 'condition', 'type': 'tensor'},\n      {'start': 1, 'name': 'a', 'type': 'tensor'},\n      {'start': 2, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [{\n      'tfName': 'T',\n      'name': 'dtype',\n      'type': 'dtype',\n      'notSupported': true\n    }]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': '_FusedMatMul',\n    'category': 'matrices',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n      {'start': 2, end: 0, 'name': 'args', 'type': 'tensors'},\n    ],\n    'attrs': [\n      {'tfName': 'num_args', 'name': 'numArgs', 'type': 'number'}, {\n        'tfName': 'fused_ops',\n        'name': 'fusedOps',\n        'type': 'string[]',\n        'defaultValue': []\n      },\n      {\n        'tfName': 'epsilon',\n        'name': 'epsilon',\n        'type': 'number',\n        'defaultValue': 0.0001\n      },\n      {\n        'tfName': 'transpose_a',\n        'name': 'transposeA',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {\n        'tfName': 'transpose_b',\n        'name': 'transposeB',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'MatMul',\n    'category': 'matrices',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'transpose_a',\n        'name': 'transposeA',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {\n        'tfName': 'transpose_b',\n        'name': 'transposeB',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'BatchMatMul',\n    'category': 'matrices',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'adj_x',\n        'name': 'transposeA',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {\n        'tfName': 'adj_y',\n        'name': 'transposeB',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'BatchMatMulV2',\n    'category': 'matrices',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'adj_x',\n        'name': 'transposeA',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {\n        'tfName': 'adj_y',\n        'name': 'transposeB',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Transpose',\n    'category': 'matrices',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'perm', 'type': 'number[]'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Einsum',\n    'category': 'matrices',\n    'inputs': [{'start': 0, 'end': 0, 'name': 'tensors', 'type': 'tensors'}],\n    'attrs': [\n      {'tfName': 'equation', 'name': 'equation', 'type': 'string'},\n      {'tfName': 'N', 'name': 'n', 'type': 'number', 'defaultValue': 2},\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype'}\n    ]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'FusedBatchNorm',\n    'category': 'normalization',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'scale', 'type': 'tensor'},\n      {'start': 2, 'name': 'offset', 'type': 'tensor'},\n      {'start': 3, 'name': 'mean', 'type': 'tensor'},\n      {'start': 4, 'name': 'variance', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'epsilon',\n        'name': 'epsilon',\n        'type': 'number',\n        'defaultValue': 0.001\n      },\n      {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'FusedBatchNormV2',\n    'category': 'normalization',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'scale', 'type': 'tensor'},\n      {'start': 2, 'name': 'offset', 'type': 'tensor'},\n      {'start': 3, 'name': 'mean', 'type': 'tensor'},\n      {'start': 4, 'name': 'variance', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'epsilon',\n        'name': 'epsilon',\n        'type': 'number',\n        'defaultValue': 0.001\n      },\n      {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'FusedBatchNormV3',\n    'category': 'normalization',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'scale', 'type': 'tensor'},\n      {'start': 2, 'name': 'offset', 'type': 'tensor'},\n      {'start': 3, 'name': 'mean', 'type': 'tensor'},\n      {'start': 4, 'name': 'variance', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'epsilon',\n        'name': 'epsilon',\n        'type': 'number',\n        'defaultValue': 0.001\n      },\n      {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LRN',\n    'category': 'normalization',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'depth_radius',\n        'name': 'radius',\n        'type': 'number',\n        'defaultValue': 5\n      },\n      {'tfName': 'bias', 'name': 'bias', 'type': 'number', 'defaultValue': 1.0},\n      {\n        'tfName': 'alpha',\n        'name': 'alpha',\n        'type': 'number',\n        'defaultValue': 1.0\n      },\n      {\n        'tfName': 'beta',\n        'name': 'beta',\n        'type': 'number',\n        'defaultValue': 0.5\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Softmax',\n    'category': 'normalization',\n    'inputs': [{'start': 0, 'name': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'LogSoftmax',\n    'category': 'normalization',\n    'inputs': [{'start': 0, 'name': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'SparseToDense',\n    'category': 'normalization',\n    'inputs': [\n      {'start': 0, 'name': 'sparseIndices', 'type': 'tensor'},\n      {'start': 1, 'name': 'outputShape', 'type': 'number[]'},\n      {'start': 2, 'name': 'sparseValues', 'type': 'tensor'},\n      {'start': 3, 'name': 'defaultValue', 'type': 'tensor'},\n    ],\n    'attrs': [{\n      'tfName': 'validate_indices',\n      'name': 'validateIndices',\n      'type': 'bool',\n      'defaultValue': true,\n      'notSupported': true\n    }]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'Bincount',\n    'category': 'reduction',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'size', 'type': 'number'},\n      {'start': 2, 'name': 'weights', 'type': 'tensor'}\n    ]\n  },\n  {\n    'tfOpName': 'DenseBincount',\n    'category': 'reduction',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'size', 'type': 'number'},\n      {'start': 2, 'name': 'weights', 'type': 'tensor'}\n    ],\n    'attrs':\n        [{'tfName': 'binary_output', 'name': 'binaryOutput', 'type': 'bool'}]\n  },\n  {\n    'tfOpName': 'Max',\n    'category': 'reduction',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number[]'},\n    ],\n    'attrs': [{'tfName': 'keep_dims', 'name': 'keepDims', 'type': 'bool'}]\n  },\n  {\n    'tfOpName': 'Mean',\n    'category': 'reduction',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number[]'},\n    ],\n    'attrs': [{'tfName': 'keep_dims', 'name': 'keepDims', 'type': 'bool'}]\n  },\n  {\n    'tfOpName': 'Min',\n    'category': 'reduction',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number[]'},\n    ],\n    'attrs': [{'tfName': 'keep_dims', 'name': 'keepDims', 'type': 'bool'}]\n  },\n  {\n    'tfOpName': 'Sum',\n    'category': 'reduction',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number[]'},\n    ],\n    'attrs': [{'tfName': 'keep_dims', 'name': 'keepDims', 'type': 'bool'}]\n  },\n  {\n    'tfOpName': 'All',\n    'category': 'reduction',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number[]'},\n    ],\n    'attrs': [{'tfName': 'keep_dims', 'name': 'keepDims', 'type': 'bool'}]\n  },\n  {\n    'tfOpName': 'Any',\n    'category': 'reduction',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number[]'},\n    ],\n    'attrs': [{'tfName': 'keep_dims', 'name': 'keepDims', 'type': 'bool'}]\n  },\n  {\n    'tfOpName': 'ArgMax',\n    'category': 'reduction',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'ArgMin',\n    'category': 'reduction',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'Prod',\n    'category': 'reduction',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number[]'},\n    ],\n    'attrs': [{'tfName': 'keep_dims', 'name': 'keepDims', 'type': 'bool'}]\n  },\n  {\n    'tfOpName': 'Cumsum',\n    'category': 'reduction',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number'},\n    ],\n    'attrs': [\n      {'tfName': 'exclusive', 'name': 'exclusive', 'type': 'bool'},\n      {'tfName': 'reverse', 'name': 'reverse', 'type': 'bool'}\n    ]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'ConcatV2',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'end': -1, 'name': 'tensors', 'type': 'tensors'},\n      {'start': -1, 'name': 'axis', 'type': 'number'}\n    ],\n    'attrs':\n        [{'tfName': 'N', 'name': 'n', 'type': 'number', 'defaultValue': 2}]\n  },\n  {\n    'tfOpName': 'Concat',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 1, 'end': 0, 'name': 'tensors', 'type': 'tensors'},\n      {'start': 0, 'name': 'axis', 'type': 'number'}\n    ],\n    'attrs': [{'tfName': 'N', 'name': 'n', 'type': 'number', 'defaultValue': 2}]\n\n  },\n  {\n    'tfOpName': 'GatherV2',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'indices', 'type': 'tensor'},\n      {'start': 2, 'name': 'axis', 'type': 'number', 'defaultValue': 0}\n    ],\n    'attrs': [{\n      'tfName': 'batch_dims',\n      'name': 'batchDims',\n      'type': 'number',\n      'defaultValue': 0\n    }]\n  },\n  {\n    'tfOpName': 'Gather',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'indices', 'type': 'tensor'},\n    ],\n    'attrs': [{\n      'tfName': 'validate_indices',\n      'name': 'validateIndices',\n      'type': 'bool',\n      'notSupported': true\n    }]\n  },\n  {\n    'tfOpName': 'Reverse',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'dims', 'type': 'bool[]'}\n    ]\n  },\n  {\n    'tfOpName': 'ReverseV2',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'Slice',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'begin', 'type': 'number[]'},\n      {'start': 2, 'name': 'size', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'StridedSlice',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'begin', 'type': 'number[]'},\n      {'start': 2, 'name': 'end', 'type': 'number[]'},\n      {'start': 3, 'name': 'strides', 'type': 'number[]'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'begin_mask',\n        'name': 'beginMask',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfName': 'end_mask',\n        'name': 'endMask',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfName': 'new_axis_mask',\n        'name': 'newAxisMask',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfName': 'ellipsis_mask',\n        'name': 'ellipsisMask',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfName': 'shrink_axis_mask',\n        'name': 'shrinkAxisMask',\n        'type': 'number',\n        'defaultValue': 0\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Pack',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'end': 0, 'name': 'tensors', 'type': 'tensors'},\n    ],\n    'attrs': [\n      {'tfName': 'axis', 'name': 'axis', 'type': 'number', 'defaultValue': 0}\n    ]\n  },\n  {\n    'tfOpName': 'Unpack',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'tensor', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'axis', 'name': 'axis', 'type': 'number', 'defaultValue': 0}, {\n        'tfName': 'num',\n        'name': 'num',\n        'type': 'number',\n        'defaultValue': 0,\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Tile',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'reps', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'Split',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'axis', 'type': 'number', 'defaultValue': 0},\n      {'start': 1, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [{\n      'tfName': 'num_split',\n      'name': 'numOrSizeSplits',\n      'type': 'number',\n      'defaultValue': 1\n    }]\n  },\n  {\n    'tfOpName': 'SplitV',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'numOrSizeSplits', 'type': 'number[]'},\n      {'start': 2, 'name': 'axis', 'type': 'number', 'defaultValue': 0}\n    ]\n  },\n  {\n    'tfOpName': 'ScatterNd',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'indices', 'type': 'tensor'},\n      {'start': 1, 'name': 'values', 'type': 'tensor'},\n      {'start': 2, 'name': 'shape', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'GatherNd',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'indices', 'type': 'tensor'}\n    ]\n  },\n  {\n    'tfOpName': 'SparseToDense',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'sparseIndices', 'type': 'tensor'},\n      {'start': 1, 'name': 'outputShape', 'type': 'number[]'},\n      {'start': 2, 'name': 'sparseValues', 'type': 'tensor'},\n      {'start': 3, 'name': 'defaultValue', 'type': 'tensor'},\n    ],\n    'attrs': [{\n      'tfName': 'validate_indices',\n      'name': 'validateIndices',\n      'type': 'bool',\n      'defaultValue': false,\n      'notSupported': true\n    }]\n  }\n];\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'SparseFillEmptyRows',\n    'category': 'sparse',\n    'inputs': [\n      {'start': 0, 'name': 'indices', 'type': 'tensor'},\n      {'start': 1, 'name': 'values', 'type': 'tensor'},\n      {'start': 2, 'name': 'denseShape', 'type': 'tensor'},\n      {'start': 3, 'name': 'defaultValue', 'type': 'tensor'},\n    ]\n  },\n  {\n    'tfOpName': 'SparseReshape',\n    'category': 'sparse',\n    'inputs': [\n      {'start': 0, 'name': 'inputIndices', 'type': 'tensor'},\n      {'start': 1, 'name': 'inputShape', 'type': 'tensor'},\n      {'start': 2, 'name': 'newShape', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'SparseSegmentMean',\n    'category': 'sparse',\n    'inputs': [\n      {'start': 0, 'name': 'data', 'type': 'tensor'},\n      {'start': 1, 'name': 'indices', 'type': 'tensor'},\n      {'start': 2, 'name': 'segmentIds', 'type': 'tensor'},\n    ]\n  },\n  {\n    'tfOpName': 'SparseSegmentSum',\n    'category': 'sparse',\n    'inputs': [\n      {'start': 0, 'name': 'data', 'type': 'tensor'},\n      {'start': 1, 'name': 'indices', 'type': 'tensor'},\n      {'start': 2, 'name': 'segmentIds', 'type': 'tensor'},\n    ]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'FFT',\n    'category': 'spectral',\n    'inputs': [{'start': 0, 'name': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'IFFT',\n    'category': 'spectral',\n    'inputs': [{'start': 0, 'name': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'RFFT',\n    'category': 'spectral',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'}, {\n        'start': 1,\n        'name': 'fft_length',\n        'type': 'number',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'IRFFT',\n    'category': 'spectral',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'}, {\n        'start': 1,\n        'name': 'fft_length',\n        'type': 'number',\n        'notSupported': true\n      }\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'StringNGrams',\n    'category': 'string',\n    'inputs': [\n      {'start': 0, 'name': 'data', 'type': 'tensor'},\n      {'start': 1, 'name': 'dataSplits', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'separator', 'name': 'separator', 'type': 'string'},\n      {'tfName': 'ngram_widths', 'name': 'nGramWidths', 'type': 'number[]'},\n      {'tfName': 'left_pad', 'name': 'leftPad', 'type': 'string'},\n      {'tfName': 'right_pad', 'name': 'rightPad', 'type': 'string'},\n      {'tfName': 'pad_width', 'name': 'padWidth', 'type': 'number'}, {\n        'tfName': 'preserve_short_sequences',\n        'name': 'preserveShortSequences',\n        'type': 'bool'\n      }\n    ],\n    'outputs': ['ngrams', 'ngrams_splits']\n  },\n  {\n    'tfOpName': 'StringSplit',\n    'category': 'string',\n    'inputs': [\n      {'start': 0, 'name': 'input', 'type': 'tensor'},\n      {'start': 1, 'name': 'delimiter', 'type': 'tensor'},\n    ],\n    'attrs': [{'tfName': 'skip_empty', 'name': 'skipEmpty', 'type': 'bool'}],\n    'outputs': ['indices', 'values', 'shape']\n  },\n  {\n    'tfOpName': 'StringToHashBucketFast',\n    'category': 'string',\n    'inputs': [\n      {'start': 0, 'name': 'input', 'type': 'tensor'},\n    ],\n    'attrs': [{'tfName': 'num_buckets', 'name': 'numBuckets', 'type': 'number'}]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'Cast',\n    'category': 'transformation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'SrcT',\n        'name': 'sdtype',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {'tfName': 'DstT', 'name': 'dtype', 'type': 'dtype'}\n    ]\n  },\n  {\n    'tfOpName': 'ExpandDims',\n    'category': 'transformation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'MirrorPad',\n    'category': 'transformation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'padding', 'type': 'number[]'},\n    ],\n    'attrs': [{'tfName': 'mode', 'name': 'mode', 'type': 'string'}]\n  },\n  {\n    'tfOpName': 'Pad',\n    'category': 'transformation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'padding', 'type': 'number[]'},\n    ],\n    'attrs': [{\n      'tfName': 'constant_value',\n      'name': 'constantValue',\n      'type': 'number',\n      'defaultValue': 0\n    }]\n  },\n  {\n    'tfOpName': 'PadV2',\n    'category': 'transformation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'padding', 'type': 'number[]'}, {\n        'start': 2,\n        'name': 'constantValue',\n        'type': 'number',\n        'defaultValue': 0\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Reshape',\n    'category': 'transformation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'shape', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'Squeeze',\n    'category': 'transformation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [{\n      'tfName': 'axis',\n      'tfDeprecatedName': 'squeeze_dims',\n      'name': 'axis',\n      'type': 'number[]'\n    }]\n  },\n  {\n    'tfOpName': 'SpaceToBatchND',\n    'category': 'transformation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'blockShape', 'type': 'number[]'},\n      {'start': 2, 'name': 'paddings', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'BatchToSpaceND',\n    'category': 'transformation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'blockShape', 'type': 'number[]'},\n      {'start': 2, 'name': 'crops', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'DepthToSpace',\n    'category': 'transformation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'block_size', 'name': 'blockSize', 'type': 'number'},\n      {'tfName': 'data_format', 'name': 'dataFormat', 'type': 'string'}\n    ]\n  },\n  {\n    'tfOpName': 'BroadcastTo',\n    'category': 'transformation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'shape', 'type': 'number[]'},\n    ],\n    'attrs': []\n  }\n];\n","/**\n    * @license\n    * Copyright 2019 Google LLC. All Rights Reserved.\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    * http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    * =============================================================================\n    */\nimport{util,tidy,keep,div}from\"@tensorflow/tfjs-core\";function __awaiter(t,a,e,s){return new(e||(e=Promise))(function(r,i){function n(t){try{o(s.next(t))}catch(t){i(t)}}function l(t){try{o(s.throw(t))}catch(t){i(t)}}function o(t){t.done?r(t.value):new e(function(a){a(t.value)}).then(n,l)}o((s=s.apply(t,a||[])).next())})}function __generator(t,a){var e,s,r,i,n={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},\"function\"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(e)throw new TypeError(\"Generator is already executing.\");for(;n;)try{if(e=1,s&&(r=2&i[0]?s.return:i[0]?s.throw||((r=s.return)&&r.call(s),0):s.next)&&!(r=r.call(s,i[1])).done)return r;switch(s=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return n.label++,{value:i[1],done:!1};case 5:n.label++,s=i[1],i=[0];continue;case 7:i=n.ops.pop(),n.trys.pop();continue;default:if(!(r=(r=n.trys).length>0&&r[r.length-1])&&(6===i[0]||2===i[0])){n=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){n.label=i[1];break}if(6===i[0]&&n.label<r[1]){n.label=r[1],r=i;break}if(r&&n.label<r[2]){n.label=r[2],n.ops.push(i);break}r[2]&&n.ops.pop(),n.trys.pop();continue}i=a.call(t,n)}catch(t){i=[6,t],s=0}finally{e=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}}function concatWithNulls(t,a){return null==t&&null==a?null:null==t?a.clone():null===a?t.clone():t.concat(a,0)}function topK(t,a){for(var e=[],s=0;s<t.length;s++)e.push({value:t[s],index:s});e.sort(function(t,a){return a.value-t.value});var r=new Float32Array(a),i=new Int32Array(a);for(s=0;s<a;s++)r[s]=e[s].value,i[s]=e[s].index;return{values:r,indices:i}}var version=\"1.2.2\",KNNClassifier=function(){function t(){this.classDatasetMatrices={},this.classExampleCount={},this.labelToClassId={},this.nextClassId=0}return t.prototype.addExample=function(t,a){var e=this;if(null==this.exampleShape&&(this.exampleShape=t.shape),!util.arraysEqual(this.exampleShape,t.shape))throw new Error(\"Example shape provided, \"+t.shape+\" does not match previously provided example shapes \"+this.exampleShape+\".\");this.clearTrainDatasetMatrix(),a in this.labelToClassId||(this.labelToClassId[a]=this.nextClassId++),tidy(function(){var s=e.normalizeVectorToUnitLength(t.flatten()),r=s.shape[0];if(null==e.classDatasetMatrices[a])e.classDatasetMatrices[a]=s.as2D(1,r);else{var i=e.classDatasetMatrices[a].as2D(e.classExampleCount[a],r).concat(s.as2D(1,r),0);e.classDatasetMatrices[a].dispose(),e.classDatasetMatrices[a]=i}keep(e.classDatasetMatrices[a]),null==e.classExampleCount[a]&&(e.classExampleCount[a]=0),e.classExampleCount[a]++})},t.prototype.similarities=function(t){var a=this;return tidy(function(){var e=a.normalizeVectorToUnitLength(t.flatten()),s=e.shape[0];if(null==a.trainDatasetMatrix){var r=null;for(var i in a.classDatasetMatrices)r=concatWithNulls(r,a.classDatasetMatrices[i]);a.trainDatasetMatrix=r}if(null==a.trainDatasetMatrix)return console.warn(\"Cannot predict without providing training examples.\"),null;keep(a.trainDatasetMatrix);var n=a.getNumExamples();return a.trainDatasetMatrix.as2D(n,s).matMul(e.as2D(s,1)).as1D()})},t.prototype.predictClass=function(t,a){return void 0===a&&(a=3),__awaiter(this,void 0,void 0,function(){var e,s,r,i,n=this;return __generator(this,function(l){switch(l.label){case 0:if(a<1)throw new Error(\"Please provide a positive integer k value to predictClass.\");if(0===this.getNumExamples())throw new Error(\"You have not added any examples to the KNN classifier. Please add examples before calling predictClass.\");return e=tidy(function(){return n.similarities(t).asType(\"float32\")}),s=Math.min(a,this.getNumExamples()),i=topK,[4,e.data()];case 1:return r=i.apply(void 0,[l.sent(),s]).indices,e.dispose(),[2,this.calculateTopClass(r,s)]}})})},t.prototype.clearClass=function(t){if(null==this.classDatasetMatrices[t])throw new Error(\"Cannot clear invalid class \"+t);this.classDatasetMatrices[t].dispose(),delete this.classDatasetMatrices[t],delete this.classExampleCount[t],this.clearTrainDatasetMatrix()},t.prototype.clearAllClasses=function(){for(var t in this.classDatasetMatrices)this.clearClass(t)},t.prototype.getClassExampleCount=function(){return this.classExampleCount},t.prototype.getClassifierDataset=function(){return this.classDatasetMatrices},t.prototype.getNumClasses=function(){return Object.keys(this.classExampleCount).length},t.prototype.setClassifierDataset=function(t){for(var a in this.clearTrainDatasetMatrix(),this.classDatasetMatrices=t,t)this.classExampleCount[a]=t[a].shape[0]},t.prototype.calculateTopClass=function(t,a){var e,s={};if(null==t)return{classIndex:this.labelToClassId[e],label:e,confidences:s};var r={},i=0;for(var n in this.classDatasetMatrices)i+=this.classExampleCount[n],r[n]=i;var l={};for(var n in this.classDatasetMatrices)l[n]=0;for(var o=0;o<t.length;o++){var c=t[o];for(var n in this.classDatasetMatrices)if(c<r[n]){l[n]++;break}}var u=0;for(var n in this.classDatasetMatrices){var p=l[n]/a;p>u&&(u=p,e=n),s[n]=p}return{classIndex:this.labelToClassId[e],label:e,confidences:s}},t.prototype.clearTrainDatasetMatrix=function(){null!=this.trainDatasetMatrix&&(this.trainDatasetMatrix.dispose(),this.trainDatasetMatrix=null)},t.prototype.normalizeVectorToUnitLength=function(t){return tidy(function(){var a=t.norm();return div(t,a)})},t.prototype.getNumExamples=function(){var t=0;for(var a in this.classDatasetMatrices)t+=this.classExampleCount[a];return t},t.prototype.dispose=function(){for(var t in this.clearTrainDatasetMatrix(),this.classDatasetMatrices)this.classDatasetMatrices[t].dispose()},t}();function create(){return new KNNClassifier}export{KNNClassifier,create,version};\n","/*!\n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, Tensor} from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {getTensor} from '../executors/utils';\nimport {getBoolArrayParam, getBoolParam, getDtypeArrayParam, getDtypeParam, getNumberParam, getNumericArrayParam, getStringArrayParam, getStringParam, getTensorShapeArrayParam, getTensorShapeParam} from '../operation_mapper';\nimport {GraphNode, Node, ValueType} from '../types';\n\n/**\n * Helper class for lookup inputs and params for nodes in the model graph.\n */\nexport class NodeValueImpl implements GraphNode {\n  public readonly inputs: Tensor[] = [];\n  public readonly attrs: {[key: string]: ValueType} = {};\n  constructor(\n      private node: Node, private tensorMap: NamedTensorsMap,\n      private context: ExecutionContext) {\n    this.inputs = node.inputNames.map(name => this.getInput(name));\n    if (node.rawAttrs != null) {\n      this.attrs = Object.keys(node.rawAttrs)\n                       .reduce((attrs: {[key: string]: ValueType}, key) => {\n                         attrs[key] = this.getAttr(key);\n                         return attrs;\n                       }, {});\n    }\n  }\n\n  /**\n   * Return the value of the attribute or input param.\n   * @param name String: name of attribute or input param.\n   */\n  private getInput(name: string): Tensor {\n    return getTensor(name, this.tensorMap, this.context);\n  }\n\n  /**\n   * Return the value of the attribute or input param.\n   * @param name String: name of attribute or input param.\n   */\n  private getAttr(name: string, defaultValue?: ValueType): ValueType {\n    const value = this.node.rawAttrs[name];\n    if (value.tensor != null) {\n      return getTensor(name, this.tensorMap, this.context);\n    }\n    if (value.i != null || value.f != null) {\n      return getNumberParam(this.node.rawAttrs, name, defaultValue as number);\n    }\n    if (value.s != null) {\n      return getStringParam(this.node.rawAttrs, name, defaultValue as string);\n    }\n    if (value.b != null) {\n      return getBoolParam(this.node.rawAttrs, name, defaultValue as boolean);\n    }\n    if (value.shape != null) {\n      return getTensorShapeParam(\n          this.node.rawAttrs, name, defaultValue as number[]);\n    }\n    if (value.type != null) {\n      return getDtypeParam(this.node.rawAttrs, name, defaultValue as DataType);\n    }\n    if (value.list != null) {\n      if (value.list.i != null || value.list.f != null) {\n        return getNumericArrayParam(\n            this.node.rawAttrs, name, defaultValue as number[]);\n      }\n      if (value.list.s != null) {\n        return getStringArrayParam(\n            this.node.rawAttrs, name, defaultValue as string[]);\n      }\n      if (value.list.shape != null) {\n        return getTensorShapeArrayParam(\n            this.node.rawAttrs, name, defaultValue as number[][]);\n      }\n      if (value.list.b != null) {\n        return getBoolArrayParam(\n            this.node.rawAttrs, name, defaultValue as boolean[]);\n      }\n      if (value.list.type != null) {\n        return getDtypeArrayParam(\n            this.node.rawAttrs, name, defaultValue as DataType[]);\n      }\n    }\n\n    return defaultValue;\n  }\n}\n","\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * This differs from util.assertShapesMatch in that it allows values of\n * negative one, an undefined size of a dimensinon, in a shape to match\n * anything.\n */\n\nimport {Tensor, util} from '@tensorflow/tfjs-core';\n\n/**\n * Used by TensorList and TensorArray to verify if elementShape matches, support\n * negative value as the dim shape.\n * @param shapeA\n * @param shapeB\n * @param errorMessagePrefix\n */\nexport function assertShapesMatchAllowUndefinedSize(\n    shapeA: number|number[], shapeB: number|number[],\n    errorMessagePrefix = ''): void {\n  // constant shape means unknown rank\n  if (typeof shapeA === 'number' || typeof shapeB === 'number') {\n    return;\n  }\n  util.assert(\n      shapeA.length === shapeB.length,\n      () => errorMessagePrefix + ` Shapes ${shapeA} and ${shapeB} must match`);\n  for (let i = 0; i < shapeA.length; i++) {\n    const dim0 = shapeA[i];\n    const dim1 = shapeB[i];\n    util.assert(\n        dim0 < 0 || dim1 < 0 || dim0 === dim1,\n        () =>\n            errorMessagePrefix + ` Shapes ${shapeA} and ${shapeB} must match`);\n  }\n}\n\nexport function fullDefinedShape(elementShape: number|number[]): boolean {\n  if (typeof elementShape === 'number' || elementShape.some(dim => dim < 0)) {\n    return false;\n  }\n  return true;\n}\n/**\n * Generate the output element shape from the list elementShape, list tensors\n * and input param.\n * @param listElementShape\n * @param tensors\n * @param elementShape\n */\nexport function inferElementShape(\n    listElementShape: number|number[], tensors: Tensor[],\n    elementShape: number|number[]): number[] {\n  let partialShape = mergeElementShape(listElementShape, elementShape);\n  const notfullDefinedShape = !fullDefinedShape(partialShape);\n  if (notfullDefinedShape && tensors.length === 0) {\n    throw new Error(\n        `Tried to calculate elements of an empty list` +\n        ` with non-fully-defined elementShape: ${partialShape}`);\n  }\n  if (notfullDefinedShape) {\n    tensors.forEach(tensor => {\n      partialShape = mergeElementShape(tensor.shape, partialShape);\n    });\n  }\n  if (!fullDefinedShape(partialShape)) {\n    throw new Error(`Non-fully-defined elementShape: ${partialShape}`);\n  }\n  return partialShape as number[];\n}\n\nexport function mergeElementShape(\n    elementShapeA: number|number[], elementShapeB: number|number[]): number|\n    number[] {\n  if (typeof elementShapeA === 'number') {\n    return elementShapeB;\n  }\n  if (typeof elementShapeB === 'number') {\n    return elementShapeA;\n  }\n\n  if (elementShapeA.length !== elementShapeB.length) {\n    throw new Error(`Incompatible ranks during merge: ${elementShapeA} vs. ${\n        elementShapeB}`);\n  }\n\n  const result: number[] = [];\n  for (let i = 0; i < elementShapeA.length; ++i) {\n    const dim0 = elementShapeA[i];\n    const dim1 = elementShapeB[i];\n    if (dim0 >= 0 && dim1 >= 0 && dim0 !== dim1) {\n      throw new Error(`Incompatible shape during merge: ${elementShapeA} vs. ${\n          elementShapeB}`);\n    }\n    result[i] = dim0 >= 0 ? dim0 : dim1;\n  }\n  return result;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {concat, DataType, keep, reshape, scalar, slice, stack, Tensor, tensor, tidy, unstack} from '@tensorflow/tfjs-core';\n\nimport {assertShapesMatchAllowUndefinedSize} from './tensor_utils';\n\nexport interface TensorWithState {\n  tensor?: Tensor;\n  written?: boolean;\n  read?: boolean;\n  cleared?: boolean;\n}\n/**\n * The TensorArray object keeps an array of Tensors.  It\n * allows reading from the array and writing to the array.\n */\nexport class TensorArray {\n  private tensors: TensorWithState[] = [];\n  private closed_ = false;\n  readonly idTensor: Tensor;\n  constructor(\n      readonly name: string, readonly dtype: DataType, private maxSize: number,\n      private elementShape: number[], readonly identicalElementShapes: boolean,\n      readonly dynamicSize: boolean, readonly clearAfterRead: boolean) {\n    this.idTensor = scalar(0);\n    keep(this.idTensor);\n  }\n\n  get id() {\n    return this.idTensor.id;\n  }\n\n  get closed() {\n    return this.closed_;\n  }\n\n  /**\n   * Dispose the tensors and idTensor and mark the TensoryArray as closed.\n   */\n  clearAndClose(keepIds?: Set<number>) {\n    this.tensors.forEach(tensor => {\n      if (keepIds == null || !keepIds.has(tensor.tensor.id)) {\n        tensor.tensor.dispose();\n      }\n    });\n    this.tensors = [];\n    this.closed_ = true;\n    this.idTensor.dispose();\n  }\n\n  size(): number {\n    return this.tensors.length;\n  }\n\n  /**\n   * Read the value at location index in the TensorArray.\n   * @param index Number the index to read from.\n   */\n  read(index: number): Tensor {\n    if (this.closed_) {\n      throw new Error(`TensorArray ${this.name} has already been closed.`);\n    }\n\n    if (index < 0 || index >= this.size()) {\n      throw new Error(`Tried to read from index ${index}, but array size is: ${\n          this.size()}`);\n    }\n\n    const tensorWithState = this.tensors[index];\n    if (tensorWithState.cleared) {\n      throw new Error(\n          `TensorArray ${this.name}: Could not read index ${\n              index} twice because it was cleared after a previous read ` +\n          `(perhaps try setting clear_after_read = false?).`);\n    }\n\n    if (this.clearAfterRead) {\n      tensorWithState.cleared = true;\n    }\n\n    tensorWithState.read = true;\n    return tensorWithState.tensor;\n  }\n\n  /**\n   * Helper method to read multiple tensors from the specified indices.\n   */\n  readMany(indices: number[]): Tensor[] {\n    return indices.map(index => this.read(index));\n  }\n\n  /**\n   * Write value into the index of the TensorArray.\n   * @param index number the index to write to.\n   * @param tensor\n   */\n  write(index: number, tensor: Tensor) {\n    if (this.closed_) {\n      throw new Error(`TensorArray ${this.name} has already been closed.`);\n    }\n\n    if (index < 0 || !this.dynamicSize && index >= this.maxSize) {\n      throw new Error(`Tried to write to index ${\n          index}, but array is not resizeable and size is: ${this.maxSize}`);\n    }\n\n    const t = this.tensors[index] || {};\n\n    if (tensor.dtype !== this.dtype) {\n      throw new Error(`TensorArray ${\n          this.name}: Could not write to TensorArray index ${index},\n          because the value dtype is ${\n          tensor.dtype}, but TensorArray dtype is ${this.dtype}.`);\n    }\n\n    // Set the shape for the first time write to unknow shape tensor array\n    if (this.size() === 0 &&\n        (this.elementShape == null || this.elementShape.length === 0)) {\n      this.elementShape = tensor.shape;\n    }\n\n    assertShapesMatchAllowUndefinedSize(\n        this.elementShape, tensor.shape,\n        `TensorArray ${this.name}: Could not write to TensorArray index ${\n            index}.`);\n\n    if (t.read) {\n      throw new Error(\n          `TensorArray ${this.name}: Could not write to TensorArray index ${\n              index}, because it has already been read.`);\n    }\n\n    if (t.written) {\n      throw new Error(\n          `TensorArray ${this.name}: Could not write to TensorArray index ${\n              index}, because it has already been written.`);\n    }\n\n    t.tensor = tensor;\n    keep(tensor);\n    t.written = true;\n\n    this.tensors[index] = t;\n  }\n\n  /**\n   * Helper method to write multiple tensors to the specified indices.\n   */\n  writeMany(indices: number[], tensors: Tensor[]) {\n    if (indices.length !== tensors.length) {\n      throw new Error(\n          `TensorArray ${this.name}: could not write multiple tensors,` +\n          `because the index size: ${\n              indices.length} is not the same as tensors size: ${\n              tensors.length}.`);\n    }\n\n    indices.forEach((i, index) => this.write(i, tensors[index]));\n  }\n\n  /**\n   * Return selected values in the TensorArray as a packed Tensor. All of\n   * selected values must have been written and their shapes must all match.\n   * @param [indices] number[] Optional. Taking values in [0, max_value). If the\n   *    TensorArray is not dynamic, max_value=size(). If not specified returns\n   *    all tensors in the original order.\n   * @param [dtype]\n   */\n  gather(indices?: number[], dtype?: DataType): Tensor {\n    if (!!dtype && dtype !== this.dtype) {\n      throw new Error(`TensorArray dtype is ${\n          this.dtype} but gather requested dtype ${dtype}`);\n    }\n\n    if (!indices) {\n      indices = [];\n      for (let i = 0; i < this.size(); i++) {\n        indices.push(i);\n      }\n    } else {\n      indices = indices.slice(0, this.size());\n    }\n\n    if (indices.length === 0) {\n      return tensor([], [0].concat(this.elementShape));\n    }\n\n    // Read all the PersistentTensors into a vector to keep track of\n    // their memory.\n    const tensors = this.readMany(indices);\n\n    assertShapesMatchAllowUndefinedSize(\n        this.elementShape, tensors[0].shape, 'TensorArray shape mismatch: ');\n\n    return stack(tensors, 0);\n  }\n\n  /**\n   * Return the values in the TensorArray as a concatenated Tensor.\n   */\n  concat(dtype?: DataType): Tensor {\n    if (!!dtype && dtype !== this.dtype) {\n      throw new Error(`TensorArray dtype is ${\n          this.dtype} but concat requested dtype ${dtype}`);\n    }\n\n    if (this.size() === 0) {\n      return tensor([], [0].concat(this.elementShape));\n    }\n\n    const indices = [];\n    for (let i = 0; i < this.size(); i++) {\n      indices.push(i);\n    }\n    // Collect all the tensors from the tensors array.\n    const tensors = this.readMany(indices);\n\n    assertShapesMatchAllowUndefinedSize(\n        this.elementShape, tensors[0].shape,\n        `TensorArray shape mismatch: tensor array shape (${\n            this.elementShape}) vs first tensor shape (${tensors[0].shape})`);\n\n    return concat(tensors, 0);\n  }\n\n  /**\n   * Scatter the values of a Tensor in specific indices of a TensorArray.\n   * @param indices nummber[] values in [0, max_value). If the\n   *    TensorArray is not dynamic, max_value=size().\n   * @param tensor Tensor input tensor.\n   */\n  scatter(indices: number[], tensor: Tensor) {\n    if (tensor.dtype !== this.dtype) {\n      throw new Error(`TensorArray dtype is ${\n          this.dtype} but tensor has dtype ${tensor.dtype}`);\n    }\n\n    if (indices.length !== tensor.shape[0]) {\n      throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${\n          indices.length} vs. ${tensor.shape[0]}`);\n    }\n\n    const maxIndex = Math.max(...indices);\n\n    if (!this.dynamicSize && maxIndex >= this.maxSize) {\n      throw new Error(\n          `Max index must be < array size (${maxIndex}  vs. ${this.maxSize})`);\n    }\n\n    this.writeMany(indices, unstack(tensor, 0));\n  }\n\n  /**\n   * Split the values of a Tensor into the TensorArray.\n   * @param length number[] with the lengths to use when splitting value along\n   *    its first dimension.\n   * @param tensor Tensor, the tensor to split.\n   */\n  split(length: number[], tensor: Tensor) {\n    if (tensor.dtype !== this.dtype) {\n      throw new Error(`TensorArray dtype is ${\n          this.dtype} but tensor has dtype ${tensor.dtype}`);\n    }\n    let totalLength = 0;\n    const cumulativeLengths = length.map(len => {\n      totalLength += len;\n      return totalLength;\n    });\n\n    if (totalLength !== tensor.shape[0]) {\n      throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${totalLength}, and tensor's shape is: ${tensor.shape}`);\n    }\n\n    if (!this.dynamicSize && length.length !== this.maxSize) {\n      throw new Error(\n          `TensorArray's size is not equal to the size of lengths (${\n              this.maxSize} vs. ${length.length}), ` +\n          'and the TensorArray is not marked as dynamically resizeable');\n    }\n\n    const elementPerRow = totalLength === 0 ? 0 : tensor.size / totalLength;\n    const tensors: Tensor[] = [];\n    tidy(() => {\n      tensor = reshape(tensor, [1, totalLength, elementPerRow]);\n      for (let i = 0; i < length.length; ++i) {\n        const previousLength = (i === 0) ? 0 : cumulativeLengths[i - 1];\n        const indices = [0, previousLength, 0];\n        const sizes = [1, length[i], elementPerRow];\n        tensors[i] = reshape(slice(tensor, indices, sizes), this.elementShape);\n      }\n      return tensors;\n    });\n    const indices = [];\n    for (let i = 0; i < length.length; i++) {\n      indices[i] = i;\n    }\n    this.writeMany(indices, tensors);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {concat, DataType, keep, reshape, scalar, slice, stack, Tensor, tensor, tidy, unstack} from '@tensorflow/tfjs-core';\n\nimport {assertShapesMatchAllowUndefinedSize, inferElementShape, mergeElementShape} from './tensor_utils';\n\n/**\n * TensorList stores a container of `tf.Tensor` objects, which are accessible\n * via tensors field.\n *\n * In order to get a copy of the underlying list, use the copy method:\n * ```\n *    TensorList b = a.copy();\n *    b.tensors().pushBack(t);  // This does not modify a.tensors().\n * ```\n *\n * Note that this is not a deep copy: the memory locations of the underlying\n * tensors will still point to the same locations of the corresponding tensors\n * in the original.\n */\n\nexport class TensorList {\n  readonly idTensor: Tensor;\n  maxNumElements: number;\n\n  get id() {\n    return this.idTensor.id;\n  }\n  /**\n   *\n   * @param tensors list of tensors\n   * @param elementShape shape of each tensor, this can be a single number (any\n   * shape is allowed) or partial shape (dim = -1).\n   * @param elementDtype data type of each tensor\n   * @param maxNumElements The maximum allowed size of `tensors`. Defaults to -1\n   *   meaning that the size of `tensors` is unbounded.\n   */\n  constructor(\n      readonly tensors: Tensor[], readonly elementShape: number|number[],\n      readonly elementDtype: DataType, maxNumElements = -1) {\n    if (tensors != null) {\n      tensors.forEach(tensor => {\n        if (elementDtype !== tensor.dtype) {\n          throw new Error(`Invalid data types; op elements ${\n              elementDtype}, but list elements ${tensor.dtype}`);\n        }\n        assertShapesMatchAllowUndefinedSize(\n            elementShape, tensor.shape, 'TensorList shape mismatch: ');\n\n        keep(tensor);\n      });\n    }\n    this.idTensor = scalar(0);\n    this.maxNumElements = maxNumElements;\n    keep(this.idTensor);\n  }\n\n  /**\n   * Get a new TensorList containing a copy of the underlying tensor container.\n   */\n  copy(): TensorList {\n    return new TensorList(\n        [...this.tensors], this.elementShape, this.elementDtype);\n  }\n\n  /**\n   * Dispose the tensors and idTensor and clear the tensor list.\n   */\n  clearAndClose(keepIds?: Set<number>) {\n    this.tensors.forEach(tensor => {\n      if (keepIds == null || !keepIds.has(tensor.id)) {\n        tensor.dispose();\n      }\n    });\n    this.tensors.length = 0;\n    this.idTensor.dispose();\n  }\n  /**\n   * The size of the tensors in the tensor list.\n   */\n  size() {\n    return this.tensors.length;\n  }\n\n  /**\n   * Return a tensor that stacks a list of rank-R tf.Tensors into one rank-(R+1)\n   * tf.Tensor.\n   * @param elementShape shape of each tensor\n   * @param elementDtype data type of each tensor\n   * @param numElements the number of elements to stack\n   */\n  stack(elementShape: number[], elementDtype: DataType, numElements = -1):\n      Tensor {\n    if (elementDtype !== this.elementDtype) {\n      throw new Error(`Invalid data types; op elements ${\n          elementDtype}, but list elements ${this.elementDtype}`);\n    }\n    if (numElements !== -1 && this.tensors.length !== numElements) {\n      throw new Error(`Operation expected a list with ${\n          numElements} elements but got a list with ${\n          this.tensors.length} elements.`);\n    }\n    assertShapesMatchAllowUndefinedSize(\n        elementShape, this.elementShape, 'TensorList shape mismatch: ');\n    const outputElementShape =\n        inferElementShape(this.elementShape, this.tensors, elementShape);\n    return tidy(() => {\n      const reshapedTensors =\n          this.tensors.map(tensor => reshape(tensor, outputElementShape));\n      return stack(reshapedTensors, 0);\n    });\n  }\n\n  /**\n   * Pop a tensor from the end of the list.\n   * @param elementShape shape of the tensor\n   * @param elementDtype data type of the tensor\n   */\n  popBack(elementShape: number[], elementDtype: DataType): Tensor {\n    if (elementDtype !== this.elementDtype) {\n      throw new Error(`Invalid data types; op elements ${\n          elementDtype}, but list elements ${this.elementDtype}`);\n    }\n\n    if (this.size() === 0) {\n      throw new Error('Trying to pop from an empty list.');\n    }\n    const outputElementShape =\n        inferElementShape(this.elementShape, this.tensors, elementShape);\n    const tensor = this.tensors.pop();\n\n    assertShapesMatchAllowUndefinedSize(\n        tensor.shape, elementShape, 'TensorList shape mismatch: ');\n\n    return reshape(tensor, outputElementShape);\n  }\n\n  /**\n   * Push a tensor to the end of the list.\n   * @param tensor Tensor to be pushed.\n   */\n  pushBack(tensor: Tensor) {\n    if (tensor.dtype !== this.elementDtype) {\n      throw new Error(`Invalid data types; op elements ${\n          tensor.dtype}, but list elements ${this.elementDtype}`);\n    }\n\n    assertShapesMatchAllowUndefinedSize(\n        tensor.shape, this.elementShape, 'TensorList shape mismatch: ');\n\n    if (this.maxNumElements === this.size()) {\n      throw new Error(`Trying to push element into a full list.`);\n    }\n    keep(tensor);\n    this.tensors.push(tensor);\n  }\n\n  /**\n   * Update the size of the list.\n   * @param size the new size of the list.\n   */\n  resize(size: number) {\n    if (size < 0) {\n      throw new Error(\n          `TensorListResize expects size to be non-negative. Got: ${size}`);\n    }\n\n    if (this.maxNumElements !== -1 && size > this.maxNumElements) {\n      throw new Error(`TensorListResize input size ${\n          size} is greater maxNumElement ${this.maxNumElements}.`);\n    }\n    this.tensors.length = size;\n  }\n\n  /**\n   * Retrieve the element at the provided index\n   * @param elementShape shape of the tensor\n   * @param elementDtype dtype of the tensor\n   * @param elementIndex index of the tensor\n   */\n  getItem(elementIndex: number, elementShape: number[], elementDtype: DataType):\n      Tensor {\n    if (elementDtype !== this.elementDtype) {\n      throw new Error(`Invalid data types; op elements ${\n          elementDtype}, but list elements ${this.elementDtype}`);\n    }\n    if (elementIndex < 0 || elementIndex > this.tensors.length) {\n      throw new Error(`Trying to access element ${\n          elementIndex} in a list with ${this.tensors.length} elements.`);\n    }\n\n    if (this.tensors[elementIndex] == null) {\n      throw new Error(`element at index ${elementIndex} is null.`);\n    }\n\n    assertShapesMatchAllowUndefinedSize(\n        this.tensors[elementIndex].shape, elementShape,\n        'TensorList shape mismatch: ');\n    const outputElementShape =\n        inferElementShape(this.elementShape, this.tensors, elementShape);\n    return reshape(this.tensors[elementIndex], outputElementShape);\n  }\n\n  /**\n   * Set the tensor at the index\n   * @param elementIndex index of the tensor\n   * @param tensor the tensor to be inserted into the list\n   */\n  setItem(elementIndex: number, tensor: Tensor) {\n    if (tensor.dtype !== this.elementDtype) {\n      throw new Error(`Invalid data types; op elements ${\n          tensor.dtype}, but list elements ${this.elementDtype}`);\n    }\n\n    if (elementIndex < 0 ||\n        this.maxNumElements !== -1 && elementIndex >= this.maxNumElements) {\n      throw new Error(`Trying to set element ${\n          elementIndex} in a list with max ${this.maxNumElements} elements.`);\n    }\n\n    assertShapesMatchAllowUndefinedSize(\n        this.elementShape, tensor.shape, 'TensorList shape mismatch: ');\n    keep(tensor);\n    this.tensors[elementIndex] = tensor;\n  }\n\n  /**\n   * Return selected values in the TensorList as a stacked Tensor. All of\n   * selected values must have been written and their shapes must all match.\n   * @param indices indices of tensors to gather\n   * @param elementDtype output tensor dtype\n   * @param elementShape output tensor element shape\n   */\n  gather(indices: number[], elementDtype: DataType, elementShape: number[]):\n      Tensor {\n    if (elementDtype !== this.elementDtype) {\n      throw new Error(`Invalid data types; op elements ${\n          elementDtype}, but list elements ${this.elementDtype}`);\n    }\n\n    assertShapesMatchAllowUndefinedSize(\n        this.elementShape, elementShape, 'TensorList shape mismatch: ');\n\n    // When indices is greater than the size of the list, indices beyond the\n    // size of the list are ignored.\n    indices = indices.slice(0, this.size());\n    const outputElementShape =\n        inferElementShape(this.elementShape, this.tensors, elementShape);\n    if (indices.length === 0) {\n      return tensor([], [0].concat(outputElementShape));\n    }\n\n    return tidy(() => {\n      const tensors =\n          indices.map(i => reshape(this.tensors[i], outputElementShape));\n      return stack(tensors, 0);\n    });\n  }\n\n  /**\n   * Return the values in the TensorList as a concatenated Tensor.\n   * @param elementDtype output tensor dtype\n   * @param elementShape output tensor element shape\n   */\n  concat(elementDtype: DataType, elementShape: number[]): Tensor {\n    if (!!elementDtype && elementDtype !== this.elementDtype) {\n      throw new Error(`TensorList dtype is ${\n          this.elementDtype} but concat requested dtype ${elementDtype}`);\n    }\n\n    assertShapesMatchAllowUndefinedSize(\n        this.elementShape, elementShape, 'TensorList shape mismatch: ');\n    const outputElementShape =\n        inferElementShape(this.elementShape, this.tensors, elementShape);\n\n    if (this.size() === 0) {\n      return tensor([], [0].concat(outputElementShape));\n    }\n    return tidy(() => {\n      const tensors = this.tensors.map(t => reshape(t, outputElementShape));\n      return concat(tensors, 0);\n    });\n  }\n}\n\n/**\n * Creates a TensorList which, when stacked, has the value of tensor.\n * @param tensor from tensor\n * @param elementShape output tensor element shape\n */\nexport function fromTensor(\n    tensor: Tensor, elementShape: number[], elementDtype: DataType) {\n  const dtype = tensor.dtype;\n  if (tensor.shape.length < 1) {\n    throw new Error(\n        `Tensor must be at least a vector, but saw shape: ${tensor.shape}`);\n  }\n  if (tensor.dtype !== elementDtype) {\n    throw new Error(`Invalid data types; op elements ${\n        tensor.dtype}, but list elements ${elementDtype}`);\n  }\n  const tensorElementShape = tensor.shape.slice(1);\n  assertShapesMatchAllowUndefinedSize(\n      tensorElementShape, elementShape, 'TensorList shape mismatch: ');\n  const tensorList: Tensor[] = unstack(tensor);\n  return new TensorList(tensorList, elementShape, dtype);\n}\n\n/**\n * Return a TensorList of the given size with empty elements.\n * @param elementShape the shape of the future elements of the list\n * @param elementDtype the desired type of elements in the list\n * @param numElements the number of elements to reserve\n */\nexport function reserve(\n    elementShape: number[], elementDtype: DataType, numElements: number) {\n  return new TensorList([], elementShape, elementDtype, numElements);\n}\n\n/**\n * Put tensors at specific indices of a stacked tensor into a TensorList.\n * @param indices list of indices on how to scatter the tensor.\n * @param tensor input tensor.\n * @param elementShape the shape of the future elements of the list\n * @param numElements the number of elements to scatter\n */\nexport function scatter(\n    tensor: Tensor, indices: number[], elementShape: number[],\n    numElements?: number): TensorList {\n  if (indices.length !== tensor.shape[0]) {\n    throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${\n        indices.length} vs. ${tensor.shape[0]}`);\n  }\n\n  const maxIndex = Math.max(...indices);\n\n  if (numElements != null && numElements !== -1 && maxIndex >= numElements) {\n    throw new Error(\n        `Max index must be < array size (${maxIndex}  vs. ${numElements})`);\n  }\n\n  const list = new TensorList([], elementShape, tensor.dtype, numElements);\n  const tensors = unstack(tensor, 0);\n  indices.forEach((value, index) => {\n    list.setItem(value, tensors[index]);\n  });\n  return list;\n}\n\n/**\n * Split the values of a Tensor into a TensorList.\n * @param length the lengths to use when splitting value along\n *    its first dimension.\n * @param tensor the tensor to split.\n * @param elementShape the shape of the future elements of the list\n */\nexport function split(\n    tensor: Tensor, length: number[], elementShape: number[]) {\n  let totalLength = 0;\n  const cumulativeLengths = length.map(len => {\n    totalLength += len;\n    return totalLength;\n  });\n\n  if (totalLength !== tensor.shape[0]) {\n    throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${totalLength}, and tensor's shape is: ${tensor.shape}`);\n  }\n\n  const shapeWithoutFirstDim = tensor.shape.slice(1);\n  const outputElementShape =\n      mergeElementShape(shapeWithoutFirstDim, elementShape);\n  const elementPerRow = totalLength === 0 ? 0 : tensor.size / totalLength;\n  const tensors: Tensor[] = tidy(() => {\n    const tensors = [];\n    tensor = reshape(tensor, [1, totalLength, elementPerRow]);\n    for (let i = 0; i < length.length; ++i) {\n      const previousLength = (i === 0) ? 0 : cumulativeLengths[i - 1];\n      const indices = [0, previousLength, 0];\n      const sizes = [1, length[i], elementPerRow];\n      tensors[i] = reshape(\n          slice(tensor, indices, sizes), outputElementShape as number[]);\n    }\n    tensor.dispose();\n    return tensors;\n  });\n\n  const list = new TensorList([], elementShape, tensor.dtype, length.length);\n\n  for (let i = 0; i < tensors.length; i++) {\n    list.setItem(i, tensors[i]);\n  }\n  return list;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, scalar, Tensor} from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {TensorArray} from '../../executor/tensor_array';\nimport {fromTensor, reserve, scatter, split} from '../../executor/tensor_list';\nimport {InternalOpAsyncExecutor, Node} from '../types';\n\nimport {cloneTensor, getParamValue, getTensor} from './utils';\n\nexport const executeOp: InternalOpAsyncExecutor = async(\n    node: Node, tensorMap: NamedTensorsMap,\n    context: ExecutionContext): Promise<Tensor[]> => {\n  switch (node.op) {\n    case 'If':\n    case 'StatelessIf': {\n      const thenFunc =\n          getParamValue('thenBranch', node, tensorMap, context) as string;\n      const elseFunc =\n          getParamValue('elseBranch', node, tensorMap, context) as string;\n      const cond = getParamValue('cond', node, tensorMap, context) as Tensor;\n      const args = getParamValue('args', node, tensorMap, context) as Tensor[];\n      const condValue = await cond.data();\n      if (condValue[0]) {\n        return context.functionMap[thenFunc].executeFunctionAsync(\n            args, context.tensorArrayMap, context.tensorListMap);\n      } else {\n        return context.functionMap[elseFunc].executeFunctionAsync(\n            args, context.tensorArrayMap, context.tensorListMap);\n      }\n    }\n    case 'While':\n    case 'StatelessWhile': {\n      const bodyFunc =\n          getParamValue('body', node, tensorMap, context) as string;\n      const condFunc =\n          getParamValue('cond', node, tensorMap, context) as string;\n      const args = getParamValue('args', node, tensorMap, context) as Tensor[];\n\n      // Calculate the condition of the loop\n      const condResult =\n          (await context.functionMap[condFunc].executeFunctionAsync(\n              args, context.tensorArrayMap, context.tensorListMap));\n      const argIds = args.map(tensor => tensor.id);\n      let condValue = await condResult[0].data();\n      // Dispose the intermediate tensors for condition function\n      condResult.forEach(tensor => {\n        if (!tensor.kept && argIds.indexOf(tensor.id) === -1) {\n          tensor.dispose();\n        }\n      });\n\n      let result: Tensor[] = args;\n\n      while (condValue[0]) {\n        // Record the previous result for intermediate tensor tracking\n        const origResult = result;\n        // Execution the body of the loop\n        result = await context.functionMap[bodyFunc].executeFunctionAsync(\n            result, context.tensorArrayMap, context.tensorListMap);\n        const resultIds = result.map(tensor => tensor.id);\n\n        // Dispose the intermediate tensor for body function that is not global\n        // kept, not input/output of the body function\n        origResult.forEach(tensor => {\n          if (!tensor.kept && argIds.indexOf(tensor.id) === -1 &&\n              resultIds.indexOf(tensor.id) === -1) {\n            tensor.dispose();\n          }\n        });\n\n        // Recalcuate the condition of the loop using the latest results.\n        const condResult =\n            (await context.functionMap[condFunc].executeFunctionAsync(\n                result, context.tensorArrayMap, context.tensorListMap));\n        condValue = await condResult[0].data();\n        // Dispose the intermediate tensors for condition function\n        condResult.forEach(tensor => {\n          if (!tensor.kept && argIds.indexOf(tensor.id) === -1 &&\n              resultIds.indexOf(tensor.id) === -1) {\n            tensor.dispose();\n          }\n        });\n      }\n      return result;\n    }\n    case 'LoopCond': {\n      const pred = getParamValue('pred', node, tensorMap, context) as Tensor;\n      return [cloneTensor(pred)];\n    }\n    case 'Switch': {\n      const pred = getParamValue('pred', node, tensorMap, context) as Tensor;\n      let data = getParamValue('data', node, tensorMap, context) as Tensor;\n      if (!data.kept) {\n        data = cloneTensor(data);\n      }\n      // Outputs nodes :0 => false, :1 => true\n      return (await pred.data())[0] ? [undefined, data] : [data, undefined];\n    }\n    case 'Merge': {\n      const inputName = node.inputNames.find(\n          name => getTensor(name, tensorMap, context) !== undefined);\n      if (inputName) {\n        const data = getTensor(inputName, tensorMap, context);\n        return [cloneTensor(data)];\n      }\n      return undefined;\n    }\n    case 'Enter': {\n      const frameId =\n          getParamValue('frameName', node, tensorMap, context) as string;\n      const data = getParamValue('tensor', node, tensorMap, context) as Tensor;\n      context.enterFrame(frameId);\n      return [cloneTensor(data)];\n    }\n    case 'Exit': {\n      const data = getParamValue('tensor', node, tensorMap, context) as Tensor;\n      context.exitFrame();\n      return [cloneTensor(data)];\n    }\n    case 'NextIteration': {\n      const data = getParamValue('tensor', node, tensorMap, context) as Tensor;\n      context.nextIteration();\n      return [cloneTensor(data)];\n    }\n    case 'TensorArrayV3': {\n      const size = getParamValue('size', node, tensorMap, context) as number;\n      const dtype =\n          getParamValue('dtype', node, tensorMap, context) as DataType;\n      const elementShape =\n          getParamValue('elementShape', node, tensorMap, context) as number[];\n      const dynamicSize =\n          getParamValue('dynamicSize', node, tensorMap, context) as boolean;\n      const clearAfterRead =\n          getParamValue('clearAfterRead', node, tensorMap, context) as boolean;\n      const identicalElementShapes =\n          getParamValue('identicalElementShapes', node, tensorMap, context) as\n          boolean;\n      const name = getParamValue('name', node, tensorMap, context) as string;\n      const tensorArray = new TensorArray(\n          name, dtype, size, elementShape, identicalElementShapes, dynamicSize,\n          clearAfterRead);\n      context.addTensorArray(tensorArray);\n      return [tensorArray.idTensor, scalar(1.0)];\n    }\n    case 'TensorArrayWriteV3': {\n      const id =\n          getParamValue('tensorArrayId', node, tensorMap, context) as Tensor;\n      const index = getParamValue('index', node, tensorMap, context) as number;\n      const writeTensor =\n          getParamValue('tensor', node, tensorMap, context) as Tensor;\n      const writeTensorArray = context.getTensorArray(id.id);\n      writeTensorArray.write(index, writeTensor);\n      return [writeTensorArray.idTensor];\n    }\n    case 'TensorArrayReadV3': {\n      const readId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as Tensor;\n      const readIndex =\n          getParamValue('index', node, tensorMap, context) as number;\n      const readTensorArray = context.getTensorArray(readId.id);\n      return [readTensorArray.read(readIndex)];\n    }\n    case 'TensorArrayGatherV3': {\n      const gatherId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as Tensor;\n      const gatherIndices =\n          getParamValue('indices', node, tensorMap, context) as number[];\n      const gatherDtype =\n          getParamValue('dtype', node, tensorMap, context) as DataType;\n      const gatherTensorArray = context.getTensorArray(gatherId.id);\n      return [gatherTensorArray.gather(gatherIndices, gatherDtype)];\n    }\n    case 'TensorArrayScatterV3': {\n      const scatterId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as Tensor;\n      const scatterIndices =\n          getParamValue('indices', node, tensorMap, context) as number[];\n      const scatterTensor =\n          getParamValue('tensor', node, tensorMap, context) as Tensor;\n      const scatterTensorArray = context.getTensorArray(scatterId.id);\n      scatterTensorArray.scatter(scatterIndices, scatterTensor);\n      return [scatterTensorArray.idTensor];\n    }\n    case 'TensorArrayConcatV3': {\n      const concatId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as Tensor;\n      const concatTensorArray = context.getTensorArray(concatId.id);\n      const concatDtype =\n          getParamValue('dtype', node, tensorMap, context) as DataType;\n      return [concatTensorArray.concat(concatDtype)];\n    }\n    case 'TensorArraySplitV3': {\n      const splitId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as Tensor;\n      const splitTensor =\n          getParamValue('tensor', node, tensorMap, context) as Tensor;\n      const lengths =\n          getParamValue('lengths', node, tensorMap, context) as number[];\n      const splitTensorArray = context.getTensorArray(splitId.id);\n      splitTensorArray.split(lengths, splitTensor);\n      return [splitTensorArray.idTensor];\n    }\n    case 'TensorArraySizeV3': {\n      const sizeId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as Tensor;\n      const sizeTensorArray = context.getTensorArray(sizeId.id);\n      return [scalar(sizeTensorArray.size(), 'int32')];\n    }\n    case 'TensorArrayCloseV3': {\n      const closeId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as Tensor;\n      const closeTensorArray = context.getTensorArray(closeId.id);\n      closeTensorArray.clearAndClose();\n      return [closeTensorArray.idTensor];\n    }\n    case 'TensorListSetItem': {\n      const idTensor =\n          getParamValue('tensorListId', node, tensorMap, context) as Tensor;\n      const index = getParamValue('index', node, tensorMap, context) as number;\n      const writeTensor =\n          getParamValue('tensor', node, tensorMap, context) as Tensor;\n      const tensorList = context.getTensorList(idTensor.id);\n      tensorList.setItem(index, writeTensor);\n      return [tensorList.idTensor];\n    }\n    case 'TensorListGetItem': {\n      const idTensor =\n          getParamValue('tensorListId', node, tensorMap, context) as Tensor;\n      const readIndex =\n          getParamValue('index', node, tensorMap, context) as number;\n      const elementShape =\n          getParamValue('elementShape', node, tensorMap, context) as number[];\n\n      const elementDType =\n          getParamValue('elementDType', node, tensorMap, context) as DataType;\n      const tensorList = context.getTensorList(idTensor.id);\n      return [tensorList.getItem(readIndex, elementShape, elementDType)];\n    }\n    case 'TensorListScatterV2':\n    case 'TensorListScatter': {\n      const scatterIndices =\n          getParamValue('indices', node, tensorMap, context) as number[];\n      const scatterTensor =\n          getParamValue('tensor', node, tensorMap, context) as Tensor;\n      const elementShape =\n          getParamValue('elementShape', node, tensorMap, context) as number[];\n      const numElements =\n          getParamValue('numElements', node, tensorMap, context) as number;\n      const tensorList =\n          scatter(scatterTensor, scatterIndices, elementShape, numElements);\n      context.addTensorList(tensorList);\n      return [tensorList.idTensor];\n    }\n    case 'TensorListReserve':\n    case 'EmptyTensorList': {\n      const elementShape =\n          getParamValue('elementShape', node, tensorMap, context) as number[];\n      const elementDtype =\n          getParamValue('elementDType', node, tensorMap, context) as DataType;\n      let numElementsParam;\n\n      if (node.op === 'TensorListReserve') {\n        numElementsParam = 'numElements';\n      } else {\n        numElementsParam = 'maxNumElements';\n      }\n\n      const numElements =\n          getParamValue(numElementsParam, node, tensorMap, context) as number;\n\n      const tensorList = reserve(elementShape, elementDtype, numElements);\n      context.addTensorList(tensorList);\n      return [tensorList.idTensor];\n    }\n    case 'TensorListGather': {\n      const gatherId =\n          getParamValue('tensorListId', node, tensorMap, context) as Tensor;\n      const gatherIndices =\n          getParamValue('indices', node, tensorMap, context) as number[];\n      const elementShape =\n          getParamValue('elementShape', node, tensorMap, context) as number[];\n      const elementDtype =\n          getParamValue('elementDType', node, tensorMap, context) as DataType;\n      const tensorList = context.getTensorList(gatherId.id);\n      return [tensorList.gather(gatherIndices, elementDtype, elementShape)];\n    }\n    case 'TensorListStack': {\n      const idTensor =\n          getParamValue('tensorListId', node, tensorMap, context) as Tensor;\n      const elementShape =\n          getParamValue('elementShape', node, tensorMap, context) as number[];\n      const elementDtype =\n          getParamValue('elementDType', node, tensorMap, context) as DataType;\n      const numElements =\n          getParamValue('numElements', node, tensorMap, context) as number;\n      const tensorList = context.getTensorList(idTensor.id);\n      return [tensorList.stack(elementShape, elementDtype, numElements)];\n    }\n    case 'TensorListFromTensor': {\n      const tensor =\n          getParamValue('tensor', node, tensorMap, context) as Tensor;\n      const elementShape =\n          getParamValue('elementShape', node, tensorMap, context) as number[];\n      const elementDtype =\n          getParamValue('elementDType', node, tensorMap, context) as DataType;\n      const tensorList = fromTensor(tensor, elementShape, elementDtype);\n      context.addTensorList(tensorList);\n      return [tensorList.idTensor];\n    }\n    case 'TensorListConcat': {\n      const concatId =\n          getParamValue('tensorListId', node, tensorMap, context) as Tensor;\n      const tensorList = context.getTensorList(concatId.id);\n      const concatDtype =\n          getParamValue('dtype', node, tensorMap, context) as DataType;\n      const elementShape =\n          getParamValue('elementShape', node, tensorMap, context) as number[];\n      return [tensorList.concat(concatDtype, elementShape)];\n    }\n    case 'TensorListPushBack': {\n      const idTensor =\n          getParamValue('tensorListId', node, tensorMap, context) as Tensor;\n      const writeTensor =\n          getParamValue('tensor', node, tensorMap, context) as Tensor;\n      const tensorList = context.getTensorList(idTensor.id);\n      tensorList.pushBack(writeTensor);\n      return [tensorList.idTensor];\n    }\n    case 'TensorListPopBack': {\n      const idTensor =\n          getParamValue('tensorListId', node, tensorMap, context) as Tensor;\n      const elementShape =\n          getParamValue('elementShape', node, tensorMap, context) as number[];\n      const elementDType =\n          getParamValue('elementDType', node, tensorMap, context) as DataType;\n      const tensorList = context.getTensorList(idTensor.id);\n      return [tensorList.popBack(elementShape, elementDType)];\n    }\n    case 'TensorListSplit': {\n      const splitTensor =\n          getParamValue('tensor', node, tensorMap, context) as Tensor;\n      const elementShape =\n          getParamValue('elementShape', node, tensorMap, context) as number[];\n      const lengths =\n          getParamValue('lengths', node, tensorMap, context) as number[];\n\n      const tensorList = split(splitTensor, lengths, elementShape);\n      context.addTensorList(tensorList);\n      return [tensorList.idTensor];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'control';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Rank, Tensor, Tensor3D, Tensor4D, Tensor5D} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getPadding, getParamValue} from './utils';\n\nfunction fusedConvAndDepthWiseParams(\n    node: Node, tensorMap: NamedTensorsMap, context: ExecutionContext) {\n  const [extraOp, activationFunc] =\n      (getParamValue('fusedOps', node, tensorMap, context) as string[]);\n\n  const isBiasAdd = extraOp === 'biasadd';\n  const noBiasAdd = !isBiasAdd;\n  const isPrelu = activationFunc === 'prelu';\n  const isBatchNorm = extraOp === 'fusedbatchnorm';\n\n  const numArgs =\n      (getParamValue('numArgs', node, tensorMap, context) as number);\n  if (isBiasAdd) {\n    if (isPrelu && numArgs !== 2) {\n      throw new Error(\n          'FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu ' +\n          'must have two extra arguments: bias and alpha.');\n    }\n    if (!isPrelu && isBiasAdd && numArgs !== 1) {\n      throw new Error(\n          'FusedConv2d and DepthwiseConv2d with BiasAdd must have ' +\n          'one extra argument: bias.');\n    }\n  }\n  if (isBatchNorm) {\n    throw new Error(\n        'FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported');\n  }\n  const stride = getParamValue('strides', node, tensorMap, context) as number[];\n  const pad = getPadding(node, tensorMap, context);\n  const dataFormat =\n      (getParamValue('dataFormat', node, tensorMap, context) as string)\n          .toUpperCase();\n  const dilations =\n      getParamValue('dilations', node, tensorMap, context) as number[];\n  let [biasArg, preluArg] =\n      getParamValue('args', node, tensorMap, context) as Tensor[];\n  if (noBiasAdd) {\n    preluArg = biasArg;\n    biasArg = undefined;\n  }\n  const leakyreluAlpha =\n      getParamValue('leakyreluAlpha', node, tensorMap, context) as number;\n\n  return {\n    stride,\n    pad,\n    dataFormat,\n    dilations,\n    biasArg,\n    preluArg,\n    activationFunc,\n    leakyreluAlpha\n  };\n}\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext): Tensor[] => {\n      switch (node.op) {\n        case 'Conv1D': {\n          const stride =\n              getParamValue('stride', node, tensorMap, context) as number;\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const dataFormat =\n              (getParamValue('dataFormat', node, tensorMap, context) as string)\n                  .toUpperCase();\n          const dilation =\n              getParamValue('dilation', node, tensorMap, context) as number;\n          return [tfOps.conv1d(\n              getParamValue('x', node, tensorMap, context) as Tensor3D,\n              getParamValue('filter', node, tensorMap, context) as Tensor3D,\n              stride, pad as 'valid' | 'same', dataFormat as 'NWC' | 'NCW',\n              dilation)];\n        }\n        case 'Conv2D': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getPadding(node, tensorMap, context);\n          const dataFormat =\n              (getParamValue('dataFormat', node, tensorMap, context) as string)\n                  .toUpperCase();\n          const dilations =\n              getParamValue('dilations', node, tensorMap, context) as number[];\n          return [tfOps.conv2d(\n              getParamValue('x', node, tensorMap, context) as Tensor3D |\n                  Tensor4D,\n              getParamValue('filter', node, tensorMap, context) as Tensor4D,\n              [stride[1], stride[2]], pad as 'valid' | 'same',\n              dataFormat as 'NHWC' | 'NCHW', [dilations[1], dilations[2]])];\n        }\n        case '_FusedConv2D': {\n          const {\n            stride,\n            pad,\n            dataFormat,\n            dilations,\n            biasArg,\n            preluArg,\n            activationFunc,\n            leakyreluAlpha\n          } = fusedConvAndDepthWiseParams(node, tensorMap, context);\n\n          return [tfOps.fused.conv2d({\n            x: getParamValue('x', node, tensorMap, context) as Tensor3D |\n                Tensor4D,\n            filter: getParamValue('filter', node, tensorMap, context) as\n                Tensor4D,\n            strides: [stride[1], stride[2]],\n            pad: pad as 'valid' | 'same',\n            dataFormat: dataFormat as 'NHWC' | 'NCHW',\n            dilations: [dilations[1], dilations[2]],\n            bias: biasArg,\n            activation: activationFunc as tfOps.fused.Activation,\n            preluActivationWeights: preluArg,\n            leakyreluAlpha\n          })];\n        }\n\n        case 'FusedDepthwiseConv2dNative': {\n          const {\n            stride,\n            pad,\n            dataFormat,\n            dilations,\n            biasArg,\n            preluArg,\n            activationFunc,\n            leakyreluAlpha,\n          } = fusedConvAndDepthWiseParams(node, tensorMap, context);\n\n          return [tfOps.fused.depthwiseConv2d({\n            x: getParamValue('x', node, tensorMap, context) as Tensor3D |\n                Tensor4D,\n            filter: getParamValue('filter', node, tensorMap, context) as\n                Tensor4D,\n            strides: [stride[1], stride[2]],\n            pad: pad as 'valid' | 'same',\n            dataFormat: dataFormat as 'NHWC' | 'NCHW',\n            dilations: [dilations[1], dilations[2]],\n            bias: biasArg,\n            activation: activationFunc as tfOps.fused.Activation,\n            preluActivationWeights: preluArg,\n            leakyreluAlpha\n          })];\n        }\n        case 'Conv2DBackpropInput':\n        case 'Conv2dTranspose': {\n          const shape = getParamValue(\n                            'outputShape', node, tensorMap,\n                            context) as [number, number, number] |\n              [number, number, number, number];\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getPadding(node, tensorMap, context);\n          return [tfOps.conv2dTranspose(\n              getParamValue('x', node, tensorMap, context) as Tensor3D |\n                  Tensor4D,\n              getParamValue('filter', node, tensorMap, context) as Tensor4D,\n              shape, [stride[1], stride[2]], pad as 'valid' | 'same')];\n        }\n        case 'DepthwiseConv2dNative':\n        case 'DepthwiseConv2d': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getPadding(node, tensorMap, context);\n          const dilations =\n              getParamValue('dilations', node, tensorMap, context) as number[];\n          const dataFormat =\n              (getParamValue('dataFormat', node, tensorMap, context) as string)\n                  .toUpperCase();\n\n          return [tfOps.depthwiseConv2d(\n              getParamValue('input', node, tensorMap, context) as Tensor3D |\n                  Tensor4D,\n              getParamValue('filter', node, tensorMap, context) as Tensor4D,\n              [stride[1], stride[2]], pad as 'valid' | 'same',\n              dataFormat as 'NHWC' | 'NCHW', [dilations[1], dilations[2]])];\n        }\n        case 'Conv3D': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const dataFormat =\n              (getParamValue('dataFormat', node, tensorMap, context) as string)\n                  .toUpperCase();\n          const dilations =\n              getParamValue('dilations', node, tensorMap, context) as number[];\n          return [tfOps.conv3d(\n              getParamValue('x', node, tensorMap, context) as Tensor4D |\n                  Tensor<Rank.R5>,\n              getParamValue('filter', node, tensorMap, context) as\n                  Tensor<Rank.R5>,\n              [stride[1], stride[2], stride[3]], pad as 'valid' | 'same',\n              dataFormat as 'NDHWC' | 'NCDHW',\n              [dilations[1], dilations[2], dilations[3]])];\n        }\n        case 'AvgPool': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const kernelSize =\n              getParamValue('kernelSize', node, tensorMap, context) as number[];\n\n          return [tfOps.avgPool(\n              getParamValue('x', node, tensorMap, context) as Tensor3D |\n                  Tensor4D,\n              [kernelSize[1], kernelSize[2]], [stride[1], stride[2]],\n              pad as 'valid' | 'same')];\n        }\n        case 'MaxPool': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const kernelSize =\n              getParamValue('kernelSize', node, tensorMap, context) as number[];\n\n          return [tfOps.maxPool(\n              getParamValue('x', node, tensorMap, context) as Tensor3D |\n                  Tensor4D,\n              [kernelSize[1], kernelSize[2]], [stride[1], stride[2]],\n              pad as 'valid' | 'same')];\n        }\n        case 'MaxPoolWithArgmax': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const kernelSize =\n              getParamValue('kernelSize', node, tensorMap, context) as number[];\n          const includeBatchInIndex =\n              getParamValue('includeBatchInIndex', node, tensorMap, context) as\n              boolean;\n          const {result, indexes} = tfOps.maxPoolWithArgmax(\n              getParamValue('x', node, tensorMap, context) as Tensor4D,\n              [kernelSize[1], kernelSize[2]], [stride[1], stride[2]],\n              pad as 'valid' | 'same', includeBatchInIndex);\n          return [result, indexes];\n        }\n        case 'AvgPool3D': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const kernelSize =\n              getParamValue('kernelSize', node, tensorMap, context) as number[];\n\n          return [tfOps.avgPool3d(\n              getParamValue('x', node, tensorMap, context) as Tensor5D,\n              [kernelSize[1], kernelSize[2], kernelSize[3]],\n              [stride[1], stride[2], stride[3]], pad as 'valid' | 'same')];\n        }\n\n        case 'MaxPool3D': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const kernelSize =\n              getParamValue('kernelSize', node, tensorMap, context) as number[];\n\n          return [tfOps.maxPool3d(\n              getParamValue('x', node, tensorMap, context) as Tensor5D,\n              [kernelSize[1], kernelSize[2], kernelSize[3]],\n              [stride[1], stride[2], stride[3]], pad as 'valid' | 'same')];\n        }\n\n        case 'Dilation2D': {\n          const strides =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const dilations =\n              getParamValue('dilations', node, tensorMap, context) as number[];\n\n          // strides: [1, stride_height, stride_width, 1].\n          const strideHeight = strides[1];\n          const strideWidth = strides[2];\n\n          // dilations: [1, dilation_height, dilation_width, 1].\n          const dilationHeight = dilations[1];\n          const dilationWidth = dilations[2];\n\n          return [tfOps.dilation2d(\n              getParamValue('x', node, tensorMap, context) as Tensor3D |\n                  Tensor4D,\n              getParamValue('filter', node, tensorMap, context) as Tensor3D,\n              [strideHeight, strideWidth], pad as 'valid' | 'same',\n              [dilationHeight, dilationWidth], 'NHWC' /* dataFormat */)];\n        }\n\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'convolution';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor, Tensor1D, Tensor2D} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpAsyncExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nfunction nmsParams(\n    node: Node, tensorMap: NamedTensorsMap, context: ExecutionContext) {\n  const boxes = getParamValue('boxes', node, tensorMap, context) as Tensor;\n  const scores = getParamValue('scores', node, tensorMap, context) as Tensor;\n  const maxOutputSize =\n      getParamValue('maxOutputSize', node, tensorMap, context) as number;\n  const iouThreshold =\n      getParamValue('iouThreshold', node, tensorMap, context) as number;\n  const scoreThreshold =\n      getParamValue('scoreThreshold', node, tensorMap, context) as number;\n  const softNmsSigma =\n      getParamValue('softNmsSigma', node, tensorMap, context) as number;\n\n  return {\n    boxes,\n    scores,\n    maxOutputSize,\n    iouThreshold,\n    scoreThreshold,\n    softNmsSigma\n  };\n}\n\nexport const executeOp: InternalOpAsyncExecutor = async(\n    node: Node, tensorMap: NamedTensorsMap,\n    context: ExecutionContext): Promise<Tensor[]> => {\n  switch (node.op) {\n    case 'NonMaxSuppressionV5': {\n      const {\n        boxes,\n        scores,\n        maxOutputSize,\n        iouThreshold,\n        scoreThreshold,\n        softNmsSigma\n      } = nmsParams(node, tensorMap, context);\n\n      const result = await tfOps.image.nonMaxSuppressionWithScoreAsync(\n          boxes as Tensor2D, scores as Tensor1D, maxOutputSize, iouThreshold,\n          scoreThreshold, softNmsSigma);\n\n      return [result.selectedIndices, result.selectedScores];\n    }\n    case 'NonMaxSuppressionV4': {\n      const {boxes, scores, maxOutputSize, iouThreshold, scoreThreshold} =\n          nmsParams(node, tensorMap, context);\n\n      const padToMaxOutputSize =\n          getParamValue('padToMaxOutputSize', node, tensorMap, context) as\n          boolean;\n\n      const result = await tfOps.image.nonMaxSuppressionPaddedAsync(\n          boxes as Tensor2D, scores as Tensor1D, maxOutputSize, iouThreshold,\n          scoreThreshold, padToMaxOutputSize);\n\n      return [result.selectedIndices, result.validOutputs];\n    }\n    case 'NonMaxSuppressionV3':\n    case 'NonMaxSuppressionV2': {\n      const {boxes, scores, maxOutputSize, iouThreshold, scoreThreshold} =\n          nmsParams(node, tensorMap, context);\n\n      return [await tfOps.image.nonMaxSuppressionAsync(\n          boxes as Tensor2D, scores as Tensor1D, maxOutputSize, iouThreshold,\n          scoreThreshold)];\n    }\n    case 'Where': {\n      const condition = tfOps.cast(\n          (getParamValue('condition', node, tensorMap, context) as Tensor),\n          'bool');\n      const result = [await tfOps.whereAsync(condition)];\n      condition.dispose();\n      return result;\n    }\n    case 'ListDiff': {\n      return tfOps.setdiff1dAsync(\n          getParamValue('x', node, tensorMap, context) as Tensor,\n          getParamValue('y', node, tensorMap, context) as Tensor);\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'dynamic';\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {DataType, keep, scalar, stack, Tensor, tidy, unstack, util} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\n/**\n * Hashtable contains a set of tensors, which can be accessed by key.\n */\nexport class HashTable {\n  readonly handle: Tensor;\n\n  // tslint:disable-next-line: no-any\n  private tensorMap: Map<any, Tensor>;\n\n  get id() {\n    return this.handle.id;\n  }\n\n  /**\n   * Constructor of HashTable. Creates a hash table.\n   *\n   * @param keyDType `dtype` of the table keys.\n   * @param valueDType `dtype` of the table values.\n   */\n  constructor(readonly keyDType: DataType, readonly valueDType: DataType) {\n    this.handle = scalar(0);\n    // tslint:disable-next-line: no-any\n    this.tensorMap = new Map<any, Tensor>();\n\n    keep(this.handle);\n  }\n\n  /**\n   * Dispose the tensors and handle and clear the hashtable.\n   */\n  clearAndClose() {\n    this.tensorMap.forEach(value => value.dispose());\n    this.tensorMap.clear();\n    this.handle.dispose();\n  }\n\n  /**\n   * The number of items in the hash table.\n   */\n  size(): number {\n    return this.tensorMap.size;\n  }\n\n  /**\n   * The number of items in the hash table as a rank-0 tensor.\n   */\n  tensorSize(): Tensor {\n    return tfOps.scalar(this.size(), 'int32');\n  }\n\n  /**\n   * Replaces the contents of the table with the specified keys and values.\n   * @param keys Keys to store in the hashtable.\n   * @param values Values to store in the hashtable.\n   */\n  async import(keys: Tensor, values: Tensor): Promise<Tensor> {\n    this.checkKeyAndValueTensor(keys, values);\n\n    // We only store the primitive values of the keys, this allows lookup\n    // to be O(1).\n    const $keys = await keys.data();\n\n    // Clear the hashTable before inserting new values.\n    this.tensorMap.forEach(value => value.dispose());\n    this.tensorMap.clear();\n\n    return tidy(() => {\n      const $values = unstack(values);\n\n      const keysLength = $keys.length;\n      const valuesLength = $values.length;\n\n      util.assert(\n          keysLength === valuesLength,\n          () => `The number of elements doesn't match, keys has ` +\n              `${keysLength} elements, the values has ${valuesLength} ` +\n              `elements.`);\n\n      for (let i = 0; i < keysLength; i++) {\n        const key = $keys[i];\n        const value = $values[i];\n\n        keep(value);\n        this.tensorMap.set(key, value);\n      }\n\n      return this.handle;\n    });\n  }\n\n  /**\n   * Looks up keys in a hash table, outputs the corresponding values.\n   *\n   * Performs batch lookups, for every element in the key tensor, `find`\n   * stacks the corresponding value into the return tensor.\n   *\n   * If an element is not present in the table, the given `defaultValue` is\n   * used.\n   *\n   * @param keys Keys to look up. Must have the same type as the keys of the\n   *     table.\n   * @param defaultValue The scalar `defaultValue` is the value output for keys\n   *     not present in the table. It must also be of the same type as the\n   *     table values.\n   */\n  async find(keys: Tensor, defaultValue: Tensor): Promise<Tensor> {\n    this.checkKeyAndValueTensor(keys, defaultValue);\n\n    const $keys = await keys.data();\n\n    return tidy(() => {\n      const result: Tensor[] = [];\n\n      for (let i = 0; i < $keys.length; i++) {\n        const key = $keys[i];\n\n        const value = this.findWithDefault(key, defaultValue);\n        result.push(value);\n      }\n\n      return stack(result);\n    });\n  }\n\n  // tslint:disable-next-line: no-any\n  private findWithDefault(key: any, defaultValue: Tensor): Tensor {\n    const result = this.tensorMap.get(key);\n\n    return result != null ? result : defaultValue;\n  }\n\n  private checkKeyAndValueTensor(key: Tensor, value: Tensor) {\n    if (key.dtype !== this.keyDType) {\n      throw new Error(\n          `Expect key dtype ${this.keyDType}, but got ` +\n          `${key.dtype}`);\n    }\n\n    if (value.dtype !== this.valueDType) {\n      throw new Error(\n          `Expect value dtype ${this.valueDType}, but got ` +\n          `${value.dtype}`);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, Tensor} from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {HashTable} from '../../executor/hash_table';\nimport {ResourceManager} from '../../executor/resource_manager';\nimport {InternalOpAsyncExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport const executeOp: InternalOpAsyncExecutor = async(\n    node: Node, tensorMap: NamedTensorsMap, context: ExecutionContext,\n    resourceManager: ResourceManager): Promise<Tensor[]> => {\n  switch (node.op) {\n    case 'HashTable':\n    case 'HashTableV2': {\n      const keyDType =\n          getParamValue('keyDType', node, tensorMap, context) as DataType;\n      const valueDType =\n          getParamValue('valueDType', node, tensorMap, context) as DataType;\n\n      const hashTable = new HashTable(keyDType, valueDType);\n      resourceManager.addHashTable(node.name, hashTable);\n      return [hashTable.handle];\n    }\n    case 'LookupTableImport':\n    case 'LookupTableImportV2': {\n      const handle = getParamValue(\n                         'tableHandle', node, tensorMap, context,\n                         resourceManager) as Tensor;\n      const keys = getParamValue('keys', node, tensorMap, context) as Tensor;\n      const values =\n          getParamValue('values', node, tensorMap, context) as Tensor;\n\n      const hashTable = resourceManager.getHashTableById(handle.id);\n\n      return [await hashTable.import(keys, values)];\n    }\n    case 'LookupTableFind':\n    case 'LookupTableFindV2': {\n      const handle = getParamValue(\n                         'tableHandle', node, tensorMap, context,\n                         resourceManager) as Tensor;\n      const keys = getParamValue('keys', node, tensorMap, context) as Tensor;\n      const defaultValue =\n          getParamValue('defaultValue', node, tensorMap, context) as Tensor;\n\n      const hashTable = resourceManager.getHashTableById(handle.id);\n      return [await hashTable.find(keys, defaultValue)];\n    }\n    case 'LookupTableSize':\n    case 'LookupTableSizeV2': {\n      const handle = getParamValue(\n                         'tableHandle', node, tensorMap, context,\n                         resourceManager) as Tensor;\n\n      const hashTable = resourceManager.getHashTableById(handle.id);\n      return [hashTable.tensorSize()];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'hash_table';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../data/types';\nimport {ExecutionContext} from '../executor/execution_context';\nimport {ResourceManager} from '../executor/resource_manager';\n\nimport {NodeValueImpl} from './custom_op/node_value_impl';\nimport {getRegisteredOp} from './custom_op/register';\nimport * as arithmetic from './executors/arithmetic_executor';\nimport * as basicMath from './executors/basic_math_executor';\nimport * as control from './executors/control_executor';\nimport * as convolution from './executors/convolution_executor';\nimport * as creation from './executors/creation_executor';\nimport * as dynamic from './executors/dynamic_executor';\nimport * as evaluation from './executors/evaluation_executor';\nimport * as graph from './executors/graph_executor';\nimport * as hashTable from './executors/hash_table_executor';\nimport * as image from './executors/image_executor';\nimport * as logical from './executors/logical_executor';\nimport * as matrices from './executors/matrices_executor';\nimport * as normalization from './executors/normalization_executor';\nimport * as reduction from './executors/reduction_executor';\nimport * as sliceJoin from './executors/slice_join_executor';\nimport * as sparse from './executors/sparse_executor';\nimport * as spectral from './executors/spectral_executor';\nimport * as string from './executors/string_executor';\nimport * as transformation from './executors/transformation_executor';\nimport {Node} from './types';\n\n/**\n * Executes the op defined by the node object.\n * @param node\n * @param tensorMap contains tensors for executed nodes and weights\n * @param context contains tensors and information for running the current node.\n * @param resourceManager Optional. Contains global resources of the model.\n */\nexport function executeOp(\n    node: Node, tensorMap: NamedTensorsMap, context: ExecutionContext,\n    resourceManager?: ResourceManager): tfc.Tensor[]|Promise<tfc.Tensor[]> {\n  const value =\n      ((node: Node, tensorMap: NamedTensorsMap, context: ExecutionContext) => {\n        switch (node.category) {\n          case 'arithmetic':\n            return tfc.tidy(\n                () => arithmetic.executeOp(node, tensorMap, context));\n          case 'basic_math':\n            return tfc.tidy(\n                () => basicMath.executeOp(node, tensorMap, context));\n          case 'control':\n            return control.executeOp(node, tensorMap, context);\n          case 'convolution':\n            return tfc.tidy(\n                () => convolution.executeOp(node, tensorMap, context));\n          case 'creation':\n            return tfc.tidy(() => creation.executeOp(node, tensorMap, context));\n          case 'dynamic':\n            return dynamic.executeOp(node, tensorMap, context);\n          case 'evaluation':\n            return tfc.tidy(\n                () => evaluation.executeOp(node, tensorMap, context));\n          case 'image':\n            return tfc.tidy(() => image.executeOp(node, tensorMap, context));\n          case 'graph':\n            return tfc.tidy(() => graph.executeOp(node, tensorMap, context));\n          case 'logical':\n            return tfc.tidy(() => logical.executeOp(node, tensorMap, context));\n          case 'matrices':\n            return tfc.tidy(() => matrices.executeOp(node, tensorMap, context));\n          case 'normalization':\n            return tfc.tidy(\n                () => normalization.executeOp(node, tensorMap, context));\n          case 'reduction':\n            return tfc.tidy(\n                () => reduction.executeOp(node, tensorMap, context));\n          case 'slice_join':\n            return tfc.tidy(\n                () => sliceJoin.executeOp(node, tensorMap, context));\n          case 'sparse':\n            return tfc.tidy(() => sparse.executeOp(node, tensorMap, context));\n          case 'spectral':\n            return tfc.tidy(() => spectral.executeOp(node, tensorMap, context));\n          case 'string':\n            return tfc.tidy(() => string.executeOp(node, tensorMap, context));\n          case 'transformation':\n            return tfc.tidy(\n                () => transformation.executeOp(node, tensorMap, context));\n          case 'hash_table':\n            return hashTable.executeOp(\n                node, tensorMap, context, resourceManager);\n          case 'custom':\n            const opMapper = getRegisteredOp(node.op);\n            if (opMapper && opMapper.customExecutor) {\n              return opMapper.customExecutor(\n                  new NodeValueImpl(node, tensorMap, context));\n            } else {\n              throw TypeError(`Custom op ${node.op} is not registered.`);\n            }\n          default:\n            throw TypeError(\n                `Unknown op '${node.op}'. File an issue at ` +\n                `https://github.com/tensorflow/tfjs/issues so we can add it` +\n                `, or register a custom execution with tf.registerOp()`);\n        }\n      })(node, tensorMap, context);\n  if (tfc.util.isPromise(value)) {\n    return (value as Promise<tfc.Tensor>).then((data) => [].concat(data));\n  }\n  return [].concat(value);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext): Tensor[] => {\n      switch (node.op) {\n        case 'BiasAdd':\n        case 'AddV2':\n        case 'Add': {\n          return [tfOps.add(\n              (getParamValue('a', node, tensorMap, context) as Tensor),\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'AddN': {\n          return [tfOps.addN((\n              getParamValue('tensors', node, tensorMap, context) as Tensor[]))];\n        }\n        case 'FloorMod':\n        case 'Mod':\n          return [tfOps.mod(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        case 'Mul':\n          return [tfOps.mul(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        case 'RealDiv':\n        case 'Div': {\n          return [tfOps.div(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'DivNoNan': {\n          return [tfOps.divNoNan(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'FloorDiv': {\n          return [tfOps.floorDiv(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'Sub': {\n          return [tfOps.sub(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'Minimum': {\n          return [tfOps.minimum(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'Maximum': {\n          return [tfOps.maximum(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'Pow': {\n          return [tfOps.pow(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'SquaredDifference': {\n          return [tfOps.squaredDifference(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'arithmetic';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue, getTensor} from './utils';\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext): Tensor[] => {\n      switch (node.op) {\n        case 'Abs':\n        case 'ComplexAbs':\n          return [tfOps.abs(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Acos':\n          return [tfOps.acos(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Acosh':\n          return [tfOps.acosh(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Asin':\n          return [tfOps.asin(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Asinh':\n          return [tfOps.asinh(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Atan':\n          return [tfOps.atan(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Atan2':\n          return [tfOps.atan2(\n              getParamValue('x', node, tensorMap, context) as Tensor,\n              getParamValue('y', node, tensorMap, context) as Tensor)];\n        case 'Atanh':\n          return [tfOps.atanh(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Ceil':\n          return [tfOps.ceil(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Complex':\n          return [tfOps.complex(\n              getParamValue('real', node, tensorMap, context) as Tensor,\n              getParamValue('imag', node, tensorMap, context) as Tensor)];\n        case 'Cos':\n          return [tfOps.cos(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Cosh':\n          return [tfOps.cosh(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Elu':\n          return [tfOps.elu(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Erf':\n          return [tfOps.erf(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Exp':\n          return [tfOps.exp(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Expm1': {\n          return [tfOps.expm1(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        }\n        case 'Floor':\n          return [tfOps.floor(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Log':\n          return [tfOps.log(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Log1p': {\n          return [tfOps.log1p(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        }\n        case 'Imag':\n          return [tfOps.imag(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n\n        case 'Neg':\n          return [tfOps.neg(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Reciprocal': {\n          return [tfOps.reciprocal(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        }\n        case 'Real':\n          return [tfOps.real(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Relu':\n          return [tfOps.relu(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Round': {\n          return [tfOps.round(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        }\n        case 'Selu':\n          return [tfOps.selu(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Sigmoid':\n          return [tfOps.sigmoid(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Sin':\n          return [tfOps.sin(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Sign': {\n          return [tfOps.sign(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        }\n        case 'Sinh': {\n          return [tfOps.sinh(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        }\n        case 'Softplus': {\n          return [tfOps.softplus(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        }\n        case 'Sqrt': {\n          return [tfOps.sqrt(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        }\n        case 'Square': {\n          return [tfOps.square(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        }\n        case 'Tanh': {\n          return [tfOps.tanh(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        }\n        case 'Tan':\n          return [tfOps.tan(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'ClipByValue':\n          return [tfOps.clipByValue(\n              getParamValue('x', node, tensorMap, context) as Tensor,\n              getParamValue('clipValueMin', node, tensorMap, context) as number,\n              getParamValue('clipValueMax', node, tensorMap, context) as\n                  number)];\n        case 'Relu6':\n          return [tfOps.relu6(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Rsqrt':\n          return [tfOps.rsqrt(\n              getTensor(node.inputNames[0], tensorMap, context))];\n        case 'Prod':\n          return [tfOps.prod(\n              getParamValue('x', node, tensorMap, context) as Tensor,\n              getParamValue('axes', node, tensorMap, context) as number[])];\n        case 'LeakyRelu':\n          return [tfOps.leakyRelu(\n              getParamValue('x', node, tensorMap, context) as Tensor,\n              getParamValue('alpha', node, tensorMap, context) as number)];\n        case 'Prelu':\n          return [tfOps.prelu(\n              getParamValue('x', node, tensorMap, context) as Tensor,\n              getParamValue('alpha', node, tensorMap, context) as Tensor)];\n        case 'IsNan':\n          return [tfOps.isNaN(\n              getTensor(node.inputNames[0], tensorMap, context))];\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'basic_math';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, Tensor, Tensor1D} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext): Tensor[] => {\n      switch (node.op) {\n        case 'Fill': {\n          const shape =\n              getParamValue('shape', node, tensorMap, context) as number[];\n          const dtype =\n              getParamValue('dtype', node, tensorMap, context) as DataType;\n          const value =\n              getParamValue('value', node, tensorMap, context) as number;\n          return [tfOps.fill(shape, value, dtype)];\n        }\n        case 'LinSpace': {\n          const start =\n              getParamValue('start', node, tensorMap, context) as number;\n          const stop =\n              getParamValue('stop', node, tensorMap, context) as number;\n          const num = getParamValue('num', node, tensorMap, context) as number;\n          return [tfOps.linspace(start, stop, num)];\n        }\n        case 'Multinomial': {\n          const logits =\n              getParamValue('logits', node, tensorMap, context) as Tensor1D;\n          const numSamples =\n              getParamValue('numSamples', node, tensorMap, context) as number;\n          const seed =\n              getParamValue('seed', node, tensorMap, context) as number;\n          return [tfOps.multinomial(logits, numSamples, seed)];\n        }\n        case 'OneHot': {\n          const indices =\n              getParamValue('indices', node, tensorMap, context) as Tensor1D;\n          const depth =\n              getParamValue('depth', node, tensorMap, context) as number;\n          const onValue =\n              getParamValue('onValue', node, tensorMap, context) as number;\n          const offValue =\n              getParamValue('offValue', node, tensorMap, context) as number;\n          return [tfOps.oneHot(indices, depth, onValue, offValue)];\n        }\n        case 'Ones': {\n          return [tfOps.ones(\n              getParamValue('shape', node, tensorMap, context) as number[],\n              getParamValue('dtype', node, tensorMap, context) as DataType)];\n        }\n        case 'OnesLike': {\n          return [tfOps.onesLike(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        }\n        case 'RandomUniform': {\n          return [tfOps.randomUniform(\n              // tslint:disable-next-line:no-any\n              getParamValue('shape', node, tensorMap, context) as any,\n              getParamValue('minval', node, tensorMap, context) as number,\n              getParamValue('maxval', node, tensorMap, context) as number,\n              getParamValue('dtype', node, tensorMap, context) as DataType)];\n        }\n        case 'Range': {\n          const start =\n              getParamValue('start', node, tensorMap, context) as number;\n          const stop =\n              getParamValue('stop', node, tensorMap, context) as number;\n          const step =\n              getParamValue('step', node, tensorMap, context) as number;\n          return [tfOps.range(\n              start, stop, step,\n              getParamValue('dtype', node, tensorMap, context) as 'float32' |\n                  'int32')];\n        }\n        case 'TruncatedNormal': {\n          const shape =\n              getParamValue('shape', node, tensorMap, context) as number[];\n          const mean =\n              getParamValue('mean', node, tensorMap, context) as number;\n          const stdDev =\n              getParamValue('stdDev', node, tensorMap, context) as number;\n          const seed =\n              getParamValue('seed', node, tensorMap, context) as number;\n          return [tfOps.truncatedNormal(\n              shape, mean, stdDev,\n              getParamValue('dtype', node, tensorMap, context) as 'float32' |\n                  'int32',\n              seed)];\n        }\n        case 'Zeros': {\n          return [tfOps.zeros(\n              getParamValue('shape', node, tensorMap, context) as number[],\n              getParamValue('dtype', node, tensorMap, context) as DataType)];\n        }\n        case 'ZerosLike': {\n          return [tfOps.zerosLike(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'creation';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap, context: ExecutionContext):\n        Tensor[] => {\n          switch (node.op) {\n            case 'TopKV2': {\n              const x = getParamValue('x', node, tensorMap, context) as Tensor;\n              const k = getParamValue('k', node, tensorMap, context) as number;\n              const sorted =\n                  getParamValue('sorted', node, tensorMap, context) as boolean;\n              const result = tfOps.topk(x, k, sorted);\n              return [result.values, result.indices];\n            }\n            case 'Unique': {\n              const x = getParamValue('x', node, tensorMap, context) as Tensor;\n              const result = tfOps.unique(x);\n              return [result.values, result.indices];\n            }\n            case 'UniqueV2': {\n              const x = getParamValue('x', node, tensorMap, context) as Tensor;\n              const axis =\n                  getParamValue('axis', node, tensorMap, context) as number;\n              const result = tfOps.unique(x, axis);\n              return [result.values, result.indices];\n            }\n            default:\n              throw TypeError(`Node type ${node.op} is not implemented`);\n          }\n        };\n\nexport const CATEGORY = 'evaluation';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor, Tensor1D, Tensor2D, Tensor3D, Tensor4D} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext): Tensor[] => {\n      switch (node.op) {\n        case 'ResizeBilinear': {\n          const images =\n              getParamValue('images', node, tensorMap, context) as Tensor;\n          const size =\n              getParamValue('size', node, tensorMap, context) as number[];\n          const alignCorners =\n              getParamValue('alignCorners', node, tensorMap, context) as\n              boolean;\n          const halfPixelCenters =\n              getParamValue('halfPixelCenters', node, tensorMap, context) as\n              boolean;\n          return [tfOps.image.resizeBilinear(\n              images as Tensor3D | Tensor4D, [size[0], size[1]], alignCorners,\n              halfPixelCenters)];\n        }\n        case 'ResizeNearestNeighbor': {\n          const images =\n              getParamValue('images', node, tensorMap, context) as Tensor;\n          const size =\n              getParamValue('size', node, tensorMap, context) as number[];\n          const alignCorners =\n              getParamValue('alignCorners', node, tensorMap, context) as\n              boolean;\n          const halfPixelCenters =\n              getParamValue('halfPixelCenters', node, tensorMap, context) as\n              boolean;\n          return [tfOps.image.resizeNearestNeighbor(\n              images as Tensor3D | Tensor4D, [size[0], size[1]], alignCorners,\n              halfPixelCenters)];\n        }\n        case 'CropAndResize': {\n          const image =\n              getParamValue('image', node, tensorMap, context) as Tensor;\n          const boxes =\n              getParamValue('boxes', node, tensorMap, context) as Tensor;\n          const boxInd =\n              getParamValue('boxInd', node, tensorMap, context) as Tensor;\n          const cropSize =\n              getParamValue('cropSize', node, tensorMap, context) as number[];\n          const method =\n              getParamValue('method', node, tensorMap, context) as string;\n          const extrapolationValue =\n              getParamValue('extrapolationValue', node, tensorMap, context) as\n              number;\n          return [tfOps.image.cropAndResize(\n              image as Tensor4D, boxes as Tensor2D, boxInd as Tensor1D,\n              cropSize as [number, number], method as 'bilinear' | 'nearest',\n              extrapolationValue)];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'image';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {cloneTensor, getParamValue, getTensor} from './utils';\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext): Tensor[] => {\n      switch (node.op) {\n        case 'Const': {\n          return tensorMap[node.name];\n        }\n        case 'PlaceholderWithDefault':\n          const def =\n              getParamValue('default', node, tensorMap, context) as Tensor;\n          return [getTensor(node.name, tensorMap, context) || def];\n        case 'Placeholder':\n          return [getTensor(node.name, tensorMap, context)];\n        case 'Identity':\n        case 'StopGradient':\n        case 'FakeQuantWithMinMaxVars': {  // This op is currently ignored.\n          const data = getParamValue('x', node, tensorMap, context) as Tensor;\n          return [cloneTensor(data)];\n        }\n        case 'IdentityN':\n          return (getParamValue('x', node, tensorMap, context) as Tensor[])\n              .map((t: Tensor) => cloneTensor(t));\n        case 'Snapshot':\n          const snapshot =\n              (getParamValue('x', node, tensorMap, context) as Tensor);\n          return [cloneTensor(snapshot)];\n        case 'Shape':\n          return [tfOps.tensor1d(\n              (getParamValue('x', node, tensorMap, context) as Tensor).shape,\n              'int32')];\n        case 'ShapeN':\n          return (getParamValue('x', node, tensorMap, context) as Tensor[])\n              .map((t: Tensor) => tfOps.tensor1d(t.shape));\n        case 'Size':\n          return [tfOps.scalar(\n              (getParamValue('x', node, tensorMap, context) as Tensor).size,\n              'int32')];\n        case 'Rank':\n          return [tfOps.scalar(\n              (getParamValue('x', node, tensorMap, context) as Tensor).rank,\n              'int32')];\n        case 'NoOp':\n          return [tfOps.scalar(1)];\n        case 'Print':\n          const input = getParamValue('x', node, tensorMap, context) as Tensor;\n          const data =\n              getParamValue('data', node, tensorMap, context) as Tensor[];\n          const message =\n              getParamValue('message', node, tensorMap, context) as string;\n          const summarize =\n              getParamValue('summarize', node, tensorMap, context) as number;\n          console.warn(\n              'The graph has a tf.print() operation,' +\n              'usually used for debugging, which slows down performance.');\n          console.log(message);\n          for (let i = 0; i < data.length; i++) {\n            console.log(Array.prototype.slice.call(data[i].dataSync())\n                            .slice(0, summarize));\n          }\n          return [input];\n\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'graph';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext): Tensor[] => {\n      switch (node.op) {\n        case 'Equal': {\n          return [tfOps.equal(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'NotEqual': {\n          return [tfOps.notEqual(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'Greater': {\n          return [tfOps.greater(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'GreaterEqual': {\n          return [tfOps.greaterEqual(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'Less': {\n          return [tfOps.less(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'LessEqual': {\n          return [tfOps.lessEqual(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'LogicalAnd': {\n          return [tfOps.logicalAnd(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'LogicalNot': {\n          return [tfOps.logicalNot(\n              getParamValue('a', node, tensorMap, context) as Tensor)];\n        }\n        case 'LogicalOr': {\n          return [tfOps.logicalOr(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'Select':\n        case 'SelectV2': {\n          return [tfOps.where(\n              getParamValue('condition', node, tensorMap, context) as Tensor,\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'logical';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor, Tensor2D} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext): Tensor[] => {\n      switch (node.op) {\n        case 'BatchMatMul':\n        case 'BatchMatMulV2':\n        case 'MatMul':\n          return [tfOps.matMul(\n              getParamValue('a', node, tensorMap, context) as Tensor2D,\n              getParamValue('b', node, tensorMap, context) as Tensor2D,\n              getParamValue('transposeA', node, tensorMap, context) as boolean,\n              getParamValue('transposeB', node, tensorMap, context) as\n                  boolean)];\n\n        case 'Einsum':\n          return [tfOps.einsum(\n              getParamValue('equation', node, tensorMap, context) as string,\n              ...getParamValue('tensors', node, tensorMap, context) as\n                  Tensor[])];\n\n        case 'Transpose':\n          return [tfOps.transpose(\n              getParamValue('x', node, tensorMap, context) as Tensor,\n              getParamValue('perm', node, tensorMap, context) as number[])];\n\n        case '_FusedMatMul':\n          const [extraOp, activationFunc] =\n              (getParamValue('fusedOps', node, tensorMap, context) as string[]);\n\n          const isBiasAdd = extraOp === 'biasadd';\n          const isPrelu = activationFunc === 'prelu';\n\n          const numArgs =\n              (getParamValue('numArgs', node, tensorMap, context) as number);\n          const leakyreluAlpha =\n              getParamValue('leakyreluAlpha', node, tensorMap, context) as\n              number;\n\n          if (isBiasAdd) {\n            if (isPrelu && numArgs !== 2) {\n              throw new Error(\n                  'Fused MatMul with BiasAdd and Prelu must have two ' +\n                  'extra arguments: bias and alpha.');\n            }\n            if (!isPrelu && numArgs !== 1) {\n              throw new Error(\n                  'Fused MatMul with BiasAdd must have one extra argument: bias.');\n            }\n          }\n          const [biasArg, preluArg] =\n              getParamValue('args', node, tensorMap, context) as Tensor[];\n          return [tfOps.fused.matMul({\n            a: getParamValue('a', node, tensorMap, context) as Tensor2D,\n            b: getParamValue('b', node, tensorMap, context) as Tensor2D,\n            transposeA: getParamValue('transposeA', node, tensorMap, context) as\n                boolean,\n            transposeB: getParamValue('transposeB', node, tensorMap, context) as\n                boolean,\n            bias: biasArg,\n            activation: activationFunc as tfOps.fused.Activation,\n            preluActivationWeights: preluArg,\n            leakyreluAlpha\n          })];\n\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'matrices';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Scalar, Tensor, Tensor3D, Tensor4D} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext): Tensor[] => {\n      switch (node.op) {\n        case 'FusedBatchNorm':\n        case 'FusedBatchNormV2': {\n          return [tfOps.batchNorm(\n              getParamValue('x', node, tensorMap, context) as Tensor,\n              getParamValue('mean', node, tensorMap, context) as Tensor,\n              getParamValue('variance', node, tensorMap, context) as Tensor,\n              getParamValue('offset', node, tensorMap, context) as Tensor,\n              getParamValue('scale', node, tensorMap, context) as Tensor,\n              getParamValue('epsilon', node, tensorMap, context) as number)];\n        }\n        case 'FusedBatchNormV3': {\n          return [tfOps.batchNorm(\n              getParamValue('x', node, tensorMap, context) as Tensor,\n              getParamValue('mean', node, tensorMap, context) as Tensor,\n              getParamValue('variance', node, tensorMap, context) as Tensor,\n              getParamValue('offset', node, tensorMap, context) as Tensor,\n              getParamValue('scale', node, tensorMap, context) as Tensor,\n              getParamValue('epsilon', node, tensorMap, context) as number)];\n        }\n        case 'LRN': {\n          return [tfOps.localResponseNormalization(\n              getParamValue('x', node, tensorMap, context) as Tensor3D |\n                  Tensor4D,\n              getParamValue('radius', node, tensorMap, context) as number,\n              getParamValue('bias', node, tensorMap, context) as number,\n              getParamValue('alpha', node, tensorMap, context) as number,\n              getParamValue('beta', node, tensorMap, context) as number)];\n        }\n        case 'Softmax': {\n          return [tfOps.softmax(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        }\n        case 'LogSoftmax': {\n          return [tfOps.logSoftmax(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        }\n        case 'SparseToDense': {\n          return [tfOps.sparseToDense(\n              getParamValue('sparseIndices', node, tensorMap, context) as\n                  Tensor,\n              getParamValue('outputShape', node, tensorMap, context) as Tensor,\n              getParamValue('sparseValues', node, tensorMap, context) as\n                  number[],\n              getParamValue('defaultValue', node, tensorMap, context) as\n                  Scalar)];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'normalization';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor, Tensor1D, Tensor2D} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext): Tensor[] => {\n      switch (node.op) {\n        case 'Max': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number[];\n          const keepDims =\n              getParamValue('keepDims', node, tensorMap, context) as boolean;\n          return [tfOps.max(\n              getParamValue('x', node, tensorMap, context) as Tensor, axis,\n              keepDims)];\n        }\n        case 'Mean': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number[];\n          const keepDims =\n              getParamValue('keepDims', node, tensorMap, context) as boolean;\n          return [tfOps.mean(\n              getParamValue('x', node, tensorMap, context) as Tensor, axis,\n              keepDims)];\n        }\n        case 'Min': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number[];\n          const keepDims =\n              getParamValue('keepDims', node, tensorMap, context) as boolean;\n          return [tfOps.min(\n              getParamValue('x', node, tensorMap, context) as Tensor, axis,\n              keepDims)];\n        }\n        case 'Sum': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number[];\n          const keepDims =\n              getParamValue('keepDims', node, tensorMap, context) as boolean;\n          return [tfOps.sum(\n              getParamValue('x', node, tensorMap, context) as Tensor, axis,\n              keepDims)];\n        }\n        case 'All': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number[];\n          const keepDims =\n              getParamValue('keepDims', node, tensorMap, context) as boolean;\n          return [tfOps.all(\n              getParamValue('x', node, tensorMap, context) as Tensor, axis,\n              keepDims)];\n        }\n        case 'Any': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number[];\n          const keepDims =\n              getParamValue('keepDims', node, tensorMap, context) as boolean;\n          return [tfOps.any(\n              getParamValue('x', node, tensorMap, context) as Tensor, axis,\n              keepDims)];\n        }\n        case 'ArgMax': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number;\n          return [tfOps.argMax(\n              getParamValue('x', node, tensorMap, context) as Tensor, axis)];\n        }\n        case 'ArgMin': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number;\n          return [tfOps.argMin(\n              getParamValue('x', node, tensorMap, context) as Tensor, axis)];\n        }\n        case 'Prod': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number[];\n          const keepDims =\n              getParamValue('keepDims', node, tensorMap, context) as boolean;\n          return [tfOps.prod(\n              getParamValue('x', node, tensorMap, context) as Tensor, axis,\n              keepDims)];\n        }\n        case 'Cumsum': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number;\n          const exclusive =\n              getParamValue('exclusive', node, tensorMap, context) as boolean;\n          const reverse =\n              getParamValue('reverse', node, tensorMap, context) as boolean;\n          return [tfOps.cumsum(\n              getParamValue('x', node, tensorMap, context) as Tensor, axis,\n              exclusive, reverse)];\n        }\n        case 'Bincount':\n          const x = getParamValue('x', node, tensorMap, context) as Tensor1D;\n          const weights =\n              getParamValue('weights', node, tensorMap, context) as Tensor1D;\n          const size =\n              getParamValue('size', node, tensorMap, context) as number;\n\n          return [tfOps.bincount(x, weights, size)];\n        case 'DenseBincount': {\n          const x = getParamValue('x', node, tensorMap, context) as Tensor1D |\n              Tensor2D;\n          const weights =\n              getParamValue('weights', node, tensorMap, context) as Tensor1D |\n              Tensor2D;\n          const size =\n              getParamValue('size', node, tensorMap, context) as number;\n\n          const binaryOutput =\n              getParamValue('binaryOutput', node, tensorMap, context) as\n              boolean;\n\n          return [tfOps.denseBincount(x, weights, size, binaryOutput)];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'reduction';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Scalar, Tensor, Tensor1D, tidy, util} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext): Tensor[] => {\n      switch (node.op) {\n        case 'ConcatV2':\n        case 'Concat': {\n          const n = getParamValue('n', node, tensorMap, context) as number;\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number;\n          let inputs =\n              getParamValue('tensors', node, tensorMap, context) as Tensor[];\n          inputs = inputs.slice(0, n);\n          return [tfOps.concat(inputs, axis)];\n        }\n        case 'Gather': {\n          const input = getParamValue('x', node, tensorMap, context) as Tensor;\n          const indices =\n              getParamValue('indices', node, tensorMap, context) as Tensor1D;\n          return [tfOps.gather(input, tfOps.cast(indices, 'int32'), 0)];\n        }\n        case 'GatherV2': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number;\n          const batchDims =\n              getParamValue('batchDims', node, tensorMap, context) as number;\n          const input = getParamValue('x', node, tensorMap, context) as Tensor;\n          const indices =\n              getParamValue('indices', node, tensorMap, context) as Tensor1D;\n          return [tfOps.gather(\n              input, tfOps.cast(indices, 'int32'), axis, batchDims)];\n        }\n        case 'Reverse': {\n          const dims =\n              getParamValue('dims', node, tensorMap, context) as boolean[];\n          const axis = [];\n          for (let i = 0; i < dims.length; i++) {\n            if (dims[i]) {\n              axis.push(i);\n            }\n          }\n          const input = getParamValue('x', node, tensorMap, context) as Tensor;\n          return [tfOps.reverse(input, axis)];\n        }\n        case 'ReverseV2': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number[];\n          const input = getParamValue('x', node, tensorMap, context) as Tensor;\n          return [tfOps.reverse(input, axis)];\n        }\n        case 'Slice': {\n          // tslint:disable-next-line:no-any\n          const begin = getParamValue('begin', node, tensorMap, context) as any;\n          // tslint:disable-next-line:no-any\n          const size = getParamValue('size', node, tensorMap, context) as any;\n          return [tfOps.slice(\n              getParamValue('x', node, tensorMap, context) as Tensor, begin,\n              size)];\n        }\n        case 'StridedSlice': {\n          const begin =\n              getParamValue('begin', node, tensorMap, context) as number[];\n          const end =\n              getParamValue('end', node, tensorMap, context) as number[];\n          const strides =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const beginMask =\n              getParamValue('beginMask', node, tensorMap, context) as number;\n          const endMask =\n              getParamValue('endMask', node, tensorMap, context) as number;\n          const ellipsisMask =\n              getParamValue('ellipsisMask', node, tensorMap, context) as number;\n          const newAxisMask =\n              getParamValue('newAxisMask', node, tensorMap, context) as number;\n          const shrinkAxisMask =\n              getParamValue('shrinkAxisMask', node, tensorMap, context) as\n              number;\n          const tensor = getParamValue('x', node, tensorMap, context) as Tensor;\n\n          return [tfOps.stridedSlice(\n              tensor, begin, end, strides, beginMask, endMask, ellipsisMask,\n              newAxisMask, shrinkAxisMask)];\n        }\n        case 'Pack': {\n          return tidy(() => {\n            const axis =\n                getParamValue('axis', node, tensorMap, context) as number;\n            const tensors =\n                getParamValue('tensors', node, tensorMap, context) as Tensor[];\n            // Reshape the tensors to the first tensor's shape if they don't\n            // match.\n            const shape = tensors[0].shape;\n            const squeezedShape = tfOps.squeeze(tensors[0]).shape;\n            const mapped = tensors.map(tensor => {\n              const sameShape = util.arraysEqual(tensor.shape, shape);\n              if (!sameShape &&\n                  !util.arraysEqual(\n                      tfOps.squeeze(tensor).shape, squeezedShape)) {\n                throw new Error('the input tensors shape does not match');\n              }\n              return sameShape ? tensor : tfOps.reshape(tensor, shape);\n            });\n            return [tfOps.stack(mapped, axis)];\n          });\n        }\n        case 'Unpack': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number;\n          const tensor =\n              getParamValue('tensor', node, tensorMap, context) as Tensor;\n          return tfOps.unstack(tensor, axis);\n        }\n        case 'Tile': {\n          const reps =\n              getParamValue('reps', node, tensorMap, context) as number[];\n          return [tfOps.tile(\n              getParamValue('x', node, tensorMap, context) as Tensor, reps)];\n        }\n        case 'Split':\n        case 'SplitV': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number;\n          const numOrSizeSplits =\n              getParamValue('numOrSizeSplits', node, tensorMap, context) as\n                  number |\n              number[];\n          const tensor = getParamValue('x', node, tensorMap, context) as Tensor;\n\n          return tfOps.split(tensor, numOrSizeSplits, axis);\n        }\n        case 'ScatterNd': {\n          const indices =\n              getParamValue('indices', node, tensorMap, context) as Tensor;\n          const values =\n              getParamValue('values', node, tensorMap, context) as Tensor;\n          const shape =\n              getParamValue('shape', node, tensorMap, context) as number[];\n          return [tfOps.scatterND(indices, values, shape)];\n        }\n        case 'GatherNd': {\n          const x = getParamValue('x', node, tensorMap, context) as Tensor;\n          const indices =\n              getParamValue('indices', node, tensorMap, context) as Tensor;\n          return [tfOps.gatherND(x, indices)];\n        }\n        case 'SparseToDense': {\n          const indices =\n              getParamValue('sparseIndices', node, tensorMap, context) as\n              Tensor;\n          const shape =\n              getParamValue('outputShape', node, tensorMap, context) as\n              number[];\n          const sparseValues =\n              getParamValue('sparseValues', node, tensorMap, context) as Tensor;\n          const defaultValue =\n              getParamValue('defaultValue', node, tensorMap, context) as Scalar;\n          return [tfOps.sparseToDense(\n              indices, sparseValues, shape,\n              sparseValues.dtype === defaultValue.dtype ?\n                  defaultValue :\n                  tfOps.cast(defaultValue, sparseValues.dtype))];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'slice_join';\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Scalar, Tensor, Tensor1D, Tensor2D} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext): Tensor[] => {\n      switch (node.op) {\n        case 'SparseFillEmptyRows': {\n          const {\n            outputIndices,\n            outputValues,\n            emptyRowIndicator,\n            reverseIndexMap\n          } =\n              tfOps.sparse.sparseFillEmptyRows(\n                  getParamValue('indices', node, tensorMap, context) as\n                      Tensor2D,\n                  getParamValue('values', node, tensorMap, context) as Tensor1D,\n                  getParamValue('denseShape', node, tensorMap, context) as\n                      Tensor1D,\n                  getParamValue('defaultValue', node, tensorMap, context) as\n                      Scalar);\n          return [\n            outputIndices, outputValues, emptyRowIndicator, reverseIndexMap\n          ];\n        }\n        case 'SparseReshape': {\n          const {outputIndices, outputShape} = tfOps.sparse.sparseReshape(\n              getParamValue('inputIndices', node, tensorMap, context) as\n                  Tensor2D,\n              getParamValue('inputShape', node, tensorMap, context) as Tensor1D,\n              getParamValue('newShape', node, tensorMap, context) as Tensor1D);\n          return [outputIndices, outputShape];\n        }\n        case 'SparseSegmentMean': {\n          const outputData = tfOps.sparse.sparseSegmentMean(\n              getParamValue('data', node, tensorMap, context) as Tensor,\n              getParamValue('indices', node, tensorMap, context) as Tensor1D,\n              getParamValue('segmentIds', node, tensorMap, context) as\n                  Tensor1D);\n          return [outputData];\n        }\n        case 'SparseSegmentSum': {\n          const outputData = tfOps.sparse.sparseSegmentSum(\n              getParamValue('data', node, tensorMap, context) as Tensor,\n              getParamValue('indices', node, tensorMap, context) as Tensor1D,\n              getParamValue('segmentIds', node, tensorMap, context) as\n                  Tensor1D);\n          return [outputData];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'sparse';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap, context: ExecutionContext):\n        Tensor[] => {\n          switch (node.op) {\n            case 'FFT': {\n              return [tfOps.fft(\n                  getParamValue('x', node, tensorMap, context) as Tensor)];\n            }\n            case 'IFFT': {\n              return [tfOps.ifft(\n                  getParamValue('x', node, tensorMap, context) as Tensor)];\n            }\n            case 'RFFT': {\n              return [tfOps.rfft(\n                  getParamValue('x', node, tensorMap, context) as Tensor)];\n            }\n            case 'IRFFT': {\n              return [tfOps.irfft(\n                  getParamValue('x', node, tensorMap, context) as Tensor)];\n            }\n            default:\n              throw TypeError(`Node type ${node.op} is not implemented`);\n          }\n        };\n\nexport const CATEGORY = 'spectral';\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Scalar, Tensor, Tensor1D} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext): Tensor[] => {\n      switch (node.op) {\n        case 'StringNGrams': {\n          const {nGrams, nGramsSplits} = tfOps.string.stringNGrams(\n              getParamValue('data', node, tensorMap, context) as Tensor1D,\n              getParamValue('dataSplits', node, tensorMap, context) as Tensor,\n              getParamValue('separator', node, tensorMap, context) as string,\n              getParamValue('nGramWidths', node, tensorMap, context) as\n                  number[],\n              getParamValue('leftPad', node, tensorMap, context) as string,\n              getParamValue('rightPad', node, tensorMap, context) as string,\n              getParamValue('padWidth', node, tensorMap, context) as number,\n              getParamValue(\n                  'preserveShortSequences', node, tensorMap, context) as\n                  boolean);\n          return [nGrams, nGramsSplits];\n        }\n        case 'StringSplit': {\n          const {indices, values, shape} = tfOps.string.stringSplit(\n              getParamValue('input', node, tensorMap, context) as Tensor1D,\n              getParamValue('delimiter', node, tensorMap, context) as Scalar,\n              getParamValue('skipEmpty', node, tensorMap, context) as boolean);\n          return [indices, values, shape];\n        }\n        case 'StringToHashBucketFast': {\n          const output = tfOps.string.stringToHashBucketFast(\n              getParamValue('input', node, tensorMap, context) as Tensor,\n              getParamValue('numBuckets', node, tensorMap, context) as number);\n          return [output];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'string';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor, Tensor4D} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext): Tensor[] => {\n      switch (node.op) {\n        case 'Cast': {\n          return [tfOps.cast(\n              getParamValue('x', node, tensorMap, context) as Tensor,\n              getParamValue('dtype', node, tensorMap, context) as 'int32' |\n                  'float32' | 'bool')];\n        }\n        case 'ExpandDims': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number;\n          return [tfOps.expandDims(\n              getParamValue('x', node, tensorMap, context) as Tensor, axis)];\n        }\n        case 'Squeeze': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number[];\n          return [tfOps.squeeze(\n              getParamValue('x', node, tensorMap, context) as Tensor, axis)];\n        }\n\n        case 'Reshape': {\n          return [tfOps.reshape(\n              getParamValue('x', node, tensorMap, context) as Tensor,\n              getParamValue('shape', node, tensorMap, context) as number[])];\n        }\n        case 'MirrorPad': {\n          return [tfOps.mirrorPad(\n              getParamValue('x', node, tensorMap, context) as Tensor,\n              getParamValue('padding', node, tensorMap, context) as\n                  Array<[number, number]>,\n              getParamValue('mode', node, tensorMap, context) as 'reflect' |\n                  'symmetric')];\n        }\n        case 'PadV2':\n        case 'Pad': {\n          return [tfOps.pad(\n              getParamValue('x', node, tensorMap, context) as Tensor,\n              getParamValue('padding', node, tensorMap, context) as\n                  Array<[number, number]>,\n              getParamValue('constantValue', node, tensorMap, context) as\n                  number)];\n        }\n        case 'SpaceToBatchND': {\n          const blockShape =\n              getParamValue('blockShape', node, tensorMap, context) as number[];\n          const paddings =\n              getParamValue('paddings', node, tensorMap, context) as number[][];\n          return [tfOps.spaceToBatchND(\n              getParamValue('x', node, tensorMap, context) as Tensor,\n              blockShape, paddings)];\n        }\n        case 'BatchToSpaceND': {\n          const blockShape =\n              getParamValue('blockShape', node, tensorMap, context) as number[];\n          const crops =\n              getParamValue('crops', node, tensorMap, context) as number[][];\n          return [tfOps.batchToSpaceND(\n              getParamValue('x', node, tensorMap, context) as Tensor,\n              blockShape, crops)];\n        }\n        case 'DepthToSpace': {\n          const blockSize =\n              getParamValue('blockSize', node, tensorMap, context) as number;\n          const dataFormat =\n              (getParamValue('dataFormat', node, tensorMap, context) as\n               string).toUpperCase() as 'NHWC' |\n              'NCHW';\n          return [tfOps.depthToSpace(\n              getParamValue('x', node, tensorMap, context) as Tensor4D,\n              blockSize, dataFormat)];\n        }\n        case 'BroadcastTo': {\n          return [tfOps.broadcastTo(\n              getParamValue('x', node, tensorMap, context) as Tensor,\n              getParamValue('shape', node, tensorMap, context) as number[])];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'transformation';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor} from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap, TensorArrayMap, TensorListMap} from '../data/types';\n\nimport {TensorArray} from './tensor_array';\nimport {TensorList} from './tensor_list';\nimport {FunctionExecutor} from './types';\n\nexport interface ExecutionContextInfo {\n  id: number;           // the unique id of the context info\n  frameName: string;    // The frame name of the loop, this comes from\n                        // the TensorFlow NodeDef.\n  iterationId: number;  // The iteration id of the loop\n}\n\n/**\n * ExecutionContext captures the runtime environment of the node. It keeps\n * track of the current frame and iteration for the control flow ops.\n *\n * For example, typical Dynamic RNN model may contain loops, for which\n * TensorFlow will generate graphs with Enter/Exit nodes to control the\n * current execution frame, and NextIteration Nodes for iteration id increment.\n * For model with branch logic, TensorFLow will generate Switch/Merge ops.\n */\nexport class ExecutionContext {\n  private rootContext = {id: 0, frameName: '', iterationId: 0};\n  private contexts: ExecutionContextInfo[] = [this.rootContext];\n  private lastId = 0;\n  private _currentContextIds: string[];\n\n  constructor(\n      readonly weightMap: NamedTensorsMap = {},\n      readonly tensorArrayMap: TensorArrayMap = {},\n      readonly tensorListMap: TensorListMap = {},\n      readonly functionMap: {[key: string]: FunctionExecutor} = {}) {\n    this.generateCurrentContextIds();\n  }\n\n  private newFrame(id: number, frameName: string) {\n    return {id, frameName, iterationId: 0};\n  }\n\n  /**\n   * Set the current context\n   * @param contexts: ExecutionContextInfo[] the current path of execution\n   * frames\n   */\n  set currentContext(contexts: ExecutionContextInfo[]) {\n    if (this.contexts !== contexts) {\n      this.contexts = contexts;\n      this.generateCurrentContextIds();\n    }\n  }\n\n  get currentContext(): ExecutionContextInfo[] {\n    return this.contexts;\n  }\n\n  /**\n   * Returns the current context in string format.\n   */\n  get currentContextId(): string {\n    return this._currentContextIds[0];\n  }\n\n  /**\n   * Returns the current context and all parent contexts in string format.\n   * This allow access to the nodes in the current and parent frames.\n   */\n  get currentContextIds(): string[] {\n    return this._currentContextIds;\n  }\n\n  private generateCurrentContextIds() {\n    const names = [];\n    for (let i = 0; i < this.contexts.length - 1; i++) {\n      const contexts = this.contexts.slice(0, this.contexts.length - i);\n      names.push(this.contextIdforContexts(contexts));\n    }\n    names.push('');\n    this._currentContextIds = names;\n  }\n\n  private contextIdforContexts(contexts: ExecutionContextInfo[]) {\n    return contexts ?\n        contexts\n            .map(\n                context => (context.id === 0 && context.iterationId === 0) ?\n                    '' :\n                    `${context.frameName}-${context.iterationId}`)\n            .join('/') :\n        '';\n  }\n\n  /**\n   * Enter a new frame, a new context is pushed on the current context list.\n   * @param frameId new frame id\n   */\n  enterFrame(frameId: string) {\n    if (this.contexts) {\n      this.lastId++;\n      this.contexts = this.contexts.slice();\n      this.contexts.push(this.newFrame(this.lastId, frameId));\n      this._currentContextIds.unshift(this.contextIdforContexts(this.contexts));\n    }\n  }\n\n  /**\n   * Exit the current frame, the last context is removed from the current\n   * context list.\n   */\n  exitFrame() {\n    if (this.contexts && this.contexts.length > 1) {\n      this.contexts = this.contexts.slice();\n      this.contexts.splice(-1);\n      this.currentContextIds.shift();\n    } else {\n      throw new Error('Cannot exit frame, the context is empty');\n    }\n  }\n\n  /**\n   * Enter the next iteration of a loop, the iteration id of last context is\n   * increased.\n   */\n  nextIteration() {\n    if (this.contexts && this.contexts.length > 0) {\n      this.contexts = this.contexts.slice();\n      this.lastId++;\n      const context =\n          Object.assign({}, this.contexts[this.contexts.length - 1]);\n      context.iterationId += 1;\n      context.id = this.lastId;\n      this.contexts.splice(-1, 1, context);\n      this._currentContextIds.splice(\n          0, 1, this.contextIdforContexts(this.contexts));\n    } else {\n      throw new Error('Cannot increase frame iteration, the context is empty');\n    }\n  }\n\n  getWeight(name: string): Tensor[] {\n    return this.weightMap[name];\n  }\n\n  addTensorArray(tensorArray: TensorArray) {\n    this.tensorArrayMap[tensorArray.id] = tensorArray;\n  }\n\n  getTensorArray(id: number): TensorArray {\n    return this.tensorArrayMap[id];\n  }\n\n  addTensorList(tensorList: TensorList) {\n    this.tensorListMap[tensorList.id] = tensorList;\n  }\n\n  getTensorList(id: number): TensorList {\n    return this.tensorListMap[id];\n  }\n\n  dispose(keepIds: Set<number>) {\n    for (const key in this.tensorArrayMap) {\n      this.tensorArrayMap[key].clearAndClose(keepIds);\n    }\n\n    for (const key in this.tensorListMap) {\n      this.tensorListMap[key].clearAndClose(keepIds);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedTensorMap} from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../data/types';\nimport {parseNodeName} from '../operations/executors/utils';\nimport {Graph, Node} from '../operations/types';\n\nexport interface ExecutionInfo {\n  inputs: NamedTensorMap;\n  outputs: Node[];\n  usedNodes: Set<string>;\n  missingInputs: string[];\n  dynamicNode: Node;\n  syncInputs: string[];\n}\n\n/**\n * Given graph inputs and desired outputs, find the minimal set of nodes\n * to execute in order to compute the outputs. In addition return other useful\n * info such:\n * - Missing inputs needed to compute the output.\n * - Whether the subgraph contains dynamic ops (control flow, dynamic shape).\n * - Alternative inputs in order to avoid async (dynamic op) execution.\n */\nexport function getExecutionSubgraph(\n    inputs: NamedTensorMap, outputs: Node[], weightMap: NamedTensorsMap,\n    initNodes?: Node[]): ExecutionInfo {\n  const usedNodes = new Set<string>();\n  const missingInputs: string[] = [];\n  let dynamicNode: Node = null;\n  let syncInputs: string[] = null;\n\n  // Start with the outputs, going backwards and find all the nodes that are\n  // needed to compute those outputs.\n  const seen = new Set<string>();\n  const inputNodeNames =\n      Object.keys(inputs).map(name => parseNodeName(name)[0]);\n\n  let initNodeNames: string[] = [];\n  if (initNodes != null) {\n    initNodeNames = initNodes.map(node => parseNodeName(node.name)[0]);\n  }\n\n  const frontier = [...outputs];\n  while (frontier.length > 0) {\n    const node = frontier.pop();\n    if (isControlFlow(node) || isDynamicShape(node) || isHashTable(node)) {\n      if (dynamicNode == null) {\n        dynamicNode = node;\n        syncInputs = dynamicNode.children.map(child => child.name)\n                         .filter(name => usedNodes.has(name));\n      }\n    }\n    usedNodes.add(node.name);\n\n    // Weights are dead end since we already have their values.\n    if (weightMap[node.name] != null) {\n      continue;\n    }\n    // This node is a dead end since it's one of the user-provided inputs.\n    if (inputNodeNames.indexOf(node.name) !== -1) {\n      continue;\n    }\n    // This node is a dead end since it doesn't have any inputs.\n    if (initNodeNames.indexOf(node.name) !== -1) {\n      continue;\n    }\n    if (node.inputs.length === 0) {\n      missingInputs.push(node.name);\n      continue;\n    }\n    node.inputs.forEach(input => {\n      // Don't add to the frontier if it is already there.\n      if (seen.has(input.name)) {\n        return;\n      }\n      seen.add(input.name);\n      frontier.push(input);\n    });\n  }\n  return {inputs, outputs, usedNodes, missingInputs, dynamicNode, syncInputs};\n}\n\n/**\n * Given the execution info, return a list of nodes in topological order that\n * need to be executed to compute the output.\n */\nexport function getNodesInTopologicalOrder(\n    graph: Graph, weightMap: NamedTensorsMap,\n    executionInfo: ExecutionInfo): Node[] {\n  const {usedNodes, inputs} = executionInfo;\n  const frontier: Node[] = [];\n  const inputNodes = Object.keys(inputs)\n                         .map(name => parseNodeName(name)[0])\n                         .map(name => graph.nodes[name]);\n  const initNodes = graph.initNodes;\n\n  inputNodes.forEach(input => {\n    if (usedNodes.has(input.name)) {\n      frontier.push(input);\n    }\n  });\n  graph.weights.forEach(weight => {\n    if (usedNodes.has(weight.name)) {\n      frontier.push(weight);\n    }\n  });\n  if (initNodes != null) {\n    initNodes.forEach(node => {\n      if (usedNodes.has(node.name)) {\n        frontier.push(node);\n      }\n    });\n  }\n  const seen = new Set<string>();\n  const orderedNodes: Node[] = [];\n  while (frontier.length > 0) {\n    const node = frontier.pop();\n    seen.add(node.name);\n    if (!weightMap[node.name]) {\n      orderedNodes.push(node);\n    }\n    node.children.forEach(child => {\n      if (!seen.has(child.name) && usedNodes.has(child.name) &&\n          child.inputs.every(input => seen.has(input.name))) {\n        frontier.push(child);\n      }\n    });\n  }\n  return orderedNodes;\n}\n\nconst CONTROL_FLOW_OPS = [\n  'Switch', 'Merge', 'Enter', 'Exit', 'NextIteration', 'StatelessIf',\n  'StatelessWhile', 'if', 'While'\n];\nconst DYNAMIC_SHAPE_OPS = [\n  'NonMaxSuppressionV2', 'NonMaxSuppressionV3', 'NonMaxSuppressionV5', 'Where'\n];\nconst HASH_TABLE_OPS = [\n  'HashTable', 'HashTableV2', 'LookupTableImport', 'LookupTableImportV2',\n  'LookupTableFind', 'LookupTableFindV2', 'LookupTableSize', 'LookupTableSizeV2'\n];\n\nexport function isControlFlow(node: Node) {\n  return CONTROL_FLOW_OPS.indexOf(node.op) >= 0;\n}\n\nexport function isDynamicShape(node: Node) {\n  return DYNAMIC_SHAPE_OPS.indexOf(node.op) >= 0;\n}\n\nexport function isHashTable(node: Node) {\n  return HASH_TABLE_OPS.indexOf(node.op) >= 0;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, NamedTensorMap, Tensor, tidy, util} from '@tensorflow/tfjs-core';\n\nimport {ISignatureDef} from '../data/compiled_api';\nimport {NamedTensorsMap, TensorArrayMap, TensorInfo, TensorListMap} from '../data/types';\nimport {getNodeNameAndIndex, getParamValue, getTensor, getTensorsForCurrentContenxt, parseNodeName} from '../operations/executors/utils';\nimport {executeOp} from '../operations/operation_executor';\nimport {Graph, Node} from '../operations/types';\n\nimport {ExecutionContext, ExecutionContextInfo} from './execution_context';\nimport {getExecutionSubgraph, getNodesInTopologicalOrder, isControlFlow} from './model_analysis';\nimport {ResourceManager} from './resource_manager';\nimport {FunctionExecutor} from './types';\n\ninterface NodeWithContexts {\n  contexts: ExecutionContextInfo[];\n  node: Node;\n}\n\nexport class GraphExecutor implements FunctionExecutor {\n  private compiledMap: Map<string, Node[]> = new Map();\n  private _weightMap: NamedTensorsMap = {};\n  private _weightIds: number[];\n  private _signature: ISignatureDef;\n  private _inputs: Node[];\n  private _outputs: Node[];\n  private _initNodes: Node[];  // Internal init nodes to start initialization.\n  private SEPERATOR = ',';\n  private _functions: {[key: string]: Graph} = {};\n  private _functionExecutorMap: {[key: string]: FunctionExecutor} = {};\n  private _resourceManager: ResourceManager;\n\n  get weightIds(): number[] {\n    return this.parent ? this.parent.weightIds : this._weightIds;\n  }\n\n  get functionExecutorMap(): {[key: string]: FunctionExecutor} {\n    return this.parent ? this.parent.functionExecutorMap :\n                         this._functionExecutorMap;\n  }\n\n  get weightMap(): NamedTensorsMap {\n    return this.parent ? this.parent.weightMap : this._weightMap;\n  }\n\n  set weightMap(weightMap: NamedTensorsMap) {\n    const weightIds = Object.keys(weightMap).map(\n        key => weightMap[key].map(tensor => tensor.id));\n    this._weightIds = [].concat(...weightIds);\n    this._weightMap = weightMap;\n  }\n\n  /**\n   * Set `ResourceManager` shared by executors of a model.\n   * @param resourceManager: `ResourceManager` of the `GraphModel`.\n   */\n  set resourceManager(resourceManager: ResourceManager) {\n    this._resourceManager = resourceManager;\n  }\n\n  get inputs(): TensorInfo[] {\n    return this._inputs.map(node => {\n      return {\n        name: node.name,\n        shape: node.attrParams['shape'] ?\n            node.attrParams['shape'].value as number[] :\n            undefined,\n        dtype: node.attrParams['dtype'] ?\n            node.attrParams['dtype'].value as DataType :\n            undefined\n      };\n    });\n  }\n\n  get outputs(): TensorInfo[] {\n    return this._outputs.map(node => {\n      return {\n        name: node.name,\n        shape: node.attrParams['shape'] ?\n            node.attrParams['shape'].value as number[] :\n            undefined,\n        dtype: node.attrParams['dtype'] ?\n            node.attrParams['dtype'].value as DataType :\n            undefined\n      };\n    });\n  }\n\n  get inputNodes(): string[] {\n    return this._inputs.map(node => node.signatureKey || node.name);\n  }\n\n  get outputNodes(): string[] {\n    return this._outputs.map((node) => {\n      const name = node.signatureKey || node.name;\n      return node.defaultOutput ? (`${name}:${node.defaultOutput}`) : name;\n    });\n  }\n\n  get functions(): {[key: string]: ISignatureDef} {\n    return Object.keys(this._functions).reduce((map, key) => {\n      map[key] = this._functions[key].signature;\n      return map;\n    }, {} as {[key: string]: ISignatureDef});\n  }\n\n  /**\n   *\n   * @param graph Graph the model or function graph to be executed.\n   * @param parent When building function exector you need to set the parent\n   * executor. Since the weights and function executor maps are set at parant\n   * level, that function executor can access the function maps and weight maps\n   * through the parent.\n   */\n  constructor(private graph: Graph, private parent?: GraphExecutor) {\n    this._outputs = graph.outputs;\n    this._inputs = graph.inputs;\n    this._initNodes = graph.initNodes;\n    this._signature = graph.signature;\n    this._functions = graph.functions;\n    // create sub-graph executors\n    if (graph.functions != null) {\n      Object.keys(graph.functions).forEach(name => {\n        this._functionExecutorMap[name] =\n            new GraphExecutor(graph.functions[name], this);\n      });\n    }\n  }\n\n  private getCompilationKey(inputs: Node[], outputs: Node[]): string {\n    const sortedInputs = inputs.map(node => node.name).sort();\n    const sortedOutputs = outputs.map(node => node.name).sort();\n    return sortedInputs.join(this.SEPERATOR) + '--' +\n        sortedOutputs.join(this.SEPERATOR);\n  }\n\n  /**\n   * Compiles the inference graph and returns the minimal set of nodes that are\n   * required for execution, in the correct execution order.\n   */\n  private compile(inputs: NamedTensorMap, outputs: Node[]): Node[] {\n    const executionInfo =\n        getExecutionSubgraph(inputs, outputs, this.weightMap, this._initNodes);\n    const {missingInputs, dynamicNode, syncInputs} = executionInfo;\n    if (dynamicNode != null) {\n      throw new Error(\n          `This execution contains the node '${dynamicNode.name}', which has ` +\n          `the dynamic op '${dynamicNode.op}'. Please use ` +\n          `model.executeAsync() instead. Alternatively, to avoid the ` +\n          `dynamic ops, specify the inputs [${syncInputs}]`);\n    }\n\n    if (missingInputs.length > 0) {\n      const outNames = outputs.map(n => n.name);\n      const inNames = Object.keys(inputs);\n      throw new Error(\n          `Cannot compute the outputs [${outNames}] from the provided inputs ` +\n          `[${inNames}]. Missing the following inputs: [${missingInputs}]`);\n    }\n\n    return getNodesInTopologicalOrder(\n        this.graph, this.weightMap, executionInfo);\n  }\n\n  /**\n   * Executes the inference for given input tensors.\n   * @param inputs Tensor map for the model inputs, keyed by the input node\n   * names.\n   * @param outputs Optional. output node name from the Tensorflow model, if\n   * no outputs are specified, the default outputs of the model would be used.\n   * You can inspect intermediate nodes of the model by adding them to the\n   * outputs array.\n   */\n  execute(inputs: NamedTensorMap, outputs?: string[]): Tensor[] {\n    inputs = this.mapInputs(inputs);\n    const names = Object.keys(inputs).sort();\n    this.checkInputs(inputs);\n    this.checkInputShapeAndType(inputs);\n    outputs = this.mapOutputs(outputs);\n    this.checkOutputs(outputs);\n    const inputNodes =\n        names.map(name => this.graph.nodes[parseNodeName(name)[0]]);\n    const outputNodeNames = outputs.map(name => parseNodeName(name)[0]);\n    let outputNodes = outputNodeNames.map(name => this.graph.nodes[name]);\n\n    // If no outputs are specified, then use the default outputs of the model.\n    if (outputNodes.length === 0) {\n      outputNodes = this._outputs;\n    }\n\n    const compilationKey = this.getCompilationKey(inputNodes, outputNodes);\n\n    // Do nothing if the compiled graph cache contains the input.\n    let orderedNodes = this.compiledMap.get(compilationKey);\n    if (orderedNodes == null) {\n      orderedNodes = this.compile(inputs, outputNodes);\n      this.compiledMap.set(compilationKey, orderedNodes);\n    }\n\n    const tensorArrayMap: TensorArrayMap = {};\n    const tensorListMap: TensorListMap = {};\n\n    return tidy(() => {\n      const context = new ExecutionContext(\n          this.weightMap, tensorArrayMap, tensorListMap,\n          this.functionExecutorMap);\n      const tensorsMap: NamedTensorsMap = {...this.weightMap};\n\n      Object.keys(inputs).forEach(name => {\n        const [nodeName, index] = parseNodeName(name);\n        const tensors: Tensor[] = [];\n        tensors[index] = inputs[name];\n        tensorsMap[nodeName] = tensors;\n      });\n\n      const tensorsToKeep = this.getFrozenTensorIds(tensorsMap);\n      const intermediateTensorConsumerCount: {[key: number]: number} = {};\n      for (let i = 0; i < orderedNodes.length; i++) {\n        const node = orderedNodes[i];\n        if (!tensorsMap[node.name]) {\n          const tensors =\n              executeOp(node, tensorsMap, context, this._resourceManager) as\n              Tensor[];\n          if (util.isPromise(tensors)) {\n            throw new Error(\n                `The execution of the op '${node.op}' returned a promise. ` +\n                `Please use model.executeAsync() instead.`);\n          }\n          tensorsMap[node.name] = tensors;\n          this.checkTensorForDisposal(\n              node.name, node, tensorsMap, context, tensorsToKeep,\n              outputNodeNames, intermediateTensorConsumerCount);\n        }\n      }\n      // dispose the context for the root executor\n      if (this.parent == null) {\n        context.dispose(tensorsToKeep);\n      }\n      return outputs.map(name => getTensor(name, tensorsMap, context));\n    });\n  }\n\n  private getFrozenTensorIds(tensorMap: NamedTensorsMap): Set<number> {\n    const ids = [].concat.apply(\n        [],\n        Object.keys(tensorMap)\n            .map(key => tensorMap[key])\n            .map(tensors => tensors.map(tensor => tensor.id)));\n    return new Set(ids);\n  }\n  private checkTensorForDisposal(\n      nodeName: string, node: Node, tensorMap: NamedTensorsMap,\n      context: ExecutionContext, tensorsToKeep: Set<number>,\n      outputNames: string[],\n      intermediateTensorConsumerCount: {[key: string]: number}) {\n    // Skip output nodes and any control flow nodes, since its dependency is\n    // tricky to track correctly.\n    if (node.category === 'control' || outputNames.indexOf(nodeName) !== -1) {\n      return;\n    }\n\n    tensorMap[nodeName].forEach(tensor => {\n      if (tensor != null) {\n        intermediateTensorConsumerCount[tensor.id] =\n            (intermediateTensorConsumerCount[tensor.id] || 0) +\n            node.children.length;\n      }\n    });\n    node.inputs.forEach(input => {\n      // Skip any control flow nodes, since its dependency is tricky to track\n      // correctly.\n      if (input.category !== 'control') {\n        const tensors =\n            getTensorsForCurrentContenxt(input.name, tensorMap, context);\n        if (tensors != null) {\n          tensors.forEach(tensor => {\n            if (tensor && !tensor.kept && !tensorsToKeep.has(tensor.id)) {\n              const count = intermediateTensorConsumerCount[tensor.id];\n              if (count === 1) {\n                tensor.dispose();\n                delete intermediateTensorConsumerCount[tensor.id];\n              } else if (count != null) {\n                // only intermediate nodes has count set, inputs and weights are\n                // not.\n                intermediateTensorConsumerCount[tensor.id]--;\n              }\n            }\n          });\n        }\n      }\n    });\n  }\n\n  /**\n   * Executes the inference for given input tensors in Async fashion.\n   * @param inputs Tensor map for the model inputs, keyed by the input node\n   * names.\n   * @param outputs output node name from the Tensorflow model, if no outputs\n   * are specified, the default outputs of the model would be used. You can\n   * inspect intermediate nodes of the model by adding them to the outputs\n   * array.\n   */\n  async executeAsync(inputs: NamedTensorMap, outputs?: string[]):\n      Promise<Tensor[]> {\n    return this._executeAsync(inputs, outputs);\n  }\n\n  /**\n   * Executes the inference for given input tensors in Async fashion.\n   * @param inputs Tensor map for the model inputs, keyed by the input node\n   * names.\n   * @param outputs Optional. output node name from the Tensorflow model,\n   * if no outputs are specified, the default outputs of the model would be\n   * used. You can inspect intermediate nodes of the model by adding them to the\n   * outputs array.\n   * @param isFunctionExecution Optional. Flag for executing a function.\n   * @param tensorArrayMap Optional, global TensorArray map by id. Used for\n   * function execution.\n   * @param tensorArrayMap Optinal global TensorList map by id. Used for\n   * function execution.\n   */\n  private async _executeAsync(\n      inputs: NamedTensorMap, outputs?: string[], isFunctionExecution = false,\n      tensorArrayMap: TensorArrayMap = {},\n      tensorListMap: TensorListMap = {}): Promise<Tensor[]> {\n    if (!isFunctionExecution) {\n      inputs = this.mapInputs(inputs);\n      this.checkInputs(inputs);\n      this.checkInputShapeAndType(inputs);\n      outputs = this.mapOutputs(outputs);\n      this.checkOutputs(outputs);\n    }\n\n    const context = new ExecutionContext(\n        this.weightMap, tensorArrayMap, tensorListMap,\n        this.functionExecutorMap);\n\n    // Graph with control flow op requires runtime evaluation of the execution\n    // order, while without control flow the execution order is pre-determined\n    // in the compile method.\n    const tensorMap = await this.executeWithControlFlow(\n        inputs, context, outputs, isFunctionExecution);\n    const results = outputs.map(name => getTensor(name, tensorMap, context));\n\n    // dispose all the intermediate tensors\n    const outputIds = results.map(t => t.id);\n    const inputIds = Object.keys(inputs).map(name => inputs[name].id);\n    const keepIds =\n        new Set<number>([...outputIds, ...inputIds, ...this.weightIds]);\n    Object.keys(tensorMap).forEach(key => {\n      const tensorArray = tensorMap[key];\n      tensorArray.forEach(tensor => {\n        if (tensor && !tensor.kept && !tensor.isDisposed &&\n            !keepIds.has(tensor.id)) {\n          tensor.dispose();\n        }\n      });\n    });\n    // dispose the context for the root executor\n    if (this.parent == null) {\n      context.dispose(keepIds);\n    }\n\n    return results;\n  }\n\n  async executeFunctionAsync(\n      inputs: Tensor[], tensorArrayMap: TensorArrayMap,\n      tensorListMap: TensorListMap): Promise<Tensor[]> {\n    const mappedInputs = inputs.reduce((map, tensor, index) => {\n      map[this.inputs[index].name] = tensor;\n      return map;\n    }, {} as NamedTensorMap);\n\n    return this._executeAsync(\n        mappedInputs, this.outputNodes, true, tensorArrayMap, tensorListMap);\n  }\n  /**\n   * When there are control flow nodes in the graph, the graph execution use\n   * ExecutionContext to keep track of the frames and loop iterators.\n   * @param inputs placeholder tensors for the graph.\n   * @param context the execution context object for current execution.\n   * @param outputNames Optional. output node name from the Tensorflow model,\n   * if no outputs are specified, the default outputs of the model would be\n   * used. You can inspect intermediate nodes of the model by adding them to the\n   * outputs array.\n   * @param isFunctionExecution Flag for executing a function.\n   */\n  private async executeWithControlFlow(\n      inputs: NamedTensorMap, context: ExecutionContext, outputNames?: string[],\n      isFunctionExecution?: boolean): Promise<NamedTensorsMap> {\n    const names = Object.keys(inputs);\n    const inputNodes =\n        names.map(name => this.graph.nodes[parseNodeName(name)[0]]);\n    const outputNodeNames = outputNames.map(name => parseNodeName(name)[0]);\n    let outputNodes = outputNodeNames.map(name => this.graph.nodes[name]);\n\n    // If no outputs are specified, then use the default outputs of the model.\n    if (outputNodes.length === 0) {\n      outputNodes = this._outputs;\n    }\n\n    const {usedNodes, missingInputs, dynamicNode, syncInputs} =\n        getExecutionSubgraph(\n            inputs, outputNodes, this.weightMap, this._initNodes);\n\n    // First nodes to execute include inputNodes, weights, and initNodes.\n    const stack: NodeWithContexts[] = [\n      ...inputNodes, ...this.graph.weights, ...(this._initNodes || [])\n    ].map(node => {\n      return {node, contexts: context.currentContext};\n    });\n    const tensorsMap: NamedTensorsMap = {...this.weightMap};\n    Object.keys(inputs).forEach(name => {\n      const [nodeName, index] = parseNodeName(name);\n      const tensors: Tensor[] = [];\n      tensors[index] = inputs[name];\n      tensorsMap[nodeName] = tensors;\n    });\n    const intermediateTensorConsumerCount: {[key: number]: number} = {};\n    const tensorsToKeep = this.getFrozenTensorIds(tensorsMap);\n    const added: {[key: string]: boolean} = {};\n    while (stack.length > 0) {\n      const promises = this.processStack(\n          inputNodes, stack, context, tensorsMap, added, tensorsToKeep,\n          outputNodeNames, intermediateTensorConsumerCount, usedNodes);\n      await Promise.all(promises);\n    }\n    if (dynamicNode == null && !isFunctionExecution) {\n      console.warn(\n          `This model execution did not contain any nodes with control flow ` +\n          `or dynamic output shapes. You can use model.execute() instead.`);\n    }\n    const missingOutputs =\n        outputNodes\n            .filter(\n                node => !isControlFlow(node) &&\n                    !getTensor(node.name, tensorsMap, context))\n            .map(node => node.name);\n    if (missingOutputs.length > 0) {\n      let alternativeMsg = '';\n      if (dynamicNode != null) {\n        alternativeMsg =\n            `Alternatively, to avoid the dynamic ops, use model.execute() ` +\n            `and specify the inputs [${syncInputs}]`;\n      }\n      throw new Error(\n          `Cannot compute the outputs [${missingOutputs}] from the provided ` +\n          `inputs [${names}]. Consider providing the following inputs: ` +\n          `[${missingInputs}]. ${alternativeMsg}`);\n    }\n    return tensorsMap;\n  }\n\n  private processStack(\n      inputNodes: Node[], stack: NodeWithContexts[], context: ExecutionContext,\n      tensorMap: NamedTensorsMap, added: {[key: string]: boolean},\n      tensorsToKeep: Set<number>, outputNames: string[],\n      intermediateTensorConsumerCount: {[key: number]: number},\n      usedNodes: Set<string>) {\n    const promises: Array<Promise<Tensor[]>> = [];\n    while (stack.length > 0) {\n      const item = stack.pop();\n      context.currentContext = item.contexts;\n      let nodeName = '';\n      // The tensor of the Enter op with isConstant set should be set\n      // in the parent scope, so it will be available as constant for the\n      // whole loop.\n      if (item.node.op === 'Enter' &&\n          getParamValue('isConstant', item.node, tensorMap, context)) {\n        [nodeName] = getNodeNameAndIndex(item.node.name, context);\n      }\n\n      // only process nodes that are not in the tensorMap yet, this include\n      // inputNodes and internal initNodes.\n      if (tensorMap[item.node.name] == null) {\n        const tensors =\n            executeOp(item.node, tensorMap, context, this._resourceManager);\n        if (!nodeName) {\n          [nodeName] = getNodeNameAndIndex(item.node.name, context);\n        }\n        const currentContext = context.currentContext;\n        if (util.isPromise(tensors)) {\n          promises.push((tensors as Promise<Tensor[]>).then(t => {\n            tensorMap[nodeName] = t;\n            context.currentContext = currentContext;\n            this.checkTensorForDisposal(\n                nodeName, item.node, tensorMap, context, tensorsToKeep,\n                outputNames, intermediateTensorConsumerCount);\n            this.processChildNodes(\n                item.node, stack, context, tensorMap, added, usedNodes);\n            return t;\n          }));\n        } else {\n          tensorMap[nodeName] = tensors as Tensor[];\n          this.checkTensorForDisposal(\n              nodeName, item.node, tensorMap, context, tensorsToKeep,\n              outputNames, intermediateTensorConsumerCount);\n          this.processChildNodes(\n              item.node, stack, context, tensorMap, added, usedNodes);\n        }\n      } else {\n        this.processChildNodes(\n            item.node, stack, context, tensorMap, added, usedNodes);\n      }\n    }\n    return promises;\n  }\n\n  private processChildNodes(\n      node: Node, stack: NodeWithContexts[], context: ExecutionContext,\n      tensorMap: NamedTensorsMap, added: {[key: string]: boolean},\n      usedNodes: Set<string>) {\n    node.children.forEach((childNode) => {\n      const [nodeName, ] = getNodeNameAndIndex(childNode.name, context);\n      if (added[nodeName] || !usedNodes.has(childNode.name)) {\n        return;\n      }\n      // Merge op can be pushed if any of its inputs has value.\n      if (childNode.op === 'Merge') {\n        if (childNode.inputNames.some(name => {\n              return !!getTensor(name, tensorMap, context);\n            })) {\n          added[nodeName] = true;\n          stack.push({contexts: context.currentContext, node: childNode});\n        }\n      } else  // Otherwise all inputs must to have value.\n          if (childNode.inputNames.every(name => {\n                return !!getTensor(name, tensorMap, context);\n              })) {\n        added[nodeName] = true;\n        stack.push({contexts: context.currentContext, node: childNode});\n      }\n    });\n  }\n\n  /**\n   * Releases the memory used by the weight tensors.\n   */\n  dispose() {\n    Object.keys(this.weightMap)\n        .forEach(\n            key => this.weightMap[key].forEach(tensor => tensor.dispose()));\n  }\n\n  private checkInputShapeAndType(inputs: NamedTensorMap) {\n    Object.keys(inputs).forEach(name => {\n      const input = inputs[name];\n      const [nodeName, ] = parseNodeName(name);\n      const node = this.graph.nodes[nodeName];\n      if (node.attrParams['shape'] && node.attrParams['shape'].value) {\n        const shape = node.attrParams['shape'].value as number[];\n        const match = shape.length === input.shape.length &&\n            input.shape.every(\n                (dim, index) => shape[index] === -1 || shape[index] === dim);\n        util.assert(\n            match,\n            () => `The shape of dict['${node.name}'] provided in ` +\n                `model.execute(dict) must be [${shape}], but was ` +\n                `[${input.shape}]`);\n      }\n      if (node.attrParams['dtype'] && node.attrParams['dtype'].value) {\n        util.assert(\n            input.dtype === node.attrParams['dtype'].value as string,\n            () => `The dtype of dict['${node.name}'] provided in ` +\n                `model.execute(dict) must be ` +\n                `${node.attrParams['dtype'].value}, but was ${input.dtype}`);\n      }\n    });\n  }\n\n  private mapInputs(inputs: NamedTensorMap) {\n    const result: NamedTensorMap = {};\n    for (const inputName in inputs) {\n      if (this._signature != null && this._signature.inputs != null &&\n          this._signature.inputs[inputName] != null) {\n        const tensor = this._signature.inputs[inputName];\n        result[tensor.name] = inputs[inputName];\n      } else {\n        result[inputName] = inputs[inputName];\n      }\n    }\n    return result;\n  }\n\n  private checkInputs(inputs: NamedTensorMap) {\n    const notInGraph = Object.keys(inputs).filter(name => {\n      const [nodeName] = parseNodeName(name);\n      return this.graph.nodes[nodeName] == null;\n    });\n    if (notInGraph.length > 0) {\n      throw new Error(\n          `The dict provided in model.execute(dict) has ` +\n          `keys: [${notInGraph}] that are not part of graph`);\n    }\n  }\n\n  private mapOutputs(outputs: string[]) {\n    return outputs.map(name => {\n      if (this._signature != null && this._signature.outputs != null &&\n          this._signature.outputs[name] != null) {\n        const tensor = this._signature.outputs[name];\n        return tensor.name;\n      }\n      return name;\n    }, {});\n  }\n\n  private checkOutputs(outputs: string[]): void {\n    outputs.forEach(name => {\n      const [normalizedName] = parseNodeName(name);\n      if (!this.graph.nodes[normalizedName]) {\n        throw new Error(`The output '${name}' is not found in the graph`);\n      }\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {HashTableMap, NamedTensorMap} from '../data/types';\nimport {HashTable} from './hash_table';\n\n/**\n * Contains global resources of a model.\n */\nexport class ResourceManager {\n  constructor(\n      readonly hashTableNameToHandle: NamedTensorMap = {},\n      readonly hashTableMap: HashTableMap = {}) {}\n\n  /**\n   * Register a `HashTable` in the resource manager.\n   *\n   * The `HashTable` can be retrieved by `resourceManager.getHashTableById`,\n   * where id is the table handle tensor's id.\n   *\n   * @param name Op node name that creates the `HashTable`.\n   * @param hashTable The `HashTable` to be added to resource manager.\n   */\n  addHashTable(name: string, hashTable: HashTable) {\n    this.hashTableNameToHandle[name] = hashTable.handle;\n    this.hashTableMap[hashTable.id] = hashTable;\n  }\n\n  /**\n   * Get the table handle by node name.\n   * @param name Op node name that creates the `HashTable`. This name is also\n   *     used in the inputs list of lookup and import `HashTable` ops.\n   */\n  getHashTableHandleByName(name: string) {\n    return this.hashTableNameToHandle[name];\n  }\n\n  /**\n   * Get the actual `HashTable` by its handle tensor's id.\n   * @param id The id of the handle tensor.\n   */\n  getHashTableById(id: number): HashTable {\n    return this.hashTableMap[id];\n  }\n\n  /**\n   * Dispose `ResourceManager`, including its hashTables and tensors in them.\n   */\n  dispose() {\n    for (const key in this.hashTableMap) {\n      this.hashTableMap[key].clearAndClose();\n      delete this.hashTableMap[key];\n    }\n\n    for (const name in this.hashTableNameToHandle) {\n      this.hashTableNameToHandle[name].dispose();\n      delete this.hashTableNameToHandle[name];\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {InferenceModel, io, ModelPredictConfig, NamedTensorMap, Tensor} from '@tensorflow/tfjs-core';\n\nimport * as tensorflow from '../data/compiled_api';\nimport {NamedTensorsMap, TensorInfo} from '../data/types';\nimport {OperationMapper} from '../operations/operation_mapper';\n\nimport {GraphExecutor} from './graph_executor';\nimport {ResourceManager} from './resource_manager';\n\nexport const TFHUB_SEARCH_PARAM = '?tfjs-format=file';\nexport const DEFAULT_MODEL_NAME = 'model.json';\n/**\n * A `tf.GraphModel` is a directed, acyclic graph built from a\n * SavedModel GraphDef and allows inference execution.\n *\n * A `tf.GraphModel` can only be created by loading from a model converted from\n * a [TensorFlow SavedModel](https://www.tensorflow.org/guide/saved_model) using\n * the command line converter tool and loaded via `tf.loadGraphModel`.\n *\n * @doc {heading: 'Models', subheading: 'Classes'}\n */\nexport class GraphModel implements InferenceModel {\n  private executor: GraphExecutor;\n  private version = 'n/a';\n  private handler: io.IOHandler;\n  private artifacts: io.ModelArtifacts;\n  private initializer: GraphExecutor;\n  private resourceManager: ResourceManager;\n  private signature: tensorflow.ISignatureDef;\n\n  // Returns the version information for the tensorflow model GraphDef.\n  get modelVersion(): string {\n    return this.version;\n  }\n\n  get inputNodes(): string[] {\n    return this.executor.inputNodes;\n  }\n\n  get outputNodes(): string[] {\n    return this.executor.outputNodes;\n  }\n\n  get inputs(): TensorInfo[] {\n    return this.executor.inputs;\n  }\n\n  get outputs(): TensorInfo[] {\n    return this.executor.outputs;\n  }\n\n  get weights(): NamedTensorsMap {\n    return this.executor.weightMap;\n  }\n\n  get metadata(): {} {\n    return this.artifacts.userDefinedMetadata;\n  }\n\n  get modelSignature(): {} {\n    return this.signature;\n  }\n\n  /**\n   * @param modelUrl url for the model, or an `io.IOHandler`.\n   * @param weightManifestUrl url for the weight file generated by\n   * scripts/convert.py script.\n   * @param requestOption options for Request, which allows to send credentials\n   * and custom headers.\n   * @param onProgress Optional, progress callback function, fired periodically\n   * before the load is completed.\n   */\n  constructor(\n      private modelUrl: string|io.IOHandler,\n      private loadOptions: io.LoadOptions = {}) {\n    if (loadOptions == null) {\n      this.loadOptions = {};\n    }\n    this.resourceManager = new ResourceManager();\n  }\n\n  private findIOHandler() {\n    const path = this.modelUrl;\n    if ((path as io.IOHandler).load != null) {\n      // Path is an IO Handler.\n      this.handler = path as io.IOHandler;\n    } else if (this.loadOptions.requestInit != null) {\n      this.handler = io.browserHTTPRequest(path as string, this.loadOptions);\n    } else {\n      const handlers = io.getLoadHandlers(path as string, this.loadOptions);\n      if (handlers.length === 0) {\n        // For backward compatibility: if no load handler can be found,\n        // assume it is a relative http path.\n        handlers.push(io.browserHTTPRequest(path as string, this.loadOptions));\n      } else if (handlers.length > 1) {\n        throw new Error(\n            `Found more than one (${handlers.length}) load handlers for ` +\n            `URL '${[path]}'`);\n      }\n      this.handler = handlers[0];\n    }\n  }\n\n  /**\n   * Loads the model and weight files, construct the in memory weight map and\n   * compile the inference graph.\n   */\n  async load(): Promise<boolean> {\n    this.findIOHandler();\n    if (this.handler.load == null) {\n      throw new Error(\n          'Cannot proceed with model loading because the IOHandler provided ' +\n          'does not have the `load` method implemented.');\n    }\n    const artifacts = await this.handler.load();\n\n    return this.loadSync(artifacts);\n  }\n\n  /**\n   * Synchronously construct the in memory weight map and\n   * compile the inference graph. Also initialize hashtable if any.\n   *\n   * @doc {heading: 'Models', subheading: 'Classes', ignoreCI: true}\n   */\n  loadSync(artifacts: io.ModelArtifacts) {\n    this.artifacts = artifacts;\n    const graph = this.artifacts.modelTopology as tensorflow.IGraphDef;\n\n    let signature;\n    if (this.artifacts.userDefinedMetadata != null &&\n        this.artifacts.userDefinedMetadata.signature != null) {\n      signature =  // tslint:disable-next-line:no-any\n          (this.artifacts.userDefinedMetadata as any).signature as\n          tensorflow.ISignatureDef;\n    } else {\n      signature = this.artifacts.signature;\n    }\n    this.signature = signature;\n\n    this.version = `${graph.versions.producer}.${graph.versions.minConsumer}`;\n    const weightMap =\n        io.decodeWeights(this.artifacts.weightData, this.artifacts.weightSpecs);\n    this.executor = new GraphExecutor(\n        OperationMapper.Instance.transformGraph(graph, this.signature));\n    this.executor.weightMap = this.convertTensorMapToTensorsMap(weightMap);\n    // Attach a model-level resourceManager to each executor to share resources,\n    // such as `HashTable`.\n    this.executor.resourceManager = this.resourceManager;\n\n    if (artifacts.modelInitializer != null &&\n        (artifacts.modelInitializer as tensorflow.IGraphDef).node != null) {\n      const initializer =\n          OperationMapper.Instance.transformGraph(artifacts.modelInitializer);\n      this.initializer = new GraphExecutor(initializer);\n      this.initializer.weightMap = this.executor.weightMap;\n      // Attach a model-level resourceManager to the initializer, the\n      // hashTables created from when executing the initializer will be stored\n      // in the resourceManager.\n      this.initializer.resourceManager = this.resourceManager;\n      this.initializer.executeAsync({}, []);\n    }\n\n    return true;\n  }\n\n  /**\n   * Save the configuration and/or weights of the GraphModel.\n   *\n   * An `IOHandler` is an object that has a `save` method of the proper\n   * signature defined. The `save` method manages the storing or\n   * transmission of serialized data (\"artifacts\") that represent the\n   * model's topology and weights onto or via a specific medium, such as\n   * file downloads, local storage, IndexedDB in the web browser and HTTP\n   * requests to a server. TensorFlow.js provides `IOHandler`\n   * implementations for a number of frequently used saving mediums, such as\n   * `tf.io.browserDownloads` and `tf.io.browserLocalStorage`. See `tf.io`\n   * for more details.\n   *\n   * This method also allows you to refer to certain types of `IOHandler`s\n   * as URL-like string shortcuts, such as 'localstorage://' and\n   * 'indexeddb://'.\n   *\n   * Example 1: Save `model`'s topology and weights to browser [local\n   * storage](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage);\n   * then load it back.\n   *\n   * ```js\n   * const modelUrl =\n   *    'https://storage.googleapis.com/tfjs-models/savedmodel/mobilenet_v2_1.0_224/model.json';\n   * const model = await tf.loadGraphModel(modelUrl);\n   * const zeros = tf.zeros([1, 224, 224, 3]);\n   * model.predict(zeros).print();\n   *\n   * const saveResults = await model.save('localstorage://my-model-1');\n   *\n   * const loadedModel = await tf.loadGraphModel('localstorage://my-model-1');\n   * console.log('Prediction from loaded model:');\n   * model.predict(zeros).print();\n   * ```\n   *\n   * @param handlerOrURL An instance of `IOHandler` or a URL-like,\n   * scheme-based string shortcut for `IOHandler`.\n   * @param config Options for saving the model.\n   * @returns A `Promise` of `SaveResult`, which summarizes the result of\n   * the saving, such as byte sizes of the saved artifacts for the model's\n   *   topology and weight values.\n   *\n   * @doc {heading: 'Models', subheading: 'Classes', ignoreCI: true}\n   */\n  async save(handlerOrURL: io.IOHandler|string, config?: io.SaveConfig):\n      Promise<io.SaveResult> {\n    if (typeof handlerOrURL === 'string') {\n      const handlers = io.getSaveHandlers(handlerOrURL);\n      if (handlers.length === 0) {\n        throw new Error(\n            `Cannot find any save handlers for URL '${handlerOrURL}'`);\n      } else if (handlers.length > 1) {\n        throw new Error(\n            `Found more than one (${handlers.length}) save handlers for ` +\n            `URL '${handlerOrURL}'`);\n      }\n      handlerOrURL = handlers[0];\n    }\n    if (handlerOrURL.save == null) {\n      throw new Error(\n          'GraphModel.save() cannot proceed because the IOHandler ' +\n          'provided does not have the `save` attribute defined.');\n    }\n\n    return handlerOrURL.save(this.artifacts);\n  }\n\n  /**\n   * Execute the inference for the input tensors.\n   *\n   * @param input The input tensors, when there is single input for the model,\n   * inputs param should be a `tf.Tensor`. For models with mutliple inputs,\n   * inputs params should be in either `tf.Tensor`[] if the input order is\n   * fixed, or otherwise NamedTensorMap format.\n   *\n   * For model with multiple inputs, we recommend you use NamedTensorMap as the\n   * input type, if you use `tf.Tensor`[], the order of the array needs to\n   * follow the\n   * order of inputNodes array. @see {@link GraphModel.inputNodes}\n   *\n   * You can also feed any intermediate nodes using the NamedTensorMap as the\n   * input type. For example, given the graph\n   *    InputNode => Intermediate => OutputNode,\n   * you can execute the subgraph Intermediate => OutputNode by calling\n   *    model.execute('IntermediateNode' : tf.tensor(...));\n   *\n   * This is useful for models that uses tf.dynamic_rnn, where the intermediate\n   * state needs to be fed manually.\n   *\n   * For batch inference execution, the tensors for each input need to be\n   * concatenated together. For example with mobilenet, the required input shape\n   * is [1, 244, 244, 3], which represents the [batch, height, width, channel].\n   * If we are provide a batched data of 100 images, the input tensor should be\n   * in the shape of [100, 244, 244, 3].\n   *\n   * @param config Prediction configuration for specifying the batch size and\n   * output node names. Currently the batch size option is ignored for graph\n   * model.\n   *\n   * @returns Inference result tensors. The output would be single `tf.Tensor`\n   * if model has single output node, otherwise Tensor[] or NamedTensorMap[]\n   * will be returned for model with multiple outputs.\n   *\n   * @doc {heading: 'Models', subheading: 'Classes'}\n   */\n  predict(inputs: Tensor|Tensor[]|NamedTensorMap, config?: ModelPredictConfig):\n      Tensor|Tensor[]|NamedTensorMap {\n    return this.execute(inputs, this.outputNodes);\n  }\n\n  private normalizeInputs(inputs: Tensor|Tensor[]|\n                          NamedTensorMap): NamedTensorMap {\n    if (!(inputs instanceof Tensor) && !Array.isArray(inputs)) {\n      // The input is already a NamedTensorMap.\n      return inputs;\n    }\n    inputs = Array.isArray(inputs) ? inputs : [inputs];\n    if (inputs.length !== this.inputNodes.length) {\n      throw new Error(\n          'Input tensor count mismatch,' +\n          `the graph model has ${this.inputNodes.length} placeholders, ` +\n          `while there are ${inputs.length} input tensors.`);\n    }\n    return this.inputNodes.reduce((map, inputName, i) => {\n      map[inputName] = (inputs as Tensor[])[i];\n      return map;\n    }, {} as NamedTensorMap);\n  }\n\n  private normalizeOutputs(outputs: string|string[]): string[] {\n    outputs = outputs || this.outputNodes;\n    return !Array.isArray(outputs) ? [outputs] : outputs;\n  }\n\n  /**\n   * Executes inference for the model for given input tensors.\n   * @param inputs tensor, tensor array or tensor map of the inputs for the\n   * model, keyed by the input node names.\n   * @param outputs output node name from the Tensorflow model, if no\n   * outputs are specified, the default outputs of the model would be used.\n   * You can inspect intermediate nodes of the model by adding them to the\n   * outputs array.\n   *\n   * @returns A single tensor if provided with a single output or no outputs\n   * are provided and there is only one default output, otherwise return a\n   * tensor array. The order of the tensor array is the same as the outputs\n   * if provided, otherwise the order of outputNodes attribute of the model.\n   *\n   * @doc {heading: 'Models', subheading: 'Classes'}\n   */\n  execute(inputs: Tensor|Tensor[]|NamedTensorMap, outputs?: string|string[]):\n      Tensor|Tensor[] {\n    inputs = this.normalizeInputs(inputs);\n    outputs = this.normalizeOutputs(outputs);\n    const result = this.executor.execute(inputs, outputs);\n    return result.length > 1 ? result : result[0];\n  }\n  /**\n   * Executes inference for the model for given input tensors in async\n   * fashion, use this method when your model contains control flow ops.\n   * @param inputs tensor, tensor array or tensor map of the inputs for the\n   * model, keyed by the input node names.\n   * @param outputs output node name from the Tensorflow model, if no outputs\n   * are specified, the default outputs of the model would be used. You can\n   * inspect intermediate nodes of the model by adding them to the outputs\n   * array.\n   *\n   * @returns A Promise of single tensor if provided with a single output or\n   * no outputs are provided and there is only one default output, otherwise\n   * return a tensor map.\n   *\n   * @doc {heading: 'Models', subheading: 'Classes'}\n   */\n  async executeAsync(\n      inputs: Tensor|Tensor[]|NamedTensorMap,\n      outputs?: string|string[]): Promise<Tensor|Tensor[]> {\n    inputs = this.normalizeInputs(inputs);\n    outputs = this.normalizeOutputs(outputs);\n    const result = await this.executor.executeAsync(inputs, outputs);\n    return result.length > 1 ? result : result[0];\n  }\n\n  private convertTensorMapToTensorsMap(map: NamedTensorMap): NamedTensorsMap {\n    return Object.keys(map).reduce((newMap: NamedTensorsMap, key) => {\n      newMap[key] = [map[key]];\n      return newMap;\n    }, {});\n  }\n\n  /**\n   * Releases the memory used by the weight tensors and resourceManager.\n   *\n   * @doc {heading: 'Models', subheading: 'Classes'}\n   */\n  dispose() {\n    this.executor.dispose();\n\n    if (this.initializer) {\n      this.initializer.dispose();\n    }\n\n    this.resourceManager.dispose();\n  }\n}\n\n/**\n * Load a graph model given a URL to the model definition.\n *\n * Example of loading MobileNetV2 from a URL and making a prediction with a\n * zeros input:\n *\n * ```js\n * const modelUrl =\n *    'https://storage.googleapis.com/tfjs-models/savedmodel/mobilenet_v2_1.0_224/model.json';\n * const model = await tf.loadGraphModel(modelUrl);\n * const zeros = tf.zeros([1, 224, 224, 3]);\n * model.predict(zeros).print();\n * ```\n *\n * Example of loading MobileNetV2 from a TF Hub URL and making a prediction with\n * a zeros input:\n *\n * ```js\n * const modelUrl =\n *    'https://tfhub.dev/google/imagenet/mobilenet_v2_140_224/classification/2';\n * const model = await tf.loadGraphModel(modelUrl, {fromTFHub: true});\n * const zeros = tf.zeros([1, 224, 224, 3]);\n * model.predict(zeros).print();\n * ```\n * @param modelUrl The url or an `io.IOHandler` that loads the model.\n * @param options Options for the HTTP request, which allows to send credentials\n *    and custom headers.\n *\n * @doc {heading: 'Models', subheading: 'Loading'}\n */\nexport async function loadGraphModel(\n    modelUrl: string|io.IOHandler,\n    options: io.LoadOptions = {}): Promise<GraphModel> {\n  if (modelUrl == null) {\n    throw new Error(\n        'modelUrl in loadGraphModel() cannot be null. Please provide a url ' +\n        'or an IOHandler that loads the model');\n  }\n  if (options == null) {\n    options = {};\n  }\n\n  if (options.fromTFHub) {\n    if ((modelUrl as io.IOHandler).load == null) {\n      if (!(modelUrl as string).endsWith('/')) {\n        modelUrl = (modelUrl as string) + '/';\n      }\n      modelUrl = `${modelUrl}${DEFAULT_MODEL_NAME}${TFHUB_SEARCH_PARAM}`;\n    }\n  }\n  const model = new GraphModel(modelUrl, options);\n  await model.load();\n  return model;\n}\n","/**\n    * @license\n    * Copyright 2021 Google LLC. All Rights Reserved.\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    * http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    * =============================================================================\n    */\nimport{loadGraphModel}from\"@tensorflow/tfjs-converter\";import*as tf from\"@tensorflow/tfjs-core\";import{tidy,zeros,Tensor,browser,add,mul,cast,image,reshape,squeeze,slice,softmax}from\"@tensorflow/tfjs-core\";function __awaiter(e,a,r,o){return new(r||(r=Promise))(function(i,t){function n(e){try{s(o.next(e))}catch(e){t(e)}}function l(e){try{s(o.throw(e))}catch(e){t(e)}}function s(e){e.done?i(e.value):new r(function(a){a(e.value)}).then(n,l)}s((o=o.apply(e,a||[])).next())})}function __generator(e,a){var r,o,i,t,n={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return t={next:l(0),throw:l(1),return:l(2)},\"function\"==typeof Symbol&&(t[Symbol.iterator]=function(){return this}),t;function l(t){return function(l){return function(t){if(r)throw new TypeError(\"Generator is already executing.\");for(;n;)try{if(r=1,o&&(i=2&t[0]?o.return:t[0]?o.throw||((i=o.return)&&i.call(o),0):o.next)&&!(i=i.call(o,t[1])).done)return i;switch(o=0,i&&(t=[2&t[0],i.value]),t[0]){case 0:case 1:i=t;break;case 4:return n.label++,{value:t[1],done:!1};case 5:n.label++,o=t[1],t=[0];continue;case 7:t=n.ops.pop(),n.trys.pop();continue;default:if(!(i=(i=n.trys).length>0&&i[i.length-1])&&(6===t[0]||2===t[0])){n=0;continue}if(3===t[0]&&(!i||t[1]>i[0]&&t[1]<i[3])){n.label=t[1];break}if(6===t[0]&&n.label<i[1]){n.label=i[1],i=t;break}if(i&&n.label<i[2]){n.label=i[2],n.ops.push(t);break}i[2]&&n.ops.pop(),n.trys.pop();continue}t=a.call(e,n)}catch(e){t=[6,e],o=0}finally{r=i=0}if(5&t[0])throw t[1];return{value:t[0]?t[1]:void 0,done:!0}}([t,l])}}}var IMAGENET_CLASSES={0:\"tench, Tinca tinca\",1:\"goldfish, Carassius auratus\",2:\"great white shark, white shark, man-eater, man-eating shark, Carcharodon carcharias\",3:\"tiger shark, Galeocerdo cuvieri\",4:\"hammerhead, hammerhead shark\",5:\"electric ray, crampfish, numbfish, torpedo\",6:\"stingray\",7:\"cock\",8:\"hen\",9:\"ostrich, Struthio camelus\",10:\"brambling, Fringilla montifringilla\",11:\"goldfinch, Carduelis carduelis\",12:\"house finch, linnet, Carpodacus mexicanus\",13:\"junco, snowbird\",14:\"indigo bunting, indigo finch, indigo bird, Passerina cyanea\",15:\"robin, American robin, Turdus migratorius\",16:\"bulbul\",17:\"jay\",18:\"magpie\",19:\"chickadee\",20:\"water ouzel, dipper\",21:\"kite\",22:\"bald eagle, American eagle, Haliaeetus leucocephalus\",23:\"vulture\",24:\"great grey owl, great gray owl, Strix nebulosa\",25:\"European fire salamander, Salamandra salamandra\",26:\"common newt, Triturus vulgaris\",27:\"eft\",28:\"spotted salamander, Ambystoma maculatum\",29:\"axolotl, mud puppy, Ambystoma mexicanum\",30:\"bullfrog, Rana catesbeiana\",31:\"tree frog, tree-frog\",32:\"tailed frog, bell toad, ribbed toad, tailed toad, Ascaphus trui\",33:\"loggerhead, loggerhead turtle, Caretta caretta\",34:\"leatherback turtle, leatherback, leathery turtle, Dermochelys coriacea\",35:\"mud turtle\",36:\"terrapin\",37:\"box turtle, box tortoise\",38:\"banded gecko\",39:\"common iguana, iguana, Iguana iguana\",40:\"American chameleon, anole, Anolis carolinensis\",41:\"whiptail, whiptail lizard\",42:\"agama\",43:\"frilled lizard, Chlamydosaurus kingi\",44:\"alligator lizard\",45:\"Gila monster, Heloderma suspectum\",46:\"green lizard, Lacerta viridis\",47:\"African chameleon, Chamaeleo chamaeleon\",48:\"Komodo dragon, Komodo lizard, dragon lizard, giant lizard, Varanus komodoensis\",49:\"African crocodile, Nile crocodile, Crocodylus niloticus\",50:\"American alligator, Alligator mississipiensis\",51:\"triceratops\",52:\"thunder snake, worm snake, Carphophis amoenus\",53:\"ringneck snake, ring-necked snake, ring snake\",54:\"hognose snake, puff adder, sand viper\",55:\"green snake, grass snake\",56:\"king snake, kingsnake\",57:\"garter snake, grass snake\",58:\"water snake\",59:\"vine snake\",60:\"night snake, Hypsiglena torquata\",61:\"boa constrictor, Constrictor constrictor\",62:\"rock python, rock snake, Python sebae\",63:\"Indian cobra, Naja naja\",64:\"green mamba\",65:\"sea snake\",66:\"horned viper, cerastes, sand viper, horned asp, Cerastes cornutus\",67:\"diamondback, diamondback rattlesnake, Crotalus adamanteus\",68:\"sidewinder, horned rattlesnake, Crotalus cerastes\",69:\"trilobite\",70:\"harvestman, daddy longlegs, Phalangium opilio\",71:\"scorpion\",72:\"black and gold garden spider, Argiope aurantia\",73:\"barn spider, Araneus cavaticus\",74:\"garden spider, Aranea diademata\",75:\"black widow, Latrodectus mactans\",76:\"tarantula\",77:\"wolf spider, hunting spider\",78:\"tick\",79:\"centipede\",80:\"black grouse\",81:\"ptarmigan\",82:\"ruffed grouse, partridge, Bonasa umbellus\",83:\"prairie chicken, prairie grouse, prairie fowl\",84:\"peacock\",85:\"quail\",86:\"partridge\",87:\"African grey, African gray, Psittacus erithacus\",88:\"macaw\",89:\"sulphur-crested cockatoo, Kakatoe galerita, Cacatua galerita\",90:\"lorikeet\",91:\"coucal\",92:\"bee eater\",93:\"hornbill\",94:\"hummingbird\",95:\"jacamar\",96:\"toucan\",97:\"drake\",98:\"red-breasted merganser, Mergus serrator\",99:\"goose\",100:\"black swan, Cygnus atratus\",101:\"tusker\",102:\"echidna, spiny anteater, anteater\",103:\"platypus, duckbill, duckbilled platypus, duck-billed platypus, Ornithorhynchus anatinus\",104:\"wallaby, brush kangaroo\",105:\"koala, koala bear, kangaroo bear, native bear, Phascolarctos cinereus\",106:\"wombat\",107:\"jelly fish\",108:\"sea anemone, anemone\",109:\"brain coral\",110:\"flatworm, platyhelminth\",111:\"nematode, nematode worm, roundworm\",112:\"conch\",113:\"snail\",114:\"slug\",115:\"sea slug, nudibranch\",116:\"chiton, coat-of-mail shell, sea cradle, polyplacophore\",117:\"chambered nautilus, pearly nautilus, nautilus\",118:\"Dungeness crab, Cancer magister\",119:\"rock crab, Cancer irroratus\",120:\"fiddler crab\",121:\"king crab, Alaska crab, Alaskan king crab, Alaska king crab, Paralithodes camtschatica\",122:\"American lobster, Northern lobster, Maine lobster, Homarus americanus\",123:\"spiny lobster, langouste, rock lobster, crawfish, crayfish, sea crawfish\",124:\"crayfish, crawfish, crawdad, crawdaddy\",125:\"hermit crab\",126:\"isopod\",127:\"white stork, Ciconia ciconia\",128:\"black stork, Ciconia nigra\",129:\"spoonbill\",130:\"flamingo\",131:\"little blue heron, Egretta caerulea\",132:\"American egret, great white heron, Egretta albus\",133:\"bittern\",134:\"crane\",135:\"limpkin, Aramus pictus\",136:\"European gallinule, Porphyrio porphyrio\",137:\"American coot, marsh hen, mud hen, water hen, Fulica americana\",138:\"bustard\",139:\"ruddy turnstone, Arenaria interpres\",140:\"red-backed sandpiper, dunlin, Erolia alpina\",141:\"redshank, Tringa totanus\",142:\"dowitcher\",143:\"oystercatcher, oyster catcher\",144:\"pelican\",145:\"king penguin, Aptenodytes patagonica\",146:\"albatross, mollymawk\",147:\"grey whale, gray whale, devilfish, Eschrichtius gibbosus, Eschrichtius robustus\",148:\"killer whale, killer, orca, grampus, sea wolf, Orcinus orca\",149:\"dugong, Dugong dugon\",150:\"sea lion\",151:\"Chihuahua\",152:\"Japanese spaniel\",153:\"Maltese dog, Maltese terrier, Maltese\",154:\"Pekinese, Pekingese, Peke\",155:\"Shih-Tzu\",156:\"Blenheim spaniel\",157:\"papillon\",158:\"toy terrier\",159:\"Rhodesian ridgeback\",160:\"Afghan hound, Afghan\",161:\"basset, basset hound\",162:\"beagle\",163:\"bloodhound, sleuthhound\",164:\"bluetick\",165:\"black-and-tan coonhound\",166:\"Walker hound, Walker foxhound\",167:\"English foxhound\",168:\"redbone\",169:\"borzoi, Russian wolfhound\",170:\"Irish wolfhound\",171:\"Italian greyhound\",172:\"whippet\",173:\"Ibizan hound, Ibizan Podenco\",174:\"Norwegian elkhound, elkhound\",175:\"otterhound, otter hound\",176:\"Saluki, gazelle hound\",177:\"Scottish deerhound, deerhound\",178:\"Weimaraner\",179:\"Staffordshire bullterrier, Staffordshire bull terrier\",180:\"American Staffordshire terrier, Staffordshire terrier, American pit bull terrier, pit bull terrier\",181:\"Bedlington terrier\",182:\"Border terrier\",183:\"Kerry blue terrier\",184:\"Irish terrier\",185:\"Norfolk terrier\",186:\"Norwich terrier\",187:\"Yorkshire terrier\",188:\"wire-haired fox terrier\",189:\"Lakeland terrier\",190:\"Sealyham terrier, Sealyham\",191:\"Airedale, Airedale terrier\",192:\"cairn, cairn terrier\",193:\"Australian terrier\",194:\"Dandie Dinmont, Dandie Dinmont terrier\",195:\"Boston bull, Boston terrier\",196:\"miniature schnauzer\",197:\"giant schnauzer\",198:\"standard schnauzer\",199:\"Scotch terrier, Scottish terrier, Scottie\",200:\"Tibetan terrier, chrysanthemum dog\",201:\"silky terrier, Sydney silky\",202:\"soft-coated wheaten terrier\",203:\"West Highland white terrier\",204:\"Lhasa, Lhasa apso\",205:\"flat-coated retriever\",206:\"curly-coated retriever\",207:\"golden retriever\",208:\"Labrador retriever\",209:\"Chesapeake Bay retriever\",210:\"German short-haired pointer\",211:\"vizsla, Hungarian pointer\",212:\"English setter\",213:\"Irish setter, red setter\",214:\"Gordon setter\",215:\"Brittany spaniel\",216:\"clumber, clumber spaniel\",217:\"English springer, English springer spaniel\",218:\"Welsh springer spaniel\",219:\"cocker spaniel, English cocker spaniel, cocker\",220:\"Sussex spaniel\",221:\"Irish water spaniel\",222:\"kuvasz\",223:\"schipperke\",224:\"groenendael\",225:\"malinois\",226:\"briard\",227:\"kelpie\",228:\"komondor\",229:\"Old English sheepdog, bobtail\",230:\"Shetland sheepdog, Shetland sheep dog, Shetland\",231:\"collie\",232:\"Border collie\",233:\"Bouvier des Flandres, Bouviers des Flandres\",234:\"Rottweiler\",235:\"German shepherd, German shepherd dog, German police dog, alsatian\",236:\"Doberman, Doberman pinscher\",237:\"miniature pinscher\",238:\"Greater Swiss Mountain dog\",239:\"Bernese mountain dog\",240:\"Appenzeller\",241:\"EntleBucher\",242:\"boxer\",243:\"bull mastiff\",244:\"Tibetan mastiff\",245:\"French bulldog\",246:\"Great Dane\",247:\"Saint Bernard, St Bernard\",248:\"Eskimo dog, husky\",249:\"malamute, malemute, Alaskan malamute\",250:\"Siberian husky\",251:\"dalmatian, coach dog, carriage dog\",252:\"affenpinscher, monkey pinscher, monkey dog\",253:\"basenji\",254:\"pug, pug-dog\",255:\"Leonberg\",256:\"Newfoundland, Newfoundland dog\",257:\"Great Pyrenees\",258:\"Samoyed, Samoyede\",259:\"Pomeranian\",260:\"chow, chow chow\",261:\"keeshond\",262:\"Brabancon griffon\",263:\"Pembroke, Pembroke Welsh corgi\",264:\"Cardigan, Cardigan Welsh corgi\",265:\"toy poodle\",266:\"miniature poodle\",267:\"standard poodle\",268:\"Mexican hairless\",269:\"timber wolf, grey wolf, gray wolf, Canis lupus\",270:\"white wolf, Arctic wolf, Canis lupus tundrarum\",271:\"red wolf, maned wolf, Canis rufus, Canis niger\",272:\"coyote, prairie wolf, brush wolf, Canis latrans\",273:\"dingo, warrigal, warragal, Canis dingo\",274:\"dhole, Cuon alpinus\",275:\"African hunting dog, hyena dog, Cape hunting dog, Lycaon pictus\",276:\"hyena, hyaena\",277:\"red fox, Vulpes vulpes\",278:\"kit fox, Vulpes macrotis\",279:\"Arctic fox, white fox, Alopex lagopus\",280:\"grey fox, gray fox, Urocyon cinereoargenteus\",281:\"tabby, tabby cat\",282:\"tiger cat\",283:\"Persian cat\",284:\"Siamese cat, Siamese\",285:\"Egyptian cat\",286:\"cougar, puma, catamount, mountain lion, painter, panther, Felis concolor\",287:\"lynx, catamount\",288:\"leopard, Panthera pardus\",289:\"snow leopard, ounce, Panthera uncia\",290:\"jaguar, panther, Panthera onca, Felis onca\",291:\"lion, king of beasts, Panthera leo\",292:\"tiger, Panthera tigris\",293:\"cheetah, chetah, Acinonyx jubatus\",294:\"brown bear, bruin, Ursus arctos\",295:\"American black bear, black bear, Ursus americanus, Euarctos americanus\",296:\"ice bear, polar bear, Ursus Maritimus, Thalarctos maritimus\",297:\"sloth bear, Melursus ursinus, Ursus ursinus\",298:\"mongoose\",299:\"meerkat, mierkat\",300:\"tiger beetle\",301:\"ladybug, ladybeetle, lady beetle, ladybird, ladybird beetle\",302:\"ground beetle, carabid beetle\",303:\"long-horned beetle, longicorn, longicorn beetle\",304:\"leaf beetle, chrysomelid\",305:\"dung beetle\",306:\"rhinoceros beetle\",307:\"weevil\",308:\"fly\",309:\"bee\",310:\"ant, emmet, pismire\",311:\"grasshopper, hopper\",312:\"cricket\",313:\"walking stick, walkingstick, stick insect\",314:\"cockroach, roach\",315:\"mantis, mantid\",316:\"cicada, cicala\",317:\"leafhopper\",318:\"lacewing, lacewing fly\",319:\"dragonfly, darning needle, devil's darning needle, sewing needle, snake feeder, snake doctor, mosquito hawk, skeeter hawk\",320:\"damselfly\",321:\"admiral\",322:\"ringlet, ringlet butterfly\",323:\"monarch, monarch butterfly, milkweed butterfly, Danaus plexippus\",324:\"cabbage butterfly\",325:\"sulphur butterfly, sulfur butterfly\",326:\"lycaenid, lycaenid butterfly\",327:\"starfish, sea star\",328:\"sea urchin\",329:\"sea cucumber, holothurian\",330:\"wood rabbit, cottontail, cottontail rabbit\",331:\"hare\",332:\"Angora, Angora rabbit\",333:\"hamster\",334:\"porcupine, hedgehog\",335:\"fox squirrel, eastern fox squirrel, Sciurus niger\",336:\"marmot\",337:\"beaver\",338:\"guinea pig, Cavia cobaya\",339:\"sorrel\",340:\"zebra\",341:\"hog, pig, grunter, squealer, Sus scrofa\",342:\"wild boar, boar, Sus scrofa\",343:\"warthog\",344:\"hippopotamus, hippo, river horse, Hippopotamus amphibius\",345:\"ox\",346:\"water buffalo, water ox, Asiatic buffalo, Bubalus bubalis\",347:\"bison\",348:\"ram, tup\",349:\"bighorn, bighorn sheep, cimarron, Rocky Mountain bighorn, Rocky Mountain sheep, Ovis canadensis\",350:\"ibex, Capra ibex\",351:\"hartebeest\",352:\"impala, Aepyceros melampus\",353:\"gazelle\",354:\"Arabian camel, dromedary, Camelus dromedarius\",355:\"llama\",356:\"weasel\",357:\"mink\",358:\"polecat, fitch, foulmart, foumart, Mustela putorius\",359:\"black-footed ferret, ferret, Mustela nigripes\",360:\"otter\",361:\"skunk, polecat, wood pussy\",362:\"badger\",363:\"armadillo\",364:\"three-toed sloth, ai, Bradypus tridactylus\",365:\"orangutan, orang, orangutang, Pongo pygmaeus\",366:\"gorilla, Gorilla gorilla\",367:\"chimpanzee, chimp, Pan troglodytes\",368:\"gibbon, Hylobates lar\",369:\"siamang, Hylobates syndactylus, Symphalangus syndactylus\",370:\"guenon, guenon monkey\",371:\"patas, hussar monkey, Erythrocebus patas\",372:\"baboon\",373:\"macaque\",374:\"langur\",375:\"colobus, colobus monkey\",376:\"proboscis monkey, Nasalis larvatus\",377:\"marmoset\",378:\"capuchin, ringtail, Cebus capucinus\",379:\"howler monkey, howler\",380:\"titi, titi monkey\",381:\"spider monkey, Ateles geoffroyi\",382:\"squirrel monkey, Saimiri sciureus\",383:\"Madagascar cat, ring-tailed lemur, Lemur catta\",384:\"indri, indris, Indri indri, Indri brevicaudatus\",385:\"Indian elephant, Elephas maximus\",386:\"African elephant, Loxodonta africana\",387:\"lesser panda, red panda, panda, bear cat, cat bear, Ailurus fulgens\",388:\"giant panda, panda, panda bear, coon bear, Ailuropoda melanoleuca\",389:\"barracouta, snoek\",390:\"eel\",391:\"coho, cohoe, coho salmon, blue jack, silver salmon, Oncorhynchus kisutch\",392:\"rock beauty, Holocanthus tricolor\",393:\"anemone fish\",394:\"sturgeon\",395:\"gar, garfish, garpike, billfish, Lepisosteus osseus\",396:\"lionfish\",397:\"puffer, pufferfish, blowfish, globefish\",398:\"abacus\",399:\"abaya\",400:\"academic gown, academic robe, judge's robe\",401:\"accordion, piano accordion, squeeze box\",402:\"acoustic guitar\",403:\"aircraft carrier, carrier, flattop, attack aircraft carrier\",404:\"airliner\",405:\"airship, dirigible\",406:\"altar\",407:\"ambulance\",408:\"amphibian, amphibious vehicle\",409:\"analog clock\",410:\"apiary, bee house\",411:\"apron\",412:\"ashcan, trash can, garbage can, wastebin, ash bin, ash-bin, ashbin, dustbin, trash barrel, trash bin\",413:\"assault rifle, assault gun\",414:\"backpack, back pack, knapsack, packsack, rucksack, haversack\",415:\"bakery, bakeshop, bakehouse\",416:\"balance beam, beam\",417:\"balloon\",418:\"ballpoint, ballpoint pen, ballpen, Biro\",419:\"Band Aid\",420:\"banjo\",421:\"bannister, banister, balustrade, balusters, handrail\",422:\"barbell\",423:\"barber chair\",424:\"barbershop\",425:\"barn\",426:\"barometer\",427:\"barrel, cask\",428:\"barrow, garden cart, lawn cart, wheelbarrow\",429:\"baseball\",430:\"basketball\",431:\"bassinet\",432:\"bassoon\",433:\"bathing cap, swimming cap\",434:\"bath towel\",435:\"bathtub, bathing tub, bath, tub\",436:\"beach wagon, station wagon, wagon, estate car, beach waggon, station waggon, waggon\",437:\"beacon, lighthouse, beacon light, pharos\",438:\"beaker\",439:\"bearskin, busby, shako\",440:\"beer bottle\",441:\"beer glass\",442:\"bell cote, bell cot\",443:\"bib\",444:\"bicycle-built-for-two, tandem bicycle, tandem\",445:\"bikini, two-piece\",446:\"binder, ring-binder\",447:\"binoculars, field glasses, opera glasses\",448:\"birdhouse\",449:\"boathouse\",450:\"bobsled, bobsleigh, bob\",451:\"bolo tie, bolo, bola tie, bola\",452:\"bonnet, poke bonnet\",453:\"bookcase\",454:\"bookshop, bookstore, bookstall\",455:\"bottlecap\",456:\"bow\",457:\"bow tie, bow-tie, bowtie\",458:\"brass, memorial tablet, plaque\",459:\"brassiere, bra, bandeau\",460:\"breakwater, groin, groyne, mole, bulwark, seawall, jetty\",461:\"breastplate, aegis, egis\",462:\"broom\",463:\"bucket, pail\",464:\"buckle\",465:\"bulletproof vest\",466:\"bullet train, bullet\",467:\"butcher shop, meat market\",468:\"cab, hack, taxi, taxicab\",469:\"caldron, cauldron\",470:\"candle, taper, wax light\",471:\"cannon\",472:\"canoe\",473:\"can opener, tin opener\",474:\"cardigan\",475:\"car mirror\",476:\"carousel, carrousel, merry-go-round, roundabout, whirligig\",477:\"carpenter's kit, tool kit\",478:\"carton\",479:\"car wheel\",480:\"cash machine, cash dispenser, automated teller machine, automatic teller machine, automated teller, automatic teller, ATM\",481:\"cassette\",482:\"cassette player\",483:\"castle\",484:\"catamaran\",485:\"CD player\",486:\"cello, violoncello\",487:\"cellular telephone, cellular phone, cellphone, cell, mobile phone\",488:\"chain\",489:\"chainlink fence\",490:\"chain mail, ring mail, mail, chain armor, chain armour, ring armor, ring armour\",491:\"chain saw, chainsaw\",492:\"chest\",493:\"chiffonier, commode\",494:\"chime, bell, gong\",495:\"china cabinet, china closet\",496:\"Christmas stocking\",497:\"church, church building\",498:\"cinema, movie theater, movie theatre, movie house, picture palace\",499:\"cleaver, meat cleaver, chopper\",500:\"cliff dwelling\",501:\"cloak\",502:\"clog, geta, patten, sabot\",503:\"cocktail shaker\",504:\"coffee mug\",505:\"coffeepot\",506:\"coil, spiral, volute, whorl, helix\",507:\"combination lock\",508:\"computer keyboard, keypad\",509:\"confectionery, confectionary, candy store\",510:\"container ship, containership, container vessel\",511:\"convertible\",512:\"corkscrew, bottle screw\",513:\"cornet, horn, trumpet, trump\",514:\"cowboy boot\",515:\"cowboy hat, ten-gallon hat\",516:\"cradle\",517:\"crane\",518:\"crash helmet\",519:\"crate\",520:\"crib, cot\",521:\"Crock Pot\",522:\"croquet ball\",523:\"crutch\",524:\"cuirass\",525:\"dam, dike, dyke\",526:\"desk\",527:\"desktop computer\",528:\"dial telephone, dial phone\",529:\"diaper, nappy, napkin\",530:\"digital clock\",531:\"digital watch\",532:\"dining table, board\",533:\"dishrag, dishcloth\",534:\"dishwasher, dish washer, dishwashing machine\",535:\"disk brake, disc brake\",536:\"dock, dockage, docking facility\",537:\"dogsled, dog sled, dog sleigh\",538:\"dome\",539:\"doormat, welcome mat\",540:\"drilling platform, offshore rig\",541:\"drum, membranophone, tympan\",542:\"drumstick\",543:\"dumbbell\",544:\"Dutch oven\",545:\"electric fan, blower\",546:\"electric guitar\",547:\"electric locomotive\",548:\"entertainment center\",549:\"envelope\",550:\"espresso maker\",551:\"face powder\",552:\"feather boa, boa\",553:\"file, file cabinet, filing cabinet\",554:\"fireboat\",555:\"fire engine, fire truck\",556:\"fire screen, fireguard\",557:\"flagpole, flagstaff\",558:\"flute, transverse flute\",559:\"folding chair\",560:\"football helmet\",561:\"forklift\",562:\"fountain\",563:\"fountain pen\",564:\"four-poster\",565:\"freight car\",566:\"French horn, horn\",567:\"frying pan, frypan, skillet\",568:\"fur coat\",569:\"garbage truck, dustcart\",570:\"gasmask, respirator, gas helmet\",571:\"gas pump, gasoline pump, petrol pump, island dispenser\",572:\"goblet\",573:\"go-kart\",574:\"golf ball\",575:\"golfcart, golf cart\",576:\"gondola\",577:\"gong, tam-tam\",578:\"gown\",579:\"grand piano, grand\",580:\"greenhouse, nursery, glasshouse\",581:\"grille, radiator grille\",582:\"grocery store, grocery, food market, market\",583:\"guillotine\",584:\"hair slide\",585:\"hair spray\",586:\"half track\",587:\"hammer\",588:\"hamper\",589:\"hand blower, blow dryer, blow drier, hair dryer, hair drier\",590:\"hand-held computer, hand-held microcomputer\",591:\"handkerchief, hankie, hanky, hankey\",592:\"hard disc, hard disk, fixed disk\",593:\"harmonica, mouth organ, harp, mouth harp\",594:\"harp\",595:\"harvester, reaper\",596:\"hatchet\",597:\"holster\",598:\"home theater, home theatre\",599:\"honeycomb\",600:\"hook, claw\",601:\"hoopskirt, crinoline\",602:\"horizontal bar, high bar\",603:\"horse cart, horse-cart\",604:\"hourglass\",605:\"iPod\",606:\"iron, smoothing iron\",607:\"jack-o'-lantern\",608:\"jean, blue jean, denim\",609:\"jeep, landrover\",610:\"jersey, T-shirt, tee shirt\",611:\"jigsaw puzzle\",612:\"jinrikisha, ricksha, rickshaw\",613:\"joystick\",614:\"kimono\",615:\"knee pad\",616:\"knot\",617:\"lab coat, laboratory coat\",618:\"ladle\",619:\"lampshade, lamp shade\",620:\"laptop, laptop computer\",621:\"lawn mower, mower\",622:\"lens cap, lens cover\",623:\"letter opener, paper knife, paperknife\",624:\"library\",625:\"lifeboat\",626:\"lighter, light, igniter, ignitor\",627:\"limousine, limo\",628:\"liner, ocean liner\",629:\"lipstick, lip rouge\",630:\"Loafer\",631:\"lotion\",632:\"loudspeaker, speaker, speaker unit, loudspeaker system, speaker system\",633:\"loupe, jeweler's loupe\",634:\"lumbermill, sawmill\",635:\"magnetic compass\",636:\"mailbag, postbag\",637:\"mailbox, letter box\",638:\"maillot\",639:\"maillot, tank suit\",640:\"manhole cover\",641:\"maraca\",642:\"marimba, xylophone\",643:\"mask\",644:\"matchstick\",645:\"maypole\",646:\"maze, labyrinth\",647:\"measuring cup\",648:\"medicine chest, medicine cabinet\",649:\"megalith, megalithic structure\",650:\"microphone, mike\",651:\"microwave, microwave oven\",652:\"military uniform\",653:\"milk can\",654:\"minibus\",655:\"miniskirt, mini\",656:\"minivan\",657:\"missile\",658:\"mitten\",659:\"mixing bowl\",660:\"mobile home, manufactured home\",661:\"Model T\",662:\"modem\",663:\"monastery\",664:\"monitor\",665:\"moped\",666:\"mortar\",667:\"mortarboard\",668:\"mosque\",669:\"mosquito net\",670:\"motor scooter, scooter\",671:\"mountain bike, all-terrain bike, off-roader\",672:\"mountain tent\",673:\"mouse, computer mouse\",674:\"mousetrap\",675:\"moving van\",676:\"muzzle\",677:\"nail\",678:\"neck brace\",679:\"necklace\",680:\"nipple\",681:\"notebook, notebook computer\",682:\"obelisk\",683:\"oboe, hautboy, hautbois\",684:\"ocarina, sweet potato\",685:\"odometer, hodometer, mileometer, milometer\",686:\"oil filter\",687:\"organ, pipe organ\",688:\"oscilloscope, scope, cathode-ray oscilloscope, CRO\",689:\"overskirt\",690:\"oxcart\",691:\"oxygen mask\",692:\"packet\",693:\"paddle, boat paddle\",694:\"paddlewheel, paddle wheel\",695:\"padlock\",696:\"paintbrush\",697:\"pajama, pyjama, pj's, jammies\",698:\"palace\",699:\"panpipe, pandean pipe, syrinx\",700:\"paper towel\",701:\"parachute, chute\",702:\"parallel bars, bars\",703:\"park bench\",704:\"parking meter\",705:\"passenger car, coach, carriage\",706:\"patio, terrace\",707:\"pay-phone, pay-station\",708:\"pedestal, plinth, footstall\",709:\"pencil box, pencil case\",710:\"pencil sharpener\",711:\"perfume, essence\",712:\"Petri dish\",713:\"photocopier\",714:\"pick, plectrum, plectron\",715:\"pickelhaube\",716:\"picket fence, paling\",717:\"pickup, pickup truck\",718:\"pier\",719:\"piggy bank, penny bank\",720:\"pill bottle\",721:\"pillow\",722:\"ping-pong ball\",723:\"pinwheel\",724:\"pirate, pirate ship\",725:\"pitcher, ewer\",726:\"plane, carpenter's plane, woodworking plane\",727:\"planetarium\",728:\"plastic bag\",729:\"plate rack\",730:\"plow, plough\",731:\"plunger, plumber's helper\",732:\"Polaroid camera, Polaroid Land camera\",733:\"pole\",734:\"police van, police wagon, paddy wagon, patrol wagon, wagon, black Maria\",735:\"poncho\",736:\"pool table, billiard table, snooker table\",737:\"pop bottle, soda bottle\",738:\"pot, flowerpot\",739:\"potter's wheel\",740:\"power drill\",741:\"prayer rug, prayer mat\",742:\"printer\",743:\"prison, prison house\",744:\"projectile, missile\",745:\"projector\",746:\"puck, hockey puck\",747:\"punching bag, punch bag, punching ball, punchball\",748:\"purse\",749:\"quill, quill pen\",750:\"quilt, comforter, comfort, puff\",751:\"racer, race car, racing car\",752:\"racket, racquet\",753:\"radiator\",754:\"radio, wireless\",755:\"radio telescope, radio reflector\",756:\"rain barrel\",757:\"recreational vehicle, RV, R.V.\",758:\"reel\",759:\"reflex camera\",760:\"refrigerator, icebox\",761:\"remote control, remote\",762:\"restaurant, eating house, eating place, eatery\",763:\"revolver, six-gun, six-shooter\",764:\"rifle\",765:\"rocking chair, rocker\",766:\"rotisserie\",767:\"rubber eraser, rubber, pencil eraser\",768:\"rugby ball\",769:\"rule, ruler\",770:\"running shoe\",771:\"safe\",772:\"safety pin\",773:\"saltshaker, salt shaker\",774:\"sandal\",775:\"sarong\",776:\"sax, saxophone\",777:\"scabbard\",778:\"scale, weighing machine\",779:\"school bus\",780:\"schooner\",781:\"scoreboard\",782:\"screen, CRT screen\",783:\"screw\",784:\"screwdriver\",785:\"seat belt, seatbelt\",786:\"sewing machine\",787:\"shield, buckler\",788:\"shoe shop, shoe-shop, shoe store\",789:\"shoji\",790:\"shopping basket\",791:\"shopping cart\",792:\"shovel\",793:\"shower cap\",794:\"shower curtain\",795:\"ski\",796:\"ski mask\",797:\"sleeping bag\",798:\"slide rule, slipstick\",799:\"sliding door\",800:\"slot, one-armed bandit\",801:\"snorkel\",802:\"snowmobile\",803:\"snowplow, snowplough\",804:\"soap dispenser\",805:\"soccer ball\",806:\"sock\",807:\"solar dish, solar collector, solar furnace\",808:\"sombrero\",809:\"soup bowl\",810:\"space bar\",811:\"space heater\",812:\"space shuttle\",813:\"spatula\",814:\"speedboat\",815:\"spider web, spider's web\",816:\"spindle\",817:\"sports car, sport car\",818:\"spotlight, spot\",819:\"stage\",820:\"steam locomotive\",821:\"steel arch bridge\",822:\"steel drum\",823:\"stethoscope\",824:\"stole\",825:\"stone wall\",826:\"stopwatch, stop watch\",827:\"stove\",828:\"strainer\",829:\"streetcar, tram, tramcar, trolley, trolley car\",830:\"stretcher\",831:\"studio couch, day bed\",832:\"stupa, tope\",833:\"submarine, pigboat, sub, U-boat\",834:\"suit, suit of clothes\",835:\"sundial\",836:\"sunglass\",837:\"sunglasses, dark glasses, shades\",838:\"sunscreen, sunblock, sun blocker\",839:\"suspension bridge\",840:\"swab, swob, mop\",841:\"sweatshirt\",842:\"swimming trunks, bathing trunks\",843:\"swing\",844:\"switch, electric switch, electrical switch\",845:\"syringe\",846:\"table lamp\",847:\"tank, army tank, armored combat vehicle, armoured combat vehicle\",848:\"tape player\",849:\"teapot\",850:\"teddy, teddy bear\",851:\"television, television system\",852:\"tennis ball\",853:\"thatch, thatched roof\",854:\"theater curtain, theatre curtain\",855:\"thimble\",856:\"thresher, thrasher, threshing machine\",857:\"throne\",858:\"tile roof\",859:\"toaster\",860:\"tobacco shop, tobacconist shop, tobacconist\",861:\"toilet seat\",862:\"torch\",863:\"totem pole\",864:\"tow truck, tow car, wrecker\",865:\"toyshop\",866:\"tractor\",867:\"trailer truck, tractor trailer, trucking rig, rig, articulated lorry, semi\",868:\"tray\",869:\"trench coat\",870:\"tricycle, trike, velocipede\",871:\"trimaran\",872:\"tripod\",873:\"triumphal arch\",874:\"trolleybus, trolley coach, trackless trolley\",875:\"trombone\",876:\"tub, vat\",877:\"turnstile\",878:\"typewriter keyboard\",879:\"umbrella\",880:\"unicycle, monocycle\",881:\"upright, upright piano\",882:\"vacuum, vacuum cleaner\",883:\"vase\",884:\"vault\",885:\"velvet\",886:\"vending machine\",887:\"vestment\",888:\"viaduct\",889:\"violin, fiddle\",890:\"volleyball\",891:\"waffle iron\",892:\"wall clock\",893:\"wallet, billfold, notecase, pocketbook\",894:\"wardrobe, closet, press\",895:\"warplane, military plane\",896:\"washbasin, handbasin, washbowl, lavabo, wash-hand basin\",897:\"washer, automatic washer, washing machine\",898:\"water bottle\",899:\"water jug\",900:\"water tower\",901:\"whiskey jug\",902:\"whistle\",903:\"wig\",904:\"window screen\",905:\"window shade\",906:\"Windsor tie\",907:\"wine bottle\",908:\"wing\",909:\"wok\",910:\"wooden spoon\",911:\"wool, woolen, woollen\",912:\"worm fence, snake fence, snake-rail fence, Virginia fence\",913:\"wreck\",914:\"yawl\",915:\"yurt\",916:\"web site, website, internet site, site\",917:\"comic book\",918:\"crossword puzzle, crossword\",919:\"street sign\",920:\"traffic light, traffic signal, stoplight\",921:\"book jacket, dust cover, dust jacket, dust wrapper\",922:\"menu\",923:\"plate\",924:\"guacamole\",925:\"consomme\",926:\"hot pot, hotpot\",927:\"trifle\",928:\"ice cream, icecream\",929:\"ice lolly, lolly, lollipop, popsicle\",930:\"French loaf\",931:\"bagel, beigel\",932:\"pretzel\",933:\"cheeseburger\",934:\"hotdog, hot dog, red hot\",935:\"mashed potato\",936:\"head cabbage\",937:\"broccoli\",938:\"cauliflower\",939:\"zucchini, courgette\",940:\"spaghetti squash\",941:\"acorn squash\",942:\"butternut squash\",943:\"cucumber, cuke\",944:\"artichoke, globe artichoke\",945:\"bell pepper\",946:\"cardoon\",947:\"mushroom\",948:\"Granny Smith\",949:\"strawberry\",950:\"orange\",951:\"lemon\",952:\"fig\",953:\"pineapple, ananas\",954:\"banana\",955:\"jackfruit, jak, jack\",956:\"custard apple\",957:\"pomegranate\",958:\"hay\",959:\"carbonara\",960:\"chocolate sauce, chocolate syrup\",961:\"dough\",962:\"meat loaf, meatloaf\",963:\"pizza, pizza pie\",964:\"potpie\",965:\"burrito\",966:\"red wine\",967:\"espresso\",968:\"cup\",969:\"eggnog\",970:\"alp\",971:\"bubble\",972:\"cliff, drop, drop-off\",973:\"coral reef\",974:\"geyser\",975:\"lakeside, lakeshore\",976:\"promontory, headland, head, foreland\",977:\"sandbar, sand bar\",978:\"seashore, coast, seacoast, sea-coast\",979:\"valley, vale\",980:\"volcano\",981:\"ballplayer, baseball player\",982:\"groom, bridegroom\",983:\"scuba diver\",984:\"rapeseed\",985:\"daisy\",986:\"yellow lady's slipper, yellow lady-slipper, Cypripedium calceolus, Cypripedium parviflorum\",987:\"corn\",988:\"acorn\",989:\"hip, rose hip, rosehip\",990:\"buckeye, horse chestnut, conker\",991:\"coral fungus\",992:\"agaric\",993:\"gyromitra\",994:\"stinkhorn, carrion fungus\",995:\"earthstar\",996:\"hen-of-the-woods, hen of the woods, Polyporus frondosus, Grifola frondosa\",997:\"bolete\",998:\"ear, spike, capitulum\",999:\"toilet tissue, toilet paper, bathroom tissue\"},version=\"2.1.0\",IMAGE_SIZE=224,EMBEDDING_NODES={\"1.00\":\"module_apply_default/MobilenetV1/Logits/global_pool\",\"2.00\":\"module_apply_default/MobilenetV2/Logits/AvgPool\"},MODEL_INFO={\"1.00\":{.25:{url:\"https://tfhub.dev/google/imagenet/mobilenet_v1_025_224/classification/1\",inputRange:[0,1]},\"0.50\":{url:\"https://tfhub.dev/google/imagenet/mobilenet_v1_050_224/classification/1\",inputRange:[0,1]},.75:{url:\"https://tfhub.dev/google/imagenet/mobilenet_v1_075_224/classification/1\",inputRange:[0,1]},\"1.00\":{url:\"https://tfhub.dev/google/imagenet/mobilenet_v1_100_224/classification/1\",inputRange:[0,1]}},\"2.00\":{\"0.50\":{url:\"https://tfhub.dev/google/imagenet/mobilenet_v2_050_224/classification/2\",inputRange:[0,1]},.75:{url:\"https://tfhub.dev/google/imagenet/mobilenet_v2_075_224/classification/2\",inputRange:[0,1]},\"1.00\":{url:\"https://tfhub.dev/google/imagenet/mobilenet_v2_100_224/classification/2\",inputRange:[0,1]}}};function load(e){return void 0===e&&(e={version:1,alpha:1}),__awaiter(this,void 0,void 0,function(){var a,r,o,i,t,n,l;return __generator(this,function(s){switch(s.label){case 0:if(null==tf)throw new Error(\"Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.\");if(o=e.version.toFixed(2),i=e.alpha?e.alpha.toFixed(2):\"\",t=-1,n=1,null==e.modelUrl){if(!(o in MODEL_INFO))throw new Error(\"Invalid version of MobileNet. Valid versions are: \"+Object.keys(MODEL_INFO));if(!(i in MODEL_INFO[o]))throw new Error(\"MobileNet constructed with invalid alpha \"+e.alpha+\". Valid multipliers for this version are: \"+Object.keys(MODEL_INFO[o])+\".\");a=MODEL_INFO[o][i].inputRange,t=a[0],n=a[1]}return null!=e.inputRange&&(r=e.inputRange,t=r[0],n=r[1]),[4,(l=new MobileNetImpl(o,i,e.modelUrl,t,n)).load()];case 1:return s.sent(),[2,l]}})})}var MobileNetImpl=function(){function e(e,a,r,o,i){void 0===o&&(o=-1),void 0===i&&(i=1),this.version=e,this.alpha=a,this.modelUrl=r,this.inputMin=o,this.inputMax=i,this.normalizationConstant=(i-o)/255}return e.prototype.load=function(){return __awaiter(this,void 0,void 0,function(){var e,a,r,o,i=this;return __generator(this,function(t){switch(t.label){case 0:return this.modelUrl?(e=this,[4,loadGraphModel(this.modelUrl)]):[3,2];case 1:return e.model=t.sent(),[3,4];case 2:return a=MODEL_INFO[this.version][this.alpha].url,r=this,[4,loadGraphModel(a,{fromTFHub:!0})];case 3:r.model=t.sent(),t.label=4;case 4:return[4,(o=tidy(function(){return i.model.predict(zeros([1,IMAGE_SIZE,IMAGE_SIZE,3]))})).data()];case 5:return t.sent(),o.dispose(),[2]}})})},e.prototype.infer=function(e,a){var r=this;return void 0===a&&(a=!1),tidy(function(){e instanceof Tensor||(e=browser.fromPixels(e));var o=add(mul(cast(e,\"float32\"),r.normalizationConstant),r.inputMin),i=o;if(e.shape[0]!==IMAGE_SIZE||e.shape[1]!==IMAGE_SIZE){i=image.resizeBilinear(o,[IMAGE_SIZE,IMAGE_SIZE],!0)}var t,n=reshape(i,[-1,IMAGE_SIZE,IMAGE_SIZE,3]);if(a){var l=EMBEDDING_NODES[r.version],s=r.model.execute(n,l);t=squeeze(s,[1,2])}else{var c=r.model.predict(n);t=slice(c,[0,1],[-1,1e3])}return t})},e.prototype.classify=function(e,a){return void 0===a&&(a=3),__awaiter(this,void 0,void 0,function(){var r,o;return __generator(this,function(i){switch(i.label){case 0:return[4,getTopKClasses(r=this.infer(e),a)];case 1:return o=i.sent(),r.dispose(),[2,o]}})})},e}();function getTopKClasses(e,a){return __awaiter(this,void 0,void 0,function(){var r,o,i,t,n,l,s;return __generator(this,function(c){switch(c.label){case 0:return[4,(r=softmax(e)).data()];case 1:for(o=c.sent(),r.dispose(),i=[],s=0;s<o.length;s++)i.push({value:o[s],index:s});for(i.sort(function(e,a){return a.value-e.value}),t=new Float32Array(a),n=new Int32Array(a),s=0;s<a;s++)t[s]=i[s].value,n[s]=i[s].index;for(l=[],s=0;s<n.length;s++)l.push({className:IMAGENET_CLASSES[n[s]],probability:t[s]});return[2,l]}})})}export{load,version};\n","/** @license React v17.0.2\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=require(\"object-assign\"),n=60103,p=60106;exports.Fragment=60107;exports.StrictMode=60108;exports.Profiler=60114;var q=60109,r=60110,t=60112;exports.Suspense=60113;var u=60115,v=60116;\nif(\"function\"===typeof Symbol&&Symbol.for){var w=Symbol.for;n=w(\"react.element\");p=w(\"react.portal\");exports.Fragment=w(\"react.fragment\");exports.StrictMode=w(\"react.strict_mode\");exports.Profiler=w(\"react.profiler\");q=w(\"react.provider\");r=w(\"react.context\");t=w(\"react.forward_ref\");exports.Suspense=w(\"react.suspense\");u=w(\"react.memo\");v=w(\"react.lazy\")}var x=\"function\"===typeof Symbol&&Symbol.iterator;\nfunction y(a){if(null===a||\"object\"!==typeof a)return null;a=x&&a[x]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}function z(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar A={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},B={};function C(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}C.prototype.isReactComponent={};C.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(z(85));this.updater.enqueueSetState(this,a,b,\"setState\")};C.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction D(){}D.prototype=C.prototype;function E(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}var F=E.prototype=new D;F.constructor=E;l(F,C.prototype);F.isPureReactComponent=!0;var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};\nfunction J(a,b,c){var e,d={},k=null,h=null;if(null!=b)for(e in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)H.call(b,e)&&!I.hasOwnProperty(e)&&(d[e]=b[e]);var g=arguments.length-2;if(1===g)d.children=c;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];d.children=f}if(a&&a.defaultProps)for(e in g=a.defaultProps,g)void 0===d[e]&&(d[e]=g[e]);return{$$typeof:n,type:a,key:k,ref:h,props:d,_owner:G.current}}\nfunction K(a,b){return{$$typeof:n,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function L(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===n}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var M=/\\/+/g;function N(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction O(a,b,c,e,d){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case n:case p:h=!0}}if(h)return h=a,d=d(h),a=\"\"===e?\".\"+N(h,0):e,Array.isArray(d)?(c=\"\",null!=a&&(c=a.replace(M,\"$&/\")+\"/\"),O(d,b,c,\"\",function(a){return a})):null!=d&&(L(d)&&(d=K(d,c+(!d.key||h&&h.key===d.key?\"\":(\"\"+d.key).replace(M,\"$&/\")+\"/\")+a)),b.push(d)),1;h=0;e=\"\"===e?\".\":e+\":\";if(Array.isArray(a))for(var g=\n0;g<a.length;g++){k=a[g];var f=e+N(k,g);h+=O(k,b,c,f,d)}else if(f=y(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=e+N(k,g++),h+=O(k,b,c,f,d);else if(\"object\"===k)throw b=\"\"+a,Error(z(31,\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b));return h}function P(a,b,c){if(null==a)return a;var e=[],d=0;O(a,e,\"\",\"\",function(a){return b.call(c,a,d++)});return e}\nfunction Q(a){if(-1===a._status){var b=a._result;b=b();a._status=0;a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}if(1===a._status)return a._result;throw a._result;}var R={current:null};function S(){var a=R.current;if(null===a)throw Error(z(321));return a}var T={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:G,IsSomeRendererActing:{current:!1},assign:l};\nexports.Children={map:P,forEach:function(a,b,c){P(a,function(){b.apply(this,arguments)},c)},count:function(a){var b=0;P(a,function(){b++});return b},toArray:function(a){return P(a,function(a){return a})||[]},only:function(a){if(!L(a))throw Error(z(143));return a}};exports.Component=C;exports.PureComponent=E;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=T;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(z(267,a));var e=l({},a.props),d=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=G.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)H.call(b,f)&&!I.hasOwnProperty(f)&&(e[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)e.children=c;else if(1<f){g=Array(f);for(var m=0;m<f;m++)g[m]=arguments[m+2];e.children=g}return{$$typeof:n,type:a.type,\nkey:d,ref:k,props:e,_owner:h}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:r,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:q,_context:a};return a.Consumer=a};exports.createElement=J;exports.createFactory=function(a){var b=J.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:t,render:a}};exports.isValidElement=L;\nexports.lazy=function(a){return{$$typeof:v,_payload:{_status:-1,_result:a},_init:Q}};exports.memo=function(a,b){return{$$typeof:u,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return S().useCallback(a,b)};exports.useContext=function(a,b){return S().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return S().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return S().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return S().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return S().useMemo(a,b)};exports.useReducer=function(a,b,c){return S().useReducer(a,b,c)};exports.useRef=function(a){return S().useRef(a)};exports.useState=function(a){return S().useState(a)};exports.version=\"17.0.2\";\n","/** @license React v17.0.2\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),m=require(\"object-assign\"),r=require(\"scheduler\");function y(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}if(!aa)throw Error(y(227));var ba=new Set,ca={};function da(a,b){ea(a,b);ea(a+\"Capture\",b)}\nfunction ea(a,b){ca[a]=b;for(a=0;a<b.length;a++)ba.add(b[a])}\nvar fa=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ha=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,ia=Object.prototype.hasOwnProperty,\nja={},ka={};function la(a){if(ia.call(ka,a))return!0;if(ia.call(ja,a))return!1;if(ha.test(a))return ka[a]=!0;ja[a]=!0;return!1}function ma(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction na(a,b,c,d){if(null===b||\"undefined\"===typeof b||ma(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function B(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var D={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new B(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new B(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new B(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new B(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new B(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new B(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){D[a]=new B(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new B(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new B(a,5,!1,a.toLowerCase(),null,!1,!1)});var oa=/[\\-:]([a-z])/g;function pa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(oa,\npa);D[b]=new B(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!1,!1)});\nD.xlinkHref=new B(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction qa(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(na(b,c,e,d)&&(c=null),d||null===e?la(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nvar ra=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,sa=60103,ta=60106,ua=60107,wa=60108,xa=60114,ya=60109,za=60110,Aa=60112,Ba=60113,Ca=60120,Da=60115,Ea=60116,Fa=60121,Ga=60128,Ha=60129,Ia=60130,Ja=60131;\nif(\"function\"===typeof Symbol&&Symbol.for){var E=Symbol.for;sa=E(\"react.element\");ta=E(\"react.portal\");ua=E(\"react.fragment\");wa=E(\"react.strict_mode\");xa=E(\"react.profiler\");ya=E(\"react.provider\");za=E(\"react.context\");Aa=E(\"react.forward_ref\");Ba=E(\"react.suspense\");Ca=E(\"react.suspense_list\");Da=E(\"react.memo\");Ea=E(\"react.lazy\");Fa=E(\"react.block\");E(\"react.scope\");Ga=E(\"react.opaque.id\");Ha=E(\"react.debug_trace_mode\");Ia=E(\"react.offscreen\");Ja=E(\"react.legacy_hidden\")}\nvar Ka=\"function\"===typeof Symbol&&Symbol.iterator;function La(a){if(null===a||\"object\"!==typeof a)return null;a=Ka&&a[Ka]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var Ma;function Na(a){if(void 0===Ma)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);Ma=b&&b[1]||\"\"}return\"\\n\"+Ma+a}var Oa=!1;\nfunction Pa(a,b){if(!a||Oa)return\"\";Oa=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(k){var d=k}Reflect.construct(a,[],b)}else{try{b.call()}catch(k){d=k}a.call(b.prototype)}else{try{throw Error();}catch(k){d=k}a()}}catch(k){if(k&&d&&\"string\"===typeof k.stack){for(var e=k.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h])return\"\\n\"+e[g].replace(\" at new \",\" at \");while(1<=g&&0<=h)}break}}}finally{Oa=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Na(a):\"\"}\nfunction Qa(a){switch(a.tag){case 5:return Na(a.type);case 16:return Na(\"Lazy\");case 13:return Na(\"Suspense\");case 19:return Na(\"SuspenseList\");case 0:case 2:case 15:return a=Pa(a.type,!1),a;case 11:return a=Pa(a.type.render,!1),a;case 22:return a=Pa(a.type._render,!1),a;case 1:return a=Pa(a.type,!0),a;default:return\"\"}}\nfunction Ra(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ua:return\"Fragment\";case ta:return\"Portal\";case xa:return\"Profiler\";case wa:return\"StrictMode\";case Ba:return\"Suspense\";case Ca:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case za:return(a.displayName||\"Context\")+\".Consumer\";case ya:return(a._context.displayName||\"Context\")+\".Provider\";case Aa:var b=a.render;b=b.displayName||b.name||\"\";\nreturn a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\")\":\"ForwardRef\");case Da:return Ra(a.type);case Fa:return Ra(a._render);case Ea:b=a._payload;a=a._init;try{return Ra(a(b))}catch(c){}}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return m({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function $a(a,b){b=b.checked;null!=b&&qa(a,\"checked\",b,!1)}\nfunction ab(a,b){$a(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?bb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&bb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction cb(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction bb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}function db(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function eb(a,b){a=m({children:void 0},b);if(b=db(b.children))a.children=b;return a}\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(y(91));return m({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(y(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(y(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}var kb={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction lb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function mb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?lb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar nb,ob=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==kb.svg||\"innerHTML\"in a)a.innerHTML=b;else{nb=nb||document.createElement(\"div\");nb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=nb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction pb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar qb={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},rb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(qb).forEach(function(a){rb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qb[b]=qb[a]})});function sb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||qb.hasOwnProperty(a)&&qb[a]?(\"\"+b).trim():b+\"px\"}\nfunction tb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=sb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var ub=m({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction vb(a,b){if(b){if(ub[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(y(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(y(60));if(!(\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML))throw Error(y(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(y(62));}}\nfunction wb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(y(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(a,b,c,d,e){return a(b,c,d,e)}function Ib(){}var Jb=Gb,Kb=!1,Lb=!1;function Mb(){if(null!==zb||null!==Ab)Ib(),Fb()}\nfunction Nb(a,b,c){if(Lb)return a(b,c);Lb=!0;try{return Jb(a,b,c)}finally{Lb=!1,Mb()}}\nfunction Ob(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(y(231,b,typeof c));return c}var Pb=!1;if(fa)try{var Qb={};Object.defineProperty(Qb,\"passive\",{get:function(){Pb=!0}});window.addEventListener(\"test\",Qb,Qb);window.removeEventListener(\"test\",Qb,Qb)}catch(a){Pb=!1}function Rb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(n){this.onError(n)}}var Sb=!1,Tb=null,Ub=!1,Vb=null,Wb={onError:function(a){Sb=!0;Tb=a}};function Xb(a,b,c,d,e,f,g,h,k){Sb=!1;Tb=null;Rb.apply(Wb,arguments)}\nfunction Yb(a,b,c,d,e,f,g,h,k){Xb.apply(this,arguments);if(Sb){if(Sb){var l=Tb;Sb=!1;Tb=null}else throw Error(y(198));Ub||(Ub=!0,Vb=l)}}function Zb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function $b(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function ac(a){if(Zb(a)!==a)throw Error(y(188));}\nfunction bc(a){var b=a.alternate;if(!b){b=Zb(a);if(null===b)throw Error(y(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return ac(e),a;if(f===d)return ac(e),b;f=f.sibling}throw Error(y(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(y(189));}}if(c.alternate!==d)throw Error(y(190));}if(3!==c.tag)throw Error(y(188));return c.stateNode.current===c?a:b}function cc(a){a=bc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction dc(a,b){for(var c=a.alternate;null!==b;){if(b===a||b===c)return!0;b=b.return}return!1}var ec,fc,gc,hc,ic=!1,jc=[],kc=null,lc=null,mc=null,nc=new Map,oc=new Map,pc=[],qc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction rc(a,b,c,d,e){return{blockedOn:a,domEventName:b,eventSystemFlags:c|16,nativeEvent:e,targetContainers:[d]}}function sc(a,b){switch(a){case \"focusin\":case \"focusout\":kc=null;break;case \"dragenter\":case \"dragleave\":lc=null;break;case \"mouseover\":case \"mouseout\":mc=null;break;case \"pointerover\":case \"pointerout\":nc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":oc.delete(b.pointerId)}}\nfunction tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=rc(b,c,d,e,f),null!==b&&(b=Cb(b),null!==b&&fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction uc(a,b,c,d,e){switch(b){case \"focusin\":return kc=tc(kc,a,b,c,d,e),!0;case \"dragenter\":return lc=tc(lc,a,b,c,d,e),!0;case \"mouseover\":return mc=tc(mc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;nc.set(f,tc(nc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,oc.set(f,tc(oc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction vc(a){var b=wc(a.target);if(null!==b){var c=Zb(b);if(null!==c)if(b=c.tag,13===b){if(b=$b(c),null!==b){a.blockedOn=b;hc(a.lanePriority,function(){r.unstable_runWithPriority(a.priority,function(){gc(c)})});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c)return b=Cb(c),null!==b&&fc(b),a.blockedOn=c,!1;b.shift()}return!0}function zc(a,b,c){xc(a)&&c.delete(b)}\nfunction Ac(){for(ic=!1;0<jc.length;){var a=jc[0];if(null!==a.blockedOn){a=Cb(a.blockedOn);null!==a&&ec(a);break}for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c){a.blockedOn=c;break}b.shift()}null===a.blockedOn&&jc.shift()}null!==kc&&xc(kc)&&(kc=null);null!==lc&&xc(lc)&&(lc=null);null!==mc&&xc(mc)&&(mc=null);nc.forEach(zc);oc.forEach(zc)}\nfunction Bc(a,b){a.blockedOn===b&&(a.blockedOn=null,ic||(ic=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Ac)))}\nfunction Cc(a){function b(b){return Bc(b,a)}if(0<jc.length){Bc(jc[0],a);for(var c=1;c<jc.length;c++){var d=jc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==kc&&Bc(kc,a);null!==lc&&Bc(lc,a);null!==mc&&Bc(mc,a);nc.forEach(b);oc.forEach(b);for(c=0;c<pc.length;c++)d=pc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<pc.length&&(c=pc[0],null===c.blockedOn);)vc(c),null===c.blockedOn&&pc.shift()}\nfunction Dc(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ec={animationend:Dc(\"Animation\",\"AnimationEnd\"),animationiteration:Dc(\"Animation\",\"AnimationIteration\"),animationstart:Dc(\"Animation\",\"AnimationStart\"),transitionend:Dc(\"Transition\",\"TransitionEnd\")},Fc={},Gc={};\nfa&&(Gc=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ec.animationend.animation,delete Ec.animationiteration.animation,delete Ec.animationstart.animation),\"TransitionEvent\"in window||delete Ec.transitionend.transition);function Hc(a){if(Fc[a])return Fc[a];if(!Ec[a])return a;var b=Ec[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Gc)return Fc[a]=b[c];return a}\nvar Ic=Hc(\"animationend\"),Jc=Hc(\"animationiteration\"),Kc=Hc(\"animationstart\"),Lc=Hc(\"transitionend\"),Mc=new Map,Nc=new Map,Oc=[\"abort\",\"abort\",Ic,\"animationEnd\",Jc,\"animationIteration\",Kc,\"animationStart\",\"canplay\",\"canPlay\",\"canplaythrough\",\"canPlayThrough\",\"durationchange\",\"durationChange\",\"emptied\",\"emptied\",\"encrypted\",\"encrypted\",\"ended\",\"ended\",\"error\",\"error\",\"gotpointercapture\",\"gotPointerCapture\",\"load\",\"load\",\"loadeddata\",\"loadedData\",\"loadedmetadata\",\"loadedMetadata\",\"loadstart\",\"loadStart\",\n\"lostpointercapture\",\"lostPointerCapture\",\"playing\",\"playing\",\"progress\",\"progress\",\"seeking\",\"seeking\",\"stalled\",\"stalled\",\"suspend\",\"suspend\",\"timeupdate\",\"timeUpdate\",Lc,\"transitionEnd\",\"waiting\",\"waiting\"];function Pc(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1];e=\"on\"+(e[0].toUpperCase()+e.slice(1));Nc.set(d,b);Mc.set(d,e);da(e,[d])}}var Qc=r.unstable_now;Qc();var F=8;\nfunction Rc(a){if(0!==(1&a))return F=15,1;if(0!==(2&a))return F=14,2;if(0!==(4&a))return F=13,4;var b=24&a;if(0!==b)return F=12,b;if(0!==(a&32))return F=11,32;b=192&a;if(0!==b)return F=10,b;if(0!==(a&256))return F=9,256;b=3584&a;if(0!==b)return F=8,b;if(0!==(a&4096))return F=7,4096;b=4186112&a;if(0!==b)return F=6,b;b=62914560&a;if(0!==b)return F=5,b;if(a&67108864)return F=4,67108864;if(0!==(a&134217728))return F=3,134217728;b=805306368&a;if(0!==b)return F=2,b;if(0!==(1073741824&a))return F=1,1073741824;\nF=8;return a}function Sc(a){switch(a){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}function Tc(a){switch(a){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(y(358,a));}}\nfunction Uc(a,b){var c=a.pendingLanes;if(0===c)return F=0;var d=0,e=0,f=a.expiredLanes,g=a.suspendedLanes,h=a.pingedLanes;if(0!==f)d=f,e=F=15;else if(f=c&134217727,0!==f){var k=f&~g;0!==k?(d=Rc(k),e=F):(h&=f,0!==h&&(d=Rc(h),e=F))}else f=c&~g,0!==f?(d=Rc(f),e=F):0!==h&&(d=Rc(h),e=F);if(0===d)return 0;d=31-Vc(d);d=c&((0>d?0:1<<d)<<1)-1;if(0!==b&&b!==d&&0===(b&g)){Rc(b);if(e<=F)return b;F=e}b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-Vc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction Wc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function Xc(a,b){switch(a){case 15:return 1;case 14:return 2;case 12:return a=Yc(24&~b),0===a?Xc(10,b):a;case 10:return a=Yc(192&~b),0===a?Xc(8,b):a;case 8:return a=Yc(3584&~b),0===a&&(a=Yc(4186112&~b),0===a&&(a=512)),a;case 2:return b=Yc(805306368&~b),0===b&&(b=268435456),b}throw Error(y(358,a));}function Yc(a){return a&-a}function Zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction $c(a,b,c){a.pendingLanes|=b;var d=b-1;a.suspendedLanes&=d;a.pingedLanes&=d;a=a.eventTimes;b=31-Vc(b);a[b]=c}var Vc=Math.clz32?Math.clz32:ad,bd=Math.log,cd=Math.LN2;function ad(a){return 0===a?32:31-(bd(a)/cd|0)|0}var dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function gd(a,b,c,d){Kb||Ib();var e=hd,f=Kb;Kb=!0;try{Hb(e,a,b,c,d)}finally{(Kb=f)||Mb()}}function id(a,b,c,d){ed(dd,hd.bind(null,a,b,c,d))}\nfunction hd(a,b,c,d){if(fd){var e;if((e=0===(b&4))&&0<jc.length&&-1<qc.indexOf(a))a=rc(null,a,b,c,d),jc.push(a);else{var f=yc(a,b,c,d);if(null===f)e&&sc(a,d);else{if(e){if(-1<qc.indexOf(a)){a=rc(f,a,b,c,d);jc.push(a);return}if(uc(f,a,b,c,d))return;sc(a,d)}jd(a,b,d,null,c)}}}}\nfunction yc(a,b,c,d){var e=xb(d);e=wc(e);if(null!==e){var f=Zb(e);if(null===f)e=null;else{var g=f.tag;if(13===g){e=$b(f);if(null!==e)return e;e=null}else if(3===g){if(f.stateNode.hydrate)return 3===f.tag?f.stateNode.containerInfo:null;e=null}else f!==e&&(e=null)}}jd(a,b,d,e,c);return null}var kd=null,ld=null,md=null;\nfunction nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}function od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}m(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=m({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=m({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=m({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=m({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=m({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=m({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=m({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=m({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=m({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=m({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=m({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=m({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=fa&&\"CompositionEvent\"in window,be=null;fa&&\"documentMode\"in document&&(be=document.documentMode);var ce=fa&&\"TextEvent\"in window&&!be,de=fa&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(fa){var xe;if(fa){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));a=re;if(Kb)a(b);else{Kb=!0;try{Gb(a,b)}finally{Kb=!1,Mb()}}}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge,Ie=Object.prototype.hasOwnProperty;\nfunction Je(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!Ie.call(b,c[d])||!He(a[c[d]],b[c[d]]))return!1;return!0}function Ke(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Le(a,b){var c=Ke(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Ke(c)}}function Me(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Me(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Ne(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Oe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Pe=fa&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Oe(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Je(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nPc(\"cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange\".split(\" \"),\n0);Pc(\"drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel\".split(\" \"),1);Pc(Oc,2);for(var Ve=\"change selectionchange textInput compositionstart compositionend compositionupdate\".split(\" \"),We=0;We<Ve.length;We++)Nc.set(Ve[We],0);ea(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);\nea(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ea(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);ea(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);da(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));da(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));da(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);da(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));\nda(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));da(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var Xe=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),Ye=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(Xe));\nfunction Ze(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Yb(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}}}if(Ub)throw a=Vb,Ub=!1,Vb=null,a;}\nfunction G(a,b){var c=$e(b),d=a+\"__bubble\";c.has(d)||(af(b,a,2,!1),c.add(d))}var bf=\"_reactListening\"+Math.random().toString(36).slice(2);function cf(a){a[bf]||(a[bf]=!0,ba.forEach(function(b){Ye.has(b)||df(b,!1,a,null);df(b,!0,a,null)}))}\nfunction df(a,b,c,d){var e=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,f=c;\"selectionchange\"===a&&9!==c.nodeType&&(f=c.ownerDocument);if(null!==d&&!b&&Ye.has(a)){if(\"scroll\"!==a)return;e|=2;f=d}var g=$e(f),h=a+\"__\"+(b?\"capture\":\"bubble\");g.has(h)||(b&&(e|=4),af(f,a,e,b),g.add(h))}\nfunction af(a,b,c,d){var e=Nc.get(b);switch(void 0===e?2:e){case 0:e=gd;break;case 1:e=id;break;default:e=hd}c=e.bind(null,b,c,a);e=void 0;!Pb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction jd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Nb(function(){var d=f,e=xb(c),g=[];\na:{var h=Mc.get(a);if(void 0!==h){var k=td,x=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":x=\"focus\";k=Fd;break;case \"focusout\":x=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case Ic:case Jc:case Kc:k=Hd;break;case Lc:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var w=0!==(b&4),z=!w&&\"scroll\"===a,u=w?null!==h?h+\"Capture\":null:h;w=[];for(var t=d,q;null!==\nt;){q=t;var v=q.stateNode;5===q.tag&&null!==v&&(q=v,null!==u&&(v=Ob(t,u),null!=v&&w.push(ef(t,v,q))));if(z)break;t=t.return}0<w.length&&(h=new k(h,x,null,c,e),g.push({event:h,listeners:w}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&0===(b&16)&&(x=c.relatedTarget||c.fromElement)&&(wc(x)||x[ff]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(x=c.relatedTarget||c.toElement,k=d,x=x?wc(x):null,null!==\nx&&(z=Zb(x),x!==z||5!==x.tag&&6!==x.tag))x=null}else k=null,x=d;if(k!==x){w=Bd;v=\"onMouseLeave\";u=\"onMouseEnter\";t=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)w=Td,v=\"onPointerLeave\",u=\"onPointerEnter\",t=\"pointer\";z=null==k?h:ue(k);q=null==x?h:ue(x);h=new w(v,t+\"leave\",k,c,e);h.target=z;h.relatedTarget=q;v=null;wc(e)===d&&(w=new w(u,t+\"enter\",x,c,e),w.target=q,w.relatedTarget=z,v=w);z=v;if(k&&x)b:{w=k;u=x;t=0;for(q=w;q;q=gf(q))t++;q=0;for(v=u;v;v=gf(v))q++;for(;0<t-q;)w=gf(w),t--;for(;0<q-t;)u=\ngf(u),q--;for(;t--;){if(w===u||null!==u&&w===u.alternate)break b;w=gf(w);u=gf(u)}w=null}else w=null;null!==k&&hf(g,h,k,w,!1);null!==x&&null!==z&&hf(g,z,x,w,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var J=ve;else if(me(h))if(we)J=Fe;else{J=De;var K=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(J=Ee);if(J&&(J=J(a,d))){ne(g,J,c,e);break a}K&&K(a,h,d);\"focusout\"===a&&(K=h._wrapperState)&&\nK.controlled&&\"number\"===h.type&&bb(h,\"number\",h.value)}K=d?ue(d):window;switch(a){case \"focusin\":if(me(K)||\"true\"===K.contentEditable)Qe=K,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var Q;if(ae)b:{switch(a){case \"compositionstart\":var L=\"onCompositionStart\";break b;case \"compositionend\":L=\"onCompositionEnd\";break b;\ncase \"compositionupdate\":L=\"onCompositionUpdate\";break b}L=void 0}else ie?ge(a,c)&&(L=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(L=\"onCompositionStart\");L&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==L?\"onCompositionEnd\"===L&&ie&&(Q=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),K=oe(d,L),0<K.length&&(L=new Ld(L,a,null,c,e),g.push({event:L,listeners:K}),Q?L.data=Q:(Q=he(c),null!==Q&&(L.data=Q))));if(Q=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),0<d.length&&(e=new Ld(\"onBeforeInput\",\n\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=Q)}se(g,b)})}function ef(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Ob(a,c),null!=f&&d.unshift(ef(a,f,e)),f=Ob(a,b),null!=f&&d.push(ef(a,f,e)));a=a.return}return d}function gf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction hf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Ob(c,f),null!=k&&g.unshift(ef(c,k,h))):e||(k=Ob(c,f),null!=k&&g.push(ef(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}function jf(){}var kf=null,lf=null;function mf(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction nf(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var of=\"function\"===typeof setTimeout?setTimeout:void 0,pf=\"function\"===typeof clearTimeout?clearTimeout:void 0;function qf(a){1===a.nodeType?a.textContent=\"\":9===a.nodeType&&(a=a.body,null!=a&&(a.textContent=\"\"))}\nfunction rf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}function sf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var tf=0;function uf(a){return{$$typeof:Ga,toString:a,valueOf:a}}var vf=Math.random().toString(36).slice(2),wf=\"__reactFiber$\"+vf,xf=\"__reactProps$\"+vf,ff=\"__reactContainer$\"+vf,yf=\"__reactEvents$\"+vf;\nfunction wc(a){var b=a[wf];if(b)return b;for(var c=a.parentNode;c;){if(b=c[ff]||c[wf]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=sf(a);null!==a;){if(c=a[wf])return c;a=sf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[wf]||a[ff];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(y(33));}function Db(a){return a[xf]||null}\nfunction $e(a){var b=a[yf];void 0===b&&(b=a[yf]=new Set);return b}var zf=[],Af=-1;function Bf(a){return{current:a}}function H(a){0>Af||(a.current=zf[Af],zf[Af]=null,Af--)}function I(a,b){Af++;zf[Af]=a.current;a.current=b}var Cf={},M=Bf(Cf),N=Bf(!1),Df=Cf;\nfunction Ef(a,b){var c=a.type.contextTypes;if(!c)return Cf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function Ff(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Gf(){H(N);H(M)}function Hf(a,b,c){if(M.current!==Cf)throw Error(y(168));I(M,b);I(N,c)}\nfunction If(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(y(108,Ra(b)||\"Unknown\",e));return m({},c,d)}function Jf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Cf;Df=M.current;I(M,a);I(N,N.current);return!0}function Kf(a,b,c){var d=a.stateNode;if(!d)throw Error(y(169));c?(a=If(a,b,Df),d.__reactInternalMemoizedMergedChildContext=a,H(N),H(M),I(M,a)):H(N);I(N,c)}\nvar Lf=null,Mf=null,Nf=r.unstable_runWithPriority,Of=r.unstable_scheduleCallback,Pf=r.unstable_cancelCallback,Qf=r.unstable_shouldYield,Rf=r.unstable_requestPaint,Sf=r.unstable_now,Tf=r.unstable_getCurrentPriorityLevel,Uf=r.unstable_ImmediatePriority,Vf=r.unstable_UserBlockingPriority,Wf=r.unstable_NormalPriority,Xf=r.unstable_LowPriority,Yf=r.unstable_IdlePriority,Zf={},$f=void 0!==Rf?Rf:function(){},ag=null,bg=null,cg=!1,dg=Sf(),O=1E4>dg?Sf:function(){return Sf()-dg};\nfunction eg(){switch(Tf()){case Uf:return 99;case Vf:return 98;case Wf:return 97;case Xf:return 96;case Yf:return 95;default:throw Error(y(332));}}function fg(a){switch(a){case 99:return Uf;case 98:return Vf;case 97:return Wf;case 96:return Xf;case 95:return Yf;default:throw Error(y(332));}}function gg(a,b){a=fg(a);return Nf(a,b)}function hg(a,b,c){a=fg(a);return Of(a,b,c)}function ig(){if(null!==bg){var a=bg;bg=null;Pf(a)}jg()}\nfunction jg(){if(!cg&&null!==ag){cg=!0;var a=0;try{var b=ag;gg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});ag=null}catch(c){throw null!==ag&&(ag=ag.slice(a+1)),Of(Uf,ig),c;}finally{cg=!1}}}var kg=ra.ReactCurrentBatchConfig;function lg(a,b){if(a&&a.defaultProps){b=m({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var mg=Bf(null),ng=null,og=null,pg=null;function qg(){pg=og=ng=null}\nfunction rg(a){var b=mg.current;H(mg);a.type._context._currentValue=b}function sg(a,b){for(;null!==a;){var c=a.alternate;if((a.childLanes&b)===b)if(null===c||(c.childLanes&b)===b)break;else c.childLanes|=b;else a.childLanes|=b,null!==c&&(c.childLanes|=b);a=a.return}}function tg(a,b){ng=a;pg=og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(ug=!0),a.firstContext=null)}\nfunction vg(a,b){if(pg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)pg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===og){if(null===ng)throw Error(y(308));og=b;ng.dependencies={lanes:0,firstContext:b,responders:null}}else og=og.next=b}return a._currentValue}var wg=!1;function xg(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}\nfunction yg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function zg(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}function Ag(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}\nfunction Bg(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction Cg(a,b,c,d){var e=a.updateQueue;wg=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var n=a.alternate;if(null!==n){n=n.updateQueue;var A=n.lastBaseUpdate;A!==g&&(null===A?n.firstBaseUpdate=l:A.next=l,n.lastBaseUpdate=k)}}if(null!==f){A=e.baseState;g=0;n=l=k=null;do{h=f.lane;var p=f.eventTime;if((d&h)===h){null!==n&&(n=n.next={eventTime:p,lane:0,tag:f.tag,payload:f.payload,callback:f.callback,\nnext:null});a:{var C=a,x=f;h=b;p=c;switch(x.tag){case 1:C=x.payload;if(\"function\"===typeof C){A=C.call(p,A,h);break a}A=C;break a;case 3:C.flags=C.flags&-4097|64;case 0:C=x.payload;h=\"function\"===typeof C?C.call(p,A,h):C;if(null===h||void 0===h)break a;A=m({},A,h);break a;case 2:wg=!0}}null!==f.callback&&(a.flags|=32,h=e.effects,null===h?e.effects=[f]:h.push(f))}else p={eventTime:p,lane:h,tag:f.tag,payload:f.payload,callback:f.callback,next:null},null===n?(l=n=p,k=A):n=n.next=p,g|=h;f=f.next;if(null===\nf)if(h=e.shared.pending,null===h)break;else f=h.next,h.next=null,e.lastBaseUpdate=h,e.shared.pending=null}while(1);null===n&&(k=A);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=n;Dg|=g;a.lanes=g;a.memoizedState=A}}function Eg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(y(191,e));e.call(d)}}}var Fg=(new aa.Component).refs;\nfunction Gg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:m({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Kg={isMounted:function(a){return(a=a._reactInternals)?Zb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=Hg(),d=Ig(a),e=zg(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=\nb);Ag(a,e);Jg(a,d,c)}};function Lg(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Je(c,d)||!Je(e,f):!0}\nfunction Mg(a,b,c){var d=!1,e=Cf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=vg(f):(e=Ff(b)?Df:M.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Ef(a,e):Cf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Kg;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Ng(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Kg.enqueueReplaceState(b,b.state,null)}\nfunction Og(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Fg;xg(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=vg(f):(f=Ff(b)?Df:M.current,e.context=Ef(a,f));Cg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Gg(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||\n(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Kg.enqueueReplaceState(e,e.state,null),Cg(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4)}var Pg=Array.isArray;\nfunction Qg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(y(309));var d=c.stateNode}if(!d)throw Error(y(147,a));var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Fg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if(\"string\"!==typeof a)throw Error(y(284));if(!c._owner)throw Error(y(290,a));}return a}\nfunction Rg(a,b){if(\"textarea\"!==a.type)throw Error(y(31,\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b));}\nfunction Sg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.flags=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Tg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags=2,\nc):d;b.flags=2;return c}function g(b){a&&null===b.alternate&&(b.flags=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Ug(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Qg(a,b,c),d.return=a,d;d=Vg(c.type,c.key,c.props,null,a.mode,d);d.ref=Qg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nWg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function n(a,b,c,d,f){if(null===b||7!==b.tag)return b=Xg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function A(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Ug(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case sa:return c=Vg(b.type,b.key,b.props,null,a.mode,c),c.ref=Qg(a,null,b),c.return=a,c;case ta:return b=Wg(b,a.mode,c),b.return=a,b}if(Pg(b)||La(b))return b=Xg(b,\na.mode,c,null),b.return=a,b;Rg(a,b)}return null}function p(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case sa:return c.key===e?c.type===ua?n(a,b,c.props.children,d,e):k(a,b,c,d):null;case ta:return c.key===e?l(a,b,c,d):null}if(Pg(c)||La(c))return null!==e?null:n(a,b,c,d,null);Rg(a,c)}return null}function C(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||\nnull,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case sa:return a=a.get(null===d.key?c:d.key)||null,d.type===ua?n(b,a,d.props.children,e,d.key):k(b,a,d,e);case ta:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Pg(d)||La(d))return a=a.get(c)||null,n(b,a,d,e,null);Rg(b,d)}return null}function x(e,g,h,k){for(var l=null,t=null,u=g,z=g=0,q=null;null!==u&&z<h.length;z++){u.index>z?(q=u,u=null):q=u.sibling;var n=p(e,u,h[z],k);if(null===n){null===u&&(u=q);break}a&&u&&null===\nn.alternate&&b(e,u);g=f(n,g,z);null===t?l=n:t.sibling=n;t=n;u=q}if(z===h.length)return c(e,u),l;if(null===u){for(;z<h.length;z++)u=A(e,h[z],k),null!==u&&(g=f(u,g,z),null===t?l=u:t.sibling=u,t=u);return l}for(u=d(e,u);z<h.length;z++)q=C(u,e,z,h[z],k),null!==q&&(a&&null!==q.alternate&&u.delete(null===q.key?z:q.key),g=f(q,g,z),null===t?l=q:t.sibling=q,t=q);a&&u.forEach(function(a){return b(e,a)});return l}function w(e,g,h,k){var l=La(h);if(\"function\"!==typeof l)throw Error(y(150));h=l.call(h);if(null==\nh)throw Error(y(151));for(var t=l=null,u=g,z=g=0,q=null,n=h.next();null!==u&&!n.done;z++,n=h.next()){u.index>z?(q=u,u=null):q=u.sibling;var w=p(e,u,n.value,k);if(null===w){null===u&&(u=q);break}a&&u&&null===w.alternate&&b(e,u);g=f(w,g,z);null===t?l=w:t.sibling=w;t=w;u=q}if(n.done)return c(e,u),l;if(null===u){for(;!n.done;z++,n=h.next())n=A(e,n.value,k),null!==n&&(g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);return l}for(u=d(e,u);!n.done;z++,n=h.next())n=C(u,e,z,n.value,k),null!==n&&(a&&null!==n.alternate&&\nu.delete(null===n.key?z:n.key),g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);a&&u.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ua&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case sa:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ua){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,k.sibling);\nd=e(k,f.props);d.ref=Qg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ua?(d=Xg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Vg(f.type,f.key,f.props,null,a.mode,h),h.ref=Qg(a,d,f),h.return=a,a=h)}return g(a);case ta:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=\nWg(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Ug(f,a.mode,h),d.return=a,a=d),g(a);if(Pg(f))return x(a,d,f,h);if(La(f))return w(a,d,f,h);l&&Rg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 22:case 0:case 11:case 15:throw Error(y(152,Ra(a.type)||\"Component\"));}return c(a,d)}}var Yg=Sg(!0),Zg=Sg(!1),$g={},ah=Bf($g),bh=Bf($g),ch=Bf($g);\nfunction dh(a){if(a===$g)throw Error(y(174));return a}function eh(a,b){I(ch,b);I(bh,a);I(ah,$g);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:mb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=mb(b,a)}H(ah);I(ah,b)}function fh(){H(ah);H(bh);H(ch)}function gh(a){dh(ch.current);var b=dh(ah.current);var c=mb(b,a.type);b!==c&&(I(bh,a),I(ah,c))}function hh(a){bh.current===a&&(H(ah),H(bh))}var P=Bf(0);\nfunction ih(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var jh=null,kh=null,lh=!1;\nfunction mh(a,b){var c=nh(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.flags=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function oh(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction ph(a){if(lh){var b=kh;if(b){var c=b;if(!oh(a,b)){b=rf(c.nextSibling);if(!b||!oh(a,b)){a.flags=a.flags&-1025|2;lh=!1;jh=a;return}mh(jh,c)}jh=a;kh=rf(b.firstChild)}else a.flags=a.flags&-1025|2,lh=!1,jh=a}}function qh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;jh=a}\nfunction rh(a){if(a!==jh)return!1;if(!lh)return qh(a),lh=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!nf(b,a.memoizedProps))for(b=kh;b;)mh(a,b),b=rf(b.nextSibling);qh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(y(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){kh=rf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}kh=null}}else kh=jh?rf(a.stateNode.nextSibling):null;return!0}\nfunction sh(){kh=jh=null;lh=!1}var th=[];function uh(){for(var a=0;a<th.length;a++)th[a]._workInProgressVersionPrimary=null;th.length=0}var vh=ra.ReactCurrentDispatcher,wh=ra.ReactCurrentBatchConfig,xh=0,R=null,S=null,T=null,yh=!1,zh=!1;function Ah(){throw Error(y(321));}function Bh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Ch(a,b,c,d,e,f){xh=f;R=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;vh.current=null===a||null===a.memoizedState?Dh:Eh;a=c(d,e);if(zh){f=0;do{zh=!1;if(!(25>f))throw Error(y(301));f+=1;T=S=null;b.updateQueue=null;vh.current=Fh;a=c(d,e)}while(zh)}vh.current=Gh;b=null!==S&&null!==S.next;xh=0;T=S=R=null;yh=!1;if(b)throw Error(y(300));return a}function Hh(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===T?R.memoizedState=T=a:T=T.next=a;return T}\nfunction Ih(){if(null===S){var a=R.alternate;a=null!==a?a.memoizedState:null}else a=S.next;var b=null===T?R.memoizedState:T.next;if(null!==b)T=b,S=a;else{if(null===a)throw Error(y(310));S=a;a={memoizedState:S.memoizedState,baseState:S.baseState,baseQueue:S.baseQueue,queue:S.queue,next:null};null===T?R.memoizedState=T=a:T=T.next=a}return T}function Jh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Kh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=S,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.lane;if((xh&l)===l)null!==h&&(h=h.next={lane:0,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),d=k.eagerReducer===a?k.eagerState:a(d,k.action);else{var n={lane:l,action:k.action,eagerReducer:k.eagerReducer,\neagerState:k.eagerState,next:null};null===h?(g=h=n,f=d):h=h.next=n;R.lanes|=l;Dg|=l}k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;He(d,b.memoizedState)||(ug=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}\nfunction Lh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}\nfunction Mh(a,b,c){var d=b._getVersion;d=d(b._source);var e=b._workInProgressVersionPrimary;if(null!==e)a=e===d;else if(a=a.mutableReadLanes,a=(xh&a)===a)b._workInProgressVersionPrimary=d,th.push(b);if(a)return c(b._source);th.push(b);throw Error(y(350));}\nfunction Nh(a,b,c,d){var e=U;if(null===e)throw Error(y(349));var f=b._getVersion,g=f(b._source),h=vh.current,k=h.useState(function(){return Mh(e,b,c)}),l=k[1],n=k[0];k=T;var A=a.memoizedState,p=A.refs,C=p.getSnapshot,x=A.source;A=A.subscribe;var w=R;a.memoizedState={refs:p,source:b,subscribe:d};h.useEffect(function(){p.getSnapshot=c;p.setSnapshot=l;var a=f(b._source);if(!He(g,a)){a=c(b._source);He(n,a)||(l(a),a=Ig(w),e.mutableReadLanes|=a&e.pendingLanes);a=e.mutableReadLanes;e.entangledLanes|=a;for(var d=\ne.entanglements,h=a;0<h;){var k=31-Vc(h),v=1<<k;d[k]|=a;h&=~v}}},[c,b,d]);h.useEffect(function(){return d(b._source,function(){var a=p.getSnapshot,c=p.setSnapshot;try{c(a(b._source));var d=Ig(w);e.mutableReadLanes|=d&e.pendingLanes}catch(q){c(function(){throw q;})}})},[b,d]);He(C,c)&&He(x,b)&&He(A,d)||(a={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:n},a.dispatch=l=Oh.bind(null,R,a),k.queue=a,k.baseQueue=null,n=Mh(e,b,c),k.memoizedState=k.baseState=n);return n}\nfunction Ph(a,b,c){var d=Ih();return Nh(d,a,b,c)}function Qh(a){var b=Hh();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:a};a=a.dispatch=Oh.bind(null,R,a);return[b.memoizedState,a]}\nfunction Rh(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=R.updateQueue;null===b?(b={lastEffect:null},R.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function Sh(a){var b=Hh();a={current:a};return b.memoizedState=a}function Th(){return Ih().memoizedState}function Uh(a,b,c,d){var e=Hh();R.flags|=a;e.memoizedState=Rh(1|b,c,void 0,void 0===d?null:d)}\nfunction Vh(a,b,c,d){var e=Ih();d=void 0===d?null:d;var f=void 0;if(null!==S){var g=S.memoizedState;f=g.destroy;if(null!==d&&Bh(d,g.deps)){Rh(b,c,f,d);return}}R.flags|=a;e.memoizedState=Rh(1|b,c,f,d)}function Wh(a,b){return Uh(516,4,a,b)}function Xh(a,b){return Vh(516,4,a,b)}function Yh(a,b){return Vh(4,2,a,b)}function Zh(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}\nfunction $h(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Vh(4,2,Zh.bind(null,b,a),c)}function ai(){}function bi(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}function ci(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}\nfunction di(a,b){var c=eg();gg(98>c?98:c,function(){a(!0)});gg(97<c?97:c,function(){var c=wh.transition;wh.transition=1;try{a(!1),b()}finally{wh.transition=c}})}\nfunction Oh(a,b,c){var d=Hg(),e=Ig(a),f={lane:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.pending;null===g?f.next=f:(f.next=g.next,g.next=f);b.pending=f;g=a.alternate;if(a===R||null!==g&&g===R)zh=yh=!0;else{if(0===a.lanes&&(null===g||0===g.lanes)&&(g=b.lastRenderedReducer,null!==g))try{var h=b.lastRenderedState,k=g(h,c);f.eagerReducer=g;f.eagerState=k;if(He(k,h))return}catch(l){}finally{}Jg(a,e,d)}}\nvar Gh={readContext:vg,useCallback:Ah,useContext:Ah,useEffect:Ah,useImperativeHandle:Ah,useLayoutEffect:Ah,useMemo:Ah,useReducer:Ah,useRef:Ah,useState:Ah,useDebugValue:Ah,useDeferredValue:Ah,useTransition:Ah,useMutableSource:Ah,useOpaqueIdentifier:Ah,unstable_isNewReconciler:!1},Dh={readContext:vg,useCallback:function(a,b){Hh().memoizedState=[a,void 0===b?null:b];return a},useContext:vg,useEffect:Wh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Uh(4,2,Zh.bind(null,\nb,a),c)},useLayoutEffect:function(a,b){return Uh(4,2,a,b)},useMemo:function(a,b){var c=Hh();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Hh();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=Oh.bind(null,R,a);return[d.memoizedState,a]},useRef:Sh,useState:Qh,useDebugValue:ai,useDeferredValue:function(a){var b=Qh(a),c=b[0],d=b[1];Wh(function(){var b=wh.transition;\nwh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Qh(!1),b=a[0];a=di.bind(null,a[1]);Sh(a);return[a,b]},useMutableSource:function(a,b,c){var d=Hh();d.memoizedState={refs:{getSnapshot:b,setSnapshot:null},source:a,subscribe:c};return Nh(d,a,b,c)},useOpaqueIdentifier:function(){if(lh){var a=!1,b=uf(function(){a||(a=!0,c(\"r:\"+(tf++).toString(36)));throw Error(y(355));}),c=Qh(b)[1];0===(R.mode&2)&&(R.flags|=516,Rh(5,function(){c(\"r:\"+(tf++).toString(36))},\nvoid 0,null));return b}b=\"r:\"+(tf++).toString(36);Qh(b);return b},unstable_isNewReconciler:!1},Eh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Kh,useRef:Th,useState:function(){return Kh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Kh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Kh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Kh(Jh)[0]},unstable_isNewReconciler:!1},Fh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Lh,useRef:Th,useState:function(){return Lh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Lh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Lh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Lh(Jh)[0]},unstable_isNewReconciler:!1},ei=ra.ReactCurrentOwner,ug=!1;function fi(a,b,c,d){b.child=null===a?Zg(b,null,c,d):Yg(b,a.child,c,d)}function gi(a,b,c,d,e){c=c.render;var f=b.ref;tg(b,e);d=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,d,e);return b.child}\nfunction ii(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!ji(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ki(a,b,g,d,e,f);a=Vg(c.type,null,d,b,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(0===(e&f)&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:Je,c(e,d)&&a.ref===b.ref))return hi(a,b,f);b.flags|=1;a=Tg(g,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction ki(a,b,c,d,e,f){if(null!==a&&Je(a.memoizedProps,d)&&a.ref===b.ref)if(ug=!1,0!==(f&e))0!==(a.flags&16384)&&(ug=!0);else return b.lanes=a.lanes,hi(a,b,f);return li(a,b,c,d,f)}\nfunction mi(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode||\"unstable-defer-without-hiding\"===d.mode)if(0===(b.mode&4))b.memoizedState={baseLanes:0},ni(b,c);else if(0!==(c&1073741824))b.memoizedState={baseLanes:0},ni(b,null!==f?f.baseLanes:c);else return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a},ni(b,a),null;else null!==f?(d=f.baseLanes|c,b.memoizedState=null):d=c,ni(b,d);fi(a,b,e,c);return b.child}\nfunction oi(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=128}function li(a,b,c,d,e){var f=Ff(c)?Df:M.current;f=Ef(b,f);tg(b,e);c=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,c,e);return b.child}\nfunction pi(a,b,c,d,e){if(Ff(c)){var f=!0;Jf(b)}else f=!1;tg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),Mg(b,c,d),Og(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=vg(l):(l=Ff(c)?Df:M.current,l=Ef(b,l));var n=c.getDerivedStateFromProps,A=\"function\"===typeof n||\"function\"===typeof g.getSnapshotBeforeUpdate;A||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Ng(b,g,d,l);wg=!1;var p=b.memoizedState;g.state=p;Cg(b,d,g,e);k=b.memoizedState;h!==d||p!==k||N.current||wg?(\"function\"===typeof n&&(Gg(b,c,n,d),k=b.memoizedState),(h=wg||Lg(b,c,h,d,p,k,l))?(A||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===\ntypeof g.componentDidMount&&(b.flags|=4)):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),d=!1)}else{g=b.stateNode;yg(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:lg(b.type,h);g.props=l;A=b.pendingProps;p=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=vg(k):(k=Ff(c)?Df:M.current,k=Ef(b,k));var C=c.getDerivedStateFromProps;(n=\"function\"===typeof C||\n\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==A||p!==k)&&Ng(b,g,d,k);wg=!1;p=b.memoizedState;g.state=p;Cg(b,d,g,e);var x=b.memoizedState;h!==A||p!==x||N.current||wg?(\"function\"===typeof C&&(Gg(b,c,C,d),x=b.memoizedState),(l=wg||Lg(b,c,l,d,p,x,k))?(n||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,\nx,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||\nh===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),d=!1)}return qi(a,b,c,d,f,e)}\nfunction qi(a,b,c,d,e,f){oi(a,b);var g=0!==(b.flags&64);if(!d&&!g)return e&&Kf(b,c,!1),hi(a,b,f);d=b.stateNode;ei.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Yg(b,a.child,null,f),b.child=Yg(b,null,h,f)):fi(a,b,h,f);b.memoizedState=d.state;e&&Kf(b,c,!0);return b.child}function ri(a){var b=a.stateNode;b.pendingContext?Hf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Hf(a,b.context,!1);eh(a,b.containerInfo)}\nvar si={dehydrated:null,retryLane:0};\nfunction ti(a,b,c){var d=b.pendingProps,e=P.current,f=!1,g;(g=0!==(b.flags&64))||(g=null!==a&&null===a.memoizedState?!1:0!==(e&2));g?(f=!0,b.flags&=-65):null!==a&&null===a.memoizedState||void 0===d.fallback||!0===d.unstable_avoidThisFallback||(e|=1);I(P,e&1);if(null===a){void 0!==d.fallback&&ph(b);a=d.children;e=d.fallback;if(f)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},b.memoizedState=si,a;if(\"number\"===typeof d.unstable_expectedLoadTime)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},\nb.memoizedState=si,b.lanes=33554432,a;c=vi({mode:\"visible\",children:a},b.mode,c,null);c.return=b;return b.child=c}if(null!==a.memoizedState){if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:\n{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}function ui(a,b,c,d){var e=a.mode,f=a.child;b={mode:\"hidden\",children:b};0===(e&2)&&null!==f?(f.childLanes=0,f.pendingProps=b):f=vi(b,e,0,null);c=Xg(c,e,d,null);f.return=a;c.return=a;f.sibling=c;a.child=f;return c}\nfunction xi(a,b,c,d){var e=a.child;a=e.sibling;c=Tg(e,{mode:\"visible\",children:c});0===(b.mode&2)&&(c.lanes=d);c.return=b;c.sibling=null;null!==a&&(a.nextEffect=null,a.flags=8,b.firstEffect=b.lastEffect=a);return b.child=c}\nfunction wi(a,b,c,d,e){var f=b.mode,g=a.child;a=g.sibling;var h={mode:\"hidden\",children:c};0===(f&2)&&b.child!==g?(c=b.child,c.childLanes=0,c.pendingProps=h,g=c.lastEffect,null!==g?(b.firstEffect=c.firstEffect,b.lastEffect=g,g.nextEffect=null):b.firstEffect=b.lastEffect=null):c=Tg(g,h);null!==a?d=Tg(a,d):(d=Xg(d,f,e,null),d.flags|=2);d.return=b;c.return=b;c.sibling=d;b.child=c;return d}function yi(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);sg(a.return,b)}\nfunction zi(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailMode=e,g.lastEffect=f)}\nfunction Ai(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;fi(a,b,d.children,c);d=P.current;if(0!==(d&2))d=d&1|2,b.flags|=64;else{if(null!==a&&0!==(a.flags&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&yi(a,c);else if(19===a.tag)yi(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(P,d);if(0===(b.mode&2))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===ih(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);zi(b,!1,e,c,f,b.lastEffect);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===ih(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}zi(b,!0,c,null,f,b.lastEffect);break;case \"together\":zi(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}\nfunction hi(a,b,c){null!==a&&(b.dependencies=a.dependencies);Dg|=b.lanes;if(0!==(c&b.childLanes)){if(null!==a&&b.child!==a.child)throw Error(y(153));if(null!==b.child){a=b.child;c=Tg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Tg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}return null}var Bi,Ci,Di,Ei;\nBi=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Ci=function(){};\nDi=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;dh(ah.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"option\":e=eb(a,e);d=eb(a,d);f=[];break;case \"select\":e=m({},e,{value:void 0});d=m({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=jf)}vb(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===\nl){var h=e[l];for(g in h)h.hasOwnProperty(g)&&(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ca.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||\n(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,c)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ca.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&G(\"scroll\",a),f||h===k||(f=[])):\"object\"===typeof k&&null!==k&&k.$$typeof===Ga?k.toString():(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",\nc);var l=f;if(b.updateQueue=l)b.flags|=4}};Ei=function(a,b,c,d){c!==d&&(b.flags|=4)};function Fi(a,b){if(!lh)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction Gi(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return Ff(b.type)&&Gf(),null;case 3:fh();H(N);H(M);uh();d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)rh(b)?b.flags|=4:d.hydrate||(b.flags|=256);Ci(b);return null;case 5:hh(b);var e=dh(ch.current);c=b.type;if(null!==a&&null!=b.stateNode)Di(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=128);else{if(!d){if(null===\nb.stateNode)throw Error(y(166));return null}a=dh(ah.current);if(rh(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[wf]=b;d[xf]=f;switch(c){case \"dialog\":G(\"cancel\",d);G(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",d);break;case \"video\":case \"audio\":for(a=0;a<Xe.length;a++)G(Xe[a],d);break;case \"source\":G(\"error\",d);break;case \"img\":case \"image\":case \"link\":G(\"error\",d);G(\"load\",d);break;case \"details\":G(\"toggle\",d);break;case \"input\":Za(d,f);G(\"invalid\",d);break;case \"select\":d._wrapperState=\n{wasMultiple:!!f.multiple};G(\"invalid\",d);break;case \"textarea\":hb(d,f),G(\"invalid\",d)}vb(c,f);a=null;for(var g in f)f.hasOwnProperty(g)&&(e=f[g],\"children\"===g?\"string\"===typeof e?d.textContent!==e&&(a=[\"children\",e]):\"number\"===typeof e&&d.textContent!==\"\"+e&&(a=[\"children\",\"\"+e]):ca.hasOwnProperty(g)&&null!=e&&\"onScroll\"===g&&G(\"scroll\",d));switch(c){case \"input\":Va(d);cb(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=\njf)}d=a;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;a===kb.html&&(a=lb(c));a===kb.html?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[wf]=b;a[xf]=d;Bi(a,b,!1,!1);b.stateNode=a;g=wb(c,d);switch(c){case \"dialog\":G(\"cancel\",a);G(\"close\",a);\ne=d;break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<Xe.length;e++)G(Xe[e],a);e=d;break;case \"source\":G(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":G(\"error\",a);G(\"load\",a);e=d;break;case \"details\":G(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);G(\"invalid\",a);break;case \"option\":e=eb(a,d);break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=m({},d,{value:void 0});G(\"invalid\",a);break;case \"textarea\":hb(a,d);e=\ngb(a,d);G(\"invalid\",a);break;default:e=d}vb(c,e);var h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?tb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&ob(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==c||\"\"!==k)&&pb(a,k):\"number\"===typeof k&&pb(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ca.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&G(\"scroll\",a):null!=k&&qa(a,f,k,g))}switch(c){case \"input\":Va(a);cb(a,d,!1);\nbreak;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=jf)}mf(c,d)&&(b.flags|=4)}null!==b.ref&&(b.flags|=128)}return null;case 6:if(a&&null!=b.stateNode)Ei(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(y(166));\nc=dh(ch.current);dh(ah.current);rh(b)?(d=b.stateNode,c=b.memoizedProps,d[wf]=b,d.nodeValue!==c&&(b.flags|=4)):(d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[wf]=b,b.stateNode=d)}return null;case 13:H(P);d=b.memoizedState;if(0!==(b.flags&64))return b.lanes=c,b;d=null!==d;c=!1;null===a?void 0!==b.memoizedProps.fallback&&rh(b):c=null!==a.memoizedState;if(d&&!c&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(P.current&1))0===V&&(V=3);else{if(0===V||3===V)V=\n4;null===U||0===(Dg&134217727)&&0===(Hi&134217727)||Ii(U,W)}if(d||c)b.flags|=4;return null;case 4:return fh(),Ci(b),null===a&&cf(b.stateNode.containerInfo),null;case 10:return rg(b),null;case 17:return Ff(b.type)&&Gf(),null;case 19:H(P);d=b.memoizedState;if(null===d)return null;f=0!==(b.flags&64);g=d.rendering;if(null===g)if(f)Fi(d,!1);else{if(0!==V||null!==a&&0!==(a.flags&64))for(a=b.child;null!==a;){g=ih(a);if(null!==g){b.flags|=64;Fi(d,!1);f=g.updateQueue;null!==f&&(b.updateQueue=f,b.flags|=4);\nnull===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=2,f.nextEffect=null,f.firstEffect=null,f.lastEffect=null,g=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,\nf.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;I(P,P.current&1|2);return b.child}a=a.sibling}null!==d.tail&&O()>Ji&&(b.flags|=64,f=!0,Fi(d,!1),b.lanes=33554432)}else{if(!f)if(a=ih(g),null!==a){if(b.flags|=64,f=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Fi(d,!0),null===d.tail&&\"hidden\"===d.tailMode&&!g.alternate&&!lh)return b=b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*O()-d.renderingStartTime>Ji&&1073741824!==c&&(b.flags|=\n64,f=!0,Fi(d,!1),b.lanes=33554432);d.isBackwards?(g.sibling=b.child,b.child=g):(c=d.last,null!==c?c.sibling=g:b.child=g,d.last=g)}return null!==d.tail?(c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=O(),c.sibling=null,b=P.current,I(P,f?b&1|2:b&1),c):null;case 23:case 24:return Ki(),null!==a&&null!==a.memoizedState!==(null!==b.memoizedState)&&\"unstable-defer-without-hiding\"!==d.mode&&(b.flags|=4),null}throw Error(y(156,b.tag));}\nfunction Li(a){switch(a.tag){case 1:Ff(a.type)&&Gf();var b=a.flags;return b&4096?(a.flags=b&-4097|64,a):null;case 3:fh();H(N);H(M);uh();b=a.flags;if(0!==(b&64))throw Error(y(285));a.flags=b&-4097|64;return a;case 5:return hh(a),null;case 13:return H(P),b=a.flags,b&4096?(a.flags=b&-4097|64,a):null;case 19:return H(P),null;case 4:return fh(),null;case 10:return rg(a),null;case 23:case 24:return Ki(),null;default:return null}}\nfunction Mi(a,b){try{var c=\"\",d=b;do c+=Qa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e}}function Ni(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Oi=\"function\"===typeof WeakMap?WeakMap:Map;function Pi(a,b,c){c=zg(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Qi||(Qi=!0,Ri=d);Ni(a,b)};return c}\nfunction Si(a,b,c){c=zg(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){Ni(a,b);return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Ti?Ti=new Set([this]):Ti.add(this),Ni(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}var Ui=\"function\"===typeof WeakSet?WeakSet:Set;\nfunction Vi(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Wi(a,c)}else b.current=null}function Xi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.flags&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:lg(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:b.flags&256&&qf(b.stateNode.containerInfo);return;case 5:case 6:case 4:case 17:return}throw Error(y(163));}\nfunction Yi(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{if(3===(a.tag&3)){var d=a.create;a.destroy=d()}a=a.next}while(a!==b)}b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{var e=a;d=e.next;e=e.tag;0!==(e&4)&&0!==(e&1)&&(Zi(c,a),$i(c,a));a=d}while(a!==b)}return;case 1:a=c.stateNode;c.flags&4&&(null===b?a.componentDidMount():(d=c.elementType===c.type?b.memoizedProps:lg(c.type,b.memoizedProps),a.componentDidUpdate(d,\nb.memoizedState,a.__reactInternalSnapshotBeforeUpdate)));b=c.updateQueue;null!==b&&Eg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Eg(c,b,a)}return;case 5:a=c.stateNode;null===b&&c.flags&4&&mf(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Cc(c))));\nreturn;case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(y(163));}\nfunction aj(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d=d.style,\"function\"===typeof d.setProperty?d.setProperty(\"display\",\"none\",\"important\"):d.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=sb(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if((23!==c.tag&&24!==c.tag||null===c.memoizedState||c===a)&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===\na)break;for(;null===c.sibling;){if(null===c.return||c.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\nfunction bj(a,b){if(Mf&&\"function\"===typeof Mf.onCommitFiberUnmount)try{Mf.onCommitFiberUnmount(Lf,b)}catch(f){}switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var c=a=a.next;do{var d=c,e=d.destroy;d=d.tag;if(void 0!==e)if(0!==(d&4))Zi(b,c);else{d=b;try{e()}catch(f){Wi(d,f)}}c=c.next}while(c!==a)}break;case 1:Vi(b);a=b.stateNode;if(\"function\"===typeof a.componentWillUnmount)try{a.props=b.memoizedProps,a.state=b.memoizedState,a.componentWillUnmount()}catch(f){Wi(b,\nf)}break;case 5:Vi(b);break;case 4:cj(a,b)}}function dj(a){a.alternate=null;a.child=null;a.dependencies=null;a.firstEffect=null;a.lastEffect=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.return=null;a.updateQueue=null}function ej(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction fj(a){a:{for(var b=a.return;null!==b;){if(ej(b))break a;b=b.return}throw Error(y(160));}var c=b;b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(y(161));}c.flags&16&&(pb(b,\"\"),c.flags&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||ej(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.flags&2)continue b;if(null===\nc.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.flags&2)){c=c.stateNode;break a}}d?gj(a,c,b):hj(a,c,b)}\nfunction gj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=jf));else if(4!==d&&(a=a.child,null!==a))for(gj(a,b,c),a=a.sibling;null!==a;)gj(a,b,c),a=a.sibling}\nfunction hj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(hj(a,b,c),a=a.sibling;null!==a;)hj(a,b,c),a=a.sibling}\nfunction cj(a,b){for(var c=b,d=!1,e,f;;){if(!d){d=c.return;a:for(;;){if(null===d)throw Error(y(160));e=d.stateNode;switch(d.tag){case 5:f=!1;break a;case 3:e=e.containerInfo;f=!0;break a;case 4:e=e.containerInfo;f=!0;break a}d=d.return}d=!0}if(5===c.tag||6===c.tag){a:for(var g=a,h=c,k=h;;)if(bj(g,k),null!==k.child&&4!==k.tag)k.child.return=k,k=k.child;else{if(k===h)break a;for(;null===k.sibling;){if(null===k.return||k.return===h)break a;k=k.return}k.sibling.return=k.return;k=k.sibling}f?(g=e,h=c.stateNode,\n8===g.nodeType?g.parentNode.removeChild(h):g.removeChild(h)):e.removeChild(c.stateNode)}else if(4===c.tag){if(null!==c.child){e=c.stateNode.containerInfo;f=!0;c.child.return=c;c=c.child;continue}}else if(bj(a,c),null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return;4===c.tag&&(d=!1)}c.sibling.return=c.return;c=c.sibling}}\nfunction ij(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:var c=b.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do 3===(d.tag&3)&&(a=d.destroy,d.destroy=void 0,void 0!==a&&a()),d=d.next;while(d!==c)}return;case 1:return;case 5:c=b.stateNode;if(null!=c){d=b.memoizedProps;var e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[xf]=d;\"input\"===a&&\"radio\"===d.type&&null!=d.name&&$a(c,d);wb(a,e);b=wb(a,d);for(e=0;e<f.length;e+=\n2){var g=f[e],h=f[e+1];\"style\"===g?tb(c,h):\"dangerouslySetInnerHTML\"===g?ob(c,h):\"children\"===g?pb(c,h):qa(c,g,h,b)}switch(a){case \"input\":ab(c,d);break;case \"textarea\":ib(c,d);break;case \"select\":a=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,f=d.value,null!=f?fb(c,!!d.multiple,f,!1):a!==!!d.multiple&&(null!=d.defaultValue?fb(c,!!d.multiple,d.defaultValue,!0):fb(c,!!d.multiple,d.multiple?[]:\"\",!1))}}}return;case 6:if(null===b.stateNode)throw Error(y(162));b.stateNode.nodeValue=\nb.memoizedProps;return;case 3:c=b.stateNode;c.hydrate&&(c.hydrate=!1,Cc(c.containerInfo));return;case 12:return;case 13:null!==b.memoizedState&&(jj=O(),aj(b.child,!0));kj(b);return;case 19:kj(b);return;case 17:return;case 23:case 24:aj(b,null!==b.memoizedState);return}throw Error(y(163));}function kj(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Ui);b.forEach(function(b){var d=lj.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction mj(a,b){return null!==a&&(a=a.memoizedState,null===a||null!==a.dehydrated)?(b=b.memoizedState,null!==b&&null===b.dehydrated):!1}var nj=Math.ceil,oj=ra.ReactCurrentDispatcher,pj=ra.ReactCurrentOwner,X=0,U=null,Y=null,W=0,qj=0,rj=Bf(0),V=0,sj=null,tj=0,Dg=0,Hi=0,uj=0,vj=null,jj=0,Ji=Infinity;function wj(){Ji=O()+500}var Z=null,Qi=!1,Ri=null,Ti=null,xj=!1,yj=null,zj=90,Aj=[],Bj=[],Cj=null,Dj=0,Ej=null,Fj=-1,Gj=0,Hj=0,Ij=null,Jj=!1;function Hg(){return 0!==(X&48)?O():-1!==Fj?Fj:Fj=O()}\nfunction Ig(a){a=a.mode;if(0===(a&2))return 1;if(0===(a&4))return 99===eg()?1:2;0===Gj&&(Gj=tj);if(0!==kg.transition){0!==Hj&&(Hj=null!==vj?vj.pendingLanes:0);a=Gj;var b=4186112&~Hj;b&=-b;0===b&&(a=4186112&~a,b=a&-a,0===b&&(b=8192));return b}a=eg();0!==(X&4)&&98===a?a=Xc(12,Gj):(a=Sc(a),a=Xc(a,Gj));return a}\nfunction Jg(a,b,c){if(50<Dj)throw Dj=0,Ej=null,Error(y(185));a=Kj(a,b);if(null===a)return null;$c(a,b,c);a===U&&(Hi|=b,4===V&&Ii(a,W));var d=eg();1===b?0!==(X&8)&&0===(X&48)?Lj(a):(Mj(a,c),0===X&&(wj(),ig())):(0===(X&4)||98!==d&&99!==d||(null===Cj?Cj=new Set([a]):Cj.add(a)),Mj(a,c));vj=a}function Kj(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}\nfunction Mj(a,b){for(var c=a.callbackNode,d=a.suspendedLanes,e=a.pingedLanes,f=a.expirationTimes,g=a.pendingLanes;0<g;){var h=31-Vc(g),k=1<<h,l=f[h];if(-1===l){if(0===(k&d)||0!==(k&e)){l=b;Rc(k);var n=F;f[h]=10<=n?l+250:6<=n?l+5E3:-1}}else l<=b&&(a.expiredLanes|=k);g&=~k}d=Uc(a,a===U?W:0);b=F;if(0===d)null!==c&&(c!==Zf&&Pf(c),a.callbackNode=null,a.callbackPriority=0);else{if(null!==c){if(a.callbackPriority===b)return;c!==Zf&&Pf(c)}15===b?(c=Lj.bind(null,a),null===ag?(ag=[c],bg=Of(Uf,jg)):ag.push(c),\nc=Zf):14===b?c=hg(99,Lj.bind(null,a)):(c=Tc(b),c=hg(c,Nj.bind(null,a)));a.callbackPriority=b;a.callbackNode=c}}\nfunction Nj(a){Fj=-1;Hj=Gj=0;if(0!==(X&48))throw Error(y(327));var b=a.callbackNode;if(Oj()&&a.callbackNode!==b)return null;var c=Uc(a,a===U?W:0);if(0===c)return null;var d=c;var e=X;X|=16;var f=Pj();if(U!==a||W!==d)wj(),Qj(a,d);do try{Rj();break}catch(h){Sj(a,h)}while(1);qg();oj.current=f;X=e;null!==Y?d=0:(U=null,W=0,d=V);if(0!==(tj&Hi))Qj(a,0);else if(0!==d){2===d&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),c=Wc(a),0!==c&&(d=Tj(a,c)));if(1===d)throw b=sj,Qj(a,0),Ii(a,c),Mj(a,O()),b;a.finishedWork=\na.current.alternate;a.finishedLanes=c;switch(d){case 0:case 1:throw Error(y(345));case 2:Uj(a);break;case 3:Ii(a,c);if((c&62914560)===c&&(d=jj+500-O(),10<d)){if(0!==Uc(a,0))break;e=a.suspendedLanes;if((e&c)!==c){Hg();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=of(Uj.bind(null,a),d);break}Uj(a);break;case 4:Ii(a,c);if((c&4186112)===c)break;d=a.eventTimes;for(e=-1;0<c;){var g=31-Vc(c);f=1<<g;g=d[g];g>e&&(e=g);c&=~f}c=e;c=O()-c;c=(120>c?120:480>c?480:1080>c?1080:1920>c?1920:3E3>c?3E3:4320>\nc?4320:1960*nj(c/1960))-c;if(10<c){a.timeoutHandle=of(Uj.bind(null,a),c);break}Uj(a);break;case 5:Uj(a);break;default:throw Error(y(329));}}Mj(a,O());return a.callbackNode===b?Nj.bind(null,a):null}function Ii(a,b){b&=~uj;b&=~Hi;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-Vc(b),d=1<<c;a[c]=-1;b&=~d}}\nfunction Lj(a){if(0!==(X&48))throw Error(y(327));Oj();if(a===U&&0!==(a.expiredLanes&W)){var b=W;var c=Tj(a,b);0!==(tj&Hi)&&(b=Uc(a,b),c=Tj(a,b))}else b=Uc(a,0),c=Tj(a,b);0!==a.tag&&2===c&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),b=Wc(a),0!==b&&(c=Tj(a,b)));if(1===c)throw c=sj,Qj(a,0),Ii(a,b),Mj(a,O()),c;a.finishedWork=a.current.alternate;a.finishedLanes=b;Uj(a);Mj(a,O());return null}\nfunction Vj(){if(null!==Cj){var a=Cj;Cj=null;a.forEach(function(a){a.expiredLanes|=24&a.pendingLanes;Mj(a,O())})}ig()}function Wj(a,b){var c=X;X|=1;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function Xj(a,b){var c=X;X&=-2;X|=8;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function ni(a,b){I(rj,qj);qj|=b;tj|=b}function Ki(){qj=rj.current;H(rj)}\nfunction Qj(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,pf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Gf();break;case 3:fh();H(N);H(M);uh();break;case 5:hh(d);break;case 4:fh();break;case 13:H(P);break;case 19:H(P);break;case 10:rg(d);break;case 23:case 24:Ki()}c=c.return}U=a;Y=Tg(a.current,null);W=qj=tj=b;V=0;sj=null;uj=Hi=Dg=0}\nfunction Sj(a,b){do{var c=Y;try{qg();vh.current=Gh;if(yh){for(var d=R.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}yh=!1}xh=0;T=S=R=null;zh=!1;pj.current=null;if(null===c||null===c.return){V=1;sj=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=W;h.flags|=2048;h.firstEffect=h.lastEffect=null;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k;if(0===(h.mode&2)){var n=h.alternate;n?(h.updateQueue=n.updateQueue,h.memoizedState=n.memoizedState,h.lanes=n.lanes):\n(h.updateQueue=null,h.memoizedState=null)}var A=0!==(P.current&1),p=g;do{var C;if(C=13===p.tag){var x=p.memoizedState;if(null!==x)C=null!==x.dehydrated?!0:!1;else{var w=p.memoizedProps;C=void 0===w.fallback?!1:!0!==w.unstable_avoidThisFallback?!0:A?!1:!0}}if(C){var z=p.updateQueue;if(null===z){var u=new Set;u.add(l);p.updateQueue=u}else z.add(l);if(0===(p.mode&2)){p.flags|=64;h.flags|=16384;h.flags&=-2981;if(1===h.tag)if(null===h.alternate)h.tag=17;else{var t=zg(-1,1);t.tag=2;Ag(h,t)}h.lanes|=1;break a}k=\nvoid 0;h=b;var q=f.pingCache;null===q?(q=f.pingCache=new Oi,k=new Set,q.set(l,k)):(k=q.get(l),void 0===k&&(k=new Set,q.set(l,k)));if(!k.has(h)){k.add(h);var v=Yj.bind(null,f,l,h);l.then(v,v)}p.flags|=4096;p.lanes=b;break a}p=p.return}while(null!==p);k=Error((Ra(h.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\")}5!==V&&(V=2);k=Mi(k,h);p=\ng;do{switch(p.tag){case 3:f=k;p.flags|=4096;b&=-b;p.lanes|=b;var J=Pi(p,f,b);Bg(p,J);break a;case 1:f=k;var K=p.type,Q=p.stateNode;if(0===(p.flags&64)&&(\"function\"===typeof K.getDerivedStateFromError||null!==Q&&\"function\"===typeof Q.componentDidCatch&&(null===Ti||!Ti.has(Q)))){p.flags|=4096;b&=-b;p.lanes|=b;var L=Si(p,f,b);Bg(p,L);break a}}p=p.return}while(null!==p)}Zj(c)}catch(va){b=va;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}\nfunction Pj(){var a=oj.current;oj.current=Gh;return null===a?Gh:a}function Tj(a,b){var c=X;X|=16;var d=Pj();U===a&&W===b||Qj(a,b);do try{ak();break}catch(e){Sj(a,e)}while(1);qg();X=c;oj.current=d;if(null!==Y)throw Error(y(261));U=null;W=0;return V}function ak(){for(;null!==Y;)bk(Y)}function Rj(){for(;null!==Y&&!Qf();)bk(Y)}function bk(a){var b=ck(a.alternate,a,qj);a.memoizedProps=a.pendingProps;null===b?Zj(a):Y=b;pj.current=null}\nfunction Zj(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&2048)){c=Gi(c,b,qj);if(null!==c){Y=c;return}c=b;if(24!==c.tag&&23!==c.tag||null===c.memoizedState||0!==(qj&1073741824)||0===(c.mode&4)){for(var d=0,e=c.child;null!==e;)d|=e.lanes|e.childLanes,e=e.sibling;c.childLanes=d}null!==a&&0===(a.flags&2048)&&(null===a.firstEffect&&(a.firstEffect=b.firstEffect),null!==b.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=b.firstEffect),a.lastEffect=b.lastEffect),1<b.flags&&(null!==\na.lastEffect?a.lastEffect.nextEffect=b:a.firstEffect=b,a.lastEffect=b))}else{c=Li(b);if(null!==c){c.flags&=2047;Y=c;return}null!==a&&(a.firstEffect=a.lastEffect=null,a.flags|=2048)}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===V&&(V=5)}function Uj(a){var b=eg();gg(99,dk.bind(null,a,b));return null}\nfunction dk(a,b){do Oj();while(null!==yj);if(0!==(X&48))throw Error(y(327));var c=a.finishedWork;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(y(177));a.callbackNode=null;var d=c.lanes|c.childLanes,e=d,f=a.pendingLanes&~e;a.pendingLanes=e;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=e;a.mutableReadLanes&=e;a.entangledLanes&=e;e=a.entanglements;for(var g=a.eventTimes,h=a.expirationTimes;0<f;){var k=31-Vc(f),l=1<<k;e[k]=0;g[k]=-1;h[k]=-1;f&=~l}null!==\nCj&&0===(d&24)&&Cj.has(a)&&Cj.delete(a);a===U&&(Y=U=null,W=0);1<c.flags?null!==c.lastEffect?(c.lastEffect.nextEffect=c,d=c.firstEffect):d=c:d=c.firstEffect;if(null!==d){e=X;X|=32;pj.current=null;kf=fd;g=Ne();if(Oe(g)){if(\"selectionStart\"in g)h={start:g.selectionStart,end:g.selectionEnd};else a:if(h=(h=g.ownerDocument)&&h.defaultView||window,(l=h.getSelection&&h.getSelection())&&0!==l.rangeCount){h=l.anchorNode;f=l.anchorOffset;k=l.focusNode;l=l.focusOffset;try{h.nodeType,k.nodeType}catch(va){h=null;\nbreak a}var n=0,A=-1,p=-1,C=0,x=0,w=g,z=null;b:for(;;){for(var u;;){w!==h||0!==f&&3!==w.nodeType||(A=n+f);w!==k||0!==l&&3!==w.nodeType||(p=n+l);3===w.nodeType&&(n+=w.nodeValue.length);if(null===(u=w.firstChild))break;z=w;w=u}for(;;){if(w===g)break b;z===h&&++C===f&&(A=n);z===k&&++x===l&&(p=n);if(null!==(u=w.nextSibling))break;w=z;z=w.parentNode}w=u}h=-1===A||-1===p?null:{start:A,end:p}}else h=null;h=h||{start:0,end:0}}else h=null;lf={focusedElem:g,selectionRange:h};fd=!1;Ij=null;Jj=!1;Z=d;do try{ek()}catch(va){if(null===\nZ)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Ij=null;Z=d;do try{for(g=a;null!==Z;){var t=Z.flags;t&16&&pb(Z.stateNode,\"\");if(t&128){var q=Z.alternate;if(null!==q){var v=q.ref;null!==v&&(\"function\"===typeof v?v(null):v.current=null)}}switch(t&1038){case 2:fj(Z);Z.flags&=-3;break;case 6:fj(Z);Z.flags&=-3;ij(Z.alternate,Z);break;case 1024:Z.flags&=-1025;break;case 1028:Z.flags&=-1025;ij(Z.alternate,Z);break;case 4:ij(Z.alternate,Z);break;case 8:h=Z;cj(g,h);var J=h.alternate;dj(h);null!==\nJ&&dj(J)}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);v=lf;q=Ne();t=v.focusedElem;g=v.selectionRange;if(q!==t&&t&&t.ownerDocument&&Me(t.ownerDocument.documentElement,t)){null!==g&&Oe(t)&&(q=g.start,v=g.end,void 0===v&&(v=q),\"selectionStart\"in t?(t.selectionStart=q,t.selectionEnd=Math.min(v,t.value.length)):(v=(q=t.ownerDocument||document)&&q.defaultView||window,v.getSelection&&(v=v.getSelection(),h=t.textContent.length,J=Math.min(g.start,h),g=void 0===\ng.end?J:Math.min(g.end,h),!v.extend&&J>g&&(h=g,g=J,J=h),h=Le(t,J),f=Le(t,g),h&&f&&(1!==v.rangeCount||v.anchorNode!==h.node||v.anchorOffset!==h.offset||v.focusNode!==f.node||v.focusOffset!==f.offset)&&(q=q.createRange(),q.setStart(h.node,h.offset),v.removeAllRanges(),J>g?(v.addRange(q),v.extend(f.node,f.offset)):(q.setEnd(f.node,f.offset),v.addRange(q))))));q=[];for(v=t;v=v.parentNode;)1===v.nodeType&&q.push({element:v,left:v.scrollLeft,top:v.scrollTop});\"function\"===typeof t.focus&&t.focus();for(t=\n0;t<q.length;t++)v=q[t],v.element.scrollLeft=v.left,v.element.scrollTop=v.top}fd=!!kf;lf=kf=null;a.current=c;Z=d;do try{for(t=a;null!==Z;){var K=Z.flags;K&36&&Yi(t,Z.alternate,Z);if(K&128){q=void 0;var Q=Z.ref;if(null!==Q){var L=Z.stateNode;switch(Z.tag){case 5:q=L;break;default:q=L}\"function\"===typeof Q?Q(q):Q.current=q}}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Z=null;$f();X=e}else a.current=c;if(xj)xj=!1,yj=a,zj=b;else for(Z=d;null!==Z;)b=\nZ.nextEffect,Z.nextEffect=null,Z.flags&8&&(K=Z,K.sibling=null,K.stateNode=null),Z=b;d=a.pendingLanes;0===d&&(Ti=null);1===d?a===Ej?Dj++:(Dj=0,Ej=a):Dj=0;c=c.stateNode;if(Mf&&\"function\"===typeof Mf.onCommitFiberRoot)try{Mf.onCommitFiberRoot(Lf,c,void 0,64===(c.current.flags&64))}catch(va){}Mj(a,O());if(Qi)throw Qi=!1,a=Ri,Ri=null,a;if(0!==(X&8))return null;ig();return null}\nfunction ek(){for(;null!==Z;){var a=Z.alternate;Jj||null===Ij||(0!==(Z.flags&8)?dc(Z,Ij)&&(Jj=!0):13===Z.tag&&mj(a,Z)&&dc(Z,Ij)&&(Jj=!0));var b=Z.flags;0!==(b&256)&&Xi(a,Z);0===(b&512)||xj||(xj=!0,hg(97,function(){Oj();return null}));Z=Z.nextEffect}}function Oj(){if(90!==zj){var a=97<zj?97:zj;zj=90;return gg(a,fk)}return!1}function $i(a,b){Aj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}function Zi(a,b){Bj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}\nfunction fk(){if(null===yj)return!1;var a=yj;yj=null;if(0!==(X&48))throw Error(y(331));var b=X;X|=32;var c=Bj;Bj=[];for(var d=0;d<c.length;d+=2){var e=c[d],f=c[d+1],g=e.destroy;e.destroy=void 0;if(\"function\"===typeof g)try{g()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}c=Aj;Aj=[];for(d=0;d<c.length;d+=2){e=c[d];f=c[d+1];try{var h=e.create;e.destroy=h()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}for(h=a.current.firstEffect;null!==h;)a=h.nextEffect,h.nextEffect=null,h.flags&8&&(h.sibling=\nnull,h.stateNode=null),h=a;X=b;ig();return!0}function gk(a,b,c){b=Mi(c,b);b=Pi(a,b,1);Ag(a,b);b=Hg();a=Kj(a,1);null!==a&&($c(a,1,b),Mj(a,b))}\nfunction Wi(a,b){if(3===a.tag)gk(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){gk(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d))){a=Mi(b,a);var e=Si(c,a,1);Ag(c,e);e=Hg();c=Kj(c,1);if(null!==c)$c(c,1,e),Mj(c,e);else if(\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d)))try{d.componentDidCatch(b,a)}catch(f){}break}}c=c.return}}\nfunction Yj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=Hg();a.pingedLanes|=a.suspendedLanes&c;U===a&&(W&c)===c&&(4===V||3===V&&(W&62914560)===W&&500>O()-jj?Qj(a,0):uj|=c);Mj(a,b)}function lj(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=a.mode,0===(b&2)?b=1:0===(b&4)?b=99===eg()?1:2:(0===Gj&&(Gj=tj),b=Yc(62914560&~Gj),0===b&&(b=4194304)));c=Hg();a=Kj(a,b);null!==a&&($c(a,b,c),Mj(a,c))}var ck;\nck=function(a,b,c){var d=b.lanes;if(null!==a)if(a.memoizedProps!==b.pendingProps||N.current)ug=!0;else if(0!==(c&d))ug=0!==(a.flags&16384)?!0:!1;else{ug=!1;switch(b.tag){case 3:ri(b);sh();break;case 5:gh(b);break;case 1:Ff(b.type)&&Jf(b);break;case 4:eh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;var e=b.type._context;I(mg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){if(0!==(c&b.child.childLanes))return ti(a,b,c);I(P,P.current&1);b=hi(a,b,c);return null!==\nb?b.sibling:null}I(P,P.current&1);break;case 19:d=0!==(c&b.childLanes);if(0!==(a.flags&64)){if(d)return Ai(a,b,c);b.flags|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);I(P,P.current);if(d)break;else return null;case 23:case 24:return b.lanes=0,mi(a,b,c)}return hi(a,b,c)}else ug=!1;b.lanes=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;e=Ef(b,M.current);tg(b,c);e=Ch(null,b,d,a,e,c);b.flags|=1;if(\"object\"===\ntypeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(Ff(d)){var f=!0;Jf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;xg(b);var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Gg(b,d,g,a);e.updater=Kg;b.stateNode=e;e._reactInternals=b;Og(b,d,a,c);b=qi(null,b,d,!0,f,c)}else b.tag=0,fi(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;a:{null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);\na=b.pendingProps;f=e._init;e=f(e._payload);b.type=e;f=b.tag=hk(e);a=lg(e,a);switch(f){case 0:b=li(null,b,e,a,c);break a;case 1:b=pi(null,b,e,a,c);break a;case 11:b=gi(null,b,e,a,c);break a;case 14:b=ii(null,b,e,lg(e.type,a),d,c);break a}throw Error(y(306,e,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),li(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),pi(a,b,d,e,c);case 3:ri(b);d=b.updateQueue;if(null===a||null===d)throw Error(y(282));\nd=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;yg(a,b);Cg(b,d,null,c);d=b.memoizedState.element;if(d===e)sh(),b=hi(a,b,c);else{e=b.stateNode;if(f=e.hydrate)kh=rf(b.stateNode.containerInfo.firstChild),jh=b,f=lh=!0;if(f){a=e.mutableSourceEagerHydrationData;if(null!=a)for(e=0;e<a.length;e+=2)f=a[e],f._workInProgressVersionPrimary=a[e+1],th.push(f);c=Zg(b,null,d,c);for(b.child=c;c;)c.flags=c.flags&-3|1024,c=c.sibling}else fi(a,b,d,c),sh();b=b.child}return b;case 5:return gh(b),null===a&&\nph(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,nf(d,e)?g=null:null!==f&&nf(d,f)&&(b.flags|=16),oi(a,b),fi(a,b,g,c),b.child;case 6:return null===a&&ph(b),null;case 13:return ti(a,b,c);case 4:return eh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Yg(b,null,d,c):fi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),gi(a,b,d,e,c);case 7:return fi(a,b,b.pendingProps,c),b.child;case 8:return fi(a,b,b.pendingProps.children,\nc),b.child;case 12:return fi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(mg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=He(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!N.current){b=hi(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==k){g=h.child;for(var l=\nk.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=zg(-1,c&-c),l.tag=2,Ag(h,l));h.lanes|=c;l=h.alternate;null!==l&&(l.lanes|=c);sg(h.return,c);k.lanes|=c;break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}fi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,tg(b,c),e=vg(e,\nf.unstable_observedBits),d=d(e),b.flags|=1,fi(a,b,d,c),b.child;case 14:return e=b.type,f=lg(e,b.pendingProps),f=lg(e.type,f),ii(a,b,e,f,d,c);case 15:return ki(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),b.tag=1,Ff(d)?(a=!0,Jf(b)):a=!1,tg(b,c),Mg(b,d,e),Og(b,d,e,c),qi(null,b,d,!0,a,c);case 19:return Ai(a,b,c);case 23:return mi(a,b,c);case 24:return mi(a,b,c)}throw Error(y(156,b.tag));\n};function ik(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.flags=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childLanes=this.lanes=0;this.alternate=null}function nh(a,b,c,d){return new ik(a,b,c,d)}function ji(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction hk(a){if(\"function\"===typeof a)return ji(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Aa)return 11;if(a===Da)return 14}return 2}\nfunction Tg(a,b){var c=a.alternate;null===c?(c=nh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Vg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)ji(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ua:return Xg(c.children,e,f,b);case Ha:g=8;e|=16;break;case wa:g=8;e|=1;break;case xa:return a=nh(12,c,b,e|8),a.elementType=xa,a.type=xa,a.lanes=f,a;case Ba:return a=nh(13,c,b,e),a.type=Ba,a.elementType=Ba,a.lanes=f,a;case Ca:return a=nh(19,c,b,e),a.elementType=Ca,a.lanes=f,a;case Ia:return vi(c,e,f,b);case Ja:return a=nh(24,c,b,e),a.elementType=Ja,a.lanes=f,a;default:if(\"object\"===\ntypeof a&&null!==a)switch(a.$$typeof){case ya:g=10;break a;case za:g=9;break a;case Aa:g=11;break a;case Da:g=14;break a;case Ea:g=16;d=null;break a;case Fa:g=22;break a}throw Error(y(130,null==a?a:typeof a,\"\"));}b=nh(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Xg(a,b,c,d){a=nh(7,a,d,b);a.lanes=c;return a}function vi(a,b,c,d){a=nh(23,a,d,b);a.elementType=Ia;a.lanes=c;return a}function Ug(a,b,c){a=nh(6,a,null,b);a.lanes=c;return a}\nfunction Wg(a,b,c){b=nh(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction jk(a,b,c){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=0;this.eventTimes=Zc(0);this.expirationTimes=Zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=Zc(0);this.mutableSourceEagerHydrationData=null}\nfunction kk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ta,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction lk(a,b,c,d){var e=b.current,f=Hg(),g=Ig(e);a:if(c){c=c._reactInternals;b:{if(Zb(c)!==c||1!==c.tag)throw Error(y(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(Ff(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(y(171));}if(1===c.tag){var k=c.type;if(Ff(k)){c=If(c,k,h);break a}}c=h}else c=Cf;null===b.context?b.context=c:b.pendingContext=c;b=zg(f,g);b.payload={element:a};d=void 0===d?null:d;null!==\nd&&(b.callback=d);Ag(e,b);Jg(e,g,f);return g}function mk(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function nk(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function ok(a,b){nk(a,b);(a=a.alternate)&&nk(a,b)}function pk(){return null}\nfunction qk(a,b,c){var d=null!=c&&null!=c.hydrationOptions&&c.hydrationOptions.mutableSources||null;c=new jk(a,b,null!=c&&!0===c.hydrate);b=nh(3,null,null,2===b?7:1===b?3:0);c.current=b;b.stateNode=c;xg(b);a[ff]=c.current;cf(8===a.nodeType?a.parentNode:a);if(d)for(a=0;a<d.length;a++){b=d[a];var e=b._getVersion;e=e(b._source);null==c.mutableSourceEagerHydrationData?c.mutableSourceEagerHydrationData=[b,e]:c.mutableSourceEagerHydrationData.push(b,e)}this._internalRoot=c}\nqk.prototype.render=function(a){lk(a,this._internalRoot,null,null)};qk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;lk(null,a,null,function(){b[ff]=null})};function rk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}\nfunction sk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qk(a,0,b?{hydrate:!0}:void 0)}\nfunction tk(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if(\"function\"===typeof e){var h=e;e=function(){var a=mk(g);h.call(a)}}lk(b,g,a,e)}else{f=c._reactRootContainer=sk(c,d);g=f._internalRoot;if(\"function\"===typeof e){var k=e;e=function(){var a=mk(g);k.call(a)}}Xj(function(){lk(b,g,a,e)})}return mk(g)}ec=function(a){if(13===a.tag){var b=Hg();Jg(a,4,b);ok(a,4)}};fc=function(a){if(13===a.tag){var b=Hg();Jg(a,67108864,b);ok(a,67108864)}};\ngc=function(a){if(13===a.tag){var b=Hg(),c=Ig(a);Jg(a,c,b);ok(a,c)}};hc=function(a,b){return b()};\nyb=function(a,b,c){switch(b){case \"input\":ab(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(y(90));Wa(d);ab(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Wj;\nHb=function(a,b,c,d,e){var f=X;X|=4;try{return gg(98,a.bind(null,b,c,d,e))}finally{X=f,0===X&&(wj(),ig())}};Ib=function(){0===(X&49)&&(Vj(),Oj())};Jb=function(a,b){var c=X;X|=2;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}};function uk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!rk(b))throw Error(y(200));return kk(a,b,null,c)}var vk={Events:[Cb,ue,Db,Eb,Fb,Oj,{current:!1}]},wk={findFiberByHostInstance:wc,bundleType:0,version:\"17.0.2\",rendererPackageName:\"react-dom\"};\nvar xk={bundleType:wk.bundleType,version:wk.version,rendererPackageName:wk.rendererPackageName,rendererConfig:wk.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ra.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=cc(a);return null===a?null:a.stateNode},findFiberByHostInstance:wk.findFiberByHostInstance||\npk,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var yk=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!yk.isDisabled&&yk.supportsFiber)try{Lf=yk.inject(xk),Mf=yk}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=vk;exports.createPortal=uk;\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(y(188));throw Error(y(268,Object.keys(a)));}a=cc(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a,b){var c=X;if(0!==(c&48))return a(b);X|=1;try{if(a)return gg(99,a.bind(null,b))}finally{X=c,ig()}};exports.hydrate=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!0,c)};\nexports.render=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!rk(a))throw Error(y(40));return a._reactRootContainer?(Xj(function(){tk(null,null,a,!1,function(){a._reactRootContainer=null;a[ff]=null})}),!0):!1};exports.unstable_batchedUpdates=Wj;exports.unstable_createPortal=function(a,b){return uk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!rk(c))throw Error(y(200));if(null==a||void 0===a._reactInternals)throw Error(y(38));return tk(a,b,c,!1,d)};exports.version=\"17.0.2\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/** @license React v0.20.2\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f,g,h,k;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}\nif(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var t=null,u=null,w=function(){if(null!==t)try{var a=exports.unstable_now();t(!0,a);t=null}catch(b){throw setTimeout(w,0),b;}};f=function(a){null!==t?setTimeout(f,0,a):(t=a,setTimeout(w,0))};g=function(a,b){u=setTimeout(a,b)};h=function(){clearTimeout(u)};exports.unstable_shouldYield=function(){return!1};k=exports.unstable_forceFrameRate=function(){}}else{var x=window.setTimeout,y=window.clearTimeout;if(\"undefined\"!==typeof console){var z=\nwindow.cancelAnimationFrame;\"function\"!==typeof window.requestAnimationFrame&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\");\"function\"!==typeof z&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\")}var A=!1,B=null,C=-1,D=5,E=0;exports.unstable_shouldYield=function(){return exports.unstable_now()>=\nE};k=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):D=0<a?Math.floor(1E3/a):5};var F=new MessageChannel,G=F.port2;F.port1.onmessage=function(){if(null!==B){var a=exports.unstable_now();E=a+D;try{B(!0,a)?G.postMessage(null):(A=!1,B=null)}catch(b){throw G.postMessage(null),b;}}else A=!1};f=function(a){B=a;A||(A=!0,G.postMessage(null))};g=function(a,b){C=\nx(function(){a(exports.unstable_now())},b)};h=function(){y(C);C=-1}}function H(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<I(e,b))a[d]=b,a[c]=e,c=d;else break a}}function J(a){a=a[0];return void 0===a?null:a}\nfunction K(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>I(n,c))void 0!==r&&0>I(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>I(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function I(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var L=[],M=[],N=1,O=null,P=3,Q=!1,R=!1,S=!1;\nfunction T(a){for(var b=J(M);null!==b;){if(null===b.callback)K(M);else if(b.startTime<=a)K(M),b.sortIndex=b.expirationTime,H(L,b);else break;b=J(M)}}function U(a){S=!1;T(a);if(!R)if(null!==J(L))R=!0,f(V);else{var b=J(M);null!==b&&g(U,b.startTime-a)}}\nfunction V(a,b){R=!1;S&&(S=!1,h());Q=!0;var c=P;try{T(b);for(O=J(L);null!==O&&(!(O.expirationTime>b)||a&&!exports.unstable_shouldYield());){var d=O.callback;if(\"function\"===typeof d){O.callback=null;P=O.priorityLevel;var e=d(O.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?O.callback=e:O===J(L)&&K(L);T(b)}else K(L);O=J(L)}if(null!==O)var m=!0;else{var n=J(M);null!==n&&g(U,n.startTime-b);m=!1}return m}finally{O=null,P=c,Q=!1}}var W=k;exports.unstable_IdlePriority=5;\nexports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){R||Q||(R=!0,f(V))};exports.unstable_getCurrentPriorityLevel=function(){return P};exports.unstable_getFirstCallbackNode=function(){return J(L)};\nexports.unstable_next=function(a){switch(P){case 1:case 2:case 3:var b=3;break;default:b=P}var c=P;P=b;try{return a()}finally{P=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=W;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=P;P=a;try{return b()}finally{P=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:N++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,H(M,a),null===J(L)&&a===J(M)&&(S?h():S=!0,g(U,c-d))):(a.sortIndex=e,H(L,a),R||Q||(R=!0,f(V)));return a};\nexports.unstable_wrapCallback=function(a){var b=P;return function(){var c=P;P=b;try{return a.apply(this,arguments)}finally{P=c}}};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {env} from '../environment';\n\nimport {Platform} from './platform';\n\n// We are wrapping this within an object so it can be stubbed by Jasmine.\nexport const getNodeFetch = {\n  // tslint:disable-next-line:no-require-imports\n  importFetch: () => require('node-fetch')\n};\n\ntype FetchFn = (url: string, init?: RequestInit) => Promise<Response>;\nlet systemFetch: FetchFn;\n// These getters and setters are for testing so we don't export a mutable\n// variable.\nexport function resetSystemFetch() {\n  systemFetch = null;\n}\nexport function setSystemFetch(fetchFn: FetchFn) {\n  systemFetch = fetchFn;\n}\nexport function getSystemFetch(): FetchFn {\n  return systemFetch;\n}\n\nexport class PlatformNode implements Platform {\n  private textEncoder: TextEncoder;\n  // tslint:disable-next-line:no-any\n  util: any;\n\n  constructor() {\n    // tslint:disable-next-line:no-require-imports\n    this.util = require('util');\n    // According to the spec, the built-in encoder can do only UTF-8 encoding.\n    // https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder/TextEncoder\n    this.textEncoder = new this.util.TextEncoder();\n  }\n\n  fetch(path: string, requestInits?: RequestInit): Promise<Response> {\n    if (env().global.fetch != null) {\n      return env().global.fetch(path, requestInits);\n    }\n\n    if (systemFetch == null) {\n      systemFetch = getNodeFetch.importFetch();\n    }\n    return systemFetch(path, requestInits);\n  }\n\n  now(): number {\n    const time = process.hrtime();\n    return time[0] * 1000 + time[1] / 1000000;\n  }\n\n  encode(text: string, encoding: string): Uint8Array {\n    if (encoding !== 'utf-8' && encoding !== 'utf8') {\n      throw new Error(\n          `Node built-in encoder only supports utf-8, but got ${encoding}`);\n    }\n    return this.textEncoder.encode(text);\n  }\n  decode(bytes: Uint8Array, encoding: string): string {\n    if (bytes.length === 0) {\n      return '';\n    }\n    return new this.util.TextDecoder(encoding).decode(bytes);\n  }\n}\n\nif (env().get('IS_NODE')) {\n  env().setPlatform('node', new PlatformNode());\n}\n","// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = data.toString();\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","/*\nCopyright 2014 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\nvar global = this,\n    width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\nmath['seed' + rngname] = seedrandom;\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n}\n\n// End anonymous scope, and pass initial values.\n})(\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","/** @license React v17.0.2\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';require(\"object-assign\");var f=require(\"react\"),g=60103;exports.Fragment=60107;if(\"function\"===typeof Symbol&&Symbol.for){var h=Symbol.for;g=h(\"react.element\");exports.Fragment=h(\"react.fragment\")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,k){var b,d={},e=null,l=null;void 0!==k&&(e=\"\"+k);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(l=a.ref);for(b in a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q;exports.jsxs=q;\n","import superPropBase from \"@babel/runtime/helpers/esm/superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {TensorInfo, util} from '@tensorflow/tfjs-core';\n\nexport function assertNotComplex(\n    tensor: TensorInfo|TensorInfo[], opName: string): void {\n  if (!Array.isArray(tensor)) {\n    tensor = [tensor];\n  }\n  tensor.forEach(t => {\n    if (t != null) {\n      util.assert(\n          t.dtype !== 'complex64',\n          () => `${\n              opName} does not support complex64 tensors in the CPU backend.`);\n    }\n  });\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, BackendTimingInfo, buffer, DataStorage, DataType, DataValues, engine, env, kernel_impls, KernelBackend, Rank, ShapeMap, Tensor, Tensor2D, TensorBuffer, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nconst whereImpl = kernel_impls.whereImpl;\nimport {assertNotComplex} from './cpu_util';\n\ninterface DataId {}\n\nexport interface TensorData<D extends DataType> {\n  values?: backend_util.BackendValues;\n  dtype: D;\n  // For complex numbers, the real and imaginary parts are stored as their own\n  // individual tensors, with a parent joining the two with the\n  // complexTensorInfos field.\n  complexTensorInfos?: {real: TensorInfo, imag: TensorInfo};\n  // refCount keeps track of how many tensors reference it. Used for memory\n  // management.\n  refCount: number;\n}\n\nexport class MathBackendCPU extends KernelBackend {\n  public blockSize = 48;\n\n  data: DataStorage<TensorData<DataType>>;\n  private firstUse = true;\n  private static nextDataId = 0;\n  private nextDataId(): number {\n    return MathBackendCPU.nextDataId++;\n  }\n\n  constructor() {\n    super();\n    this.data = new DataStorage(this, engine());\n  }\n\n  write(values: backend_util.BackendValues, shape: number[], dtype: DataType):\n      DataId {\n    if (this.firstUse) {\n      this.firstUse = false;\n      if (env().get('IS_NODE')) {\n        backend_util.warn(\n            '\\n============================\\n' +\n            'Hi there 👋. Looks like you are running TensorFlow.js in ' +\n            'Node.js. To speed things up dramatically, install our node ' +\n            'backend, which binds to TensorFlow C++, by running ' +\n            'npm i @tensorflow/tfjs-node, ' +\n            'or npm i @tensorflow/tfjs-node-gpu if you have CUDA. ' +\n            'Then call require(\\'@tensorflow/tfjs-node\\'); (-gpu ' +\n            'suffix for CUDA) at the start of your program. ' +\n            'Visit https://github.com/tensorflow/tfjs-node for more details.' +\n            '\\n============================');\n      }\n    }\n    const dataId = {id: this.nextDataId()};\n\n    this.data.set(dataId, {values, dtype, refCount: 1});\n\n    return dataId;\n  }\n\n  /**\n   * Create a data bucket in cpu backend.\n   * @param shape Shape of the `TensorInfo`.\n   * @param dtype DType of the `TensorInfo`.\n   * @param values The value of the `TensorInfo` stored as a flattened array.\n   */\n  makeTensorInfo(\n      shape: number[], dtype: DataType,\n      values?: backend_util.BackendValues|string[]): TensorInfo {\n    let outId;\n    if (dtype === 'string' && values != null && values.length > 0 &&\n        util.isString(values[0])) {\n      const encodedValues =\n          (values as {} as string[]).map(d => util.encodeString(d));\n\n      outId = this.write(encodedValues, shape, dtype);\n    } else {\n      outId = this.write(values as TypedArray, shape, dtype);\n    }\n\n    return {dataId: outId, shape, dtype};\n  }\n\n  /** Return refCount of a `TensorData`. */\n  refCount(dataId: DataId): number {\n    if (this.data.has(dataId)) {\n      const tensorData = this.data.get(dataId);\n      return tensorData.refCount;\n    }\n    return 0;\n  }\n\n  /** Increase refCount of a `TensorData`. */\n  incRef(dataId: DataId): void {\n    const tensorData = this.data.get(dataId);\n    tensorData.refCount++;\n  }\n\n  /** Decrease refCount of a `TensorData`. */\n  decRef(dataId: DataId): void {\n    if (this.data.has(dataId)) {\n      const tensorData = this.data.get(dataId);\n      tensorData.refCount--;\n    }\n  }\n\n  move(\n      dataId: DataId, values: backend_util.BackendValues, shape: number[],\n      dtype: DataType, refCount: number): void {\n    this.data.set(dataId, {values, dtype, refCount});\n  }\n\n  numDataIds(): number {\n    return this.data.numDataIds();\n  }\n\n  async read(dataId: DataId): Promise<backend_util.BackendValues> {\n    return this.readSync(dataId);\n  }\n  readSync(dataId: DataId): backend_util.BackendValues {\n    const {dtype, complexTensorInfos} = this.data.get(dataId);\n\n    if (dtype === 'complex64') {\n      const realValues =\n          this.readSync(complexTensorInfos.real.dataId) as Float32Array;\n      const imagValues =\n          this.readSync(complexTensorInfos.imag.dataId) as Float32Array;\n      return backend_util.mergeRealAndImagArrays(realValues, imagValues);\n    }\n\n    return this.data.get(dataId).values;\n  }\n\n  bufferSync<R extends Rank>(t: TensorInfo): TensorBuffer<R> {\n    const data = this.readSync(t.dataId);\n    let decodedData = data as DataValues;\n    if (t.dtype === 'string') {\n      try {\n        // Decode the bytes into string.\n        decodedData = (data as Uint8Array[]).map(d => util.decodeString(d));\n      } catch {\n        throw new Error('Failed to decode encoded string bytes into utf-8');\n      }\n    }\n    return buffer(t.shape as ShapeMap[R], t.dtype, decodedData) as\n        TensorBuffer<R>;\n  }\n\n  makeOutput<T extends Tensor>(\n      values: backend_util.BackendValues, shape: number[], dtype: DataType): T {\n    const dataId = this.write(values, shape, dtype);\n    return engine().makeTensorFromDataId(dataId, shape, dtype, this) as T;\n  }\n\n  /**\n   * Dispose the memory if the dataId has 0 refCount. Return true if the memory\n   * is released or memory is not managed in this backend, false if memory is\n   * not cleared.\n   * @param dataId\n   * @oaram force Optional, remove the data regardless of refCount\n   */\n  disposeData(dataId: DataId, force = false): boolean {\n    if (this.data.has(dataId)) {\n      this.data.get(dataId).refCount--;\n      if (!force && this.data.get(dataId).refCount > 0) {\n        return false;\n      }\n\n      const {complexTensorInfos} = this.data.get(dataId);\n\n      if (complexTensorInfos != null) {\n        this.disposeData(complexTensorInfos.real.dataId, true);\n        this.disposeData(complexTensorInfos.imag.dataId, true);\n      }\n\n      this.data.delete(dataId);\n    }\n    return true;\n  }\n\n  disposeIntermediateTensorInfo(tensorInfo: TensorInfo): void {\n    this.disposeData(tensorInfo.dataId);\n  }\n\n  async time(f: () => void): Promise<BackendTimingInfo> {\n    const start = util.now();\n    f();\n    const kernelMs = util.now() - start;\n    return {kernelMs};\n  }\n\n  memory() {\n    return {\n      // Unreliable due to automatic gc. The numbers above are cumulative.\n      unreliable: true,\n      reasons:\n          ['The reported memory is an upper bound. Due to automatic garbage ' +\n           'collection, the true allocated memory may be less.']\n    };\n  }\n\n  where(condition: Tensor): Tensor2D {\n    assertNotComplex([condition], 'where');\n\n    const condVals = this.readSync(condition.dataId) as TypedArray;\n    return whereImpl(condition.shape, condVals);\n  }\n\n  dispose() {}\n\n  floatPrecision(): 16|32 {\n    return 32;\n  }\n\n  /** Returns the smallest representable number.  */\n  epsilon(): number {\n    return super.epsilon();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, KernelFunc, TypedArray, UnaryInputs, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nimport {SimpleUnaryImpl, SimpleUnaryOperation} from './unary_types';\n\n/**\n * Template that creates a `KernelFunc` for unary ops.\n * @param name Kernel name.\n * @param op A `SimpleUnaryOperation` for the kernel.\n * @param dtype Optional. If set, the result has this dtype. Otherwise, the\n *     result has the same dtype as the input. This is mainly used in certain\n *     kernels that return bool type, such as isFinite, isInf, etc.\n */\nexport function unaryKernelFunc(\n    name: string, op: SimpleUnaryOperation, dtype?: DataType): KernelFunc {\n  return ({inputs, attrs, backend}) => {\n    const {x} = inputs as UnaryInputs;\n    assertNotComplex(x, name);\n    if (x.dtype === 'string' || dtype === 'string') {\n      throw new Error('unaryKernelFunc does not support string input/output');\n    }\n\n    const cpuBackend = backend as MathBackendCPU;\n    const values = cpuBackend.data.get(x.dataId).values as TypedArray;\n    const xSize = util.sizeFromShape(x.shape);\n    const $dtype = dtype || x.dtype;\n    const newValues = util.getArrayFromDType($dtype, xSize);\n    for (let i = 0; i < xSize; ++i) {\n      newValues[i] = op(values[i], attrs);\n    }\n    return cpuBackend.makeTensorInfo(x.shape, $dtype, newValues);\n  };\n}\n\n/**\n * Template that creates a `KernelFunc` for unary ops from the given\n * `SimpleUnaryImpl`..\n * @param name Kernel name.\n * @param unaryImpl A `SimpleUnaryImpl` that implements the op.\n * @param dtype Optional. If set, the result has this dtype. Otherwise, the\n *     result has the same dtype as the input. This is mainly used in certain\n *     kernels that return bool type, such as isFinite, isInf, etc.\n */\nexport function unaryKernelFuncFromImpl(\n    name: string, unaryImpl: SimpleUnaryImpl, dtype?: DataType): KernelFunc {\n  return ({inputs, attrs, backend}) => {\n    const {x} = inputs as UnaryInputs;\n    assertNotComplex(x, name);\n    if (x.dtype === 'string' || dtype === 'string') {\n      throw new Error('unaryKernelFunc does not support string input/output');\n    }\n\n    const cpuBackend = backend as MathBackendCPU;\n    const values = cpuBackend.data.get(x.dataId).values as TypedArray;\n    const $dtype = dtype || x.dtype;\n    const newValues = unaryImpl(values, $dtype, attrs);\n    return cpuBackend.makeTensorInfo(x.shape, $dtype, newValues);\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/*\n * base.ts contains all the exports from tfjs-backend-cpu\n * without auto-kernel registration\n */\nimport {registerBackend} from '@tensorflow/tfjs-core';\nimport {MathBackendCPU} from './backend_cpu';\nimport * as shared from './shared';\n\nexport {MathBackendCPU} from './backend_cpu';\nexport {version as version_cpu} from './version';\nexport {shared};\n\n// Side effects for default initialization of MathBackendCPU\nregisterBackend('cpu', () => new MathBackendCPU(), 1 /* priority */);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Elu, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nexport const elu =\n    unaryKernelFunc(Elu, (xi) => xi >= 0 ? xi : (Math.exp(xi) - 1));\n\nexport const eluConfig: KernelConfig = {\n  kernelName: Elu,\n  backendName: 'cpu',\n  kernelFunc: elu,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Identity, IdentityInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nexport function identity(\n    args: {inputs: IdentityInputs, backend: MathBackendCPU}): TensorInfo {\n  const {inputs, backend} = args;\n  const {x} = inputs;\n\n  backend.incRef(x.dataId);\n\n  return {dataId: x.dataId, shape: x.shape, dtype: x.dtype};\n}\n\nexport const identityConfig: KernelConfig = {\n  kernelName: Identity,\n  backendName: 'cpu',\n  kernelFunc: identity as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, LeakyRelu, LeakyReluAttrs, LeakyReluInputs, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function leakyRelu(args: {\n  inputs: LeakyReluInputs,\n  backend: MathBackendCPU,\n  attrs: LeakyReluAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {alpha} = attrs;\n\n  assertNotComplex([x], 'leakyRelu');\n\n  const xSize = util.sizeFromShape(x.shape);\n  const xVals = backend.data.get(x.dataId).values as TypedArray;\n  const outVals = util.getTypedArrayFromDType('float32', xSize);\n\n  for (let i = 0; i < xVals.length; i++) {\n    outVals[i] = xVals[i] < 0 ? alpha * xVals[i] : xVals[i];\n  }\n\n  return backend.makeTensorInfo(x.shape, 'float32', outVals);\n}\n\nexport const leakyReluConfig: KernelConfig = {\n  kernelName: LeakyRelu,\n  backendName: 'cpu',\n  kernelFunc: leakyRelu as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, DataType, DataValues, NumericDataType, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {SimpleBinaryKernelImpl, SimpleBinaryOperation} from './binary_types';\n\n/**\n * Template that creates implementation for binary ops. Supports broadcast.\n */\nexport function createSimpleBinaryKernelImpl(op: SimpleBinaryOperation):\n    SimpleBinaryKernelImpl {\n  return (aShape: number[], bShape: number[], aVals: DataValues,\n          bVals: DataValues, dtype: DataType): [TypedArray, number[]] => {\n    const newShape = backend_util.assertAndGetBroadcastShape(aShape, bShape);\n\n    const resultRank = newShape.length;\n    const resultStrides = util.computeStrides(newShape);\n    const resultSize = util.sizeFromShape(newShape);\n\n    const result =\n        util.getTypedArrayFromDType(dtype as NumericDataType, resultSize);\n\n    const aRank = aShape.length;\n    const bRank = bShape.length;\n\n    const aStrides = util.computeStrides(aShape);\n    const bStrides = util.computeStrides(bShape);\n\n    const aBroadcastDims = backend_util.getBroadcastDims(aShape, newShape);\n    const bBroadcastDims = backend_util.getBroadcastDims(bShape, newShape);\n\n    if (aBroadcastDims.length + bBroadcastDims.length === 0) {\n      for (let i = 0; i < result.length; ++i) {\n        result[i] = op(aVals[i % aVals.length], bVals[i % bVals.length]);\n      }\n    } else {\n      for (let i = 0; i < result.length; ++i) {\n        const loc = util.indexToLoc(i, resultRank, resultStrides);\n\n        const aLoc = loc.slice(-aRank);\n        aBroadcastDims.forEach(d => aLoc[d] = 0);\n        const aIndex = util.locToIndex(aLoc, aRank, aStrides);\n\n        const bLoc = loc.slice(-bRank);\n        bBroadcastDims.forEach(d => bLoc[d] = 0);\n        const bIndex = util.locToIndex(bLoc, bRank, bStrides);\n\n        result[i] = op(aVals[aIndex], bVals[bIndex]);\n      }\n    }\n\n    return [result, newShape];\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Prelu, PreluInputs, TensorInfo, TypedArray} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\nimport {createSimpleBinaryKernelImpl} from '../utils/binary_impl';\n\nconst preluImpl = createSimpleBinaryKernelImpl(\n    (xValue: number, aValue: number) => xValue < 0 ? aValue * xValue : xValue);\n\nexport function prelu(args: {inputs: PreluInputs, backend: MathBackendCPU}):\n    TensorInfo {\n  const {inputs, backend} = args;\n  const {x, alpha} = inputs;\n\n  assertNotComplex([x, alpha], 'prelu');\n\n  const aVals = backend.data.get(x.dataId).values as TypedArray;\n  const bVals = backend.data.get(alpha.dataId).values as TypedArray;\n\n  const [resultData, resultShape] =\n      preluImpl(x.shape, alpha.shape, aVals, bVals, x.dtype);\n\n  return backend.makeTensorInfo(resultShape, x.dtype, resultData);\n}\n\nexport const preluConfig: KernelConfig = {\n  kernelName: Prelu,\n  backendName: 'cpu',\n  kernelFunc: prelu,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Relu} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nexport const relu = unaryKernelFunc(Relu, (xi) => Math.max(0, xi));\n\nexport const reluConfig: KernelConfig = {\n  kernelName: Relu,\n  backendName: 'cpu',\n  kernelFunc: relu,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Relu6} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nexport const relu6 =\n    unaryKernelFunc(Relu6, (xi) => Math.min(Math.max(0, xi), 6));\n\nexport const relu6Config: KernelConfig = {\n  kernelName: Relu6,\n  backendName: 'cpu',\n  kernelFunc: relu6,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Sigmoid} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nexport const sigmoid =\n    unaryKernelFunc(Sigmoid, (xi) => 1 / (1 + Math.exp(-xi)));\n\nexport const sigmoidConfig: KernelConfig = {\n  kernelName: Sigmoid,\n  backendName: 'cpu',\n  kernelFunc: sigmoid,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {_FusedMatMul, _FusedMatMulAttrs, _FusedMatMulInputs, backend_util, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {elu} from '../kernels/Elu';\nimport {identity} from '../kernels/Identity';\nimport {leakyRelu} from '../kernels/LeakyRelu';\nimport {prelu} from '../kernels/Prelu';\nimport {relu} from '../kernels/Relu';\nimport {relu6} from '../kernels/Relu6';\nimport {sigmoid} from '../kernels/Sigmoid';\n\nexport function applyActivation(\n    backend: MathBackendCPU, x: TensorInfo, activation: backend_util.Activation,\n    preluActivationWeights?: TensorInfo, leakyreluAlpha?: number): TensorInfo {\n  if (activation === 'linear') {\n    return identity({inputs: {x}, backend});\n  } else if (activation === 'relu') {\n    return relu({inputs: {x}, backend}) as TensorInfo;\n  } else if (activation === 'elu') {\n    return elu({inputs: {x}, backend}) as TensorInfo;\n  } else if (activation === 'relu6') {\n    return relu6({inputs: {x}, backend}) as TensorInfo;\n  } else if (activation === 'prelu') {\n    return prelu({inputs: {x, alpha: preluActivationWeights}, backend});\n  } else if (activation === 'leakyrelu') {\n    return leakyRelu({inputs: {x}, backend, attrs: {alpha: leakyreluAlpha}});\n  } else if (activation === 'sigmoid') {\n    return sigmoid({inputs: {x}, backend}) as TensorInfo;\n  }\n  throw new Error(\n      `Activation ${activation} has not been implemented for the CPU backend.`);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Complex, ComplexInputs, KernelConfig, KernelFunc, TensorInfo, TypedArray} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nexport function complex(args: {inputs: ComplexInputs, backend: MathBackendCPU}):\n    TensorInfo {\n  const {inputs, backend} = args;\n  const {real, imag} = inputs;\n\n  const realVals = backend.data.get(real.dataId).values as TypedArray;\n  const imagVals = backend.data.get(imag.dataId).values as TypedArray;\n\n  const complexInfo = backend.makeTensorInfo(real.shape, 'complex64');\n\n  const complex = backend.data.get(complexInfo.dataId);\n\n  // The complex tensor owns the underlying real and imag tensorInfos, only the\n  // complex tensor tracks refCount, when complexData is disposed the\n  // underlying tensorData will be disposed.\n  complex.complexTensorInfos = {\n    real: backend.makeTensorInfo(real.shape, 'float32', realVals),\n    imag: backend.makeTensorInfo(imag.shape, 'float32', imagVals)\n  };\n\n  return complexInfo;\n}\n\nexport const complexConfig: KernelConfig = {\n  kernelName: Complex,\n  backendName: 'cpu',\n  kernelFunc: complex as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, TensorInfo, util} from '@tensorflow/tfjs-core';\nimport {MathBackendCPU} from '../backend_cpu';\nimport {complex} from '../kernels/Complex';\n\n/**\n * Generates a tensorInfo with all zeros value.\n * @param backend cpu backend.\n * @param shape Shape for the zeros tensor.\n * @param dtype Optional. If set, the result has this dtype.\n */\nexport function zeros(\n    backend: MathBackendCPU, shape: number[],\n    dtype: DataType = 'float32'): TensorInfo {\n  if (dtype === 'complex64') {\n    const real = zeros(backend, shape, 'float32');\n    const imag = zeros(backend, shape, 'float32');\n\n    return complex({inputs: {real, imag}, backend});\n  }\n\n  const values = util.makeZerosTypedArray(util.sizeFromShape(shape), dtype);\n\n  return backend.makeTensorInfo(shape, dtype, values);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Real, RealInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nexport function real(args: {inputs: RealInputs, backend: MathBackendCPU}):\n    TensorInfo {\n  const {inputs, backend} = args;\n  const {input} = inputs;\n\n  const real = backend.data.get(input.dataId).complexTensorInfos.real;\n  const realVal = backend.data.get(real.dataId).values;\n\n  // When complex tensor is disposed, its underlying parts will be disposed too.\n  // Make new tensor out of the real value of the complex. This makes sure the\n  // value is still accessible even if complex tensor is disposed.\n  return backend.makeTensorInfo(real.shape, real.dtype, realVal);\n}\n\nexport const realConfig: KernelConfig = {\n  kernelName: Real,\n  backendName: 'cpu',\n  kernelFunc: real as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Cast, CastAttrs, CastInputs, KernelConfig, KernelFunc, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {createSimpleBinaryKernelImpl} from '../utils/binary_impl';\nimport {zeros} from '../utils/zeros_impl';\n\nimport {complex} from './Complex';\nimport {identity} from './Identity';\nimport {real} from './Real';\n\nexport function cast(\n    args: {inputs: CastInputs, backend: MathBackendCPU, attrs: CastAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {dtype} = attrs;\n\n  // Casting to complex64.\n  if (dtype === 'complex64') {\n    if (x.dtype === 'complex64') {\n      return identity({inputs: {x}, backend});\n    }\n\n    const zerosTensorInfo = zeros(backend, x.shape, x.dtype);\n    const floatX = cast({inputs: {x}, backend, attrs: {dtype: 'float32'}});\n\n    const result =\n        complex({inputs: {real: floatX, imag: zerosTensorInfo}, backend});\n\n    backend.disposeIntermediateTensorInfo(zerosTensorInfo);\n    backend.disposeIntermediateTensorInfo(floatX);\n\n    return result;\n  }\n\n  // Casting from complex64\n  if (x.dtype === 'complex64') {\n    const realPart = real({inputs: {input: x}, backend});\n    const result = cast({inputs: {x: realPart}, backend, attrs: {dtype}});\n\n    backend.disposeIntermediateTensorInfo(realPart);\n\n    return result;\n  }\n\n  if (!util.hasEncodingLoss(x.dtype, dtype)) {\n    // We don't change the underlying data, since we cast to higher\n    // precision.\n    const result = identity({inputs: {x}, backend});\n    return {dataId: result.dataId, shape: result.shape, dtype};\n  }\n\n  if (dtype === 'int32') {\n    const values = backend.data.get(x.dataId).values as TypedArray;\n    const resultValues = Int32Array.from(values);\n    return backend.makeTensorInfo(x.shape, 'int32', resultValues);\n  }\n\n  if (dtype === 'bool') {\n    // This is essentially the result of notEqual(x, 0). We avoid using\n    // kernel notEqual to avoid circular dependency, i.e. binary_utils ->\n    // cast -> notEqual -> binary_utils.\n    const xVals = backend.data.get(x.dataId).values as TypedArray;\n    const zero = util.toTypedArray([0], x.dtype);\n\n    const [resultData, resultShape] = createSimpleBinaryKernelImpl(\n        (a, b) => (a !== b) ? 1 : 0)(x.shape, [], xVals, zero, 'bool');\n\n    return backend.makeTensorInfo(resultShape, 'bool', resultData);\n  }\n\n  throw new Error(`Error in Cast: failed to cast ${x.dtype} to ${dtype}`);\n}\n\nexport const castConfig: KernelConfig = {\n  kernelName: Cast,\n  backendName: 'cpu',\n  kernelFunc: cast as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, BinaryInputs, DataType, KernelFunc, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\nimport {cast} from '../kernels/Cast';\nimport {complex} from '../kernels/Complex';\n\nimport {ComplexBinaryKernelImpl, ComplexBinaryOperation, SimpleBinaryKernelImpl} from './binary_types';\n\n/**\n * Template that creates a `KernelFunc` for binary ops.\n * @param name Kernel name.\n * @param binaryKernelImpl A `SimpleBinaryKernelImpl` for the kernel.\n * @param binaryKernelComplexImpl Optional. If exists, represents a\n *     `ComplexBinaryKernelImpl` for the kernel, will be used when input dtype\n *     is `complex64`.\n * @param dtype Optional. If set, the result has this dtype. Otherwise, the\n *     result has the same dtype as the first input. This is mainly used in\n *     comparison kernels, such as Equal, Less, Greater, etc.\n */\nexport function binaryKernelFunc(\n    name: string, simpleImpl: SimpleBinaryKernelImpl,\n    complexImpl?: ComplexBinaryKernelImpl, dtype?: DataType): KernelFunc {\n  if (complexImpl == null) {\n    return ({inputs, backend}) => {\n      const {a, b} = inputs as BinaryInputs;\n      const cpuBackend = backend as MathBackendCPU;\n\n      assertNotComplex([a, b], name);\n\n      const aVals = cpuBackend.data.get(a.dataId).values as TypedArray;\n      const bVals = cpuBackend.data.get(b.dataId).values as TypedArray;\n\n      const decodedAVals = a.dtype === 'string' ?\n          // tslint:disable-next-line: no-any\n          backend_util.fromUint8ToStringArray(aVals as any as Uint8Array[]) :\n          aVals;\n      const decodedBVals = a.dtype === 'string' ?\n          // tslint:disable-next-line: no-any\n          backend_util.fromUint8ToStringArray(bVals as any as Uint8Array[]) :\n          bVals;\n      const $dtype = dtype || a.dtype;\n\n      const [resultData, resultShape] =\n          simpleImpl(a.shape, b.shape, decodedAVals, decodedBVals, $dtype);\n\n      return cpuBackend.makeTensorInfo(resultShape, $dtype, resultData);\n    };\n  }\n\n  return ({inputs, backend}) => {\n    const {a, b} = inputs as BinaryInputs;\n    const cpuBackend = backend as MathBackendCPU;\n\n    if (a.dtype === 'complex64' || b.dtype === 'complex64') {\n      const $aComplex = cast(\n          {inputs: {x: a}, backend: cpuBackend, attrs: {dtype: 'complex64'}});\n\n      const $aComplexVals = cpuBackend.data.get($aComplex.dataId);\n\n      const aReal = $aComplexVals.complexTensorInfos.real;\n      const aImag = $aComplexVals.complexTensorInfos.imag;\n\n      const aRealVals =\n          cpuBackend.data.get(aReal.dataId).values as Float32Array;\n      const aImagVals =\n          cpuBackend.data.get(aImag.dataId).values as Float32Array;\n\n      const $bComplex = cast(\n          {inputs: {x: b}, backend: cpuBackend, attrs: {dtype: 'complex64'}});\n\n      const $bComplexVals = cpuBackend.data.get($bComplex.dataId);\n\n      const bReal = $bComplexVals.complexTensorInfos.real;\n      const bImag = $bComplexVals.complexTensorInfos.imag;\n\n      const bRealVals =\n          cpuBackend.data.get(bReal.dataId).values as Float32Array;\n      const bImagVals =\n          cpuBackend.data.get(bImag.dataId).values as Float32Array;\n\n      const [resultRealData, resultImagData, resultShape] = complexImpl(\n          a.shape, b.shape, aRealVals, aImagVals, bRealVals, bImagVals);\n\n      const resultReal =\n          cpuBackend.makeTensorInfo(resultShape, 'float32', resultRealData);\n\n      const resultImag =\n          cpuBackend.makeTensorInfo(resultShape, 'float32', resultImagData);\n\n      const result = complex(\n          {inputs: {real: resultReal, imag: resultImag}, backend: cpuBackend});\n\n      cpuBackend.disposeIntermediateTensorInfo($aComplex);\n      cpuBackend.disposeIntermediateTensorInfo($bComplex);\n      cpuBackend.disposeIntermediateTensorInfo(resultReal);\n      cpuBackend.disposeIntermediateTensorInfo(resultImag);\n\n      return result;\n    } else {\n      const aVals = cpuBackend.data.get(a.dataId).values as TypedArray;\n      const bVals = cpuBackend.data.get(b.dataId).values as TypedArray;\n\n      const $dtype = dtype || a.dtype;\n\n      const [resultData, resultShape] =\n          simpleImpl(a.shape, b.shape, aVals, bVals, $dtype);\n\n      return cpuBackend.makeTensorInfo(resultShape, $dtype, resultData);\n    }\n  };\n}\n\n/**\n * Template that creates the complex type implementation for binary ops.\n * Supports broadcast.\n */\nexport function createComplexBinaryKernelImpl(op: ComplexBinaryOperation):\n    ComplexBinaryKernelImpl {\n  return (aShape: number[], bShape: number[], aRealVals: Float32Array,\n          aImagVals: Float32Array, bRealVals: Float32Array,\n          bImagVals: Float32Array): [TypedArray, TypedArray, number[]] => {\n    const resultShape = backend_util.assertAndGetBroadcastShape(aShape, bShape);\n    const resultSize = util.sizeFromShape(resultShape);\n    const resultRank = resultShape.length;\n    const resultStrides = util.computeStrides(resultShape);\n\n    const resultRealVals = util.getTypedArrayFromDType('float32', resultSize);\n    const resultImagVals = util.getTypedArrayFromDType('float32', resultSize);\n\n    const aBroadcastDims = backend_util.getBroadcastDims(aShape, resultShape);\n    const bBroadcastDims = backend_util.getBroadcastDims(bShape, resultShape);\n\n    const aVals = backend_util.mergeRealAndImagArrays(aRealVals, aImagVals);\n    const bVals = backend_util.mergeRealAndImagArrays(bRealVals, bImagVals);\n\n    const aRank = aShape.length;\n    const aStrides = util.computeStrides(aShape);\n\n    const bRank = bShape.length;\n    const bStrides = util.computeStrides(bShape);\n\n    if (aBroadcastDims.length + bBroadcastDims.length === 0) {\n      for (let i = 0; i < resultRealVals.length; i++) {\n        const aIdx = i % aVals.length;\n        const bIdx = i % bVals.length;\n\n        const result =\n            op(aVals[aIdx * 2], aVals[aIdx * 2 + 1], bVals[bIdx * 2],\n               bVals[bIdx * 2 + 1]);\n\n        resultRealVals[i] = result.real;\n        resultImagVals[i] = result.imag;\n      }\n    } else {\n      for (let i = 0; i < resultRealVals.length; i++) {\n        const loc = util.indexToLoc(i, resultRank, resultStrides);\n\n        const aLoc = loc.slice(-aRank);\n        aBroadcastDims.forEach(d => aLoc[d] = 0);\n        const aIndex = util.locToIndex(aLoc, aRank, aStrides);\n\n        const bLoc = loc.slice(-bRank);\n        bBroadcastDims.forEach(d => bLoc[d] = 0);\n        const bIndex = util.locToIndex(bLoc, bRank, bStrides);\n\n        const opResult =\n            op(aVals[aIndex * 2], aVals[aIndex * 2 + 1], bVals[bIndex * 2],\n               bVals[bIndex * 2 + 1]);\n\n        resultRealVals[i] = opResult.real;\n        resultImagVals[i] = opResult.imag;\n      }\n    }\n    return [resultRealVals, resultImagVals, resultShape];\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Add, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createSimpleBinaryKernelImpl} from '../utils/binary_impl';\nimport {binaryKernelFunc, createComplexBinaryKernelImpl} from '../utils/binary_utils';\n\nexport const addImpl =\n    createSimpleBinaryKernelImpl(((a: number, b: number) => a + b));\nexport const addComplexImpl =\n    createComplexBinaryKernelImpl(((aReal, aImag, bReal, bImag) => {\n      return {real: aReal + bReal, imag: aImag + bImag};\n    }));\n\nexport const add = binaryKernelFunc(Add, addImpl, addComplexImpl);\n\nexport const addConfig: KernelConfig = {\n  kernelName: Add,\n  backendName: 'cpu',\n  kernelFunc: add\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Reshape, ReshapeAttrs, ReshapeInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nexport function reshape(\n    args:\n        {inputs: ReshapeInputs, backend: MathBackendCPU, attrs: ReshapeAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {shape} = attrs;\n\n  const xSize = util.sizeFromShape(x.shape);\n  const $shape = util.inferFromImplicitShape(shape, xSize);\n  const $xSize = util.sizeFromShape($shape);\n\n  util.assert(\n      xSize === $xSize,\n      () => `The new shape (${$shape}) has ${$xSize} elements and the old ` +\n          `shape (${x.shape}) has ${xSize} elements. The new shape and old ` +\n          `shape must have the same number of elements.`);\n\n  backend.incRef(x.dataId);\n\n  const xData = backend.data.get(x.dataId);\n\n  if (xData.complexTensorInfos != null) {\n    const real = xData.complexTensorInfos.real;\n    const imag = xData.complexTensorInfos.imag;\n\n    real.shape = $shape;\n    imag.shape = $shape;\n  }\n\n  return {dataId: x.dataId, shape: $shape, dtype: x.dtype};\n}\n\nexport const reshapeConfig: KernelConfig = {\n  kernelName: Reshape,\n  backendName: 'cpu',\n  kernelFunc: reshape as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BatchMatMul, BatchMatMulAttrs, BatchMatMulInputs, buffer, KernelConfig, KernelFunc, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nimport {reshape} from './Reshape';\n\nexport function batchMatMul(args: {\n  inputs: BatchMatMulInputs,\n  attrs: BatchMatMulAttrs,\n  backend: MathBackendCPU\n}) {\n  const {inputs, backend, attrs} = args;\n  const {a, b} = inputs;\n  const {transposeA, transposeB} = attrs;\n\n  assertNotComplex([a, b], 'matMul');\n\n  const aRank = a.shape.length;\n  const bRank = b.shape.length;\n\n  const innerShapeA = transposeA ? a.shape[aRank - 2] : a.shape[aRank - 1];\n  const innerShapeB = transposeB ? b.shape[bRank - 1] : b.shape[bRank - 2];\n\n  const outerShapeA = transposeA ? a.shape[aRank - 1] : a.shape[aRank - 2];\n  const outerShapeB = transposeB ? b.shape[bRank - 2] : b.shape[bRank - 1];\n\n  const outerDimsA = a.shape.slice(0, -2);\n  const outerDimsB = b.shape.slice(0, -2);\n\n  const batchDimA = util.sizeFromShape(outerDimsA);\n  const batchDimB = util.sizeFromShape(outerDimsB);\n\n  const batchDimsCompatible =\n      batchDimA === batchDimB || batchDimA === 1 || batchDimB === 1;\n\n  util.assert(\n      aRank >= 2 && bRank >= 2 && batchDimsCompatible,\n      () => `Error in matMul: the input batch dimensions must either be the ` +\n          `same or at least one input batch dimension must be 1. Got input ` +\n          `batch dimensions of (${outerDimsA}) and (${outerDimsB}).`);\n\n  const outShapeOuterDims =\n      batchDimA > batchDimB ? a.shape.slice(0, -2) : b.shape.slice(0, -2);\n  const outShape = outShapeOuterDims.concat([outerShapeA, outerShapeB]);\n\n  util.assert(\n      innerShapeA === innerShapeB,\n      () => `Error in matMul: inner shapes (${innerShapeA}) and (` +\n          `${innerShapeB}) of Tensors with shapes ${a.shape} and ` +\n          `${b.shape} and transposeA=${transposeA}` +\n          ` and transposeB=${transposeB} must match.`);\n\n  const a3dShape = transposeA ? [batchDimA, innerShapeA, outerShapeA] :\n                                [batchDimA, outerShapeA, innerShapeA];\n  const b3dShape = transposeB ? [batchDimB, outerShapeB, innerShapeB] :\n                                [batchDimB, innerShapeB, outerShapeB];\n\n  // The rest of the implementation is designed to operate on rank-3 tensors\n  const a3d = reshape({inputs: {x: a}, backend, attrs: {shape: a3dShape}});\n  const b3d = reshape({inputs: {x: b}, backend, attrs: {shape: b3dShape}});\n\n  const sharedDim = transposeA ? a3d.shape[1] : a3d.shape[2];\n  const leftDim = transposeA ? a3d.shape[2] : a3d.shape[1];\n  const rightDim = transposeB ? b3d.shape[1] : b3d.shape[2];\n  const batchDim = Math.max(batchDimA, batchDimB);\n\n  const a3dValues = backend.data.get(a3d.dataId).values as TypedArray;\n  const b3dValues = backend.data.get(b3d.dataId).values as TypedArray;\n\n  const a3dStrides = util.computeStrides(a3d.shape);\n  const b3dStrides = util.computeStrides(b3d.shape);\n\n  const [aBatch, aOuterStep, aInnerStep] = transposeA ?\n      [a3dStrides[0], 1, a3dStrides[1]] :\n      [a3dStrides[0], a3dStrides[1], 1];\n  const [bInnerStep, bOuterStep, bBatch] = transposeB ?\n      [1, b3dStrides[1], b3dStrides[0]] :\n      [b3dStrides[1], 1, b3dStrides[0]];\n\n  const size = leftDim * rightDim;\n  const result = buffer([batchDim, leftDim, rightDim], a3d.dtype);\n\n  const resVals = result.values as TypedArray;\n  const blockSize = backend.blockSize;\n\n  for (let bi = 0; bi < batchDim; bi++) {\n    for (let i0 = 0; i0 < leftDim; i0 += blockSize) {\n      for (let j0 = 0; j0 < rightDim; j0 += blockSize) {\n        for (let k0 = 0; k0 < sharedDim; k0 += blockSize) {\n          // for when blockSize doesn't evenly divide the input\n          const iBlock = Math.min(i0 + blockSize, leftDim);\n          const jBlock = Math.min(j0 + blockSize, rightDim);\n          const kBlock = Math.min(k0 + blockSize, sharedDim);\n\n          for (let i = i0; i < iBlock; i++) {\n            for (let j = j0; j < jBlock; j++) {\n              let sum = 0.0;\n\n              for (let k = k0; k < kBlock; k++) {\n                const batchOffsetA = Math.min(bi, batchDimA - 1) * aBatch;\n                const batchOffsetB = Math.min(bi, batchDimB - 1) * bBatch;\n                const aVal =\n                    a3dValues[batchOffsetA + i * aOuterStep + k * aInnerStep];\n                const bVal =\n                    b3dValues[k * bInnerStep + j * bOuterStep + batchOffsetB];\n                sum += aVal * bVal;\n              }\n              resVals[bi * size + (i * rightDim + j)] += sum;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  backend.disposeIntermediateTensorInfo(a3d);\n  backend.disposeIntermediateTensorInfo(b3d);\n\n  // set correct shape on output.\n  return backend.makeTensorInfo(\n      outShape, result.dtype, result.values as TypedArray);\n}\n\nexport const batchMatMulConfig: KernelConfig = {\n  kernelName: BatchMatMul,\n  backendName: 'cpu',\n  kernelFunc: batchMatMul as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {_FusedMatMul, _FusedMatMulAttrs, _FusedMatMulInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {applyActivation} from '../utils/fused_utils';\n\nimport {add} from './Add';\nimport {batchMatMul} from './BatchMatMul';\n\nexport function _fusedMatMul(args: {\n  inputs: _FusedMatMulInputs,\n  attrs: _FusedMatMulAttrs,\n  backend: MathBackendCPU\n}) {\n  const {inputs, backend, attrs} = args;\n  const {a, b, bias, preluActivationWeights} = inputs;\n  const {transposeA, transposeB, activation, leakyreluAlpha} = attrs;\n\n  let current;\n  let addRes;\n  let activationRes;\n\n  const intermediates: TensorInfo[] = [];\n\n  const matMulRes =\n      batchMatMul({inputs: {a, b}, attrs: {transposeA, transposeB}, backend});\n  current = matMulRes;\n\n  if (bias) {\n    addRes = add({inputs: {a: current, b: bias}, backend}) as TensorInfo;\n    intermediates.push(current);\n    current = addRes;\n  }\n  if (activation) {\n    activationRes = applyActivation(\n        backend, current, activation, preluActivationWeights, leakyreluAlpha);\n    intermediates.push(current);\n    current = activationRes;\n  }\n\n  for (const i of intermediates) {\n    backend.disposeIntermediateTensorInfo(i);\n  }\n\n  return current;\n}\n\nexport const _fusedMatMulConfig: KernelConfig = {\n  kernelName: _FusedMatMul,\n  backendName: 'cpu',\n  kernelFunc: _fusedMatMul as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Abs, AbsInputs, KernelConfig, KernelFunc, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function simpleAbsImpl(vals: TypedArray): Float32Array {\n  const resultValues = new Float32Array(vals.length);\n  for (let i = 0; i < vals.length; ++i) {\n    resultValues[i] = Math.abs(vals[i]);\n  }\n  return resultValues;\n}\n\nexport const abs = (args: {inputs: AbsInputs, backend: MathBackendCPU}) => {\n  const {x} = args.inputs;\n  const cpuBackend = args.backend;\n\n  assertNotComplex(x, 'abs');\n\n  let resultValues = new Float32Array(util.sizeFromShape(x.shape));\n  const values = cpuBackend.data.get(x.dataId).values as TypedArray;\n  resultValues = simpleAbsImpl(values);\n\n  return cpuBackend.makeOutput(resultValues, x.shape, 'float32');\n};\n\nexport const absConfig: KernelConfig = {\n  kernelName: Abs,\n  backendName: 'cpu',\n  kernelFunc: abs as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Acos, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nexport const acos = unaryKernelFunc(Acos, (xi) => Math.acos(xi));\n\nexport const acosConfig: KernelConfig = {\n  kernelName: Acos,\n  backendName: 'cpu',\n  kernelFunc: acos,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Acosh, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nexport const acosh = unaryKernelFunc(Acosh, (xi) => Math.acosh(xi));\n\nexport const acoshConfig: KernelConfig = {\n  kernelName: Acosh,\n  backendName: 'cpu',\n  kernelFunc: acosh,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AddN, AddNInputs, buffer, KernelConfig, KernelFunc, Tensor, TensorInfo, TypedArray} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function addN(args: {inputs: AddNInputs, backend: MathBackendCPU}):\n    TensorInfo {\n  const {inputs, backend} = args;\n  const tensors = inputs as Tensor[];\n\n  assertNotComplex(inputs, 'addN');\n\n  const vals =\n      tensors.map(t => backend.data.get(t.dataId).values as TypedArray);\n  const outBuf = buffer(tensors[0].shape, tensors[0].dtype as 'float32');\n  const outVals = outBuf.values;\n  for (let i = 0; i < tensors.length; i++) {\n    const currVals = vals[i];\n    for (let j = 0; j < outVals.length; j++) {\n      outVals[j] += currVals[j];\n    }\n  }\n\n  return backend.makeTensorInfo(outBuf.shape, outBuf.dtype, outBuf.values);\n}\n\nexport const addNConfig: KernelConfig = {\n  kernelName: AddN,\n  backendName: 'cpu',\n  kernelFunc: addN as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, NumericDataType, TypedArray} from '@tensorflow/tfjs-core';\nimport {util} from '@tensorflow/tfjs-core';\n\nexport function transposeImpl(\n    xVals: TypedArray, xShape: number[], dtype: DataType, perm: number[],\n    newShape: number[]): TypedArray {\n  const xRank = xShape.length;\n  const xSize = util.sizeFromShape(xShape);\n  const xStrides = util.computeStrides(xShape);\n  const newStrides = util.computeStrides(newShape);\n\n  const result = util.getTypedArrayFromDType(\n      dtype as NumericDataType, util.sizeFromShape(newShape));\n\n  for (let i = 0; i < xSize; ++i) {\n    const loc = util.indexToLoc(i, xRank, xStrides);\n\n    // Permute location.\n    const newLoc: number[] = new Array(loc.length);\n    for (let i = 0; i < newLoc.length; i++) {\n      newLoc[i] = loc[perm[i]];\n    }\n\n    const newIndex = util.locToIndex(newLoc, xRank, newStrides);\n    result[newIndex] = xVals[i];\n  }\n  return result;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, Transpose, TransposeAttrs, TransposeInputs, TypedArray} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nimport {transposeImpl} from './Transpose_impl';\n\nexport function transpose(args: {\n  inputs: TransposeInputs,\n  attrs: TransposeAttrs,\n  backend: MathBackendCPU\n}): TensorInfo {\n  const {inputs, attrs, backend} = args;\n  const {x} = inputs;\n  const {perm} = attrs;\n\n  assertNotComplex(x, 'transpose');\n\n  const xRank = x.shape.length;\n\n  const newShape: number[] = new Array(xRank);\n  for (let i = 0; i < newShape.length; i++) {\n    newShape[i] = x.shape[perm[i]];\n  }\n\n  const values = backend.data.get(x.dataId).values as TypedArray;\n  const result = transposeImpl(values, x.shape, x.dtype, perm, newShape);\n\n  const dataId = backend.write(result, newShape, x.dtype);\n  return {dataId, shape: newShape, dtype: x.dtype};\n}\n\nexport const transposeConfig: KernelConfig = {\n  kernelName: Transpose,\n  backendName: 'cpu',\n  kernelFunc: transpose as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {All, AllAttrs, AllInputs, backend_util, KernelConfig, KernelFunc, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\nimport {reshape} from './Reshape';\nimport {transpose} from './Transpose';\n\nexport function all(\n    args: {inputs: AllInputs, backend: MathBackendCPU, attrs: AllAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {axis, keepDims} = attrs;\n\n  assertNotComplex(x, 'all');\n\n  const origAxes = util.parseAxisParam(axis, x.shape);\n  let axes = origAxes;\n  const permutedAxes = backend_util.getAxesPermutation(axes, x.shape.length);\n  let $x = x;\n  if (permutedAxes != null) {\n    $x = transpose({inputs: {x}, backend, attrs: {perm: permutedAxes}});\n    axes = backend_util.getInnerMostAxes(axes.length, x.shape.length);\n  }\n\n  backend_util.assertAxesAreInnerMostDims('all', axes, $x.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes($x.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n  const vals = util.makeZerosTypedArray(util.sizeFromShape(outShape), $x.dtype);\n\n  const aVals = backend.data.get($x.dataId).values as TypedArray;\n  for (let i = 0; i < vals.length; ++i) {\n    const offset = i * reduceSize;\n    let all = aVals[offset];\n    for (let j = 0; j < reduceSize; ++j) {\n      const value = aVals[offset + j];\n      all = all && value;\n    }\n    vals[i] = all;\n  }\n\n  if (permutedAxes != null) {\n    backend.disposeIntermediateTensorInfo($x);\n  }\n\n  const result = backend.makeTensorInfo(outShape, $x.dtype, vals);\n\n  if (keepDims) {\n    const expandedShape = backend_util.expandShapeToKeepDim(outShape, origAxes);\n    const reshapedResult =\n        reshape({inputs: {x: result}, backend, attrs: {shape: expandedShape}});\n\n    backend.disposeIntermediateTensorInfo(result);\n\n    return reshapedResult;\n  }\n\n  return result;\n}\n\nexport const allConfig: KernelConfig = {\n  kernelName: All,\n  backendName: 'cpu',\n  kernelFunc: all as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Any, AnyAttrs, AnyInputs, backend_util, KernelConfig, KernelFunc, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\nimport {reshape} from './Reshape';\nimport {transpose} from './Transpose';\n\nexport function any(\n    args: {inputs: AnyInputs, backend: MathBackendCPU, attrs: AnyAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {axis, keepDims} = attrs;\n\n  assertNotComplex(x, 'any');\n\n  const origAxes = util.parseAxisParam(axis, x.shape);\n  let axes = origAxes;\n  const permutedAxes = backend_util.getAxesPermutation(axes, x.shape.length);\n  let $x = x;\n  if (permutedAxes != null) {\n    $x = transpose({inputs: {x}, backend, attrs: {perm: permutedAxes}});\n    axes = backend_util.getInnerMostAxes(axes.length, x.shape.length);\n  }\n\n  backend_util.assertAxesAreInnerMostDims('any', axes, $x.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes($x.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n  const vals = util.makeZerosTypedArray(util.sizeFromShape(outShape), $x.dtype);\n\n  const aVals = backend.data.get($x.dataId).values as TypedArray;\n  for (let i = 0; i < vals.length; ++i) {\n    const offset = i * reduceSize;\n    let anyVal = aVals[offset];\n    for (let j = 0; j < reduceSize; ++j) {\n      const value = aVals[offset + j];\n      anyVal = anyVal || value;\n    }\n    vals[i] = anyVal;\n  }\n\n  if (permutedAxes != null) {\n    backend.disposeIntermediateTensorInfo($x);\n  }\n\n  const result = backend.makeTensorInfo(outShape, $x.dtype, vals);\n\n  if (keepDims) {\n    const expandedShape = backend_util.expandShapeToKeepDim(outShape, origAxes);\n    const reshapedResult =\n        reshape({inputs: {x: result}, backend, attrs: {shape: expandedShape}});\n\n    backend.disposeIntermediateTensorInfo(result);\n\n    return reshapedResult;\n  }\n\n  return result;\n}\n\nexport const anyConfig: KernelConfig = {\n  kernelName: Any,\n  backendName: 'cpu',\n  kernelFunc: any as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ArgMax, ArgMaxAttrs, ArgMaxInputs, backend_util, KernelConfig, KernelFunc, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\nimport {transpose} from './Transpose';\n\nexport function argMax(\n    args: {inputs: ArgMaxInputs, backend: MathBackendCPU, attrs: ArgMaxAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {axis} = attrs;\n\n  assertNotComplex(x, 'argMax');\n\n  let axes = util.parseAxisParam(axis, x.shape);\n  const permutedAxes = backend_util.getAxesPermutation(axes, x.shape.length);\n  let $x = x;\n  const intermediateTensorInfos = [];\n  if (permutedAxes != null) {\n    $x = transpose({inputs: {x}, backend, attrs: {perm: permutedAxes}});\n    intermediateTensorInfos.push($x);\n    axes = backend_util.getInnerMostAxes(axes.length, $x.shape.length);\n  }\n\n  axes = [axes[0]];\n  backend_util.assertAxesAreInnerMostDims('argMax', axes, $x.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes($x.shape, axes);\n\n  const outSize = util.sizeFromShape(outShape);\n  const vals = util.makeZerosTypedArray(outSize, 'int32');\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const aVals = backend.data.get($x.dataId).values as TypedArray;\n  for (let i = 0; i < vals.length; ++i) {\n    const offset = i * reduceSize;\n    let max = aVals[offset];\n    let maxIndex = 0;\n    for (let j = 0; j < reduceSize; ++j) {\n      const value = aVals[offset + j];\n      if (value > max) {\n        max = value;\n        maxIndex = j;\n      }\n    }\n    vals[i] = maxIndex;\n  }\n\n  intermediateTensorInfos.forEach(\n      t => backend.disposeIntermediateTensorInfo(t));\n\n  return backend.makeTensorInfo(outShape, 'int32', vals);\n}\n\nexport const argMaxConfig: KernelConfig = {\n  kernelName: ArgMax,\n  backendName: 'cpu',\n  kernelFunc: argMax as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ArgMin, ArgMinAttrs, ArgMinInputs, backend_util, KernelConfig, KernelFunc, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\nimport {transpose} from './Transpose';\n\nexport function argMin(\n    args: {inputs: ArgMinInputs, backend: MathBackendCPU, attrs: ArgMinAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {axis} = attrs;\n\n  assertNotComplex(x, 'argMin');\n\n  let axes = util.parseAxisParam(axis, x.shape);\n  const permutedAxes = backend_util.getAxesPermutation(axes, x.shape.length);\n  let $x = x;\n  const intermediateTensorInfos = [];\n  if (permutedAxes != null) {\n    $x = transpose({inputs: {x}, backend, attrs: {perm: permutedAxes}});\n    intermediateTensorInfos.push($x);\n    axes = backend_util.getInnerMostAxes(axes.length, $x.shape.length);\n  }\n\n  axes = [axes[0]];\n  backend_util.assertAxesAreInnerMostDims('argMin', axes, $x.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes($x.shape, axes);\n\n  const outSize = util.sizeFromShape(outShape);\n  const vals = util.makeZerosTypedArray(outSize, 'int32');\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const aVals = backend.data.get($x.dataId).values as TypedArray;\n  for (let i = 0; i < vals.length; ++i) {\n    const offset = i * reduceSize;\n    let min = aVals[offset];\n    let minIndex = 0;\n    for (let j = 0; j < reduceSize; ++j) {\n      const value = aVals[offset + j];\n      if (value < min) {\n        min = value;\n        minIndex = j;\n      }\n    }\n    vals[i] = minIndex;\n  }\n\n  intermediateTensorInfos.forEach(\n      t => backend.disposeIntermediateTensorInfo(t));\n\n  return backend.makeTensorInfo(outShape, 'int32', vals);\n}\n\nexport const argMinConfig: KernelConfig = {\n  kernelName: ArgMin,\n  backendName: 'cpu',\n  kernelFunc: argMin as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Asin, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nexport const asin = unaryKernelFunc(Asin, (xi) => Math.asin(xi));\n\nexport const asinConfig: KernelConfig = {\n  kernelName: Asin,\n  backendName: 'cpu',\n  kernelFunc: asin,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Asinh, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nexport const asinh = unaryKernelFunc(Asinh, (xi) => Math.asinh(xi));\n\nexport const asinhConfig: KernelConfig = {\n  kernelName: Asinh,\n  backendName: 'cpu',\n  kernelFunc: asinh,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Atan, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nexport const atan = unaryKernelFunc(Atan, (xi) => Math.atan(xi));\n\nexport const atanConfig: KernelConfig = {\n  kernelName: Atan,\n  backendName: 'cpu',\n  kernelFunc: atan,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Atan2, KernelConfig} from '@tensorflow/tfjs-core';\nimport {createSimpleBinaryKernelImpl} from '../utils/binary_impl';\nimport {binaryKernelFunc} from '../utils/binary_utils';\n\nexport const atan2Impl = createSimpleBinaryKernelImpl(\n    (aValue, bValue) => Math.atan2(aValue as number, bValue as number));\n\nexport const atan2 = binaryKernelFunc(Atan2, atan2Impl);\n\nexport const atan2Config: KernelConfig = {\n  kernelName: Atan2,\n  backendName: 'cpu',\n  kernelFunc: atan2,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Atanh, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nexport const atanh = unaryKernelFunc(Atanh, (xi) => Math.atanh(xi));\n\nexport const atanhConfig: KernelConfig = {\n  kernelName: Atanh,\n  backendName: 'cpu',\n  kernelFunc: atanh,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, buffer, DataType, Rank, TensorBuffer, TypedArray} from '@tensorflow/tfjs-core';\n\nexport function pool(\n    xValues: TypedArray, xShape: number[], dtype: DataType, strides: number[],\n    convInfo: backend_util.Conv2DInfo,\n    poolType: 'max'|'avg'): TensorBuffer<Rank, DataType> {\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n  const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padLeft = convInfo.padInfo.left;\n\n  const initialValue =\n      (poolType === 'max' ? Number.NEGATIVE_INFINITY :\n                            Number.POSITIVE_INFINITY);\n\n  const output = buffer(convInfo.outShape, dtype);\n  const outputVals = output.values;\n\n  const outputBatchStrides =\n      convInfo.outShape[1] * convInfo.outShape[2] * convInfo.outShape[3];\n  const outputRowStrides = convInfo.outShape[2] * convInfo.outShape[3];\n  const outputColStrides = convInfo.outShape[3];\n\n  for (let b = 0; b < convInfo.batchSize; ++b) {\n    const outputBatchOffset = b * outputBatchStrides;\n    const inputBatchOffset = b * strides[0];\n    for (let d = 0; d < convInfo.inChannels; ++d) {\n      for (let yR = 0; yR < convInfo.outHeight; ++yR) {\n        const xRCorner = yR * strideHeight - padTop;\n        const xRMin = Math.max(0, xRCorner);\n        const xRMax =\n            Math.min(convInfo.inHeight, effectiveFilterHeight + xRCorner);\n        const outputRowOffset = outputBatchOffset + yR * outputRowStrides;\n        for (let yC = 0; yC < convInfo.outWidth; ++yC) {\n          const xCCorner = yC * strideWidth - padLeft;\n          const xCMin = Math.max(0, xCCorner);\n          const xCMax =\n              Math.min(convInfo.inWidth, effectiveFilterWidth + xCCorner);\n          let minMaxValue = initialValue;\n          let avgValue = 0;\n          let count = 0;\n          for (let xR = xRMin; xR < xRMax; xR += dilationHeight) {\n            const xROffset = inputBatchOffset + xR * strides[1];\n            for (let xC = xCMin; xC < xCMax; xC += dilationWidth) {\n              const xCOffset = xROffset + xC * strides[2];\n              const pixel = xValues[xCOffset + d];\n              if ((poolType === 'max' && pixel > minMaxValue)) {\n                minMaxValue = pixel;\n              } else if (poolType === 'avg') {\n                avgValue += pixel;\n                count++;\n              }\n            }\n            if (isNaN(minMaxValue)) {\n              break;\n            }\n          }\n          const outputOffset = outputRowOffset + yC * outputColStrides + d;\n          outputVals[outputOffset] =\n              poolType === 'avg' ? avgValue / count : minMaxValue;\n        }\n      }\n    }\n  }\n  return output;\n}\n\nexport function maxPoolPositions(\n    xValues: TypedArray, xShape: number[], dtype: DataType,\n    convInfo: backend_util.Conv2DInfo, flattenPositions = false,\n    includeBatchInIndex = false): TensorBuffer<Rank, 'int32'> {\n  const maxPositions = buffer(convInfo.outShape, 'int32');\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n  const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padLeft = convInfo.padInfo.left;\n\n  const xBuf = buffer(xShape, dtype, xValues);\n  for (let b = 0; b < convInfo.batchSize; ++b) {\n    for (let d = 0; d < convInfo.inChannels; ++d) {\n      for (let yR = 0; yR < convInfo.outHeight; ++yR) {\n        const xRCorner = yR * strideHeight - padTop;\n        let xRMin = xRCorner;\n        while (xRMin < 0) {\n          xRMin += dilationHeight;\n        }\n        // const xRMin = Math.max(0, xRCorner);\n        const xRMax =\n            Math.min(convInfo.inHeight, effectiveFilterHeight + xRCorner);\n        for (let yC = 0; yC < convInfo.outWidth; ++yC) {\n          const xCCorner = yC * strideWidth - padLeft;\n          let xCMin = xCCorner;\n          while (xCMin < 0) {\n            xCMin += dilationWidth;\n          }\n          const xCMax =\n              Math.min(convInfo.inWidth, effectiveFilterWidth + xCCorner);\n          let maxValue = Number.NEGATIVE_INFINITY;\n          let maxPosition = -1;\n\n          for (let xR = xRMin; xR < xRMax; xR += dilationHeight) {\n            const wR = xR - xRCorner;\n            for (let xC = xCMin; xC < xCMax; xC += dilationWidth) {\n              const wC = xC - xCCorner;\n              const pixel = xBuf.get(b, xR, xC, d);\n              if (pixel > maxValue) {\n                maxValue = pixel as number;\n                if (flattenPositions) {\n                  maxPosition = includeBatchInIndex ?\n                      ((b * convInfo.inHeight + xR) * convInfo.inWidth + xC) *\n                              convInfo.inChannels +\n                          d :\n                      (xR * convInfo.inWidth + xC) * convInfo.inChannels + d;\n                } else {\n                  maxPosition = wR * effectiveFilterWidth + wC;\n                }\n              }\n            }\n          }\n          maxPositions.set(maxPosition, b, yR, yC, d);\n        }\n      }\n    }\n  }\n  return maxPositions;\n}\n\nexport function pool3d(\n    xValues: TypedArray, xShape: number[], dtype: DataType, strides: number[],\n    convInfo: backend_util.Conv3DInfo,\n    poolType: 'max'|'avg'): TensorBuffer<Rank, DataType> {\n  const strideDepth = convInfo.strideDepth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const dilationDepth = convInfo.dilationDepth;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const effectiveFilterDepth = convInfo.effectiveFilterDepth;\n  const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n  const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n  const padFront = convInfo.padInfo.front;\n  const padTop = convInfo.padInfo.top;\n  const padLeft = convInfo.padInfo.left;\n\n  const initialValue =\n      (poolType === 'max' ? Number.NEGATIVE_INFINITY :\n                            Number.POSITIVE_INFINITY);\n\n  const output = buffer(convInfo.outShape, dtype);\n  const outputVals = output.values;\n\n  const outputBatchStrides = convInfo.outShape[1] * convInfo.outShape[2] *\n      convInfo.outShape[3] * convInfo.outShape[4];\n  const outputDepthStrides =\n      convInfo.outShape[2] * convInfo.outShape[3] * convInfo.outShape[4];\n  const outputRowStrides = convInfo.outShape[3] * convInfo.outShape[4];\n  const outputColStrides = convInfo.outShape[4];\n\n  for (let batch = 0; batch < convInfo.batchSize; ++batch) {\n    const outputBatchOffset = batch * outputBatchStrides;\n    const inputBatchOffset = batch * strides[0];\n    for (let channel = 0; channel < convInfo.inChannels; ++channel) {\n      for (let yDepth = 0; yDepth < convInfo.outDepth; ++yDepth) {\n        const xDepthCorner = yDepth * strideDepth - padFront;\n        let xDepthMin = xDepthCorner;\n        while (xDepthMin < 0) {\n          xDepthMin += dilationDepth;\n        }\n        const xDepthMax =\n            Math.min(convInfo.inDepth, effectiveFilterDepth + xDepthCorner);\n        const outputDepthOffset =\n            outputBatchOffset + yDepth * outputDepthStrides;\n        for (let yRow = 0; yRow < convInfo.outHeight; ++yRow) {\n          const xRowCorner = yRow * strideHeight - padTop;\n          let xRowMin = xRowCorner;\n          while (xRowMin < 0) {\n            xRowMin += dilationHeight;\n          }\n          const xRowMax =\n              Math.min(convInfo.inHeight, effectiveFilterHeight + xRowCorner);\n          const outputRowOffset = outputDepthOffset + yRow * outputRowStrides;\n          for (let yCol = 0; yCol < convInfo.outWidth; ++yCol) {\n            const xColCorner = yCol * strideWidth - padLeft;\n            let xColMin = xColCorner;\n            while (xColMin < 0) {\n              xColMin += dilationWidth;\n            }\n            const xColMax =\n                Math.min(convInfo.inWidth, effectiveFilterWidth + xColCorner);\n            // Shader code begins\n            const outputColOffset = outputRowOffset + yCol * outputColStrides;\n            let minMaxValue = initialValue;\n            let avgValue = 0;\n            let count = 0;\n            for (let xDepth = xDepthMin; xDepth < xDepthMax;\n                 xDepth += dilationDepth) {\n              const xDepthOffset = inputBatchOffset + xDepth * strides[1];\n              for (let xRow = xRowMin; xRow < xRowMax; xRow += dilationHeight) {\n                const xRowOffset = xDepthOffset + xRow * strides[2];\n                for (let xCol = xColMin; xCol < xColMax;\n                     xCol += dilationWidth) {\n                  const xColOffset = xRowOffset + xCol * strides[3];\n                  const pixel = xValues[xColOffset + channel];\n                  if ((poolType === 'max' && pixel > minMaxValue)) {\n                    minMaxValue = pixel;\n                  } else if (poolType === 'avg') {\n                    avgValue += pixel;\n                    count++;\n                  }\n                  if (isNaN(minMaxValue)) {\n                    break;\n                  }\n                }\n                if (isNaN(minMaxValue)) {\n                  break;\n                }\n              }\n              if (isNaN(minMaxValue)) {\n                break;\n              }\n            }\n            const outputOffset = outputColOffset + channel;\n            outputVals[outputOffset] =\n                poolType === 'avg' ? avgValue / count : minMaxValue;\n          }\n        }\n      }\n    }\n  }\n\n  return output;\n}\n\nexport function maxPool3dPositions(\n    xBuf: TensorBuffer<Rank, DataType>,\n    convInfo: backend_util.Conv3DInfo): TensorBuffer<Rank, DataType> {\n  const maxPositions = buffer(convInfo.outShape, 'int32');\n  const strideDepth = convInfo.strideDepth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const dilationDepth = convInfo.dilationDepth;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const effectiveFilterDepth = convInfo.effectiveFilterDepth;\n  const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n  const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n  const padFront = convInfo.padInfo.front;\n  const padTop = convInfo.padInfo.top;\n  const padLeft = convInfo.padInfo.left;\n\n  for (let batch = 0; batch < convInfo.batchSize; ++batch) {\n    for (let channel = 0; channel < convInfo.inChannels; ++channel) {\n      for (let yDepth = 0; yDepth < convInfo.outDepth; ++yDepth) {\n        const xDepthCorner = yDepth * strideDepth - padFront;\n        let xDepthMin = xDepthCorner;\n        while (xDepthMin < 0) {\n          xDepthMin += dilationDepth;\n        }\n        const xDepthMax =\n            Math.min(convInfo.inDepth, effectiveFilterDepth + xDepthCorner);\n        for (let yRow = 0; yRow < convInfo.outHeight; ++yRow) {\n          const xRowCorner = yRow * strideHeight - padTop;\n          let xRowMin = xRowCorner;\n          while (xRowMin < 0) {\n            xRowMin += dilationHeight;\n          }\n          const xRowMax =\n              Math.min(convInfo.inHeight, effectiveFilterHeight + xRowCorner);\n          for (let yCol = 0; yCol < convInfo.outWidth; ++yCol) {\n            const xColCorner = yCol * strideWidth - padLeft;\n            let xColMin = xColCorner;\n            while (xColMin < 0) {\n              xColMin += dilationWidth;\n            }\n            const xColMax =\n                Math.min(convInfo.inWidth, effectiveFilterWidth + xColCorner);\n\n            // Shader code begins\n            let maxValue = Number.NEGATIVE_INFINITY;\n            let maxPosition = -1;\n\n            for (let xDepth = xDepthMin; xDepth < xDepthMax;\n                 xDepth += dilationDepth) {\n              const wDepth = xDepth - xDepthCorner;\n              for (let xRow = xRowMin; xRow < xRowMax; xRow += dilationHeight) {\n                const wRow = xRow - xRowCorner;\n                for (let xCol = xColMin; xCol < xColMax;\n                     xCol += dilationWidth) {\n                  const wCol = xCol - xColCorner;\n                  const pixel = xBuf.get(batch, xDepth, xRow, xCol, channel);\n                  if (pixel >= maxValue) {\n                    maxValue = pixel as number;\n                    maxPosition =\n                        wDepth * effectiveFilterHeight * effectiveFilterWidth +\n                        wRow * effectiveFilterHeight + wCol;\n                  }\n                }\n              }\n            }\n\n            maxPositions.set(maxPosition, batch, yDepth, yRow, yCol, channel);\n          }\n        }\n      }\n    }\n  }\n\n  return maxPositions;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {AvgPool, AvgPoolAttrs, AvgPoolInputs, backend_util, KernelConfig, KernelFunc, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\nimport {pool} from '../utils/pool_utils';\nimport {identity} from './Identity';\n\nexport function avgPool(\n    args:\n        {inputs: AvgPoolInputs, backend: MathBackendCPU, attrs: AvgPoolAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  assertNotComplex(x, 'avgPool');\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\n  const dilations = 1;\n\n  util.assert(\n      backend_util.eitherStridesOrDilationsAreOne(strides, dilations),\n      () => 'Error in avgPool: Either strides or dilations must be 1. ' +\n          `Got strides ${strides} and dilations '${dilations}'`);\n\n  const convInfo = backend_util.computePool2DInfo(\n      x.shape as [number, number, number, number], filterSize, strides,\n      dilations, pad, dimRoundingMode);\n  let res: TensorInfo;\n\n  if (convInfo.filterWidth === 1 && convInfo.filterHeight === 1 &&\n      util.arraysEqual(convInfo.inShape, convInfo.outShape)) {\n    res = identity({inputs: {x}, backend});\n  } else {\n    const xValues = backend.data.get(x.dataId).values as TypedArray;\n    const strides = util.computeStrides(x.shape);\n    const buffer = pool(xValues, x.shape, x.dtype, strides, convInfo, 'avg');\n    res = backend.makeTensorInfo(\n        convInfo.outShape, x.dtype, buffer.values as TypedArray);\n  }\n  return res;\n}\n\nexport const avgPoolConfig: KernelConfig = {\n  kernelName: AvgPool,\n  backendName: 'cpu',\n  kernelFunc: avgPool as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AvgPool3D, AvgPool3DAttrs, AvgPool3DInputs, backend_util, KernelConfig, KernelFunc, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\nimport {pool3d} from '../utils/pool_utils';\n\nexport function avgPool3D(args: {\n  inputs: AvgPool3DInputs,\n  backend: MathBackendCPU,\n  attrs: AvgPool3DAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {filterSize, strides, pad, dimRoundingMode, dataFormat} = attrs;\n\n  assertNotComplex(x, 'avgPool3d');\n\n  const convInfo = backend_util.computePool3DInfo(\n      x.shape as [number, number, number, number, number], filterSize, strides,\n      1 /* dilations */, pad, dimRoundingMode, dataFormat);\n\n  const xValues = backend.data.get(x.dataId).values as TypedArray;\n  const outBuf = pool3d(\n      xValues, x.shape, x.dtype, util.computeStrides(x.shape), convInfo, 'avg');\n\n  return backend.makeTensorInfo(outBuf.shape, 'float32', outBuf.values);\n}\n\nexport const avgPool3DConfig: KernelConfig = {\n  kernelName: AvgPool3D,\n  backendName: 'cpu',\n  kernelFunc: avgPool3D as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AvgPool3DGrad, AvgPool3DGradAttrs, AvgPool3DGradInputs, backend_util, buffer, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function avgPool3DGrad(args: {\n  inputs: AvgPool3DGradInputs,\n  backend: MathBackendCPU,\n  attrs: AvgPool3DGradAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {dy, input} = inputs;\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\n\n  assertNotComplex([dy, input], 'avgPool3DGrad');\n\n  const convInfo = backend_util.computePool3DInfo(\n      input.shape as [number, number, number, number, number], filterSize,\n      strides, 1 /* dilations */, pad, dimRoundingMode);\n\n  const strideDepth = convInfo.strideDepth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const filterDepth = convInfo.filterDepth;\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const dilationDepth = convInfo.dilationDepth;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const effectiveFilterDepth = convInfo.effectiveFilterDepth;\n  const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n  const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n  const padFront = effectiveFilterDepth - 1 - convInfo.padInfo.front;\n  const padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n  const padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n  const dx = buffer(input.shape, 'float32');\n\n  const avgMultiplier = 1 / (filterDepth * filterHeight * filterWidth);\n\n  const dyBuf = backend.bufferSync(dy);\n\n  for (let batch = 0; batch < convInfo.batchSize; ++batch) {\n    for (let channel = 0; channel < convInfo.inChannels; ++channel) {\n      for (let dxDepth = 0; dxDepth < convInfo.inDepth; ++dxDepth) {\n        for (let dxRow = 0; dxRow < convInfo.inHeight; ++dxRow) {\n          for (let dxCol = 0; dxCol < convInfo.inWidth; ++dxCol) {\n            // Shader code begins.\n            const dyDepthCorner = dxDepth - padFront;\n            const dyRowCorner = dxRow - padTop;\n            const dyColCorner = dxCol - padLeft;\n            let dotProd = 0;\n            for (let wDepth = 0; wDepth < effectiveFilterDepth;\n                 wDepth += dilationDepth) {\n              const dyDepth = (dyDepthCorner + wDepth) / strideDepth;\n              if (dyDepth < 0 || dyDepth >= convInfo.outDepth ||\n                  Math.floor(dyDepth) !== dyDepth) {\n                continue;\n              }\n              for (let wRow = 0; wRow < effectiveFilterHeight;\n                   wRow += dilationHeight) {\n                const dyRow = (dyRowCorner + wRow) / strideHeight;\n                if (dyRow < 0 || dyRow >= convInfo.outHeight ||\n                    Math.floor(dyRow) !== dyRow) {\n                  continue;\n                }\n                for (let wCol = 0; wCol < effectiveFilterWidth;\n                     wCol += dilationWidth) {\n                  const dyCol = (dyColCorner + wCol) / strideWidth;\n                  if (dyCol < 0 || dyCol >= convInfo.outWidth ||\n                      Math.floor(dyCol) !== dyCol) {\n                    continue;\n                  }\n\n                  const pixel =\n                      dyBuf.get(batch, dyDepth, dyRow, dyCol, channel);\n                  dotProd += pixel;\n                }\n              }\n            }\n            dx.set(\n                dotProd * avgMultiplier, batch, dxDepth, dxRow, dxCol, channel);\n          }\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(dx.shape, dx.dtype, dx.values);\n}\n\nexport const avgPool3DGradConfig: KernelConfig = {\n  kernelName: AvgPool3DGrad,\n  backendName: 'cpu',\n  kernelFunc: avgPool3DGrad as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {AvgPoolGrad, AvgPoolGradAttrs, AvgPoolGradInputs, backend_util, buffer, KernelConfig, KernelFunc, Rank, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function avgPoolGrad(args: {\n  inputs: AvgPoolGradInputs,\n  backend: MathBackendCPU,\n  attrs: AvgPoolGradAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {dy, input} = inputs;\n  const x = input;\n  assertNotComplex([dy, input], 'avgPoolGrad');\n  const {filterSize, strides, pad} = attrs;\n\n  const convInfo = backend_util.computePool2DInfo(\n      x.shape as [number, number, number, number], filterSize, strides,\n      1 /* dilations */, pad);\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n  const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n  const padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n  const padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n  const dx =\n      buffer<Rank.R4>(x.shape as [number, number, number, number], 'float32');\n\n  const avgMultiplier = 1 / (filterHeight * filterWidth);\n\n  const dyData = backend.data.get(dy.dataId).values as Float32Array;\n  const dyBuf = buffer<Rank.R4>(\n      dy.shape as [number, number, number, number], 'float32', dyData);\n\n  for (let b = 0; b < convInfo.batchSize; ++b) {\n    for (let d = 0; d < convInfo.inChannels; ++d) {\n      for (let dxR = 0; dxR < convInfo.inHeight; ++dxR) {\n        for (let dxC = 0; dxC < convInfo.inWidth; ++dxC) {\n          // Shader code begins.\n          const dyRCorner = dxR - padTop;\n          const dyCCorner = dxC - padLeft;\n          let dotProd = 0;\n          for (let wR = 0; wR < effectiveFilterHeight; wR += dilationHeight) {\n            const dyR = (dyRCorner + wR) / strideHeight;\n            if (dyR < 0 || dyR >= convInfo.outHeight ||\n                Math.floor(dyR) !== dyR) {\n              continue;\n            }\n            for (let wC = 0; wC < effectiveFilterWidth; wC += dilationWidth) {\n              const dyC = (dyCCorner + wC) / strideWidth;\n              if (dyC < 0 || dyC >= convInfo.outWidth ||\n                  Math.floor(dyC) !== dyC) {\n                continue;\n              }\n\n              const pixel = dyBuf.get(b, dyR, dyC, d);\n              dotProd += pixel;\n            }\n          }\n          dx.set(dotProd * avgMultiplier, b, dxR, dxC, d);\n        }\n      }\n    }\n  }\n  return backend.makeTensorInfo(dx.shape, dx.dtype, dx.values);\n}\n\nexport const avgPoolGradConfig: KernelConfig = {\n  kernelName: AvgPoolGrad,\n  backendName: 'cpu',\n  kernelFunc: avgPoolGrad as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FusedBatchNorm, FusedBatchNormAttrs, FusedBatchNormInputs, KernelConfig, KernelFunc, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function batchNorm(args: {\n  inputs: FusedBatchNormInputs,\n  backend: MathBackendCPU,\n  attrs: FusedBatchNormAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x, scale, offset, mean, variance} = inputs;\n\n  util.assert(\n      mean.shape.length === variance.shape.length,\n      () => 'Batch normalization gradient requires mean and variance to have ' +\n          'equal ranks.');\n  util.assert(\n      offset == null || mean.shape.length === offset.shape.length,\n      () => 'Batch normalization gradient requires mean and offset to have ' +\n          'equal ranks.');\n  util.assert(\n      scale == null || mean.shape.length === scale.shape.length,\n      () => 'Batch normalization gradient requires mean and scale to have ' +\n          'equal ranks.');\n\n  assertNotComplex([x, mean, variance, scale, offset], 'batchNorm');\n\n  let {varianceEpsilon} = attrs;\n  if (varianceEpsilon == null) {\n    varianceEpsilon = 0.001;\n  }\n\n  const xVals = backend.data.get(x.dataId).values as TypedArray;\n  const mVals = backend.data.get(mean.dataId).values as TypedArray;\n  const varVals = backend.data.get(variance.dataId).values as TypedArray;\n  const sVals = scale ? backend.data.get(scale.dataId).values as TypedArray :\n                        new Float32Array([1]);\n  const offVals = offset ?\n      backend.data.get(offset.dataId).values as TypedArray :\n      new Float32Array([0]);\n  const outVals = new Float32Array(xVals.length);\n\n  const offValsLength = offVals.length;\n  const sValsLength = sVals.length;\n  const varValsLength = varVals.length;\n  const mValsLength = mVals.length;\n\n  let offi = 0;\n  let mi = 0;\n  let si = 0;\n  let vi = 0;\n  for (let i = 0; i < xVals.length; ++i) {\n    outVals[i] = offVals[offi++] +\n        (xVals[i] - mVals[mi++]) * sVals[si++] /\n            Math.sqrt(varVals[vi++] + varianceEpsilon);\n    if (offi >= offValsLength) {\n      offi = 0;\n    }\n    if (mi >= mValsLength) {\n      mi = 0;\n    }\n    if (si >= sValsLength) {\n      si = 0;\n    }\n    if (vi >= varValsLength) {\n      vi = 0;\n    }\n  }\n  return backend.makeTensorInfo(x.shape, x.dtype, outVals);\n}\n\nexport const batchNormConfig: KernelConfig = {\n  kernelName: FusedBatchNorm,\n  backendName: 'cpu',\n  kernelFunc: batchNorm as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, BackendValues, buffer, DataType, KernelConfig, KernelFunc, Slice, slice_util, SliceAttrs, SliceInputs, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function sliceImpl(\n    vals: BackendValues, begin: number[], size: number[], shape: number[],\n    dtype: DataType): BackendValues {\n  const isContinous = slice_util.isSliceContinous(shape, begin, size);\n  const length = util.sizeFromShape(size);\n  const xStrides = util.computeStrides(shape);\n\n  if (isContinous) {\n    const flatOffset = slice_util.computeFlatOffset(begin, xStrides);\n\n    if (dtype === 'string') {\n      return (vals as Uint8Array[]).slice(flatOffset, flatOffset + length);\n    }\n\n    return (vals as TypedArray).subarray(flatOffset, flatOffset + length);\n  }\n\n  const decodedData = dtype === 'string' ?\n      backend_util.fromUint8ToStringArray(vals as Uint8Array[]) :\n      vals as TypedArray;\n\n  const inBuf = buffer(shape, dtype, decodedData);\n  const outBuf = buffer(size, dtype);\n  for (let i = 0; i < outBuf.size; ++i) {\n    const outLoc = outBuf.indexToLoc(i);\n    const inLoc = outLoc.map((idx: number, j) => idx + begin[j]);\n    outBuf.set(inBuf.get(...inLoc), ...outLoc);\n  }\n\n  if (dtype === 'string') {\n    return backend_util.fromStringArrayToUint8(outBuf.values as string[]);\n  }\n  return outBuf.values as TypedArray;\n}\n\nexport function slice(\n    args: {inputs: SliceInputs, backend: MathBackendCPU, attrs: SliceAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {begin, size} = attrs;\n\n  assertNotComplex(x, 'slice');\n\n  const [$begin, $size] = slice_util.parseSliceParams(x, begin, size);\n  slice_util.assertParamsValid(x, $begin, $size);\n\n  const vals = backend.data.get(x.dataId).values;\n  const outVals = sliceImpl(vals, $begin, $size, x.shape, x.dtype);\n  return backend.makeTensorInfo($size, x.dtype, outVals);\n}\n\nexport const sliceConfig: KernelConfig = {\n  kernelName: Slice,\n  backendName: 'cpu',\n  kernelFunc: slice as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, BatchToSpaceND, BatchToSpaceNDAttrs, BatchToSpaceNDInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\nimport {reshape} from './Reshape';\nimport {slice} from './Slice';\nimport {transpose} from './Transpose';\n\nexport function batchToSpaceND(args: {\n  inputs: BatchToSpaceNDInputs,\n  backend: MathBackendCPU,\n  attrs: BatchToSpaceNDAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {blockShape, crops} = attrs;\n\n  assertNotComplex([x], 'batchToSpaceND');\n\n  const prod = blockShape.reduce((a, b) => a * b);\n\n  const reshaped = backend_util.getReshaped(x.shape, blockShape, prod);\n  const permuted = backend_util.getPermuted(reshaped.length, blockShape.length);\n  const reshapedPermuted =\n      backend_util.getReshapedPermuted(x.shape, blockShape, prod);\n  const sliceBeginCoords =\n      backend_util.getSliceBeginCoords(crops, blockShape.length);\n  const sliceSize =\n      backend_util.getSliceSize(reshapedPermuted, crops, blockShape.length);\n\n  const xReshaped = reshape({inputs: {x}, backend, attrs: {shape: reshaped}});\n  const xTransposed =\n      transpose({inputs: {x: xReshaped}, backend, attrs: {perm: permuted}});\n  const xTransposedReshaped = reshape(\n      {inputs: {x: xTransposed}, backend, attrs: {shape: reshapedPermuted}});\n  const result = slice({\n    inputs: {x: xTransposedReshaped},\n    backend,\n    attrs: {begin: sliceBeginCoords, size: sliceSize}\n  });\n\n  backend.disposeIntermediateTensorInfo(xReshaped);\n  backend.disposeIntermediateTensorInfo(xTransposed);\n  backend.disposeIntermediateTensorInfo(xTransposedReshaped);\n\n  return result;\n}\n\nexport const batchToSpaceNDConfig: KernelConfig = {\n  kernelName: BatchToSpaceND,\n  backendName: 'cpu',\n  kernelFunc: batchToSpaceND as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {buffer, DataType, Rank, TensorBuffer, TypedArray, util} from '@tensorflow/tfjs-core';\n\nexport function bincountImpl(\n    xVals: TypedArray, weightsVals: TypedArray, weightsDtype: DataType,\n    weightsShape: number[], size: number): TypedArray {\n  const weightsSize = util.sizeFromShape(weightsShape);\n  const outVals = util.makeZerosTypedArray(size, weightsDtype) as TypedArray;\n\n  for (let i = 0; i < xVals.length; i++) {\n    const value = xVals[i];\n    if (value < 0) {\n      throw new Error('Input x must be non-negative!');\n    }\n\n    if (value >= size) {\n      continue;\n    }\n\n    if (weightsSize > 0) {\n      outVals[value] += weightsVals[i];\n    } else {\n      outVals[value] += 1;\n    }\n  }\n\n  return outVals;\n}\n\nexport function bincountReduceImpl<R extends Rank>(\n    xBuf: TensorBuffer<R>, weightsBuf: TensorBuffer<R>, size: number,\n    binaryOutput = false): TensorBuffer<R> {\n  const numRows = xBuf.shape[0];\n  const numCols = xBuf.shape[1];\n\n  const outBuf = buffer([numRows, size], weightsBuf.dtype);\n\n  for (let i = 0; i < numRows; i++) {\n    for (let j = 0; j < numCols; j++) {\n      const value = xBuf.get(i, j);\n      if (value < 0) {\n        throw new Error('Input x must be non-negative!');\n      }\n\n      if (value >= size) {\n        continue;\n      }\n\n      if (binaryOutput) {\n        outBuf.set(1, i, value);\n      } else {\n        if (weightsBuf.size > 0) {\n          outBuf.set(outBuf.get(i, value) + weightsBuf.get(i, j), i, value);\n        } else {\n          outBuf.set(outBuf.get(i, value) + 1, i, value);\n        }\n      }\n    }\n  }\n\n  return outBuf as TensorBuffer<R>;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Bincount, BincountAttrs, BincountInputs, KernelConfig, KernelFunc, TensorInfo, TypedArray} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {bincountImpl} from './Bincount_impl';\n\nexport function bincount(args: {\n  inputs: BincountInputs,\n  backend: MathBackendCPU,\n  attrs: BincountAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x, weights} = inputs;\n  const {size} = attrs;\n\n  const xVals = backend.data.get(x.dataId).values as TypedArray;\n  const weightsVals = backend.data.get(weights.dataId).values as TypedArray;\n\n  const outVals =\n      bincountImpl(xVals, weightsVals, weights.dtype, weights.shape, size);\n\n  return backend.makeTensorInfo([size], weights.dtype, outVals);\n}\n\nexport const bincountConfig: KernelConfig = {\n  kernelName: Bincount,\n  backendName: 'cpu',\n  kernelFunc: bincount as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NumericDataType, util} from '@tensorflow/tfjs-core';\n\nimport {SimpleUnaryImpl, SimpleUnaryOperation} from './unary_types';\n\n/**\n * Template that creates implementation for unary op.\n */\nexport function createSimpleUnaryImpl(op: SimpleUnaryOperation):\n    SimpleUnaryImpl {\n  return (values, dtype, attrs) => {\n    const newValues =\n        util.getTypedArrayFromDType(dtype as NumericDataType, values.length);\n    for (let i = 0; i < values.length; ++i) {\n      newValues[i] = op(values[i], attrs);\n    }\n    return newValues;\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Ceil, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createSimpleUnaryImpl} from '../utils/unary_impl';\nimport {unaryKernelFuncFromImpl} from '../utils/unary_utils';\n\nexport const ceilImpl = createSimpleUnaryImpl((xi) => Math.ceil(xi));\nexport const ceil = unaryKernelFuncFromImpl(Ceil, ceilImpl);\n\nexport const ceilConfig: KernelConfig = {\n  kernelName: Ceil,\n  backendName: 'cpu',\n  kernelFunc: ceil,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ClipByValue, ClipByValueAttrs, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nexport const clip = unaryKernelFunc(ClipByValue, (xi, attrs) => {\n  const clipAttrs = attrs as {} as ClipByValueAttrs;\n  if (xi > clipAttrs.clipValueMax) {\n    return clipAttrs.clipValueMax;\n  }\n  return xi < clipAttrs.clipValueMin ? clipAttrs.clipValueMin : xi;\n});\n\nexport const clipConfig: KernelConfig = {\n  kernelName: ClipByValue,\n  backendName: 'cpu',\n  kernelFunc: clip,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ComplexAbs, ComplexAbsInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nexport const complexAbs =\n    (args: {inputs: ComplexAbsInputs, backend: MathBackendCPU}) => {\n      const {x} = args.inputs;\n      const cpuBackend = args.backend;\n      const resultValues = new Float32Array(util.sizeFromShape(x.shape));\n      const complexVals = cpuBackend.data.get(x.dataId);\n      const real = complexVals.complexTensorInfos.real;\n      const imag = complexVals.complexTensorInfos.imag;\n      const realVals = cpuBackend.data.get(real.dataId).values as Float32Array;\n      const imagVals = cpuBackend.data.get(imag.dataId).values as Float32Array;\n      for (let i = 0; i < realVals.length; i++) {\n        const real = realVals[i];\n        const imag = imagVals[i];\n        resultValues[i] = Math.hypot(real, imag);\n      }\n\n      return cpuBackend.makeOutput(resultValues, x.shape, 'float32');\n    };\n\nexport const complexAbsConfig: KernelConfig = {\n  kernelName: ComplexAbs,\n  backendName: 'cpu',\n  kernelFunc: complexAbs as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Imag, ImagInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nexport function imag(args: {inputs: ImagInputs, backend: MathBackendCPU}):\n    TensorInfo {\n  const {inputs, backend} = args;\n  const {input} = inputs;\n\n  const imag = backend.data.get(input.dataId).complexTensorInfos.imag;\n  const imagVal = backend.data.get(imag.dataId).values;\n\n  // When complex tensor is disposed, its underlying parts will be disposed too.\n  // Make new tensor out of the imag value of the complex. This makes sure the\n  // value is still accessible even if complex tensor is disposed.\n  return backend.makeTensorInfo(imag.shape, imag.dtype, imagVal);\n}\n\nexport const imagConfig: KernelConfig = {\n  kernelName: Imag,\n  backendName: 'cpu',\n  kernelFunc: imag as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Concat, ConcatAttrs, ConcatInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nimport {complex} from './Complex';\nimport {concatImpl} from './Concat_impl';\nimport {identity} from './Identity';\nimport {imag} from './Imag';\nimport {real} from './Real';\nimport {reshape} from './Reshape';\n\nexport function concat(\n    args: {inputs: ConcatInputs, backend: MathBackendCPU, attrs: ConcatAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {axis} = attrs;\n\n  const $axis = util.parseAxisParam(axis, inputs[0].shape)[0];\n  let outShape = backend_util.computeOutShape(inputs.map(t => t.shape), $axis);\n\n  if (util.sizeFromShape(outShape) === 0) {\n    return backend.makeTensorInfo(outShape, inputs[0].dtype, []);\n  }\n\n  // Keep only non-empty tensors (ignore tensors with 0 in their shape).\n  const $inputs = inputs.filter(t => util.sizeFromShape(t.shape) > 0);\n  if ($inputs.length === 1) {\n    return identity({inputs: {x: $inputs[0]}, backend});\n  }\n\n  const shapes = $inputs.map(t => t.shape);\n  backend_util.assertParamsConsistent(shapes, $axis);\n\n  if ($inputs[0].dtype === 'complex64') {\n    const reals = $inputs.map((t) => real({inputs: {input: t}, backend}));\n    const imags = $inputs.map((t) => imag({inputs: {input: t}, backend}));\n\n    const realConcated = concat({inputs: reals, backend, attrs: {axis: $axis}});\n    const imagConcated = concat({inputs: imags, backend, attrs: {axis: $axis}});\n\n    const result =\n        complex({inputs: {real: realConcated, imag: imagConcated}, backend});\n\n    reals.forEach(r => backend.disposeIntermediateTensorInfo(r));\n    imags.forEach(i => backend.disposeIntermediateTensorInfo(i));\n    backend.disposeIntermediateTensorInfo(realConcated);\n    backend.disposeIntermediateTensorInfo(imagConcated);\n\n    return result;\n  }\n\n  // Any concat of n-dimensional tensors across any axis can be reduced to\n  // a concatenation of two-dimensional tensors across the axis 1 by first\n  // partitioning the axes of the original tensors into those less than the\n  // axis to be concatenated and the rest. Then reshape the tensors\n  // into a two-dimensional tensor by collapsing these two sets of axes and\n  // concatenate the resulting matrices across the axis 1, finally reshaping\n  // the result to have the proper shape.\n  const inputs2D = $inputs.map(t => {\n    const innerSize = util.sizeFromShape(t.shape.slice($axis));\n    const shape = [-1, innerSize];\n    return reshape({inputs: {x: t}, backend, attrs: {shape}});\n  });\n\n  const inputsValShapes = inputs2D.map(t => {\n    return {vals: backend.data.get(t.dataId).values, shape: t.shape};\n  });\n\n  // Concats 2d tensors along axis=1.\n  outShape =\n      backend_util.computeOutShape(inputs2D.map(t => t.shape), 1 /* axis */);\n  const simplyConcat = inputs2D[0].shape[0] === 1;\n  const outVals =\n      concatImpl(inputsValShapes, outShape, inputs[0].dtype, simplyConcat);\n\n  const finalOutShape =\n      backend_util.computeOutShape($inputs.map(t => t.shape), $axis);\n\n  const outInfo =\n      backend.makeTensorInfo(finalOutShape, inputs[0].dtype, outVals);\n\n  inputs2D.forEach(t => backend.disposeIntermediateTensorInfo(t));\n\n  return outInfo;\n}\n\nexport const concatConfig: KernelConfig = {\n  kernelName: Concat,\n  backendName: 'cpu',\n  kernelFunc: concat as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, BackendValues, DataType, TypedArray, util} from '@tensorflow/tfjs-core';\n\nexport function concatImpl(\n    inputs: Array<{vals: BackendValues, shape: number[]}>, outShape: number[],\n    dtype: DataType, simplyConcat: boolean): TypedArray|string[] {\n  const outVals = util.getArrayFromDType(dtype, util.sizeFromShape(outShape));\n\n  if (simplyConcat && dtype !== 'string') {\n    // Use built-in TypedArray.set() method for speed.\n    let offset = 0;\n    inputs.forEach(input => {\n      const size = util.sizeFromShape(input.shape);\n\n      (outVals as TypedArray).set(input.vals as TypedArray, offset);\n      offset += size;\n    });\n  } else {\n    let colOffset = 0;\n\n    inputs.forEach(input => {\n      const decodedData = dtype === 'string' ?\n          backend_util.fromUint8ToStringArray(input.vals as Uint8Array[]) :\n          input.vals as TypedArray;\n\n      let tIdx = 0;\n\n      for (let row = 0; row < input.shape[0]; ++row) {\n        const resIdx = row * outShape[1] + colOffset;\n        for (let col = 0; col < input.shape[1]; ++col) {\n          outVals[resIdx + col] = decodedData[tIdx++];\n        }\n      }\n\n      colOffset += input.shape[1];\n    });\n  }\n\n  return outVals;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv2D, Conv2DAttrs, Conv2DInputs, KernelConfig, KernelFunc, TensorBuffer, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function conv2D(\n    args: {inputs: Conv2DInputs, backend: MathBackendCPU, attrs: Conv2DAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x, filter} = inputs;\n  const {strides, pad, dataFormat, dilations, dimRoundingMode} = attrs;\n\n  assertNotComplex([x, filter], 'conv2d');\n\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(\n      x.shape as [number, number, number, number],\n      filter.shape as [number, number, number, number], strides, dilations, pad,\n      dimRoundingMode, false /* depthwise */, $dataFormat);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const padLeft = convInfo.padInfo.left;\n  const padTop = convInfo.padInfo.top;\n  const isChannelsLast = convInfo.dataFormat === 'channelsLast';\n\n  const y = new TensorBuffer(convInfo.outShape, x.dtype as 'float32');\n\n  const xStrides = util.computeStrides(x.shape);\n  const filterStrides = util.computeStrides(filter.shape);\n\n  const xBatchStride = xStrides[0];\n  const xRowStride = isChannelsLast ? xStrides[1] : xStrides[2];\n  const xColStride = isChannelsLast ? xStrides[2] : 1;\n  const xChannelStride = isChannelsLast ? 1 : xStrides[1];\n  const yBatchStride = y.strides[0];\n  const yRowStride = isChannelsLast ? y.strides[1] : y.strides[2];\n  const yColStride = isChannelsLast ? y.strides[2] : 1;\n  const yChannelStride = isChannelsLast ? 1 : y.strides[1];\n\n  const xVals = backend.data.get(x.dataId).values as TypedArray;\n  const wVals = backend.data.get(filter.dataId).values as TypedArray;\n  const yVals = y.values;\n\n  for (let b = 0; b < convInfo.batchSize; ++b) {\n    const xOffset1 = b * xBatchStride;\n    const yOffset1 = b * yBatchStride;\n    for (let yR = 0; yR < convInfo.outHeight; ++yR) {\n      const yOffset2 = yOffset1 + yR * yRowStride;\n      const xRCorner = yR * convInfo.strideHeight - padTop;\n      for (let wR = 0; wR < filterHeight; ++wR) {\n        const xR = xRCorner + wR * dilationHeight;\n        if (xR < 0 || xR >= convInfo.inHeight) {\n          continue;\n        }\n        const wOffset1 = wR * filterStrides[0];\n        const xOffset2 = xOffset1 + xR * xRowStride;\n        for (let yC = 0; yC < convInfo.outWidth; ++yC) {\n          const yOffset3 = yOffset2 + yC * yColStride;\n          const xCCorner = yC * convInfo.strideWidth - padLeft;\n          for (let wC = 0; wC < filterWidth; ++wC) {\n            const xC = xCCorner + wC * dilationWidth;\n            if (xC < 0 || xC >= convInfo.inWidth) {\n              continue;\n            }\n            const wOffset2 = wOffset1 + wC * filterStrides[1];\n            const xOffset3 = xOffset2 + xC * xColStride;\n            let wOffset3 = wOffset2;\n            for (let d1 = 0; d1 < convInfo.inChannels; ++d1) {\n              const xVal = xVals[xOffset3 + d1 * xChannelStride];\n              for (let d2 = 0; d2 < convInfo.outChannels; ++d2) {\n                yVals[yOffset3 + d2 * yChannelStride] +=\n                    xVal * wVals[wOffset3 + d2];\n              }\n              wOffset3 += convInfo.outChannels;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(y.shape, y.dtype, yVals);\n}\n\nexport const conv2DConfig: KernelConfig = {\n  kernelName: Conv2D,\n  backendName: 'cpu',\n  kernelFunc: conv2D as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv2DBackpropFilter, Conv2DBackpropFilterAttrs, Conv2DBackpropFilterInputs, KernelConfig, KernelFunc, TensorBuffer, TensorInfo, TypedArray} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function conv2DBackpropFilter(args: {\n  inputs: Conv2DBackpropFilterInputs,\n  backend: MathBackendCPU,\n  attrs: Conv2DBackpropFilterAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x, dy} = inputs;\n  const {strides, pad, dataFormat, dimRoundingMode, filterShape} = attrs;\n\n  assertNotComplex([x, dy], 'conv2dBackpropFilter');\n\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(\n      x.shape as [number, number, number, number], filterShape, strides,\n      1 /* dilations */, pad, dimRoundingMode, false /* depthwise */,\n      $dataFormat);\n\n  const {strideHeight, strideWidth, filterHeight, filterWidth} = convInfo;\n  const isChannelsLast = convInfo.dataFormat === 'channelsLast';\n  const dW = new TensorBuffer(convInfo.filterShape, 'float32');\n\n  const leftPad = convInfo.padInfo.left;\n  const topPad = convInfo.padInfo.top;\n  const xVals = backend.data.get(x.dataId).values as TypedArray;\n  const dyVals = backend.data.get(dy.dataId).values as TypedArray;\n\n  const xBuf = new TensorBuffer(x.shape, x.dtype, xVals);\n  const dyBuf = new TensorBuffer(dy.shape, dy.dtype, dyVals);\n\n  for (let wR = 0; wR < filterHeight; ++wR) {\n    const yRMin = Math.max(0, Math.ceil((topPad - wR) / strideHeight));\n    const yRMax = Math.min(\n        convInfo.outHeight, (convInfo.inHeight + topPad - wR) / strideHeight);\n\n    for (let wC = 0; wC < filterWidth; ++wC) {\n      const yCMin = Math.max(0, Math.ceil((leftPad - wC) / strideWidth));\n      const yCMax = Math.min(\n          convInfo.outWidth, (convInfo.inWidth + leftPad - wC) / strideWidth);\n\n      for (let d1 = 0; d1 < convInfo.inChannels; ++d1) {\n        for (let d2 = 0; d2 < convInfo.outChannels; ++d2) {\n          let dotProd = 0;\n          for (let b = 0; b < convInfo.batchSize; ++b) {\n            for (let yR = yRMin; yR < yRMax; ++yR) {\n              const xR = wR + yR * strideHeight - topPad;\n              for (let yC = yCMin; yC < yCMax; ++yC) {\n                const xC = wC + yC * strideWidth - leftPad;\n                if (isChannelsLast) {\n                  dotProd += (xBuf.get(b, xR, xC, d1) as number) *\n                      (dyBuf.get(b, yR, yC, d2) as number);\n                } else {\n                  dotProd += (xBuf.get(b, d1, xR, xC) as number) *\n                      (dyBuf.get(b, d2, yR, yC) as number);\n                }\n              }\n            }\n          }\n          dW.set(dotProd, wR, wC, d1, d2);\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(dW.shape, dW.dtype, dW.values);\n}\n\nexport const conv2DBackpropFilterConfig: KernelConfig = {\n  kernelName: Conv2DBackpropFilter,\n  backendName: 'cpu',\n  kernelFunc: conv2DBackpropFilter as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv2DBackpropInput, Conv2DBackpropInputAttrs, Conv2DBackpropInputInputs, KernelConfig, KernelFunc, TensorBuffer, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function conv2DBackpropInput(args: {\n  inputs: Conv2DBackpropInputInputs,\n  backend: MathBackendCPU,\n  attrs: Conv2DBackpropInputAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {dy, filter} = inputs;\n  const {inputShape, strides, pad, dataFormat, dimRoundingMode} = attrs;\n\n  assertNotComplex([dy, filter], 'conv2dBackpropInput');\n\n  const filterStrides = util.computeStrides(filter.shape);\n  const dyStrides = util.computeStrides(dy.shape);\n\n  let $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(\n      inputShape, filter.shape as [number, number, number, number], strides,\n      1 /* dilations */, pad, dimRoundingMode, false, $dataFormat);\n\n  const dx = new TensorBuffer(convInfo.inShape, 'float32');\n  const dxValues = dx.values;\n  const dyValues = backend.data.get(dy.dataId).values as TypedArray;\n  const fltValues = backend.data.get(filter.dataId).values as TypedArray;\n  const [fltS0, fltS1, fltS2] = filterStrides;\n  const {\n    batchSize,\n    filterHeight,\n    filterWidth,\n    inChannels,\n    inHeight,\n    inWidth,\n    outChannels,\n    outHeight,\n    outWidth,\n    strideHeight,\n    strideWidth\n  } = convInfo;\n  $dataFormat = convInfo.dataFormat;\n  const topPad = filterHeight - 1 - convInfo.padInfo.top;\n  const leftPad = filterWidth - 1 - convInfo.padInfo.left;\n\n  const isChannelsLast = $dataFormat === 'channelsLast';\n  const xBatchStride = dx.strides[0];\n  const xRowStride = isChannelsLast ? dx.strides[1] : dx.strides[2];\n  const xColStride = isChannelsLast ? dx.strides[2] : 1;\n  const xChannelStride = isChannelsLast ? 1 : dx.strides[1];\n  const yBatchStride = dyStrides[0];\n  const yRowStride = isChannelsLast ? dyStrides[1] : dyStrides[2];\n  const yColStride = isChannelsLast ? dyStrides[2] : 1;\n  const yChannelStride = isChannelsLast ? 1 : dyStrides[1];\n\n  for (let b = 0; b < batchSize; ++b) {\n    for (let d1 = 0; d1 < inChannels; ++d1) {\n      for (let xR = 0; xR < inHeight; ++xR) {\n        const xRCorner = xR - topPad;\n        const xRMin = Math.max(0, Math.ceil(xRCorner / strideHeight));\n        const yRMax =\n            Math.min(outHeight, (filterHeight + xRCorner) / strideHeight);\n\n        for (let xC = 0; xC < inWidth; ++xC) {\n          const xCCorner = xC - leftPad;\n          const xCMin = Math.max(0, Math.ceil(xCCorner / strideWidth));\n          const yCMax =\n              Math.min(outWidth, (filterWidth + xCCorner) / strideWidth);\n\n          let dotProd = 0;\n          for (let yR = xRMin; yR < yRMax; ++yR) {\n            const wR = yR * strideHeight - xRCorner;\n\n            for (let yC = xCMin; yC < yCMax; ++yC) {\n              const wC = yC * strideWidth - xCCorner;\n              const dyOffset =\n                  yBatchStride * b + yRowStride * yR + yColStride * yC;\n              const fltOffset = fltS0 * (filterHeight - 1 - wR) +\n                  fltS1 * (filterWidth - 1 - wC) + fltS2 * d1;\n\n              for (let d2 = 0; d2 < outChannels; ++d2) {\n                const pixel = dyValues[dyOffset + yChannelStride * d2];\n                const weight = fltValues[fltOffset + d2];\n                dotProd += pixel * weight;\n              }\n            }\n          }\n          const dxOffset = xBatchStride * b + xRowStride * xR +\n              xColStride * xC + xChannelStride * d1;\n          dxValues[dxOffset] = dotProd;\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(dx.shape, dx.dtype, dx.values);\n}\n\nexport const conv2DBackpropInputConfig: KernelConfig = {\n  kernelName: Conv2DBackpropInput,\n  backendName: 'cpu',\n  kernelFunc: conv2DBackpropInput as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv3D, Conv3DAttrs, Conv3DInputs, KernelConfig, KernelFunc, TensorBuffer, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function conv3D(\n    args: {inputs: Conv3DInputs, backend: MathBackendCPU, attrs: Conv3DAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x, filter} = inputs;\n  const {strides, pad, dilations} = attrs;\n\n  assertNotComplex([x, filter], 'conv3d');\n\n  const convInfo = backend_util.computeConv3DInfo(\n      x.shape as [number, number, number, number, number],\n      filter.shape as [number, number, number, number, number], strides,\n      dilations, pad);\n\n  const {\n    filterDepth,\n    filterHeight,\n    filterWidth,\n    dilationDepth,\n    dilationHeight,\n    dilationWidth,\n    padInfo\n  } = convInfo;\n  const padFront = padInfo.front;\n  const padLeft = padInfo.left;\n  const padTop = padInfo.top;\n  const y = new TensorBuffer(convInfo.outShape, x.dtype as 'float32');\n\n  const xVals = backend.data.get(x.dataId).values as TypedArray;\n  const wVals = backend.data.get(filter.dataId).values as TypedArray;\n  const yVals = y.values;\n\n  const xStrides = util.computeStrides(x.shape);\n  const filterStrides = util.computeStrides(filter.shape);\n\n  for (let b = 0; b < convInfo.batchSize; ++b) {\n    const xOffset1 = b * xStrides[0];\n    const yOffset1 = b * y.strides[0];\n    for (let yF = 0; yF < convInfo.outDepth; ++yF) {\n      const yOffset2 = yOffset1 + yF * y.strides[1];\n      const xFCorner = yF * convInfo.strideDepth - padFront;\n      for (let wF = 0; wF < filterDepth; ++wF) {\n        const xF = xFCorner + wF * dilationDepth;\n        if (xF < 0 || xF >= convInfo.inDepth) {\n          continue;\n        }\n        const wOffset1 = wF * filterStrides[0];\n        const xOffset2 = xOffset1 + xF * xStrides[1];\n\n        for (let yR = 0; yR < convInfo.outHeight; ++yR) {\n          const yOffset3 = yOffset2 + yR * y.strides[2];\n          const xRCorner = yR * convInfo.strideHeight - padTop;\n          for (let wR = 0; wR < filterHeight; ++wR) {\n            const xR = xRCorner + wR * dilationHeight;\n            if (xR < 0 || xR >= convInfo.inHeight) {\n              continue;\n            }\n            const wOffset2 = wOffset1 + wR * filterStrides[1];\n            const xOffset3 = xOffset2 + xR * xStrides[2];\n            for (let yC = 0; yC < convInfo.outWidth; ++yC) {\n              const yOffset4 = yOffset3 + yC * convInfo.outChannels;\n              const xCCorner = yC * convInfo.strideWidth - padLeft;\n              for (let wC = 0; wC < filterWidth; ++wC) {\n                const xC = xCCorner + wC * dilationWidth;\n                if (xC < 0 || xC >= convInfo.inWidth) {\n                  continue;\n                }\n                const wOffset3 = wOffset2 + wC * filterStrides[2];\n                const xOffset4 = xOffset3 + xC * convInfo.inChannels;\n                let wOffset4 = wOffset3;\n                for (let d1 = 0; d1 < convInfo.inChannels; ++d1) {\n                  const xVal = xVals[xOffset4 + d1];\n                  for (let d2 = 0; d2 < convInfo.outChannels; ++d2) {\n                    yVals[yOffset4 + d2] += xVal * wVals[wOffset4 + d2];\n                  }\n                  wOffset4 += convInfo.outChannels;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(y.shape, y.dtype, y.values);\n}\n\nexport const conv3DConfig: KernelConfig = {\n  kernelName: Conv3D,\n  backendName: 'cpu',\n  kernelFunc: conv3D as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv3DBackpropFilterV2, Conv3DBackpropFilterV2Attrs, Conv3DBackpropFilterV2Inputs, KernelConfig, KernelFunc, TensorBuffer, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function conv3DBackpropFilterV2(args: {\n  inputs: Conv3DBackpropFilterV2Inputs,\n  backend: MathBackendCPU,\n  attrs: Conv3DBackpropFilterV2Attrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x, dy} = inputs;\n  const {strides, pad, filterShape} = attrs;\n\n  assertNotComplex([x, dy], 'conv3dBackpropFilterV2');\n\n  const xStrides = util.computeStrides(x.shape);\n  const dyStrides = util.computeStrides(dy.shape);\n\n  const convInfo = backend_util.computeConv3DInfo(\n      x.shape as [number, number, number, number, number], filterShape, strides,\n      1 /* dilations */, pad);\n\n  const strideDepth = convInfo.strideDepth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const filterDepth = convInfo.filterDepth;\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n\n  const dw = new TensorBuffer(convInfo.filterShape, 'float32');\n  const dwValues = dw.values;\n  const [dwS0, dwS1, dwS2, dwS3] = dw.strides;\n  const dyValues = backend.data.get(dy.dataId).values as TypedArray;\n  const [dyS0, dyS1, dyS2, dyS3] = dyStrides;\n  const xValues = backend.data.get(x.dataId).values as TypedArray;\n  const [xS0, xS1, xS2, xS3] = xStrides;\n\n  const frontPad = convInfo.padInfo.front;\n  const leftPad = convInfo.padInfo.left;\n  const topPad = convInfo.padInfo.top;\n\n  for (let wF = 0; wF < filterDepth; ++wF) {\n    const yFMin = Math.max(0, Math.ceil((frontPad - wF) / strideDepth));\n    const yFMax = Math.min(\n        convInfo.outDepth, (convInfo.inDepth + frontPad - wF) / strideDepth);\n    const wOffset1 = wF * dwS0;\n\n    for (let wR = 0; wR < filterHeight; ++wR) {\n      const yRMin = Math.max(0, Math.ceil((topPad - wR) / strideHeight));\n      const yRMax = Math.min(\n          convInfo.outHeight, (convInfo.inHeight + topPad - wR) / strideHeight);\n      const wOffset2 = wR * dwS1 + wOffset1;\n\n      for (let wC = 0; wC < filterWidth; ++wC) {\n        const yCMin = Math.max(0, Math.ceil((leftPad - wC) / strideWidth));\n        const yCMax = Math.min(\n            convInfo.outWidth, (convInfo.inWidth + leftPad - wC) / strideWidth);\n        const wOffset3 = wC * dwS2 + wOffset2;\n\n        for (let d1 = 0; d1 < convInfo.inChannels; ++d1) {\n          const wOffset4 = d1 * dwS3 + wOffset3;\n\n          for (let d2 = 0; d2 < convInfo.outChannels; ++d2) {\n            let dotProd = 0;\n            for (let b = 0; b < convInfo.batchSize; ++b) {\n              const xOffset1 = b * xS0;\n              const yOffset1 = b * dyS0;\n\n              for (let yF = yFMin; yF < yFMax; ++yF) {\n                const xF = wF + yF * strideDepth - frontPad;\n                const xOffset2 = xF * xS1 + xOffset1;\n                const yOffset2 = yF * dyS1 + yOffset1;\n\n                for (let yR = yRMin; yR < yRMax; ++yR) {\n                  const xR = wR + yR * strideHeight - topPad;\n                  const xOffset3 = xR * xS2 + xOffset2;\n                  const yOffset3 = yR * dyS2 + yOffset2;\n\n                  for (let yC = yCMin; yC < yCMax; ++yC) {\n                    const xC = wC + yC * strideWidth - leftPad;\n                    const xOffset4 = xC * xS3 + xOffset3;\n                    const yOffset4 = yC * dyS3 + yOffset3;\n\n                    dotProd += xValues[xOffset4 + d1] * dyValues[yOffset4 + d2];\n                  }\n                }\n              }\n            }\n            dwValues[wOffset4 + d2] = dotProd;\n          }\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(dw.shape, dw.dtype, dw.values);\n}\n\nexport const conv3DBackpropFilterV2Config: KernelConfig = {\n  kernelName: Conv3DBackpropFilterV2,\n  backendName: 'cpu',\n  kernelFunc: conv3DBackpropFilterV2 as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv3DBackpropInputV2, Conv3DBackpropInputV2Attrs, Conv3DBackpropInputV2Inputs, KernelConfig, KernelFunc, TensorBuffer, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function conv3DBackpropInputV2(args: {\n  inputs: Conv3DBackpropInputV2Inputs,\n  backend: MathBackendCPU,\n  attrs: Conv3DBackpropInputV2Attrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {dy, filter} = inputs;\n  const {pad, strides, inputShape} = attrs;\n\n  assertNotComplex([dy], 'conv3dBackpropInputV2');\n\n  const dyStrides = util.computeStrides(dy.shape);\n  const filterStrides = util.computeStrides(filter.shape);\n\n  const convInfo = backend_util.computeConv3DInfo(\n      inputShape, filter.shape as [number, number, number, number, number],\n      strides, 1 /* dilations */, pad);\n\n  const dx = new TensorBuffer(convInfo.inShape, 'float32');\n  const dxValues = dx.values;\n  const [dxS0, dxS1, dxS2, dxS3] = dx.strides;\n  const dyValues = backend.data.get(dy.dataId).values as TypedArray;\n  const [dyS0, dyS1, dyS2, dyS3] = dyStrides;\n  const fltValues = backend.data.get(filter.dataId).values as TypedArray;\n  const [fltS0, fltS1, fltS2, fltS3] = filterStrides;\n  const {\n    batchSize,\n    filterDepth,\n    filterHeight,\n    filterWidth,\n    inChannels,\n    inDepth,\n    inHeight,\n    inWidth,\n    outChannels,\n    outDepth,\n    outHeight,\n    outWidth,\n    strideDepth,\n    strideHeight,\n    strideWidth\n  } = convInfo;\n  const frontPad = filterDepth - 1 - convInfo.padInfo.front;\n  const topPad = filterHeight - 1 - convInfo.padInfo.top;\n  const leftPad = filterWidth - 1 - convInfo.padInfo.left;\n\n  for (let b = 0; b < batchSize; ++b) {\n    for (let d1 = 0; d1 < inChannels; ++d1) {\n      // Frames of depth\n      for (let xF = 0; xF < inDepth; ++xF) {\n        const xFCorner = xF - frontPad;\n        const xFMin = Math.max(0, Math.ceil(xFCorner / strideDepth));\n        const yFMax =\n            Math.min(outDepth, (filterDepth + xFCorner) / strideDepth);\n\n        // Rows as per standard 2d matrix notation\n        for (let xR = 0; xR < inHeight; ++xR) {\n          const xRCorner = xR - topPad;\n          const xRMin = Math.max(0, Math.ceil(xRCorner / strideHeight));\n          const yRMax =\n              Math.min(outHeight, (filterHeight + xRCorner) / strideHeight);\n          // Columns as per standard 2d matrix notation\n          for (let xC = 0; xC < inWidth; ++xC) {\n            const xCCorner = xC - leftPad;\n            const xCMin = Math.max(0, Math.ceil(xCCorner / strideWidth));\n            const yCMax =\n                Math.min(outWidth, (filterWidth + xCCorner) / strideWidth);\n\n            let dotProd = 0;\n            for (let yF = xFMin; yF < yFMax; ++yF) {\n              const wF = yF * strideDepth - xFCorner;\n\n              for (let yR = xRMin; yR < yRMax; ++yR) {\n                const wR = yR * strideHeight - xRCorner;\n\n                for (let yC = xCMin; yC < yCMax; ++yC) {\n                  const wC = yC * strideWidth - xCCorner;\n                  const dyOffset = dyS0 * b + dyS1 * yF + dyS2 * yR + dyS3 * yC;\n                  const fltOffset = fltS0 * (filterDepth - 1 - wF) +\n                      fltS1 * (filterHeight - 1 - wR) +\n                      fltS2 * (filterWidth - 1 - wC) + fltS3 * d1;\n\n                  for (let d2 = 0; d2 < outChannels; ++d2) {\n                    const pixel = dyValues[dyOffset + d2];\n                    const weight = fltValues[fltOffset + d2];\n                    dotProd += pixel * weight;\n                  }\n                }\n              }\n            }\n            dxValues[dxS0 * b + dxS1 * xF + dxS2 * xR + dxS3 * xC + d1] =\n                dotProd;\n          }\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(dx.shape, dx.dtype, dx.values);\n}\n\nexport const conv3DBackpropInputV2Config: KernelConfig = {\n  kernelName: Conv3DBackpropInputV2,\n  backendName: 'cpu',\n  kernelFunc: conv3DBackpropInputV2 as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Cos, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nexport const cos = unaryKernelFunc(Cos, (xi) => Math.cos(xi));\n\nexport const cosConfig: KernelConfig = {\n  kernelName: Cos,\n  backendName: 'cpu',\n  kernelFunc: cos,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Cosh, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nexport const cosh = unaryKernelFunc(Cosh, (xi) => Math.cosh(xi));\n\nexport const coshConfig: KernelConfig = {\n  kernelName: Cosh,\n  backendName: 'cpu',\n  kernelFunc: cosh,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {buffer, CropAndResize, CropAndResizeAttrs, CropAndResizeInputs, KernelConfig, KernelFunc, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nexport function cropAndResize(args: {\n  inputs: CropAndResizeInputs,\n  backend: MathBackendCPU,\n  attrs: CropAndResizeAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {image, boxes, boxInd} = inputs;\n  const {cropSize, method, extrapolationValue} = attrs;\n\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n  const numBoxes = boxes.shape[0];\n\n  const [cropHeight, cropWidth] = cropSize;\n  const output =\n      buffer([numBoxes, cropHeight, cropWidth, numChannels], 'float32');\n\n  const boxVals = backend.data.get(boxes.dataId).values as TypedArray;\n  const boxIndVals = backend.data.get(boxInd.dataId).values as TypedArray;\n  const imageVals = backend.data.get(image.dataId).values as TypedArray;\n\n  const inStride =\n      util.computeStrides(image.shape);  // to calculate flat indexes into image\n  const outStride = util.computeStrides(\n      output.shape);  // to calculate flat indexes into output\n\n  // Reference implementation\n  // tslint:disable-next-line:max-line-length\n  // https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/crop_and_resize_op.cc\n  for (let b = 0; b < numBoxes; b++) {\n    const startInd = b * 4;\n    const y1 = boxVals[startInd];\n    const x1 = boxVals[startInd + 1];\n    const y2 = boxVals[startInd + 2];\n    const x2 = boxVals[startInd + 3];\n\n    const bInd: number = boxIndVals[b];\n    if (bInd >= batch) {\n      continue;\n    }\n\n    const heightScale =\n        (cropHeight > 1) ? (y2 - y1) * (imageHeight - 1) / (cropHeight - 1) : 0;\n    const widthScale =\n        (cropWidth > 1) ? (x2 - x1) * (imageWidth - 1) / (cropWidth - 1) : 0;\n\n    for (let y = 0; y < cropHeight; y++) {\n      const yInd: number = (cropHeight > 1) ?\n          y1 * (imageHeight - 1) + y * (heightScale) :\n          0.5 * (y1 + y2) * (imageHeight - 1);\n\n      if (yInd < 0 || yInd > imageHeight - 1) {\n        for (let x = 0; x < cropWidth; x++) {\n          for (let c = 0; c < numChannels; c++) {\n            const ind =\n                c + x * outStride[2] + y * outStride[1] + b * outStride[0];\n            output.values[ind] = extrapolationValue;\n          }\n        }\n        continue;\n      }\n\n      if (method === 'bilinear') {\n        const topInd = Math.floor(yInd);\n        const bottomInd = Math.ceil(yInd);\n        const yLerp = yInd - topInd;\n\n        for (let x = 0; x < cropWidth; x++) {\n          const xInd = (cropWidth > 1) ?\n              x1 * (imageWidth - 1) + x * widthScale :\n              0.5 * (x1 + x2) * (imageWidth - 1);\n\n          if (xInd < 0 || xInd > imageWidth - 1) {\n            for (let c = 0; c < numChannels; c++) {\n              const ind =\n                  c + x * outStride[2] + y * outStride[1] + b * outStride[0];\n              output.values[ind] = extrapolationValue;\n            }\n            continue;\n          }\n\n          const leftInd = Math.floor(xInd);\n          const rightInd = Math.ceil(xInd);\n          const xLerp = xInd - leftInd;\n\n          for (let c = 0; c < numChannels; c++) {\n            let ind = c + leftInd * inStride[2] + topInd * inStride[1] +\n                bInd * inStride[0];\n            const topLeft = imageVals[ind];\n\n            ind = c + rightInd * inStride[2] + topInd * inStride[1] +\n                bInd * inStride[0];\n            const topRight = imageVals[ind];\n\n            ind = c + leftInd * inStride[2] + bottomInd * inStride[1] +\n                bInd * inStride[0];\n            const bottomLeft = imageVals[ind];\n\n            ind = c + rightInd * inStride[2] + bottomInd * inStride[1] +\n                bInd * inStride[0];\n            const bottomRight = imageVals[ind];\n\n            const top = topLeft + (topRight - topLeft) * xLerp;\n            const bottom = bottomLeft + (bottomRight - bottomLeft) * xLerp;\n\n            ind = c + x * outStride[2] + y * outStride[1] + b * outStride[0];\n            output.values[ind] = top + ((bottom - top) * yLerp);\n          }\n        }\n      } else {  // method == \"nearest\"\n        for (let x = 0; x < cropWidth; ++x) {\n          const xInd = (cropWidth > 1) ?\n              x1 * (imageWidth - 1) + x * widthScale :\n              0.5 * (x1 + x2) * (imageWidth - 1);\n\n          if (xInd < 0 || xInd > imageWidth - 1) {\n            for (let c = 0; c < numChannels; c++) {\n              const ind =\n                  c + x * outStride[2] + y * outStride[1] + b * outStride[0];\n              output.values[ind] = extrapolationValue;\n            }\n            continue;\n          }\n\n          const closestX = Math.round(xInd);\n          const closestY = Math.round(yInd);\n          for (let c = 0; c < numChannels; c++) {\n            const inInd = c + closestX * inStride[2] + closestY * inStride[1] +\n                bInd * inStride[0];\n            const outInd =\n                c + x * outStride[2] + y * outStride[1] + b * outStride[0];\n            output.values[outInd] = imageVals[inInd];\n          }\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(output.shape, output.dtype, output.values);\n}\n\nexport const cropAndResizeConfig: KernelConfig = {\n  kernelName: CropAndResize,\n  backendName: 'cpu',\n  kernelFunc: cropAndResize as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Cumsum, CumsumAttrs, CumsumInputs, KernelConfig, KernelFunc, TensorInfo, TypedArray, upcastType, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\nimport {transpose} from './Transpose';\n\nexport function cumsum(\n    args: {inputs: CumsumInputs, backend: MathBackendCPU, attrs: CumsumAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {axis, exclusive, reverse} = attrs;\n\n  assertNotComplex(x, 'cumsum');\n\n  const permutation = backend_util.getAxesPermutation([axis], x.shape.length);\n  let $x = x;\n  if (permutation != null) {\n    $x = transpose({inputs: {x}, backend, attrs: {perm: permutation}});\n  }\n  const permutedAxis = backend_util.getInnerMostAxes(1, x.shape.length)[0];\n\n  if (permutedAxis !== $x.shape.length - 1) {\n    throw new Error(\n        `backend.cumsum in CPU expects an inner-most ` +\n        `axis=${$x.shape.length - 1} but got axis=${permutedAxis}`);\n  }\n\n  const resultDtype = upcastType($x.dtype, 'int32');\n  const vals = util.makeZerosTypedArray(\n                   util.sizeFromShape($x.shape), resultDtype) as TypedArray;\n\n  const aVals = backend.data.get($x.dataId).values as TypedArray;\n  const finalDim = $x.shape[$x.shape.length - 1];\n  const indexAdjuster = reverse ?\n      (i: number, j: number) => i + finalDim - j - 1 :\n      (i: number, j: number) => i + j;\n  for (let i = 0; i < aVals.length; i += finalDim) {\n    for (let j = 0; j < finalDim; j++) {\n      const idx = indexAdjuster(i, j);\n      if (j === 0) {\n        vals[idx] = exclusive ? 0 : aVals[idx];\n      } else {\n        const prevIdx = indexAdjuster(i, j - 1);\n        vals[idx] = exclusive ? aVals[prevIdx] + vals[prevIdx] :\n                                aVals[idx] + vals[prevIdx];\n      }\n    }\n  }\n\n  const result = backend.makeTensorInfo($x.shape, resultDtype, vals);\n\n  if (permutation != null) {\n    const reversePermutation = backend_util.getUndoAxesPermutation(permutation);\n    const reverseTransposedResult = transpose(\n        {inputs: {x: result}, backend, attrs: {perm: reversePermutation}});\n\n    backend.disposeIntermediateTensorInfo(result);\n    backend.disposeIntermediateTensorInfo($x);\n\n    return reverseTransposedResult;\n  }\n\n  return result;\n}\n\nexport const cumsumConfig: KernelConfig = {\n  kernelName: Cumsum,\n  backendName: 'cpu',\n  kernelFunc: cumsum as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DenseBincount, DenseBincountAttrs, DenseBincountInputs, KernelConfig, KernelFunc, TensorInfo, TypedArray} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {bincountImpl, bincountReduceImpl} from './Bincount_impl';\n\nexport function denseBincount(args: {\n  inputs: DenseBincountInputs,\n  backend: MathBackendCPU,\n  attrs: DenseBincountAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x, weights} = inputs;\n  const {size, binaryOutput} = attrs;\n\n  if (x.shape.length === 1) {\n    const xVals = backend.data.get(x.dataId).values as TypedArray;\n    const weightsVals = backend.data.get(weights.dataId).values as TypedArray;\n\n    const outVals =\n        bincountImpl(xVals, weightsVals, weights.dtype, weights.shape, size);\n\n    return backend.makeTensorInfo([size], weights.dtype, outVals);\n  } else if (x.shape.length === 2) {\n    const xBuf = backend.bufferSync(x);\n    const weightsBuf = backend.bufferSync(weights);\n\n    const outBuf = bincountReduceImpl(xBuf, weightsBuf, size, binaryOutput);\n\n    return backend.makeTensorInfo(outBuf.shape, weights.dtype, outBuf.values);\n  }\n\n  throw new Error(\n      `Error in denseBincount: input must be at most rank 2, but got rank` +\n      `${x.shape.length}.`);\n}\n\nexport const denseBincountConfig: KernelConfig = {\n  kernelName: DenseBincount,\n  backendName: 'cpu',\n  kernelFunc: denseBincount as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DepthToSpace, DepthToSpaceAttrs, DepthToSpaceInputs, KernelConfig, KernelFunc, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nexport function depthToSpace(args: {\n  inputs: DepthToSpaceInputs,\n  backend: MathBackendCPU,\n  attrs: DepthToSpaceAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {blockSize, dataFormat} = attrs;\n\n  util.assert(\n      dataFormat === 'NHWC',\n      () => `Only NHWC dataFormat supported on CPU for depthToSpace. Got ${\n          dataFormat}`);\n  util.assert(\n      blockSize > 1,\n      () => `blockSize should be > 1 for depthToSpace, but was: ${blockSize}`);\n\n  const batchSize = x.shape[0];\n  const inputHeight = x.shape[1];\n  const inputWidth = x.shape[2];\n  const inputDepth = x.shape[3];\n\n  const outputHeight = inputHeight * blockSize;\n  const outputWidth = inputWidth * blockSize;\n  const outputDepth = inputDepth / (blockSize * blockSize);\n\n  const xValues = backend.data.get(x.dataId).values as TypedArray;\n  const result =\n      new Float32Array(batchSize * outputHeight * outputWidth * outputDepth);\n\n  let outputIdx = 0;\n  for (let b = 0; b < batchSize; ++b) {\n    for (let h = 0; h < outputHeight; ++h) {\n      const inH = Math.floor(h / blockSize);\n      const offsetH = (h % blockSize);\n      for (let w = 0; w < outputWidth; ++w) {\n        const inW = Math.floor(w / blockSize);\n        const offsetW = (w % blockSize);\n        const offsetD = (offsetH * blockSize + offsetW) * outputDepth;\n        for (let d = 0; d < outputDepth; ++d) {\n          const inD = d + offsetD;\n          const inputIdx =\n              inD + inputDepth * (inW + inputWidth * (inH + inputHeight * b));\n          result[outputIdx++] = xValues[inputIdx];\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(\n      [batchSize, outputHeight, outputWidth, outputDepth], x.dtype, result);\n}\n\nexport const depthToSpaceConfig: KernelConfig = {\n  kernelName: DepthToSpace,\n  backendName: 'cpu',\n  kernelFunc: depthToSpace as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, DepthwiseConv2dNative, DepthwiseConv2dNativeAttrs, DepthwiseConv2dNativeInputs, KernelConfig, KernelFunc, TensorBuffer, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function depthwiseConv2dNative(args: {\n  inputs: DepthwiseConv2dNativeInputs,\n  backend: MathBackendCPU,\n  attrs: DepthwiseConv2dNativeAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x, filter} = inputs;\n  const {strides, pad, dilations, dimRoundingMode} = attrs;\n\n  assertNotComplex([x, filter], 'depthwiseConv2DNative');\n\n  const xStrides = util.computeStrides(x.shape);\n  const filterStrides = util.computeStrides(filter.shape);\n\n  let $dilations = dilations;\n  if ($dilations == null) {\n    $dilations = [1, 1];\n  }\n\n  util.assert(\n      backend_util.eitherStridesOrDilationsAreOne(strides, $dilations),\n      () => 'Error in depthwiseConv2d: Either strides or dilations must be ' +\n          `1. Got strides ${strides} and dilations '${$dilations}'`);\n\n  const convInfo = backend_util.computeConv2DInfo(\n      x.shape as [number, number, number, number],\n      filter.shape as [number, number, number, number], strides, $dilations,\n      pad, dimRoundingMode, true /* depthwise */);\n\n  const {filterHeight, filterWidth, dilationHeight, dilationWidth, padInfo} =\n      convInfo;\n  const padLeft = padInfo.left;\n  const padTop = padInfo.top;\n  const chMul = convInfo.outChannels / convInfo.inChannels;\n  const y = new TensorBuffer(convInfo.outShape, x.dtype as 'float32');\n  const xVals = backend.data.get(x.dataId).values as TypedArray;\n  const wVals = backend.data.get(filter.dataId).values as TypedArray;\n  const yVals = y.values;\n\n  for (let b = 0; b < convInfo.batchSize; ++b) {\n    const xOffset1 = b * xStrides[0];\n    const yOffset1 = b * y.strides[0];\n    for (let yR = 0; yR < convInfo.outHeight; ++yR) {\n      const yOffset2 = yOffset1 + yR * y.strides[1];\n      const xRCorner = yR * convInfo.strideHeight - padTop;\n      for (let wR = 0; wR < filterHeight; ++wR) {\n        const xR = xRCorner + wR * dilationHeight;\n        if (xR < 0 || xR >= convInfo.inHeight) {\n          continue;\n        }\n        const wOffset1 = wR * filterStrides[0];\n        const xOffset2 = xOffset1 + xR * xStrides[1];\n        for (let yC = 0; yC < convInfo.outWidth; ++yC) {\n          const yOffset3 = yOffset2 + yC * y.strides[2];\n          const xCCorner = yC * convInfo.strideWidth - padLeft;\n          for (let wC = 0; wC < filterWidth; ++wC) {\n            const xC = xCCorner + wC * dilationWidth;\n            if (xC < 0 || xC >= convInfo.inWidth) {\n              continue;\n            }\n            const wOffset2 = wOffset1 + wC * filterStrides[1];\n            const xOffset3 = xOffset2 + xC * convInfo.inChannels;\n            let yOffset4 = yOffset3;\n            let wOffset3 = wOffset2;\n            for (let d1 = 0; d1 < convInfo.inChannels; ++d1) {\n              const xVal = xVals[xOffset3 + d1];\n              for (let q = 0; q < chMul; ++q) {\n                yVals[yOffset4 + q] += xVal * wVals[wOffset3 + q];\n              }\n              yOffset4 += chMul;\n              wOffset3 += chMul;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(y.shape, y.dtype, y.values);\n}\n\nexport const depthwiseConv2dNativeConfig: KernelConfig = {\n  kernelName: DepthwiseConv2dNative,\n  backendName: 'cpu',\n  kernelFunc: depthwiseConv2dNative as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, DepthwiseConv2dNativeBackpropFilter, DepthwiseConv2dNativeBackpropFilterAttrs, DepthwiseConv2dNativeBackpropFilterInputs, KernelConfig, KernelFunc, TensorBuffer, TensorInfo, TypedArray} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function depthwiseConv2dNativeBackpropFilter(args: {\n  inputs: DepthwiseConv2dNativeBackpropFilterInputs,\n  backend: MathBackendCPU,\n  attrs: DepthwiseConv2dNativeBackpropFilterAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x, dy} = inputs;\n  const {strides, dilations, pad, dimRoundingMode, filterShape} = attrs;\n\n  assertNotComplex([x, dy], 'depthwiseConv2dNativeBackpropFilter');\n\n  const convInfo = backend_util.computeConv2DInfo(\n      x.shape as [number, number, number, number], filterShape, strides,\n      dilations, pad, dimRoundingMode, true /* depthwise */);\n\n  const {strideHeight, strideWidth, filterHeight, filterWidth} = convInfo;\n\n  const dW = new TensorBuffer(convInfo.filterShape, 'float32');\n\n  const leftPad = convInfo.padInfo.left;\n  const topPad = convInfo.padInfo.top;\n  const chMul = convInfo.outChannels / convInfo.inChannels;\n\n  const xVals = backend.data.get(x.dataId).values as TypedArray;\n  const xBuf = new TensorBuffer(x.shape, x.dtype, xVals);\n  const dyVals = backend.data.get(dy.dataId).values as TypedArray;\n  const dyBuf = new TensorBuffer(dy.shape, dy.dtype, dyVals);\n  for (let wR = 0; wR < filterHeight; ++wR) {\n    const yRMin = Math.max(0, Math.ceil((topPad - wR) / strideHeight));\n    const yRMax = Math.min(\n        convInfo.outHeight, (convInfo.inHeight + topPad - wR) / strideHeight);\n\n    for (let wC = 0; wC < filterWidth; ++wC) {\n      const yCMin = Math.max(0, Math.ceil((leftPad - wC) / strideWidth));\n      const yCMax = Math.min(\n          convInfo.outWidth, (convInfo.inWidth + leftPad - wC) / strideWidth);\n\n      for (let d2 = 0; d2 < convInfo.outChannels; ++d2) {\n        const d1 = Math.trunc(d2 / chMul);\n        const dm = d2 % chMul;\n\n        let dotProd = 0;\n        for (let b = 0; b < convInfo.batchSize; ++b) {\n          for (let yR = yRMin; yR < yRMax; ++yR) {\n            const xR = wR + yR * strideHeight - topPad;\n            for (let yC = yCMin; yC < yCMax; ++yC) {\n              const xC = wC + yC * strideWidth - leftPad;\n              dotProd += (xBuf.get(b, xR, xC, d1) as number) *\n                  (dyBuf.get(b, yR, yC, d2) as number);\n            }\n          }\n        }\n        dW.set(dotProd, wR, wC, d1, dm);\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(dW.shape, dW.dtype, dW.values);\n}\n\nexport const depthwiseConv2dNativeBackpropFilterConfig: KernelConfig = {\n  kernelName: DepthwiseConv2dNativeBackpropFilter,\n  backendName: 'cpu',\n  kernelFunc: depthwiseConv2dNativeBackpropFilter as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, DepthwiseConv2dNativeBackpropInput, DepthwiseConv2dNativeBackpropInputAttrs, DepthwiseConv2dNativeBackpropInputInputs, KernelConfig, KernelFunc, TensorBuffer, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function depthwiseConv2dNativeBackpropInput(args: {\n  inputs: DepthwiseConv2dNativeBackpropInputInputs,\n  backend: MathBackendCPU,\n  attrs: DepthwiseConv2dNativeBackpropInputAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {dy, filter} = inputs;\n  const {strides, dilations, pad, dimRoundingMode, inputShape} = attrs;\n\n  assertNotComplex([dy, filter], 'depthwiseConv2DNativeBackpropInput');\n\n  const dyStrides = util.computeStrides(dy.shape);\n  const filterStrides = util.computeStrides(filter.shape);\n\n  const convInfo = backend_util.computeConv2DInfo(\n      inputShape, filter.shape as [number, number, number, number], strides,\n      dilations, pad, dimRoundingMode, true /* depthwise */);\n\n  const dx = new TensorBuffer(convInfo.inShape, 'float32');\n  const dxValues = dx.values;\n  const [dxS0, dxS1, dxS2] = dx.strides;\n  const dyValues = backend.data.get(dy.dataId).values as TypedArray;\n  const [dyS0, dyS1, dyS2] = dyStrides;\n  const fltValues = backend.data.get(filter.dataId).values as TypedArray;\n  const [fltS0, fltS1, fltS2] = filterStrides;\n  const {\n    batchSize,\n    filterHeight,\n    filterWidth,\n    inChannels,\n    inHeight,\n    inWidth,\n    outChannels,\n    outHeight,\n    outWidth,\n    strideHeight,\n    strideWidth\n  } = convInfo;\n  const topPad = filterHeight - 1 - convInfo.padInfo.top;\n  const leftPad = filterWidth - 1 - convInfo.padInfo.left;\n  const chMul = outChannels / inChannels;\n\n  for (let b = 0; b < batchSize; ++b) {\n    for (let d1 = 0; d1 < inChannels; ++d1) {\n      for (let xR = 0; xR < inHeight; ++xR) {\n        const xRCorner = xR - topPad;\n        const xRMin = Math.max(0, Math.ceil(xRCorner / strideHeight));\n        const yRMax =\n            Math.min(outHeight, (filterHeight + xRCorner) / strideHeight);\n\n        for (let xC = 0; xC < inWidth; ++xC) {\n          const xCCorner = xC - leftPad;\n          const xCMin = Math.max(0, Math.ceil(xCCorner / strideWidth));\n          const yCMax =\n              Math.min(outWidth, (filterWidth + xCCorner) / strideWidth);\n\n          let dotProd = 0;\n          for (let yR = xRMin; yR < yRMax; ++yR) {\n            const wR = yR * strideHeight - xRCorner;\n\n            for (let yC = xCMin; yC < yCMax; ++yC) {\n              const wC = yC * strideWidth - xCCorner;\n              const dyOffset = dyS0 * b + dyS1 * yR + dyS2 * yC;\n              const fltOffset = fltS0 * (filterHeight - 1 - wR) +\n                  fltS1 * (filterWidth - 1 - wC) + fltS2 * d1;\n\n              for (let dm = 0; dm < chMul; ++dm) {\n                const d2 = d1 * chMul + dm;\n                const pixel = dyValues[dyOffset + d2];\n                const weight = fltValues[fltOffset + dm];\n                dotProd += pixel * weight;\n              }\n            }\n          }\n          dxValues[dxS0 * b + dxS1 * xR + dxS2 * xC + d1] = dotProd;\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(dx.shape, dx.dtype, dx.values);\n}\n\nexport const depthwiseConv2dNativeBackpropInputConfig: KernelConfig = {\n  kernelName: DepthwiseConv2dNativeBackpropInput,\n  backendName: 'cpu',\n  kernelFunc: depthwiseConv2dNativeBackpropInput as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {buffer, Diag, DiagInputs, KernelConfig, KernelFunc, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nexport function diag(args: {inputs: DiagInputs, backend: MathBackendCPU}):\n    TensorInfo {\n  const {inputs, backend} = args;\n  const {x} = inputs;\n\n  const xSize = util.sizeFromShape(x.shape);\n\n  const xVals = backend.data.get(x.dataId).values as TypedArray;\n  const outBuf = buffer([xSize, xSize], x.dtype);\n  const vals = outBuf.values;\n  for (let i = 0; i < xVals.length; i++) {\n    vals[i * xSize + i] = xVals[i];\n  }\n\n  const outShape = [...x.shape, ...x.shape];\n\n  return backend.makeTensorInfo(outShape, outBuf.dtype, outBuf.values);\n}\n\nexport const diagConfig: KernelConfig = {\n  kernelName: Diag,\n  backendName: 'cpu',\n  kernelFunc: diag as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Dilation2D, Dilation2DAttrs, Dilation2DInputs, KernelConfig, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nexport const dilation2dConfig: KernelConfig = {\n  kernelName: Dilation2D,\n  backendName: 'cpu',\n  kernelFunc: ({inputs, backend, attrs}) => {\n    const {x, filter} = inputs as Dilation2DInputs;\n    const {strides, pad, dilations} = attrs as {} as Dilation2DAttrs;\n    const cpuBackend = backend as MathBackendCPU;\n\n    const xVals = cpuBackend.data.get(x.dataId).values as TypedArray;\n    const xRank = x.shape.length;\n\n    const filterVals = cpuBackend.data.get(filter.dataId).values as TypedArray;\n    const filterRank = filter.shape.length;\n\n    const {\n      batchSize,\n      inHeight,\n      inWidth,\n      inChannels,\n      outHeight,\n      outWidth,\n      padInfo,\n      strideHeight,\n      strideWidth,\n      filterHeight,\n      filterWidth,\n      dilationHeight,\n      dilationWidth,\n      outShape\n    } =\n        backend_util.computeDilation2DInfo(\n            x.shape as [number, number, number, number],\n            filter.shape as [number, number, number], strides, pad,\n            'NHWC' /* dataFormat */, dilations);\n\n    const outSize = util.sizeFromShape(outShape);\n    const outRank = outShape.length;\n    const outputVals = util.getArrayFromDType(x.dtype, outSize);\n\n    // Upsampling the input by fill in `dilation size - 1` values between each\n    // input value.\n    // This implementation follows the TF c++ implementation:\n    // https://github.com/tensorflow/tensorflow/blob/d9a3a849edc198e90172bc58eb293de457f9d986/tensorflow/core/kernels/dilation_ops.cc\n    for (let b = 0; b < batchSize; ++b) {\n      for (let hOut = 0; hOut < outHeight; ++hOut) {\n        const hBeg = hOut * strideHeight - padInfo.top;\n        for (let wOut = 0; wOut < outWidth; ++wOut) {\n          const wBeg = wOut * strideWidth - padInfo.left;\n          for (let d = 0; d < inChannels; ++d) {\n            let curVal = Number.MIN_SAFE_INTEGER;\n            for (let h = 0; h < filterHeight; ++h) {\n              const hIn = hBeg + h * dilationHeight;\n              if (hIn >= 0 && hIn < inHeight) {\n                for (let w = 0; w < filterWidth; ++w) {\n                  const wIn = wBeg + w * dilationWidth;\n                  if (wIn >= 0 && wIn < inWidth) {\n                    const xIndex = util.locToIndex(\n                        [b, hIn, wIn, d], xRank, util.computeStrides(x.shape));\n                    const filterIndex = util.locToIndex(\n                        [h, w, d], filterRank,\n                        util.computeStrides(filter.shape));\n                    const val = xVals[xIndex] + filterVals[filterIndex];\n                    if (val > curVal) {\n                      curVal = val;\n                    }\n                  }\n                }\n              }\n            }\n            const outputIndex = util.locToIndex(\n                [b, hOut, wOut, d], outRank, util.computeStrides(outShape));\n            outputVals[outputIndex] = curVal;\n          }\n        }\n      }\n    }\n\n    const dataId = cpuBackend.write(\n        util.toTypedArray(outputVals, x.dtype), outShape, x.dtype);\n\n    return {dataId, shape: outShape, dtype: x.dtype};\n  }\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Dilation2DAttrs, Dilation2DBackpropFilter, Tensor3D, Tensor4D, TypedArray, util} from '@tensorflow/tfjs-core';\nimport {KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nexport const dilation2dBackpropFilterConfig: KernelConfig = {\n  kernelName: Dilation2DBackpropFilter,\n  backendName: 'cpu',\n  kernelFunc: ({inputs, backend, attrs}) => {\n    const {x, filter, dy} =\n        inputs as {x: Tensor4D, filter: Tensor3D, dy: Tensor4D};\n    const {strides, pad, dilations} = attrs as {} as Dilation2DAttrs;\n    const cpuBackend = backend as MathBackendCPU;\n\n    const $x =\n        util.toNestedArray(\n            x.shape, cpuBackend.data.get(x.dataId).values as TypedArray) as\n        number[][][][];\n\n    const $filter = util.toNestedArray(\n                        filter.shape,\n                        cpuBackend.data.get(filter.dataId).values as\n                            TypedArray) as number[][][];\n\n    const {\n      batchSize,\n      inHeight,\n      inWidth,\n      inChannels,\n      outHeight,\n      outWidth,\n      padInfo,\n      strideHeight,\n      strideWidth,\n      filterHeight,\n      filterWidth,\n      dilationHeight,\n      dilationWidth,\n      outShape\n    } =\n        backend_util.computeDilation2DInfo(\n            x.shape as [number, number, number, number],\n            filter.shape as [number, number, number], strides, pad,\n            'NHWC' /* dataFormat */, dilations);\n\n    util.assert(\n        dy.rank === outShape.length,\n        () => `Error in ${Dilation2DBackpropFilter}, dy ` +\n            `must have the same rank as output ${outShape.length}, but got ` +\n            `${dy.rank}`);\n\n    const $dy =\n        util.toNestedArray(\n            outShape, cpuBackend.data.get(dy.dataId).values as TypedArray) as\n        number[][][][];\n\n    // The computed filter gradients has the same dimensions as the filter:\n    // [filterHeight, filterWidth, depth]\n    const gradients = util.makeZerosNestedTypedArray(\n                          filter.shape, filter.dtype) as number[][][];\n\n    // In the case of multiple argmax branches, we only back-propagate along the\n    // last branch, i.e., the one with largest value of `h * filter_cols + w`,\n    // similarly to the max-pooling backward routines.\n    // This implementation follows the TF c++ implementation:\n    // https://github.com/tensorflow/tensorflow/blob/d9a3a849edc198e90172bc58eb293de457f9d986/tensorflow/core/kernels/dilation_ops.cc\n    for (let b = 0; b < batchSize; ++b) {\n      for (let hOut = 0; hOut < outHeight; ++hOut) {\n        const hBeg = hOut * strideHeight - padInfo.top;\n        for (let wOut = 0; wOut < outWidth; ++wOut) {\n          const wBeg = wOut * strideWidth - padInfo.left;\n          for (let d = 0; d < inChannels; ++d) {\n            let curVal = Number.MIN_SAFE_INTEGER;\n            let hMax = 0;\n            let wMax = 0;\n            for (let h = 0; h < filterHeight; ++h) {\n              const hIn = hBeg + h * dilationHeight;\n              if (hIn >= 0 && hIn < inHeight) {\n                for (let w = 0; w < filterWidth; ++w) {\n                  const wIn = wBeg + w * dilationWidth;\n                  if (wIn >= 0 && wIn < inWidth) {\n                    const val = $x[b][hIn][wIn][d] + $filter[h][w][d];\n                    if (val > curVal) {\n                      curVal = val;\n                      hMax = h;\n                      wMax = w;\n                    }\n                  }\n                }\n              }\n            }\n            gradients[hMax][wMax][d] += $dy[b][hOut][wOut][d];\n          }\n        }\n      }\n    }\n\n    const dataId = cpuBackend.write(\n        util.toTypedArray(gradients, x.dtype), filter.shape, filter.dtype);\n\n    return {dataId, shape: filter.shape, dtype: filter.dtype};\n  }\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Dilation2DAttrs, Dilation2DBackpropInput, Tensor3D, Tensor4D, TypedArray, util} from '@tensorflow/tfjs-core';\nimport {KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nexport const dilation2dBackpropInputConfig: KernelConfig = {\n  kernelName: Dilation2DBackpropInput,\n  backendName: 'cpu',\n  kernelFunc: ({inputs, backend, attrs}) => {\n    const {x, filter, dy} =\n        inputs as {x: Tensor4D, filter: Tensor3D, dy: Tensor4D};\n    const {strides, pad, dilations} = attrs as {} as Dilation2DAttrs;\n    const cpuBackend = backend as MathBackendCPU;\n\n    const $x =\n        util.toNestedArray(\n            x.shape, cpuBackend.data.get(x.dataId).values as TypedArray) as\n        number[][][][];\n\n    const $filter = util.toNestedArray(\n                        filter.shape,\n                        cpuBackend.data.get(filter.dataId).values as\n                            TypedArray) as number[][][];\n\n    const {\n      batchSize,\n      inHeight,\n      inWidth,\n      inChannels,\n      outHeight,\n      outWidth,\n      padInfo,\n      strideHeight,\n      strideWidth,\n      filterHeight,\n      filterWidth,\n      dilationHeight,\n      dilationWidth,\n      outShape\n    } =\n        backend_util.computeDilation2DInfo(\n            x.shape as [number, number, number, number],\n            filter.shape as [number, number, number], strides, pad,\n            'NHWC' /* dataFormat */, dilations);\n\n    util.assert(\n        dy.rank === outShape.length,\n        () => `Error in ${Dilation2DBackpropInput}, dy ` +\n            `must have the same rank as output ${outShape.length}, but got ` +\n            `${dy.rank}`);\n\n    const $dy =\n        util.toNestedArray(\n            outShape, cpuBackend.data.get(dy.dataId).values as TypedArray) as\n        number[][][][];\n\n    // The computed gradients has the same dimensions as the input:\n    // [batch, inputHeight, inputCols, inChannel]\n    const gradients =\n        util.makeZerosNestedTypedArray(x.shape, x.dtype) as number[][][][];\n\n    // In the case of multiple argmax branches, we only back-propagate along the\n    // last branch, i.e., the one with largest value of `h * filter_cols + w`,\n    // similarly to the max-pooling backward routines.\n    // This implementation follows the TF c++ implementation:\n    // https://github.com/tensorflow/tensorflow/blob/d9a3a849edc198e90172bc58eb293de457f9d986/tensorflow/core/kernels/dilation_ops.cc\n    for (let b = 0; b < batchSize; ++b) {\n      for (let hOut = 0; hOut < outHeight; ++hOut) {\n        const hBeg = hOut * strideHeight - padInfo.top;\n        for (let wOut = 0; wOut < outWidth; ++wOut) {\n          const wBeg = wOut * strideWidth - padInfo.left;\n          for (let d = 0; d < inChannels; ++d) {\n            let curVal = Number.MIN_SAFE_INTEGER;\n            let hInMax = (hBeg < 0) ? 0 : hBeg;\n            let wInMax = (wBeg < 0) ? 0 : wBeg;\n            for (let h = 0; h < filterHeight; ++h) {\n              const hIn = hBeg + h * dilationHeight;\n              if (hIn >= 0 && hIn < inHeight) {\n                for (let w = 0; w < filterWidth; ++w) {\n                  const wIn = wBeg + w * dilationWidth;\n                  if (wIn >= 0 && wIn < inWidth) {\n                    const val = $x[b][hIn][wIn][d] + $filter[h][w][d];\n                    if (val > curVal) {\n                      curVal = val;\n                      hInMax = hIn;\n                      wInMax = wIn;\n                    }\n                  }\n                }\n              }\n            }\n            gradients[b][hInMax][wInMax][d] += $dy[b][hOut][wOut][d];\n          }\n        }\n      }\n    }\n\n    const dataId = cpuBackend.write(\n        util.toTypedArray(gradients, x.dtype), x.shape, x.dtype);\n\n    return {dataId, shape: x.shape, dtype: x.dtype};\n  }\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Multiply} from '@tensorflow/tfjs-core';\nimport {createSimpleBinaryKernelImpl} from '../utils/binary_impl';\nimport {binaryKernelFunc, createComplexBinaryKernelImpl} from '../utils/binary_utils';\n\nexport const multiplyImpl = createSimpleBinaryKernelImpl(\n    ((aValue: number, bValue: number) => aValue * bValue));\nexport const multiplyComplexImpl =\n    createComplexBinaryKernelImpl(((aReal, aImag, bReal, bImag) => {\n      return {\n        real: aReal * bReal - aImag * bImag,\n        imag: aReal * bImag + aImag * bReal\n      };\n    }));\n\nexport const multiply =\n    binaryKernelFunc(Multiply, multiplyImpl, multiplyComplexImpl);\n\nexport const multiplyConfig: KernelConfig = {\n  kernelName: Multiply,\n  backendName: 'cpu',\n  kernelFunc: multiply\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Sum, SumAttrs, SumInputs, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\nimport {zeros} from '../utils/zeros_impl';\nimport {cast} from './Cast';\nimport {identity} from './Identity';\nimport {reshape} from './Reshape';\nimport {transpose} from './Transpose';\n\nexport function sum(\n    args: {inputs: SumInputs, backend: MathBackendCPU, attrs: SumAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {axis, keepDims} = attrs;\n\n  assertNotComplex(x, 'sum');\n\n  let $x;\n  if (x.dtype === 'bool') {\n    $x = cast({inputs: {x}, backend, attrs: {dtype: 'int32'}});\n  } else {\n    $x = identity({inputs: {x}, backend});\n  }\n\n  const xRank = $x.shape.length;\n  const axes = util.parseAxisParam(axis, $x.shape);\n  const permutation = backend_util.getAxesPermutation(axes, xRank);\n\n  let reductionAxes = axes;\n  let permutedX = $x;\n  if (permutation != null) {\n    permutedX =\n        transpose({inputs: {x: $x}, backend, attrs: {perm: permutation}});\n    reductionAxes = backend_util.getInnerMostAxes(reductionAxes.length, xRank);\n  }\n\n  backend_util.assertAxesAreInnerMostDims(\n      'sum', reductionAxes, permutedX.shape.length);\n\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(permutedX.shape, reductionAxes);\n  const resultDtype = backend_util.upcastType(permutedX.dtype, 'int32');\n  let result = zeros(backend, outShape, resultDtype);\n  const reduceSize = util.sizeFromShape(reduceShape);\n  const vals = backend.data.get(result.dataId).values as TypedArray;\n\n  const aVals = backend.data.get(permutedX.dataId).values as TypedArray;\n  for (let i = 0; i < vals.length; ++i) {\n    const offset = i * reduceSize;\n    let sum = 0;\n    for (let j = 0; j < reduceSize; ++j) {\n      sum += aVals[offset + j];\n    }\n    vals[i] = sum;\n  }\n\n  if (keepDims) {\n    const newShape = backend_util.expandShapeToKeepDim(result.shape, axes);\n    const oldResult = result;\n    result = reshape({inputs: {x: result}, backend, attrs: {shape: newShape}});\n    backend.disposeIntermediateTensorInfo(oldResult);\n  }\n\n  backend.disposeIntermediateTensorInfo($x);\n\n  if (permutation != null) {\n    backend.disposeIntermediateTensorInfo(permutedX);\n  }\n\n  return result;\n}\n\nexport const sumConfig: KernelConfig = {\n  kernelName: Sum,\n  backendName: 'cpu',\n  kernelFunc: sum as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Einsum, EinsumAttrs, EinsumInputs, KernelConfig, KernelFunc, Tensor, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nimport {multiply} from './Multiply';\nimport {reshape} from './Reshape';\nimport {sum} from './Sum';\nimport {transpose} from './Transpose';\n\nexport function einsum(\n    args: {inputs: EinsumInputs, backend: MathBackendCPU, attrs: EinsumAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {equation} = attrs;\n  const tensors = inputs as Tensor[];\n\n  const {allDims, summedDims, idDims} =\n      backend_util.decodeEinsumEquation(equation, tensors.length);\n  backend_util.checkEinsumDimSizes(allDims.length, idDims, tensors);\n  const {path, steps} = backend_util.getEinsumComputePath(summedDims, idDims);\n\n  const nSteps = steps.length;\n  let out: TensorInfo|null = null;\n  let numDimsRemaining = allDims.length;\n  const tensorsToDispose: TensorInfo[] = [];\n  for (let i = 0; i < nSteps; ++i) {\n    for (const idTerm of steps[i]) {\n      const {permutationIndices: perm, expandDims: dimsToExpand} =\n          backend_util.getEinsumPermutation(numDimsRemaining, idDims[idTerm]);\n      let x: TensorInfo;\n      if (backend_util.isIdentityPermutation(perm)) {\n        x = tensors[idTerm];\n      } else {\n        x = transpose({inputs: {x: tensors[idTerm]}, backend, attrs: {perm}});\n        tensorsToDispose.push(x);\n      }\n      const targetShape: number[] = x.shape.slice();\n      for (let k = 0; k < dimsToExpand.length; ++k) {\n        targetShape.splice(dimsToExpand[k], 0, 1);\n      }\n\n      if (!util.arraysEqual(x.shape, targetShape)) {\n        x = reshape({inputs: {x}, backend, attrs: {shape: targetShape}});\n        tensorsToDispose.push(x);\n      }\n      if (out === null) {\n        out = x;\n      } else {\n        // tslint:disable-next-line: no-unnecessary-type-assertion\n        out = multiply({inputs: {a: x, b: out}, backend}) as TensorInfo;\n        tensorsToDispose.push(out);\n      }\n    }\n    if (i < nSteps - 1) {\n      if (path[i] >= 0) {\n        out = sum({\n          inputs: {x: out},\n          backend,\n          attrs: {\n            axis: path[i] - (allDims.length - numDimsRemaining),\n            keepDims: false\n          }\n        });\n        tensorsToDispose.push(out);\n      }\n      numDimsRemaining--;\n    }\n  }\n\n  // Clean up intermediate tensors.\n  for (const tensorInfo of tensorsToDispose) {\n    if (tensorInfo === out) {\n      continue;\n    }\n    backend.disposeIntermediateTensorInfo(tensorInfo);\n  }\n\n  return out;\n}\n\nexport const einsumConfig: KernelConfig = {\n  kernelName: Einsum,\n  backendName: 'cpu',\n  kernelFunc: einsum as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {EluGrad, EluGradInputs, KernelConfig, KernelFunc, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function eluGrad(args: {inputs: EluGradInputs, backend: MathBackendCPU}):\n    TensorInfo {\n  const {inputs, backend} = args;\n  const {dy, y} = inputs;\n\n  assertNotComplex([dy, y], 'eluGrad');\n\n  const resultValues = new Float32Array(util.sizeFromShape(y.shape));\n  const values = backend.data.get(y.dataId).values as TypedArray;\n  const dyValues = backend.data.get(dy.dataId).values as TypedArray;\n  for (let i = 0; i < values.length; ++i) {\n    const v = values[i];\n    if (v >= 1) {\n      resultValues[i] = dyValues[i];\n    } else {\n      resultValues[i] = dyValues[i] * (v + 1);\n    }\n  }\n\n  return backend.makeTensorInfo(y.shape, 'float32', resultValues);\n}\n\nexport const eluGradConfig: KernelConfig = {\n  kernelName: EluGrad,\n  backendName: 'cpu',\n  kernelFunc: eluGrad as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Equal, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createSimpleBinaryKernelImpl} from '../utils/binary_impl';\nimport {binaryKernelFunc} from '../utils/binary_utils';\n\nexport const equalImpl =\n    createSimpleBinaryKernelImpl((a: number, b: number) => (a === b) ? 1 : 0);\nexport const equal =\n    binaryKernelFunc(Equal, equalImpl, null /* complexImpl */, 'bool');\n\nexport const equalConfig: KernelConfig = {\n  kernelName: Equal,\n  backendName: 'cpu',\n  kernelFunc: equal\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Erf, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nconst p = backend_util.ERF_P;\nconst a1 = backend_util.ERF_A1;\nconst a2 = backend_util.ERF_A2;\nconst a3 = backend_util.ERF_A3;\nconst a4 = backend_util.ERF_A4;\nconst a5 = backend_util.ERF_A5;\n\nexport const erf = unaryKernelFunc(\n    Erf,\n    (xi) => {\n      const sign = Math.sign(xi);\n      const v = Math.abs(xi);\n      const t = 1.0 / (1.0 + p * v);\n      return sign *\n          (1.0 -\n           (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t *\n               Math.exp(-v * v));\n    },\n);\n\nexport const erfConfig: KernelConfig = {\n  kernelName: Erf,\n  backendName: 'cpu',\n  kernelFunc: erf,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Exp, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createSimpleUnaryImpl} from '../utils/unary_impl';\nimport {unaryKernelFuncFromImpl} from '../utils/unary_utils';\n\nexport const expImpl = createSimpleUnaryImpl((xi) => Math.exp(xi));\nexport const exp = unaryKernelFuncFromImpl(Exp, expImpl);\n\nexport const expConfig: KernelConfig = {\n  kernelName: Exp,\n  backendName: 'cpu',\n  kernelFunc: exp,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ExpandDims, ExpandDimsAttrs, ExpandDimsInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {reshape} from './Reshape';\n\nexport function expandDims(args: {\n  inputs: ExpandDimsInputs,\n  backend: MathBackendCPU,\n  attrs: ExpandDimsAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {input} = inputs;\n  const {dim} = attrs;\n\n  const inputRank = input.shape.length;\n  const newShape = input.shape.slice();\n  let $dim = dim;\n  if (dim < 0) {\n    // Negative value is counted from the tail of rank.\n    util.assert(\n        -(inputRank + 1) <= dim,\n        () => `Axis must be in the interval [${- (inputRank + 1)}, ${\n            inputRank}]`);\n    $dim = inputRank + dim + 1;\n  }\n  newShape.splice($dim, 0, 1);\n\n  return reshape({inputs: {x: input}, backend, attrs: {shape: newShape}});\n}\n\nexport const expandDimsConfig: KernelConfig = {\n  kernelName: ExpandDims,\n  backendName: 'cpu',\n  kernelFunc: expandDims as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Expm1, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createSimpleUnaryImpl} from '../utils/unary_impl';\nimport {unaryKernelFuncFromImpl} from '../utils/unary_utils';\n\nexport const expm1Impl = createSimpleUnaryImpl((xi) => Math.expm1(xi));\nexport const expm1 = unaryKernelFuncFromImpl(Expm1, expm1Impl);\n\nexport const expm1Config: KernelConfig = {\n  kernelName: Expm1,\n  backendName: 'cpu',\n  kernelFunc: expm1,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, RealDiv} from '@tensorflow/tfjs-core';\n\nimport {createSimpleBinaryKernelImpl} from '../utils/binary_impl';\nimport {binaryKernelFunc} from '../utils/binary_utils';\n\nexport const realDivImpl =\n    createSimpleBinaryKernelImpl((a: number, b: number) => a / b);\nexport const div = binaryKernelFunc(RealDiv, realDivImpl);\n\nexport const realDivConfig: KernelConfig = {\n  kernelName: RealDiv,\n  backendName: 'cpu',\n  kernelFunc: div\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Sub} from '@tensorflow/tfjs-core';\n\nimport {createSimpleBinaryKernelImpl} from '../utils/binary_impl';\nimport {binaryKernelFunc, createComplexBinaryKernelImpl} from '../utils/binary_utils';\n\nexport const subImpl = createSimpleBinaryKernelImpl(\n    ((aValue: number, bValue: number) => aValue - bValue));\nexport const subComplexImpl =\n    createComplexBinaryKernelImpl(((aReal, aImag, bReal, bImag) => {\n      return {real: aReal - bReal, imag: aImag - bImag};\n    }));\nexport const sub = binaryKernelFunc(Sub, subImpl, subComplexImpl);\n\nexport const subConfig: KernelConfig = {\n  kernelName: Sub,\n  backendName: 'cpu',\n  kernelFunc: sub\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Tensor, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {add} from '../kernels/Add';\nimport {complex} from '../kernels/Complex';\nimport {concat} from '../kernels/Concat';\nimport {identity} from '../kernels/Identity';\nimport {imag} from '../kernels/Imag';\nimport {multiply} from '../kernels/Multiply';\nimport {real} from '../kernels/Real';\nimport {realDivConfig} from '../kernels/RealDiv';\nimport {slice} from '../kernels/Slice';\nimport {sub} from '../kernels/Sub';\n\n/**\n * Calculate FFT of inner most elements of batch tensor.\n */\nexport function fftBatch(\n    input: TensorInfo, inverse: boolean,\n    cpuBackend: MathBackendCPU): TensorInfo {\n  const inputShape = input.shape;\n  const batch = inputShape[0];\n  const innerDim = inputShape[1];\n\n  const inputVals = cpuBackend.data.get(input.dataId);\n\n  const real2D = inputVals.complexTensorInfos.real;\n  const imag2D = inputVals.complexTensorInfos.imag;\n\n  // Collects real and imaginary values separately.\n  const resultShape = [batch, innerDim];\n  const resultSize = util.sizeFromShape(resultShape);\n  const resultReal = util.getTypedArrayFromDType('float32', resultSize);\n  const resultImag = util.getTypedArrayFromDType('float32', resultSize);\n\n  for (let b = 0; b < batch; b++) {\n    // TODO: Support slice ops for complex type.\n    const r = slice({\n      inputs: {x: real2D},\n      backend: cpuBackend,\n      attrs: {begin: [b, 0], size: [1, innerDim]}\n    });\n    const i = slice({\n      inputs: {x: imag2D},\n      backend: cpuBackend,\n      attrs: {begin: [b, 0], size: [1, innerDim]}\n    });\n\n    const input = complex({inputs: {real: r, imag: i}, backend: cpuBackend});\n\n    // Run FFT by batch element.\n    const {real, imag} = fftImpl(input, inverse, cpuBackend);\n    const res = backend_util.mergeRealAndImagArrays(real, imag);\n\n    for (let d = 0; d < innerDim; d++) {\n      const c = backend_util.getComplexWithIndex(res, d);\n      resultReal[b * innerDim + d] = c.real;\n      resultImag[b * innerDim + d] = c.imag;\n    }\n\n    cpuBackend.disposeIntermediateTensorInfo(r);\n    cpuBackend.disposeIntermediateTensorInfo(i);\n    cpuBackend.disposeIntermediateTensorInfo(input);\n  }\n\n  const $realInfo: TensorInfo =\n      cpuBackend.makeTensorInfo(resultShape, 'float32', resultReal);\n  const $imagInfo: TensorInfo =\n      cpuBackend.makeTensorInfo(resultShape, 'float32', resultImag);\n\n  const result = complex(\n      {inputs: {real: $realInfo, imag: $imagInfo}, backend: cpuBackend});\n\n  cpuBackend.disposeIntermediateTensorInfo($realInfo);\n  cpuBackend.disposeIntermediateTensorInfo($imagInfo);\n\n  return result;\n}\n\nexport function fftImpl(\n    input: TensorInfo, inverse: boolean,\n    cpuBackend: MathBackendCPU): {real: Float32Array, imag: Float32Array} {\n  const inputSize = util.sizeFromShape(input.shape);\n\n  const inputVals = cpuBackend.data.get(input.dataId);\n\n  const realVals =\n      cpuBackend.data.get(inputVals.complexTensorInfos.real.dataId).values as\n      Float32Array;\n\n  const imagVals =\n      cpuBackend.data.get(inputVals.complexTensorInfos.imag.dataId).values as\n      Float32Array;\n\n  if (isExponentOf2(inputSize)) {\n    const result =\n        fftRadix2(realVals, imagVals, inputSize, inverse, cpuBackend);\n\n    const resultShape = [input.shape[0], input.shape[1]];\n\n    if (inverse) {\n      const realInfo: TensorInfo =\n          cpuBackend.makeTensorInfo(resultShape, 'float32', result.real);\n      const imagInfo: TensorInfo =\n          cpuBackend.makeTensorInfo(resultShape, 'float32', result.imag);\n\n      const sizeInfo: TensorInfo = cpuBackend.makeTensorInfo(\n          [], 'float32',\n          util.createScalarValue(inputSize as {} as 'float32', 'float32'));\n      const sizeInfoCopy =\n          identity({inputs: {x: sizeInfo}, backend: cpuBackend});\n\n      const divRealInfo =\n          realDivConfig.kernelFunc(\n              {inputs: {a: realInfo, b: sizeInfo}, backend: cpuBackend}) as\n          TensorInfo;\n      const divImagInfo =\n          realDivConfig.kernelFunc(\n              {inputs: {a: imagInfo, b: sizeInfoCopy}, backend: cpuBackend}) as\n          TensorInfo;\n\n      const divRealVals =\n          cpuBackend.data.get(divRealInfo.dataId).values as Float32Array;\n      const divImagVals =\n          cpuBackend.data.get(divImagInfo.dataId).values as Float32Array;\n\n      cpuBackend.disposeIntermediateTensorInfo(realInfo);\n      cpuBackend.disposeIntermediateTensorInfo(imagInfo);\n      cpuBackend.disposeIntermediateTensorInfo(sizeInfo);\n      cpuBackend.disposeIntermediateTensorInfo(sizeInfoCopy);\n      cpuBackend.disposeIntermediateTensorInfo(divRealInfo);\n      cpuBackend.disposeIntermediateTensorInfo(divImagInfo);\n\n      return {real: divRealVals, imag: divImagVals};\n    }\n\n    return result;\n  } else {\n    const data = backend_util.mergeRealAndImagArrays(realVals, imagVals);\n\n    const rawOutput =\n        fourierTransformByMatmul(data, inputSize, inverse) as Float32Array;\n\n    return backend_util.splitRealAndImagArrays(rawOutput);\n  }\n}\n\nfunction isExponentOf2(size: number): boolean {\n  return (size & size - 1) === 0;\n}\n\n// FFT using Cooley-Tukey algorithm on radix 2 dimensional input.\nfunction fftRadix2(\n    realVals: Float32Array, imagVals: Float32Array, size: number,\n    inverse: boolean,\n    cpuBackend: MathBackendCPU): {real: Float32Array, imag: Float32Array} {\n  if (size === 1) {\n    return {real: realVals, imag: imagVals};\n  }\n\n  const data = backend_util.mergeRealAndImagArrays(realVals, imagVals);\n\n  const half = size / 2;\n\n  const evenComplex = backend_util.complexWithEvenIndex(data);\n\n  const evenRealVals = evenComplex.real;\n  const evenImagVals = evenComplex.imag;\n\n  const evenShape = [evenRealVals.length];\n\n  const evenRealInfo =\n      cpuBackend.makeTensorInfo(evenShape, 'float32', evenRealVals);\n  const evenImagInfo =\n      cpuBackend.makeTensorInfo(evenShape, 'float32', evenImagVals);\n\n  const evenTensorInfo = complex(\n      {inputs: {real: evenRealInfo, imag: evenImagInfo}, backend: cpuBackend});\n\n  const oddComplex = backend_util.complexWithOddIndex(data);\n\n  const oddRealVals = oddComplex.real;\n  const oddImagVals = oddComplex.imag;\n\n  const oddShape = [oddRealVals.length];\n\n  const oddRealInfo =\n      cpuBackend.makeTensorInfo(oddShape, 'float32', oddRealVals);\n  const oddImagInfo =\n      cpuBackend.makeTensorInfo(oddShape, 'float32', oddImagVals);\n\n  const oddTensorInfo = complex(\n      {inputs: {real: oddRealInfo, imag: oddImagInfo}, backend: cpuBackend});\n\n  // Recursive call for half part of original input.\n  const $evenComplex =\n      fftRadix2(evenRealVals, evenImagVals, half, inverse, cpuBackend);\n\n  const $evenRealVals = $evenComplex.real;\n  const $evenImagVals = $evenComplex.imag;\n\n  const $evenShape = [$evenRealVals.length];\n\n  const $evenRealInfo =\n      cpuBackend.makeTensorInfo($evenShape, 'float32', $evenRealVals);\n  const $evenImagInfo =\n      cpuBackend.makeTensorInfo($evenShape, 'float32', $evenImagVals);\n\n  const $evenTensorInfo = complex({\n    inputs: {real: $evenRealInfo, imag: $evenImagInfo},\n    backend: cpuBackend\n  });\n\n  const $oddComplex =\n      fftRadix2(oddRealVals, oddImagVals, half, inverse, cpuBackend);\n\n  const $oddRealVals = $oddComplex.real;\n  const $oddImagVals = $oddComplex.imag;\n\n  const $oddShape = [$oddRealVals.length];\n\n  const $oddRealInfo =\n      cpuBackend.makeTensorInfo($oddShape, 'float32', $oddRealVals);\n  const $oddImagInfo =\n      cpuBackend.makeTensorInfo($oddShape, 'float32', $oddImagVals);\n\n  const $oddTensorInfo = complex(\n      {inputs: {real: $oddRealInfo, imag: $oddImagInfo}, backend: cpuBackend});\n\n  const e = backend_util.exponents(size, inverse);\n  const eShape = [e.real.length];\n\n  const eRealInfo = cpuBackend.makeTensorInfo(eShape, 'float32', e.real);\n  const eImagInfo = cpuBackend.makeTensorInfo(eShape, 'float32', e.imag);\n\n  const complexInfo = complex(\n      {inputs: {real: eRealInfo, imag: eImagInfo}, backend: cpuBackend});\n\n  const exponentInfo =\n      multiply(\n          {inputs: {a: complexInfo, b: $oddTensorInfo}, backend: cpuBackend}) as\n      TensorInfo;\n\n  const addPart = add({\n                    inputs: {a: $evenTensorInfo, b: exponentInfo},\n                    backend: cpuBackend\n                  }) as TensorInfo;\n  const subPart = sub({\n                    inputs: {a: $evenTensorInfo, b: exponentInfo},\n                    backend: cpuBackend\n                  }) as TensorInfo;\n\n  const addPartReal = real({inputs: {input: addPart}, backend: cpuBackend});\n  const subPartReal = real({inputs: {input: subPart}, backend: cpuBackend});\n\n  const addPartImag = imag({inputs: {input: addPart}, backend: cpuBackend});\n  const subPartImag = imag({inputs: {input: subPart}, backend: cpuBackend});\n\n  const $real = concat({\n    inputs: [addPartReal as Tensor, subPartReal as Tensor],\n    backend: cpuBackend,\n    attrs: {axis: 0}\n  });\n  const $imag = concat({\n    inputs: [addPartImag as Tensor, subPartImag as Tensor],\n    backend: cpuBackend,\n    attrs: {axis: 0}\n  });\n\n  const $realVals = cpuBackend.data.get($real.dataId).values as Float32Array;\n  const $imagVals = cpuBackend.data.get($imag.dataId).values as Float32Array;\n\n  cpuBackend.disposeIntermediateTensorInfo(evenRealInfo);\n  cpuBackend.disposeIntermediateTensorInfo(evenImagInfo);\n  cpuBackend.disposeIntermediateTensorInfo(evenTensorInfo);\n  cpuBackend.disposeIntermediateTensorInfo(oddRealInfo);\n  cpuBackend.disposeIntermediateTensorInfo(oddImagInfo);\n  cpuBackend.disposeIntermediateTensorInfo(oddTensorInfo);\n  cpuBackend.disposeIntermediateTensorInfo($evenRealInfo);\n  cpuBackend.disposeIntermediateTensorInfo($evenImagInfo);\n  cpuBackend.disposeIntermediateTensorInfo($evenTensorInfo);\n  cpuBackend.disposeIntermediateTensorInfo($oddRealInfo);\n  cpuBackend.disposeIntermediateTensorInfo($oddImagInfo);\n  cpuBackend.disposeIntermediateTensorInfo($oddTensorInfo);\n  cpuBackend.disposeIntermediateTensorInfo(eRealInfo);\n  cpuBackend.disposeIntermediateTensorInfo(eImagInfo);\n  cpuBackend.disposeIntermediateTensorInfo(complexInfo);\n  cpuBackend.disposeIntermediateTensorInfo(exponentInfo);\n  cpuBackend.disposeIntermediateTensorInfo(addPart);\n  cpuBackend.disposeIntermediateTensorInfo(subPart);\n  cpuBackend.disposeIntermediateTensorInfo(addPartReal);\n  cpuBackend.disposeIntermediateTensorInfo(addPartImag);\n  cpuBackend.disposeIntermediateTensorInfo(subPartReal);\n  cpuBackend.disposeIntermediateTensorInfo(subPartImag);\n  cpuBackend.disposeIntermediateTensorInfo($real);\n  cpuBackend.disposeIntermediateTensorInfo($imag);\n\n  return {real: $realVals, imag: $imagVals};\n}\n\n// Calculate fourier transform by multplying sinusoid matrix.\nfunction fourierTransformByMatmul(\n    data: TypedArray, size: number, inverse: boolean): TypedArray {\n  const ret = new Float32Array(size * 2);\n  // TODO: Use matmul instead once it supports complex64 type.\n  for (let r = 0; r < size; r++) {\n    let real = 0.0;\n    let imag = 0.0;\n    for (let c = 0; c < size; c++) {\n      const e = backend_util.exponent(r * c, size, inverse);\n      const term = backend_util.getComplexWithIndex(data as Float32Array, c);\n      real += term.real * e.real - term.imag * e.imag;\n      imag += term.real * e.imag + term.imag * e.real;\n    }\n    if (inverse) {\n      real /= size;\n      imag /= size;\n    }\n    backend_util.assignToTypedArray(ret, real, imag, r);\n  }\n  return ret;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FFT, FFTInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {fftBatch} from '../utils/fft_utils';\nimport {reshape} from './Reshape';\n\nexport function fft(args: {inputs: FFTInputs, backend: MathBackendCPU}):\n    TensorInfo {\n  const {inputs, backend} = args;\n  const {input} = inputs;\n\n  const inputSize = util.sizeFromShape(input.shape);\n\n  // Collapse all outer dimensions to a single batch dimension.\n  const innerDimensionSize = input.shape[input.shape.length - 1];\n  const batch = inputSize / innerDimensionSize;\n\n  const input2D = reshape({\n    inputs: {x: input},\n    backend,\n    attrs: {shape: [batch, innerDimensionSize]}\n  });\n\n  const result = fftBatch(input2D, false, backend);\n\n  const resultReshaped =\n      reshape({inputs: {x: result}, backend, attrs: {shape: input.shape}});\n\n  backend.disposeIntermediateTensorInfo(input2D);\n  backend.disposeIntermediateTensorInfo(result);\n\n  return resultReshaped;\n}\n\nexport const fftConfig: KernelConfig = {\n  kernelName: FFT,\n  backendName: 'cpu',\n  kernelFunc: fft as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, DataValues, Fill, FillAttrs, KernelConfig, KernelFunc, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nexport function fill(args: {backend: MathBackendCPU, attrs: FillAttrs}):\n    TensorInfo {\n  const {backend, attrs} = args;\n  const {shape, value, dtype} = attrs;\n\n  const $dtype = dtype || util.inferDtype(value);\n  const values = util.getArrayFromDType($dtype, util.sizeFromShape(shape));\n  fillValues(values, value, $dtype);\n\n  return backend.makeTensorInfo(shape, $dtype, values);\n}\n\nexport const fillConfig: KernelConfig = {\n  kernelName: Fill,\n  backendName: 'cpu',\n  kernelFunc: fill as {} as KernelFunc\n};\n\nfunction fillValues(\n    values: DataValues, value: string|number, dtype: DataType): void {\n  if (dtype === 'string') {\n    (values as string[]).fill(value as string);\n  } else {\n    (values as TypedArray).fill(value as number);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, NumericDataType, TypedArray} from '@tensorflow/tfjs-core';\nimport {FlipLeftRight, FlipLeftRightInputs, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nexport const flipLeftRightConfig: KernelConfig = {\n  kernelName: FlipLeftRight,\n  backendName: 'cpu',\n  kernelFunc: ({inputs, attrs, backend}) => {\n    const {image} = inputs as FlipLeftRightInputs;\n    const cpuBackend = backend as MathBackendCPU;\n\n    const output = util.getTypedArrayFromDType(\n        image.dtype as NumericDataType, util.sizeFromShape(image.shape));\n    const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n\n    const imageVals = cpuBackend.data.get(image.dataId).values as TypedArray;\n\n    for (let batchIdx = 0; batchIdx < batch; batchIdx++) {\n      const batchOffset = batchIdx * imageWidth * imageHeight * numChannels;\n\n      for (let row = 0; row < imageHeight; row++) {\n        const rowOffset = row * (imageWidth * numChannels);\n\n        for (let col = 0; col < imageWidth; col++) {\n          const colOffset = col * numChannels;\n\n          for (let channel = 0; channel < numChannels; channel++) {\n            const coordX = Math.round(imageWidth - col - 1);\n            const outIdx = batchOffset + rowOffset + colOffset + channel;\n\n            let outputValue = imageVals[outIdx];\n            // If the coordinate position falls within the image boundaries...\n            if (coordX >= 0 && coordX < imageWidth) {\n              // set the output to the image value at the coordinate position.\n              const rotatedColOffset = coordX * numChannels;\n              const imageIdx =\n                  batchOffset + rowOffset + rotatedColOffset + channel;\n              outputValue = imageVals[imageIdx];\n            }\n            output[outIdx] = outputValue;\n          }\n        }\n      }\n    }\n\n    const dataId = cpuBackend.write(output, image.shape, image.dtype);\n    return {dataId, shape: image.shape, dtype: image.dtype};\n  }\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Floor, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createSimpleUnaryImpl} from '../utils/unary_impl';\nimport {unaryKernelFuncFromImpl} from '../utils/unary_utils';\n\nexport const floorImpl = createSimpleUnaryImpl((xi) => Math.floor(xi));\nexport const floor = unaryKernelFuncFromImpl(Floor, floorImpl);\n\nexport const floorConfig: KernelConfig = {\n  kernelName: Floor,\n  backendName: 'cpu',\n  kernelFunc: floor,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FloorDiv, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createSimpleBinaryKernelImpl} from '../utils/binary_impl';\nimport {binaryKernelFunc} from '../utils/binary_utils';\n\nexport const floorDivImpl =\n    createSimpleBinaryKernelImpl((a: number, b: number) => Math.floor(a / b));\nexport const floorDiv =\n    binaryKernelFunc(FloorDiv, floorDivImpl, null /* complexImpl */, 'int32');\n\nexport const floorDivConfig: KernelConfig = {\n  kernelName: FloorDiv,\n  backendName: 'cpu',\n  kernelFunc: floorDiv\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FusedConv2D, FusedConv2DAttrs, FusedConv2DInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {applyActivation} from '../utils/fused_utils';\nimport {add} from './Add';\nimport {conv2D} from './Conv2D';\n\nexport function fusedConv2D(args: {\n  inputs: FusedConv2DInputs,\n  backend: MathBackendCPU,\n  attrs: FusedConv2DAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x, filter, bias, preluActivationWeights} = inputs;\n  const {\n    strides,\n    pad,\n    dataFormat,\n    dilations,\n    dimRoundingMode,\n    activation,\n    leakyreluAlpha\n  } = attrs;\n\n  let result = conv2D({\n    inputs: {x, filter},\n    backend,\n    attrs: {strides, pad, dataFormat, dilations, dimRoundingMode}\n  });\n\n  if (bias) {\n    const resultOld = result;\n    result = add({inputs: {a: result, b: bias}, backend}) as TensorInfo;\n    backend.disposeIntermediateTensorInfo(resultOld);\n  }\n\n  if (activation) {\n    const resultOld = result;\n    result = applyActivation(\n        backend, result, activation, preluActivationWeights, leakyreluAlpha);\n    backend.disposeIntermediateTensorInfo(resultOld);\n  }\n\n  return result;\n}\n\nexport const fusedConv2DConfig: KernelConfig = {\n  kernelName: FusedConv2D,\n  backendName: 'cpu',\n  kernelFunc: fusedConv2D as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FusedDepthwiseConv2D, FusedDepthwiseConv2DAttrs, FusedDepthwiseConv2DInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {applyActivation} from '../utils/fused_utils';\nimport {add} from './Add';\nimport {depthwiseConv2dNative} from './DepthwiseConv2dNative';\n\nexport function fusedDepthwiseConv2D(args: {\n  inputs: FusedDepthwiseConv2DInputs,\n  backend: MathBackendCPU,\n  attrs: FusedDepthwiseConv2DAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x, filter, bias, preluActivationWeights} = inputs;\n  const {\n    strides,\n    pad,\n    dataFormat,\n    dilations,\n    dimRoundingMode,\n    activation,\n    leakyreluAlpha\n  } = attrs;\n\n  let result = depthwiseConv2dNative({\n    inputs: {x, filter},\n    backend,\n    attrs: {strides, pad, dataFormat, dilations, dimRoundingMode}\n  });\n\n  if (bias) {\n    const oldResult = result;\n    result = add({inputs: {a: result, b: bias}, backend}) as TensorInfo;\n    backend.disposeIntermediateTensorInfo(oldResult);\n  }\n  if (activation) {\n    const oldResult = result;\n    result = applyActivation(\n        backend, result, activation, preluActivationWeights, leakyreluAlpha);\n    backend.disposeIntermediateTensorInfo(oldResult);\n  }\n\n  return result;\n}\n\nexport const fusedDepthwiseConv2DConfig: KernelConfig = {\n  kernelName: FusedDepthwiseConv2D,\n  backendName: 'cpu',\n  kernelFunc: fusedDepthwiseConv2D as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, GatherNd, GatherNdInputs, KernelConfig, KernelFunc, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nimport {gatherNdImpl} from './GatherNd_Impl';\n\nexport function gatherNd(\n    args: {inputs: GatherNdInputs, backend: MathBackendCPU}): TensorInfo {\n  const {inputs, backend} = args;\n  const {params, indices} = inputs;\n\n  const paramsSize = util.sizeFromShape(params.shape);\n\n  const indicesShape = indices.shape;\n  const sliceRank = indicesShape[indicesShape.length - 1];\n\n  const [resultShape, numSlices, sliceSize, strides] =\n      backend_util.prepareAndValidate(params, indices);\n  if (numSlices === 0) {\n    return backend.makeTensorInfo(resultShape, params.dtype, []);\n  }\n\n  const indicesData = backend.data.get(indices.dataId).values as TypedArray;\n  const paramsBuf = backend.bufferSync(params);\n  const outBuf = gatherNdImpl(\n      indicesData, paramsBuf, params.dtype, numSlices, sliceRank, sliceSize,\n      strides, params.shape, paramsSize);\n\n  return backend.makeTensorInfo(resultShape, params.dtype, outBuf.values);\n}\n\nexport const gatherNdConfig: KernelConfig = {\n  kernelName: GatherNd,\n  backendName: 'cpu',\n  kernelFunc: gatherNd as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {buffer, DataType, Rank, TensorBuffer, TypedArray} from '@tensorflow/tfjs-core';\n\nexport function gatherNdImpl<R extends Rank>(\n    indicesData: TypedArray, paramsBuf: TensorBuffer<R>, dtype: DataType,\n    numSlices: number, sliceRank: number, sliceSize: number, strides: number[],\n    paramsShape: number[], paramsSize: number): TensorBuffer<R> {\n  const outBuf = buffer([numSlices, sliceSize], dtype);\n\n  for (let i = 0; i < numSlices; i++) {\n    const index = [];\n    let flattenIndex = 0;\n    for (let j = 0; j < sliceRank; j++) {\n      const dim = indicesData[i * sliceRank + j];\n      flattenIndex += dim * strides[j];\n      index.push(dim);\n    }\n    if (flattenIndex < 0 || flattenIndex >= paramsSize / sliceSize) {\n      throw new Error(\n          `Invalid indices: ${index} does not index into ${paramsShape}`);\n    }\n\n    for (let k = 0; k < sliceSize; k++) {\n      outBuf.values[i * sliceSize + k] =\n          paramsBuf.get(...paramsBuf.indexToLoc(flattenIndex * sliceSize + k));\n    }\n  }\n\n  return outBuf as TensorBuffer<R>;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, GatherV2, GatherV2Attrs, GatherV2Inputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\nimport {gatherV2Impl} from './GatherV2_impl';\nimport {reshape} from './Reshape';\n\nexport function gatherV2(args: {\n  inputs: GatherV2Inputs,\n  backend: MathBackendCPU,\n  attrs: GatherV2Attrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x, indices} = inputs;\n  const {axis, batchDims} = attrs;\n\n  assertNotComplex([x, indices], 'gatherV2');\n\n  let $batchDims = batchDims;\n\n  if (batchDims == null) {\n    $batchDims = 0;\n  }\n\n  const indicesSize = util.sizeFromShape(indices.shape);\n\n  const parsedAxis = util.parseAxisParam(axis, x.shape)[0];\n  const shapeInfo = backend_util.segment_util.collectGatherOpShapeInfo(\n      x, indices, parsedAxis, $batchDims);\n\n  const flattenX = reshape({\n    inputs: {x},\n    backend,\n    attrs: {\n      shape: [\n        shapeInfo.batchSize, shapeInfo.outerSize, shapeInfo.dimSize,\n        shapeInfo.sliceSize\n      ]\n    }\n  });\n\n  const flattenIndex = reshape({\n    inputs: {x: indices},\n    backend,\n    attrs: {shape: [shapeInfo.batchSize, indicesSize / shapeInfo.batchSize]}\n  });\n\n  const flattenOutputShape = [\n    shapeInfo.batchSize, shapeInfo.outerSize, indicesSize / shapeInfo.batchSize,\n    shapeInfo.sliceSize\n  ];\n\n  const indicesBuf = backend.bufferSync(flattenIndex);\n  const xBuf = backend.bufferSync(flattenX);\n  const outBuf = gatherV2Impl(xBuf, indicesBuf, flattenOutputShape);\n\n  backend.disposeIntermediateTensorInfo(flattenX);\n  backend.disposeIntermediateTensorInfo(flattenIndex);\n\n  return backend.makeTensorInfo(\n      shapeInfo.outputShape, outBuf.dtype, outBuf.values);\n}\n\nexport const gatherV2Config: KernelConfig = {\n  kernelName: GatherV2,\n  backendName: 'cpu',\n  kernelFunc: gatherV2 as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {buffer, DataType, Rank, TensorBuffer} from '@tensorflow/tfjs-core';\n\nexport function gatherV2Impl<R extends Rank, D extends DataType>(\n    xBuf: TensorBuffer<R, D>, indicesBuf: TensorBuffer<R, D>,\n    flattenOutputShape: number[]): TensorBuffer<R, D> {\n  const outBuf = buffer(flattenOutputShape, xBuf.dtype);\n  for (let i = 0; i < outBuf.size; ++i) {\n    const newLoc = outBuf.indexToLoc(i);\n\n    const originalLoc: number[] = newLoc.slice();\n    const batchIdx = originalLoc[0];\n    const indicesIdx = originalLoc[2];\n    const indicesIndex = indicesBuf.locToIndex([batchIdx, indicesIdx]);\n    originalLoc[2] = indicesBuf.values[indicesIndex] as number;\n\n    const originalIndex = xBuf.locToIndex(originalLoc);\n    outBuf.values[i] = xBuf.values[originalIndex];\n  }\n\n  return outBuf as TensorBuffer<R, D>;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Greater, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createSimpleBinaryKernelImpl} from '../utils/binary_impl';\nimport {binaryKernelFunc} from '../utils/binary_utils';\n\nexport const greaterImpl =\n    createSimpleBinaryKernelImpl((a: number, b: number) => (a > b) ? 1 : 0);\nexport const greater =\n    binaryKernelFunc(Greater, greaterImpl, null /* complexImpl */, 'bool');\n\nexport const greaterConfig: KernelConfig = {\n  kernelName: Greater,\n  backendName: 'cpu',\n  kernelFunc: greater\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GreaterEqual, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createSimpleBinaryKernelImpl} from '../utils/binary_impl';\nimport {binaryKernelFunc} from '../utils/binary_utils';\n\nexport const greaterEqualImpl =\n    createSimpleBinaryKernelImpl((a: number, b: number) => (a >= b) ? 1 : 0);\nexport const greaterEqual = binaryKernelFunc(\n    GreaterEqual, greaterEqualImpl, null /* complexImpl */, 'bool');\n\nexport const greaterEqualConfig: KernelConfig = {\n  kernelName: GreaterEqual,\n  backendName: 'cpu',\n  kernelFunc: greaterEqual\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {IFFT, IFFTInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {fftBatch} from '../utils/fft_utils';\nimport {reshape} from './Reshape';\n\nexport function ifft(args: {inputs: IFFTInputs, backend: MathBackendCPU}):\n    TensorInfo {\n  const {inputs, backend} = args;\n  const {input} = inputs;\n\n  const inputSize = util.sizeFromShape(input.shape);\n\n  // Collapse all outer dimensions to a single batch dimension.\n  const innerDimensionSize = input.shape[input.shape.length - 1];\n  const batch = inputSize / innerDimensionSize;\n\n  const input2D = reshape({\n    inputs: {x: input},\n    backend,\n    attrs: {shape: [batch, innerDimensionSize]}\n  });\n\n  const result = fftBatch(input2D, true, backend);\n\n  const resultReshaped =\n      reshape({inputs: {x: result}, backend, attrs: {shape: input.shape}});\n\n  backend.disposeIntermediateTensorInfo(input2D);\n  backend.disposeIntermediateTensorInfo(result);\n\n  return resultReshaped;\n}\n\nexport const ifftConfig: KernelConfig = {\n  kernelName: IFFT,\n  backendName: 'cpu',\n  kernelFunc: ifft as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {IsFinite, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nexport const isFinite =\n    unaryKernelFunc(IsFinite, (xi) => Number.isFinite(xi) ? 1 : 0, 'bool');\n\nexport const isFiniteConfig: KernelConfig = {\n  kernelName: IsFinite,\n  backendName: 'cpu',\n  kernelFunc: isFinite,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {IsInf, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nexport const isInf =\n    unaryKernelFunc(IsInf, (xi) => Math.abs(xi) === Infinity ? 1 : 0, 'bool');\n\nexport const isInfConfig: KernelConfig = {\n  kernelName: IsInf,\n  backendName: 'cpu',\n  kernelFunc: isInf,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {IsNan, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nexport const isNaN =\n    unaryKernelFunc(IsNan, (xi) => Number.isNaN(xi) ? 1 : 0, 'bool');\n\nexport const isNaNConfig: KernelConfig = {\n  kernelName: IsNan,\n  backendName: 'cpu',\n  kernelFunc: isNaN,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Less} from '@tensorflow/tfjs-core';\n\nimport {createSimpleBinaryKernelImpl} from '../utils/binary_impl';\nimport {binaryKernelFunc} from '../utils/binary_utils';\n\nexport const lessImpl =\n    createSimpleBinaryKernelImpl((a: number, b: number) => (a < b) ? 1 : 0);\nexport const less =\n    binaryKernelFunc(Less, lessImpl, null /* complexImpl */, 'bool');\n\nexport const lessConfig: KernelConfig = {\n  kernelName: Less,\n  backendName: 'cpu',\n  kernelFunc: less\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, LessEqual} from '@tensorflow/tfjs-core';\n\nimport {createSimpleBinaryKernelImpl} from '../utils/binary_impl';\nimport {binaryKernelFunc} from '../utils/binary_utils';\n\nexport const lessEqualImpl =\n    createSimpleBinaryKernelImpl((a: number, b: number) => (a <= b) ? 1 : 0);\nexport const lessEqual =\n    binaryKernelFunc(LessEqual, lessEqualImpl, null /* complexImpl */, 'bool');\n\nexport const lessEqualConfig: KernelConfig = {\n  kernelName: LessEqual,\n  backendName: 'cpu',\n  kernelFunc: lessEqual\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, LinSpace, LinSpaceAttrs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {linSpaceImpl} from './LinSpace_impl';\n\nexport function linSpace(args: {backend: MathBackendCPU, attrs: LinSpaceAttrs}):\n    TensorInfo {\n  const {backend, attrs} = args;\n  const {start, stop, num} = attrs;\n\n  const outVals = linSpaceImpl(start, stop, num);\n\n  return backend.makeTensorInfo([outVals.length], 'float32', outVals);\n}\n\nexport const linSpaceConfig: KernelConfig = {\n  kernelName: LinSpace,\n  backendName: 'cpu',\n  kernelFunc: linSpace as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {TypedArray, util} from '@tensorflow/tfjs-core';\n\nexport function linSpaceImpl(\n    start: number, stop: number, num: number): TypedArray {\n  const step = (stop - start) / (num - 1);\n\n  const values = util.makeZerosTypedArray(num, 'float32');\n  values[0] = start;\n  for (let i = 1; i < values.length; i++) {\n    values[i] = values[i - 1] + step;\n  }\n\n  return values;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Log} from '@tensorflow/tfjs-core';\n\nimport {createSimpleUnaryImpl} from '../utils/unary_impl';\nimport {unaryKernelFuncFromImpl} from '../utils/unary_utils';\n\nexport const logImpl = createSimpleUnaryImpl((xi) => Math.log(xi));\nexport const log = unaryKernelFuncFromImpl(Log, logImpl);\n\nexport const logConfig: KernelConfig = {\n  kernelName: Log,\n  backendName: 'cpu',\n  kernelFunc: log,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Log1p} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nexport const log1p = unaryKernelFunc(Log1p, (xi) => Math.log1p(xi));\n\nexport const log1pConfig: KernelConfig = {\n  kernelName: Log1p,\n  backendName: 'cpu',\n  kernelFunc: log1p,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, LogicalAnd} from '@tensorflow/tfjs-core';\n\nimport {createSimpleBinaryKernelImpl} from '../utils/binary_impl';\nimport {binaryKernelFunc} from '../utils/binary_utils';\n\nexport const logicalAndImpl =\n    createSimpleBinaryKernelImpl((a: number, b: number) => a && b);\nexport const logicalAnd = binaryKernelFunc(\n    LogicalAnd, logicalAndImpl, null /* complexImpl */, 'bool');\n\nexport const logicalAndConfig: KernelConfig = {\n  kernelName: LogicalAnd,\n  backendName: 'cpu',\n  kernelFunc: logicalAnd\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, LogicalNot} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nexport const logicalNot =\n    unaryKernelFunc(LogicalNot, (xi) => xi ? 0 : 1, 'bool');\n\nexport const logicalNotConfig: KernelConfig = {\n  kernelName: LogicalNot,\n  backendName: 'cpu',\n  kernelFunc: logicalNot,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, LogicalOr} from '@tensorflow/tfjs-core';\n\nimport {createSimpleBinaryKernelImpl} from '../utils/binary_impl';\nimport {binaryKernelFunc} from '../utils/binary_utils';\n\nexport const logicalOrImpl =\n    createSimpleBinaryKernelImpl((a: number, b: number) => a || b);\nexport const logicalOr =\n    binaryKernelFunc(LogicalOr, logicalOrImpl, null /* complexImpl */, 'bool');\n\nexport const logicalOrConfig: KernelConfig = {\n  kernelName: LogicalOr,\n  backendName: 'cpu',\n  kernelFunc: logicalOr\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, LRN, LRNAttrs, LRNInputs, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function lRN(\n    args: {inputs: LRNInputs, backend: MathBackendCPU, attrs: LRNAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {depthRadius, bias, alpha, beta} = attrs;\n\n  assertNotComplex(x, 'LRN');\n\n  const channels = x.shape[3];\n  const maxD = channels - 1;\n  const xValues = backend.data.get(x.dataId).values as TypedArray;\n  const size = util.sizeFromShape(x.shape);\n  const result = new Float32Array(size);\n\n  function sumAcrossChannels(offset: number) {\n    const currentChannel = offset % channels;\n    let beginSumOffset =\n        offset - currentChannel + Math.max(0, currentChannel - depthRadius);\n    const endSumOffset =\n        offset - currentChannel + Math.min(currentChannel + depthRadius, maxD);\n\n    let sum = 0.0;\n    for (; beginSumOffset <= endSumOffset; beginSumOffset++) {\n      const z = xValues[beginSumOffset];\n      sum += z * z;\n    }\n    return sum;\n  }\n\n  for (let offset = 0; offset < size; offset++) {\n    const sum = sumAcrossChannels(offset);\n    const val = xValues[offset] * Math.pow(bias + alpha * sum, -beta);\n    result[offset] = val;\n  }\n\n  return backend.makeTensorInfo(x.shape, x.dtype, result);\n}\n\nexport const lRNConfig: KernelConfig = {\n  kernelName: LRN,\n  backendName: 'cpu',\n  kernelFunc: lRN as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, LRNGrad, LRNGradAttrs, LRNGradInputs, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function lRNGrad(\n    args:\n        {inputs: LRNGradInputs, backend: MathBackendCPU, attrs: LRNGradAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x, y, dy} = inputs;\n  const {depthRadius, bias, alpha, beta} = attrs;\n\n  assertNotComplex(dy, 'LRNGrad');\n\n  const dySize = util.sizeFromShape(dy.shape);\n\n  const channels = dy.shape[3];\n  const dyValues = backend.data.get(dy.dataId).values as TypedArray;\n  const xValues = backend.data.get(x.dataId).values as TypedArray;\n  const yValues = backend.data.get(y.dataId).values as TypedArray;\n  const result = new Float32Array(dySize);\n  const size = dySize;\n\n  for (let offset = 0; offset < size; offset++) {\n    const currentChannel = offset % channels;\n    const depthBegin =\n        (offset - currentChannel) + Math.max(0, currentChannel - depthRadius);\n    const depthEnd = (offset - currentChannel) +\n        Math.min(channels, currentChannel + depthRadius + 1);\n\n    let norm = 0;\n    for (let k = depthBegin; k < depthEnd; k++) {\n      norm += Math.pow(xValues[k], 2);\n    }\n    norm = alpha * norm + bias;\n\n    for (let k = depthBegin; k < depthEnd; k++) {\n      let dyi = -2 * alpha * beta * xValues[k] * yValues[offset] / norm;\n      if (offset === k) {\n        dyi += Math.pow(norm, -beta);\n      }\n      dyi *= dyValues[offset];\n      result[k] += dyi;\n    }\n  }\n\n  return backend.makeTensorInfo(dy.shape, x.dtype, result);\n}\n\nexport const lRNGradConfig: KernelConfig = {\n  kernelName: LRNGrad,\n  backendName: 'cpu',\n  kernelFunc: lRNGrad as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelFunc, Max, MaxAttrs, MaxInputs, TensorInfo} from '@tensorflow/tfjs-core';\nimport {backend_util, KernelConfig} from '@tensorflow/tfjs-core';\nimport {TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nimport {maxImpl} from './Max_impl';\nimport {transposeImpl} from './Transpose_impl';\n\nexport function max(\n    args: {inputs: MaxInputs, backend: MathBackendCPU, attrs: MaxAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {reductionIndices, keepDims} = attrs;\n  const cpuBackend = backend;\n  let xShape = x.shape;\n  const xRank = xShape.length;\n\n  const origAxes = util.parseAxisParam(reductionIndices, xShape);\n  let axes = origAxes;\n  const permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n  let xVals = cpuBackend.data.get(x.dataId).values as TypedArray;\n  if (permutedAxes != null) {\n    const newShape: number[] = new Array(xRank);\n    for (let i = 0; i < newShape.length; i++) {\n      newShape[i] = xShape[permutedAxes[i]];\n    }\n\n    xVals = transposeImpl(xVals, xShape, x.dtype, permutedAxes, newShape);\n    axes = backend_util.getInnerMostAxes(axes.length, xRank);\n\n    xShape = newShape;\n  }\n\n  assertNotComplex(x, 'max');\n  backend_util.assertAxesAreInnerMostDims('max', axes, xRank);\n  const [maxOutShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(xShape, axes);\n\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const result = maxImpl(xVals, reduceSize, maxOutShape, x.dtype);\n  const dataId = cpuBackend.write(result, maxOutShape, x.dtype);\n\n  let outShape = maxOutShape;\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(maxOutShape, origAxes);\n    outShape = newShape;\n  }\n\n  return {dataId, shape: outShape, dtype: x.dtype};\n}\n\nexport const maxConfig: KernelConfig = {\n  kernelName: Max,\n  backendName: 'cpu',\n  kernelFunc: max as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, NumericDataType, TypedArray, util} from '@tensorflow/tfjs-core';\n\nexport function maxImpl(\n    aVals: TypedArray, reduceSize: number, outShape: number[],\n    dtype: DataType): TypedArray {\n  const vals = util.getTypedArrayFromDType(\n      dtype as NumericDataType, util.sizeFromShape(outShape));\n\n  for (let i = 0; i < vals.length; ++i) {\n    const offset = i * reduceSize;\n    let max = aVals[offset];\n    for (let j = 0; j < reduceSize; ++j) {\n      const value = aVals[offset + j];\n      if (Number.isNaN(value) ||\n          value > max) {  // comparison with NaN always return false\n        max = value;\n      }\n    }\n    vals[i] = max;\n  }\n  return vals;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Maximum} from '@tensorflow/tfjs-core';\n\nimport {createSimpleBinaryKernelImpl} from '../utils/binary_impl';\nimport {binaryKernelFunc} from '../utils/binary_utils';\n\nexport const maximumImpl = createSimpleBinaryKernelImpl(\n    ((aValue, bValue) => Math.max(aValue as number, bValue as number)));\nexport const maximum = binaryKernelFunc(Maximum, maximumImpl);\n\nexport const maximumConfig: KernelConfig = {\n  kernelName: Maximum,\n  backendName: 'cpu',\n  kernelFunc: maximum\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {backend_util, KernelConfig, KernelFunc, MaxPool, MaxPoolAttrs, MaxPoolInputs, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\nimport {pool} from '../utils/pool_utils';\nimport {identity} from './Identity';\n\nexport function maxPool(\n    args:\n        {inputs: MaxPoolInputs, backend: MathBackendCPU, attrs: MaxPoolAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  assertNotComplex(x, 'maxPool');\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\n  const dilations = 1;\n\n  util.assert(\n      backend_util.eitherStridesOrDilationsAreOne(strides, dilations),\n      () => 'Error in maxPool: Either strides or dilations must be 1. ' +\n          `Got strides ${strides} and dilations '${dilations}'`);\n\n  const convInfo = backend_util.computePool2DInfo(\n      x.shape as [number, number, number, number], filterSize, strides,\n      dilations, pad, dimRoundingMode);\n  let res: TensorInfo;\n\n  if (convInfo.filterWidth === 1 && convInfo.filterHeight === 1 &&\n      util.arraysEqual(convInfo.inShape, convInfo.outShape)) {\n    res = identity({inputs: {x}, backend});\n  } else {\n    const xValues = backend.data.get(x.dataId).values as TypedArray;\n    const strides = util.computeStrides(x.shape);\n    const buffer = pool(xValues, x.shape, x.dtype, strides, convInfo, 'max');\n    res = backend.makeTensorInfo(\n        convInfo.outShape, x.dtype, buffer.values as TypedArray);\n  }\n  return res;\n}\n\nexport const maxPoolConfig: KernelConfig = {\n  kernelName: MaxPool,\n  backendName: 'cpu',\n  kernelFunc: maxPool as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, MaxPool3D, MaxPool3DAttrs, MaxPool3DInputs, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\nimport {pool3d} from '../utils/pool_utils';\n\nexport function maxPool3D(args: {\n  inputs: MaxPool3DInputs,\n  backend: MathBackendCPU,\n  attrs: MaxPool3DAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {filterSize, strides, pad, dimRoundingMode, dataFormat} = attrs;\n\n  assertNotComplex(x, 'maxPool3d');\n\n  const convInfo = backend_util.computePool3DInfo(\n      x.shape as [number, number, number, number, number], filterSize, strides,\n      1 /* dilations */, pad, dimRoundingMode, dataFormat);\n\n  const xValues = backend.data.get(x.dataId).values as TypedArray;\n  const outBuf = pool3d(\n      xValues, x.shape, x.dtype, util.computeStrides(x.shape), convInfo, 'max');\n\n  return backend.makeTensorInfo(outBuf.shape, 'float32', outBuf.values);\n}\n\nexport const maxPool3DConfig: KernelConfig = {\n  kernelName: MaxPool3D,\n  backendName: 'cpu',\n  kernelFunc: maxPool3D as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, buffer, KernelConfig, KernelFunc, MaxPool3DGrad, MaxPool3DGradAttrs, MaxPool3DGradInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\nimport {maxPool3dPositions} from '../utils/pool_utils';\n\nexport function maxPool3DGrad(args: {\n  inputs: MaxPool3DGradInputs,\n  backend: MathBackendCPU,\n  attrs: MaxPool3DGradAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {dy, input} = inputs;\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\n\n  assertNotComplex([dy, input], 'maxPool3DGrad');\n\n  const convInfo = backend_util.computePool3DInfo(\n      input.shape as [number, number, number, number, number], filterSize,\n      strides, 1 /* dilations */, pad, dimRoundingMode);\n\n  const inputBuf = backend.bufferSync(input);\n  const maxPosBuf = maxPool3dPositions(inputBuf, convInfo);\n  const strideDepth = convInfo.strideDepth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const dilationDepth = convInfo.dilationDepth;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const effectiveFilterDepth = convInfo.effectiveFilterDepth;\n  const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n  const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n  const padFront = effectiveFilterDepth - 1 - convInfo.padInfo.front;\n  const padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n  const padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n  const dx = buffer(input.shape, 'float32');\n\n  const dyBuf = backend.bufferSync(dy);\n\n  for (let batch = 0; batch < convInfo.batchSize; ++batch) {\n    for (let channel = 0; channel < convInfo.inChannels; ++channel) {\n      for (let dxDepth = 0; dxDepth < convInfo.inDepth; ++dxDepth) {\n        for (let dxRow = 0; dxRow < convInfo.inHeight; ++dxRow) {\n          for (let dxCol = 0; dxCol < convInfo.inWidth; ++dxCol) {\n            // Shader code begins\n            const dyDepthCorner = dxDepth - padFront;\n            const dyRowCorner = dxRow - padTop;\n            const dyColCorner = dxCol - padLeft;\n            let dotProd = 0;\n            for (let wDepth = 0; wDepth < effectiveFilterDepth;\n                 wDepth += dilationDepth) {\n              const dyDepth = (dyDepthCorner + wDepth) / strideDepth;\n              if (dyDepth < 0 || dyDepth >= convInfo.outDepth ||\n                  Math.floor(dyDepth) !== dyDepth) {\n                continue;\n              }\n              for (let wRow = 0; wRow < effectiveFilterHeight;\n                   wRow += dilationHeight) {\n                const dyRow = (dyRowCorner + wRow) / strideHeight;\n                if (dyRow < 0 || dyRow >= convInfo.outHeight ||\n                    Math.floor(dyRow) !== dyRow) {\n                  continue;\n                }\n                for (let wCol = 0; wCol < effectiveFilterWidth;\n                     wCol += dilationWidth) {\n                  const dyCol = (dyColCorner + wCol) / strideWidth;\n                  if (dyCol < 0 || dyCol >= convInfo.outWidth ||\n                      Math.floor(dyCol) !== dyCol) {\n                    continue;\n                  }\n\n                  const maxPos = effectiveFilterDepth * effectiveFilterHeight *\n                          effectiveFilterWidth -\n                      1 -\n                      (maxPosBuf.get(batch, dyDepth, dyRow, dyCol, channel) as\n                       number);\n                  const curPos =\n                      wDepth * effectiveFilterHeight * effectiveFilterWidth +\n                      wRow * effectiveFilterWidth + wCol;\n\n                  const mask = maxPos === curPos ? 1 : 0;\n                  if (mask === 0) {\n                    continue;\n                  }\n\n                  const pixel =\n                      dyBuf.get(batch, dyDepth, dyRow, dyCol, channel);\n                  dotProd += pixel * mask;\n                }\n              }\n            }\n            dx.set(dotProd, batch, dxDepth, dxRow, dxCol, channel);\n          }\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(dx.shape, dx.dtype, dx.values);\n}\n\nexport const maxPool3DGradConfig: KernelConfig = {\n  kernelName: MaxPool3DGrad,\n  backendName: 'cpu',\n  kernelFunc: maxPool3DGrad as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {backend_util, buffer, KernelConfig, KernelFunc, MaxPoolGrad, MaxPoolGradAttrs, MaxPoolGradInputs, Rank, TensorInfo, TypedArray} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\nimport {maxPoolPositions} from '../utils/pool_utils';\n\nexport function maxPoolGrad(args: {\n  inputs: MaxPoolGradInputs,\n  backend: MathBackendCPU,\n  attrs: MaxPoolGradAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {dy, input, output} = inputs;\n  const x = input;\n  assertNotComplex([input, output], 'maxPoolGrad');\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\n\n  const convInfo = backend_util.computePool2DInfo(\n      x.shape as [number, number, number, number], filterSize, strides,\n      1 /* dilations */, pad, dimRoundingMode);\n  const xValues = backend.data.get(x.dataId).values as TypedArray;\n  const maxPosBuf = buffer(\n      convInfo.outShape, x.dtype,\n      maxPoolPositions(xValues, x.shape, x.dtype, convInfo).values);\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n  const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n  const padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n  const padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n  const dx =\n      buffer<Rank.R4>(x.shape as [number, number, number, number], 'float32');\n\n  const dyData = backend.data.get(dy.dataId).values as Float32Array;\n  const dyBuf = buffer<Rank.R4>(\n      dy.shape as [number, number, number, number], 'float32', dyData);\n\n  for (let b = 0; b < convInfo.batchSize; ++b) {\n    for (let d = 0; d < convInfo.inChannels; ++d) {\n      for (let dxR = 0; dxR < convInfo.inHeight; ++dxR) {\n        for (let dxC = 0; dxC < convInfo.inWidth; ++dxC) {\n          // Shader code begins.\n          const dyRCorner = dxR - padTop;\n          const dyCCorner = dxC - padLeft;\n          let dotProd = 0;\n          for (let wR = 0; wR < effectiveFilterHeight; wR += dilationHeight) {\n            const dyR = (dyRCorner + wR) / strideHeight;\n            if (dyR < 0 || dyR >= convInfo.outHeight ||\n                Math.floor(dyR) !== dyR) {\n              continue;\n            }\n            for (let wC = 0; wC < effectiveFilterWidth; wC += dilationWidth) {\n              const dyC = (dyCCorner + wC) / strideWidth;\n              if (dyC < 0 || dyC >= convInfo.outWidth ||\n                  Math.floor(dyC) !== dyC) {\n                continue;\n              }\n              const maxPos = effectiveFilterHeight * effectiveFilterWidth - 1 -\n                  (maxPosBuf.get(b, dyR, dyC, d) as number);\n              const curPos = wR * effectiveFilterWidth + wC;\n\n              const mask = maxPos === curPos ? 1 : 0;\n              if (mask === 0) {\n                continue;\n              }\n\n              const pixel = dyBuf.get(b, dyR, dyC, d);\n              dotProd += pixel * mask;\n            }\n          }\n          dx.set(dotProd, b, dxR, dxC, d);\n        }\n      }\n    }\n  }\n  return backend.makeTensorInfo(dx.shape, dx.dtype, dx.values);\n}\n\nexport const maxPoolGradConfig: KernelConfig = {\n  kernelName: MaxPoolGrad,\n  backendName: 'cpu',\n  kernelFunc: maxPoolGrad as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {MaxPoolWithArgmax, MaxPoolWithArgmaxAttrs, MaxPoolWithArgmaxInputs} from '@tensorflow/tfjs-core';\nimport {backend_util, KernelConfig, TypedArray} from '@tensorflow/tfjs-core';\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nimport {maxPoolWithArgmaxImpl} from './MaxPoolWithArgmax_impl';\n\nexport const maxPoolWithArgmaxConfig: KernelConfig = {\n  kernelName: MaxPoolWithArgmax,\n  backendName: 'cpu',\n  kernelFunc: ({inputs, attrs, backend}) => {\n    const {x} = inputs as MaxPoolWithArgmaxInputs;\n    const {filterSize, strides, pad, includeBatchInIndex} =\n        attrs as {} as MaxPoolWithArgmaxAttrs;\n    const cpuBackend = backend as MathBackendCPU;\n    assertNotComplex(x, 'MaxPoolWithArgmax');\n\n    const values = cpuBackend.data.get(x.dataId).values as TypedArray;\n    const convInfo = backend_util.computePool2DInfo(\n        x.shape as [number, number, number, number], filterSize, strides,\n        [1, 1], pad);\n    const [pooled, indexes] = maxPoolWithArgmaxImpl(\n        values, x.shape, x.dtype, includeBatchInIndex, convInfo);\n\n    const pooledDataId =\n        cpuBackend.write(pooled as Float32Array, convInfo.outShape, x.dtype);\n    const indexesDataId =\n        cpuBackend.write(indexes as Int32Array, convInfo.outShape, x.dtype);\n    return [\n      {dataId: pooledDataId, shape: convInfo.outShape, dtype: x.dtype},\n      {dataId: indexesDataId, shape: convInfo.outShape, dtype: 'int32'}\n    ];\n  }\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {backend_util, DataType, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {maxPoolPositions, pool} from '../utils/pool_utils';\nexport function maxPoolWithArgmaxImpl(\n    xValues: TypedArray, xShape: number[], dtype: DataType,\n    includeBatchInIndex: boolean, convInfo: backend_util.Conv2DInfo) {\n  const strides = util.computeStrides(xShape);\n  const maxPools = pool(xValues, xShape, dtype, strides, convInfo, 'max');\n  const maxPositions = maxPoolPositions(\n      xValues, xShape, dtype, convInfo, true, includeBatchInIndex);\n\n  return [maxPools.values, maxPositions.values];\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Mean, MeanAttrs, MeanInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {cast} from './Cast';\nimport {div} from './RealDiv';\nimport {sum} from './Sum';\n\nexport function mean(\n    args: {inputs: MeanInputs, backend: MathBackendCPU, attrs: MeanAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {axis, keepDims} = attrs;\n\n  const axes = util.parseAxisParam(axis, x.shape);\n  const shapes = backend_util.computeOutAndReduceShapes(x.shape, axes);\n  const reduceShape = shapes[1];\n  const reduceSize = util.sizeFromShape(reduceShape);\n  const toDispose = [];\n  const reduceSizeScalar =\n      backend.makeTensorInfo([], 'float32', new Float32Array([reduceSize]));\n  toDispose.push(reduceSizeScalar);\n\n  const $x = cast({inputs: {x}, backend, attrs: {dtype: 'float32'}});\n  toDispose.push($x);\n\n  const res =\n      div({inputs: {a: $x, b: reduceSizeScalar}, backend}) as TensorInfo;\n  toDispose.push(res);\n\n  const result = sum({inputs: {x: res}, backend, attrs: {axis, keepDims}});\n\n  toDispose.forEach(t => backend.disposeIntermediateTensorInfo(t));\n\n  return result;\n}\n\nexport const meanConfig: KernelConfig = {\n  kernelName: Mean,\n  backendName: 'cpu',\n  kernelFunc: mean as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Min, MinAttrs, MinInputs, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\nimport {reshape} from './Reshape';\nimport {transpose} from './Transpose';\n\nexport function min(\n    args: {inputs: MinInputs, backend: MathBackendCPU, attrs: MinAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {axis, keepDims} = attrs;\n\n  assertNotComplex(x, 'min');\n\n  const origAxes = util.parseAxisParam(axis, x.shape);\n  let axes = origAxes;\n  const permutedAxes = backend_util.getAxesPermutation(axes, x.shape.length);\n  let $x = x;\n  if (permutedAxes != null) {\n    $x = transpose({inputs: {x}, backend, attrs: {perm: permutedAxes}});\n    axes = backend_util.getInnerMostAxes(axes.length, x.shape.length);\n  }\n\n  backend_util.assertAxesAreInnerMostDims('min', axes, $x.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes($x.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n  const vals = util.makeZerosTypedArray(util.sizeFromShape(outShape), $x.dtype);\n\n  const aVals = backend.data.get($x.dataId).values as TypedArray;\n  for (let i = 0; i < vals.length; ++i) {\n    const offset = i * reduceSize;\n    let min = aVals[offset];\n    for (let j = 0; j < reduceSize; ++j) {\n      const value = aVals[offset + j];\n      if (Number.isNaN(value) ||\n          value < min) {  // comparison with NaN always return false\n        min = value;\n      }\n    }\n    vals[i] = min;\n  }\n\n  if (permutedAxes != null) {\n    backend.disposeIntermediateTensorInfo($x);\n  }\n\n  const result = backend.makeTensorInfo(outShape, $x.dtype, vals);\n\n  if (keepDims) {\n    const expandedShape = backend_util.expandShapeToKeepDim(outShape, origAxes);\n    const reshapedResult =\n        reshape({inputs: {x: result}, backend, attrs: {shape: expandedShape}});\n\n    backend.disposeIntermediateTensorInfo(result);\n\n    return reshapedResult;\n  }\n\n  return result;\n}\n\nexport const minConfig: KernelConfig = {\n  kernelName: Min,\n  backendName: 'cpu',\n  kernelFunc: min as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Minimum} from '@tensorflow/tfjs-core';\n\nimport {createSimpleBinaryKernelImpl} from '../utils/binary_impl';\nimport {binaryKernelFunc} from '../utils/binary_utils';\n\nexport const minimumImpl = createSimpleBinaryKernelImpl(\n    ((aValue, bValue) => Math.min(aValue as number, bValue as number)));\nexport const minimum = binaryKernelFunc(Minimum, minimumImpl);\n\nexport const minimumConfig: KernelConfig = {\n  kernelName: Minimum,\n  backendName: 'cpu',\n  kernelFunc: minimum\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, MirrorPad, MirrorPadAttrs, MirrorPadInputs, NumericDataType, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function mirrorPad(args: {\n  inputs: MirrorPadInputs,\n  backend: MathBackendCPU,\n  attrs: MirrorPadAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {paddings, mode} = attrs;\n\n  assertNotComplex(x, 'mirrorPad');\n\n  const outShape = paddings.map(\n      (p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\n\n  const start = paddings.map(p => p[0]);\n  const end = paddings.map((p, i) => p[0] + x.shape[i]);\n  const offset = mode === 'reflect' ? 0 : 1;\n\n  const xVals = backend.data.get(x.dataId).values as TypedArray;\n  const xRank = x.shape.length;\n  const xStrides = util.computeStrides(x.shape);\n\n  const resultSize = util.sizeFromShape(outShape);\n  const resultRank = outShape.length;\n  const resultStrides = util.computeStrides(outShape);\n  const resVals =\n      util.getTypedArrayFromDType(x.dtype as NumericDataType, resultSize);\n\n  for (let i = 0; i < resultSize; i++) {\n    let coords = util.indexToLoc(i, resultRank, resultStrides);\n    for (let i = 0; i < resultRank; i++) {\n      if (coords[i] < start[i]) {\n        coords[i] = start[i] * 2 - coords[i] - offset;\n      } else if (coords[i] >= end[i]) {\n        coords[i] = (end[i] - 1) * 2 - coords[i] + offset;\n      }\n    }\n    coords = coords.map((c, i) => c - start[i]);\n\n    const inIndex = util.locToIndex(coords, xRank, xStrides);\n\n    resVals[i] = xVals[inIndex];\n  }\n\n  const outId = backend.write(resVals, outShape, x.dtype);\n\n  return {dataId: outId, shape: outShape, dtype: x.dtype};\n}\n\nexport const mirrorPadConfig: KernelConfig = {\n  kernelName: MirrorPad,\n  backendName: 'cpu',\n  kernelFunc: mirrorPad as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Mod} from '@tensorflow/tfjs-core';\n\nimport {createSimpleBinaryKernelImpl} from '../utils/binary_impl';\nimport {binaryKernelFunc} from '../utils/binary_utils';\n\nexport const modImpl =\n    createSimpleBinaryKernelImpl(((aValue: number, bValue: number) => {\n      const rem = aValue % bValue;\n      if ((aValue < 0 && bValue < 0) || (aValue >= 0 && bValue >= 0)) {\n        return rem;\n      } else {\n        return (rem + bValue) % bValue;\n      }\n    }));\n\nexport const mod = binaryKernelFunc(Mod, modImpl);\n\nexport const modConfig: KernelConfig = {\n  kernelName: Mod,\n  backendName: 'cpu',\n  kernelFunc: mod\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Softmax, SoftmaxAttrs, SoftmaxInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nimport {exp} from './Exp';\nimport {max} from './Max';\nimport {div} from './RealDiv';\nimport {reshape} from './Reshape';\nimport {sub} from './Sub';\nimport {sum} from './Sum';\n\nexport function softmax(\n    args:\n        {inputs: SoftmaxInputs, backend: MathBackendCPU, attrs: SoftmaxAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {logits} = inputs;\n  const {dim} = attrs;\n\n  const logitsRank = logits.shape.length;\n\n  let $dim = dim;\n  if ($dim === -1) {\n    $dim = logitsRank - 1;\n  }\n  if ($dim !== logitsRank - 1) {\n    throw Error(\n        'Softmax along a non-last dimension is not yet supported. ' +\n        `Logits was rank ${logitsRank} and dim was ${$dim}`);\n  }\n\n  const axes = util.parseAxisParam([$dim], logits.shape);\n  const maxLogit = max({\n    inputs: {x: logits},\n    backend,\n    attrs: {reductionIndices: axes, keepDims: false}\n  });\n  const expandedShape = backend_util.expandShapeToKeepDim(maxLogit.shape, axes);\n\n  const maxLogitReshaped =\n      reshape({inputs: {x: maxLogit}, backend, attrs: {shape: expandedShape}});\n  const a =\n      sub({inputs: {a: logits, b: maxLogitReshaped}, backend}) as TensorInfo;\n  const b = exp({inputs: {x: a}, backend}) as TensorInfo;\n  const sumExp =\n      sum({inputs: {x: b}, backend, attrs: {axis: axes, keepDims: false}});\n  const sumReshaped =\n      reshape({inputs: {x: sumExp}, backend, attrs: {shape: expandedShape}});\n\n  const result = div({inputs: {a: b, b: sumReshaped}, backend}) as TensorInfo;\n\n  backend.disposeIntermediateTensorInfo(maxLogit);\n  backend.disposeIntermediateTensorInfo(maxLogitReshaped);\n  backend.disposeIntermediateTensorInfo(a);\n  backend.disposeIntermediateTensorInfo(b);\n  backend.disposeIntermediateTensorInfo(sumExp);\n  backend.disposeIntermediateTensorInfo(sumReshaped);\n\n  return result;\n}\n\nexport const softmaxConfig: KernelConfig = {\n  kernelName: Softmax,\n  backendName: 'cpu',\n  kernelFunc: softmax as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Multinomial, MultinomialAttrs, MultinomialInputs, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\nimport * as seedrandom from 'seedrandom';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nimport {softmax} from './Softmax';\n\nexport function multinomial(args: {\n  inputs: MultinomialInputs,\n  backend: MathBackendCPU,\n  attrs: MultinomialAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {logits} = inputs;\n  const {numSamples, seed, normalized} = attrs;\n\n  assertNotComplex(logits, 'multinomial');\n\n  const probabilities = normalized ?\n      logits :\n      softmax({inputs: {logits}, backend, attrs: {dim: -1}});\n\n  const batchSize = probabilities.shape[0];\n  const numEvents = probabilities.shape[1];\n  const probVals = backend.data.get(probabilities.dataId).values as TypedArray;\n  const resShape = [batchSize, numSamples];\n  const resVals =\n      util.makeZerosTypedArray(util.sizeFromShape(resShape), 'int32');\n\n  for (let b = 0; b < batchSize; ++b) {\n    const offset = b * numEvents;\n    // The cdf won't include the last event. It will be implicit if no other\n    // event happened.\n    const cdf = new Float32Array(numEvents - 1);\n    cdf[0] = probVals[offset];\n    for (let event = 1; event < cdf.length; ++event) {\n      cdf[event] = cdf[event - 1] + probVals[offset + event];\n    }\n\n    const random = seedrandom.alea(seed.toString());\n    const outOffset = b * numSamples;\n    for (let sampleId = 0; sampleId < numSamples; ++sampleId) {\n      const r = random();\n\n      // Assume last event happened by default.\n      resVals[outOffset + sampleId] = cdf.length;\n\n      for (let event = 0; event < cdf.length; event++) {\n        if (r < cdf[event]) {\n          resVals[outOffset + sampleId] = event;\n          break;\n        }\n      }\n    }\n  }\n\n  if (!normalized) {\n    backend.disposeIntermediateTensorInfo(probabilities);\n  }\n\n  return backend.makeTensorInfo(resShape, 'int32', resVals);\n}\n\nexport const multinomialConfig: KernelConfig = {\n  kernelName: Multinomial,\n  backendName: 'cpu',\n  kernelFunc: multinomial as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, KernelConfig, KernelFunc, Neg, TensorInfo, TypedArray, UnaryInputs, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\nimport {multiplyImpl} from './Multiply';\n\nexport function negImpl(xVals: TypedArray, xShape: number[], xDtype: DataType):\n    [TypedArray, number[]] {\n  const minusOne =\n      util.createScalarValue(-1 as {} as 'float32', xDtype) as TypedArray;\n  return multiplyImpl([], xShape, minusOne, xVals, xDtype);\n}\n\nexport function neg(args: {inputs: UnaryInputs, backend: MathBackendCPU}):\n    TensorInfo {\n  const {inputs, backend} = args;\n  const {x} = inputs;\n\n  assertNotComplex(x, 'neg');\n\n  const xVals = backend.data.get(x.dataId).values as TypedArray;\n  const [res, newShape] = negImpl(xVals, x.shape, x.dtype);\n\n  return backend.makeTensorInfo(newShape, x.dtype, res);\n}\n\nexport const negConfig: KernelConfig = {\n  kernelName: Neg,\n  backendName: 'cpu',\n  kernelFunc: neg as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {kernel_impls, KernelConfig, KernelFunc, NonMaxSuppressionV3, NonMaxSuppressionV3Attrs, NonMaxSuppressionV3Inputs, TensorInfo, TypedArray} from '@tensorflow/tfjs-core';\n\nconst nonMaxSuppressionV3Impl = kernel_impls.nonMaxSuppressionV3Impl;\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function nonMaxSuppressionV3(args: {\n  inputs: NonMaxSuppressionV3Inputs,\n  backend: MathBackendCPU,\n  attrs: NonMaxSuppressionV3Attrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {boxes, scores} = inputs;\n  const {maxOutputSize, iouThreshold, scoreThreshold} = attrs;\n\n  assertNotComplex(boxes, 'NonMaxSuppression');\n\n  const boxesVals = backend.data.get(boxes.dataId).values as TypedArray;\n  const scoresVals = backend.data.get(scores.dataId).values as TypedArray;\n\n  const {selectedIndices} = nonMaxSuppressionV3Impl(\n      boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold);\n\n  return backend.makeTensorInfo(\n      [selectedIndices.length], 'int32', new Int32Array(selectedIndices));\n}\n\nexport const nonMaxSuppressionV3Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV3,\n  backendName: 'cpu',\n  kernelFunc: nonMaxSuppressionV3 as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {kernel_impls, KernelConfig, KernelFunc, NonMaxSuppressionV4, NonMaxSuppressionV4Attrs, NonMaxSuppressionV4Inputs, TensorInfo, TypedArray} from '@tensorflow/tfjs-core';\n\nconst nonMaxSuppressionV4Impl = kernel_impls.nonMaxSuppressionV4Impl;\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function nonMaxSuppressionV4(args: {\n  inputs: NonMaxSuppressionV4Inputs,\n  backend: MathBackendCPU,\n  attrs: NonMaxSuppressionV4Attrs\n}): [TensorInfo, TensorInfo] {\n  const {inputs, backend, attrs} = args;\n  const {boxes, scores} = inputs;\n  const {maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize} =\n      attrs;\n\n  assertNotComplex(boxes, 'NonMaxSuppressionPadded');\n\n  const boxesVals = backend.data.get(boxes.dataId).values as TypedArray;\n  const scoresVals = backend.data.get(scores.dataId).values as TypedArray;\n\n  const {selectedIndices, validOutputs} = nonMaxSuppressionV4Impl(\n      boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold,\n      padToMaxOutputSize);\n\n  return [\n    backend.makeTensorInfo(\n        [selectedIndices.length], 'int32', new Int32Array(selectedIndices)),\n    backend.makeTensorInfo([], 'int32', new Int32Array([validOutputs]))\n  ];\n}\nexport const nonMaxSuppressionV4Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV4,\n  backendName: 'cpu',\n  kernelFunc: nonMaxSuppressionV4 as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {kernel_impls, KernelConfig, KernelFunc, NonMaxSuppressionV5, NonMaxSuppressionV5Attrs, NonMaxSuppressionV5Inputs, TensorInfo, TypedArray} from '@tensorflow/tfjs-core';\n\nconst nonMaxSuppressionV5Impl = kernel_impls.nonMaxSuppressionV5Impl;\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function nonMaxSuppressionV5(args: {\n  inputs: NonMaxSuppressionV5Inputs,\n  backend: MathBackendCPU,\n  attrs: NonMaxSuppressionV5Attrs\n}): [TensorInfo, TensorInfo] {\n  const {inputs, backend, attrs} = args;\n  const {boxes, scores} = inputs;\n  const {maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma} = attrs;\n\n  assertNotComplex(boxes, 'NonMaxSuppressionWithScore');\n\n  const boxesVals = backend.data.get(boxes.dataId).values as TypedArray;\n  const scoresVals = backend.data.get(scores.dataId).values as TypedArray;\n\n  const maxOutputSizeVal = maxOutputSize;\n  const iouThresholdVal = iouThreshold;\n  const scoreThresholdVal = scoreThreshold;\n  const softNmsSigmaVal = softNmsSigma;\n\n  const {selectedIndices, selectedScores} = nonMaxSuppressionV5Impl(\n      boxesVals, scoresVals, maxOutputSizeVal, iouThresholdVal,\n      scoreThresholdVal, softNmsSigmaVal);\n\n  return [\n    backend.makeTensorInfo(\n        [selectedIndices.length], 'int32', new Int32Array(selectedIndices)),\n    backend.makeTensorInfo(\n        [selectedScores.length], 'float32', new Float32Array(selectedScores))\n  ];\n}\n\nexport const nonMaxSuppressionV5Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV5,\n  backendName: 'cpu',\n  kernelFunc: nonMaxSuppressionV5 as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, NotEqual} from '@tensorflow/tfjs-core';\n\nimport {createSimpleBinaryKernelImpl} from '../utils/binary_impl';\nimport {binaryKernelFunc} from '../utils/binary_utils';\n\nexport const notEqualImpl =\n    createSimpleBinaryKernelImpl(((a, b) => (a !== b) ? 1 : 0));\nexport const notEqual =\n    binaryKernelFunc(NotEqual, notEqualImpl, null /* complexOp */, 'bool');\n\nexport const notEqualConfig: KernelConfig = {\n  kernelName: NotEqual,\n  backendName: 'cpu',\n  kernelFunc: notEqual\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, OneHot, OneHotAttrs, OneHotInputs, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function oneHot(\n    args: {inputs: OneHotInputs, backend: MathBackendCPU, attrs: OneHotAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {indices} = inputs;\n  const {depth, onValue, offValue} = attrs;\n\n  assertNotComplex(indices, 'oneHot');\n\n  const indicesSize = util.sizeFromShape(indices.shape);\n\n  const res = new Float32Array(indicesSize * depth);\n  res.fill(offValue);\n  const indicesVal = backend.data.get(indices.dataId).values as TypedArray;\n\n  for (let event = 0; event < indicesSize; ++event) {\n    if (indicesVal[event] >= 0 && indicesVal[event] < depth) {\n      res[event * depth + indicesVal[event]] = onValue;\n    }\n  }\n\n  return backend.makeTensorInfo([...indices.shape, depth], 'int32', res);\n}\n\nexport const oneHotConfig: KernelConfig = {\n  kernelName: OneHot,\n  backendName: 'cpu',\n  kernelFunc: oneHot as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, ZerosLike, ZerosLikeInputs} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nimport {complex} from './Complex';\nimport {fill} from './Fill';\nimport {imag} from './Imag';\nimport {real} from './Real';\n\nexport function zerosLike(\n    args: {inputs: ZerosLikeInputs, backend: MathBackendCPU}): TensorInfo {\n  const {inputs, backend} = args;\n  const {x} = inputs;\n\n  if (x.dtype === 'string') {\n    throw new Error('zerosLike is not supported for string tensors');\n  } else if (x.dtype === 'complex64') {\n    const realPart = real({inputs: {input: x}, backend});\n    const r = zerosLike({inputs: {x: realPart}, backend});\n    const imagPart = imag({inputs: {input: x}, backend});\n    const i = zerosLike({inputs: {x: imagPart}, backend});\n\n    const result = complex({inputs: {real: r, imag: i}, backend});\n\n    backend.disposeIntermediateTensorInfo(realPart);\n    backend.disposeIntermediateTensorInfo(r);\n    backend.disposeIntermediateTensorInfo(imagPart);\n    backend.disposeIntermediateTensorInfo(i);\n\n    return result;\n  } else {\n    return fill({backend, attrs: {shape: x.shape, value: 0, dtype: x.dtype}});\n  }\n}\n\nexport const zerosLikeConfig: KernelConfig = {\n  kernelName: ZerosLike,\n  backendName: 'cpu',\n  kernelFunc: zerosLike as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, OnesLike, OnesLikeInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {complex} from './Complex';\nimport {fill} from './Fill';\nimport {imag} from './Imag';\nimport {real} from './Real';\nimport {zerosLike} from './ZerosLike';\n\nexport function onesLike(\n    args: {inputs: OnesLikeInputs, backend: MathBackendCPU}): TensorInfo {\n  const {inputs, backend} = args;\n  const {x} = inputs;\n\n  if (x.dtype === 'string') {\n    throw new Error('onesLike is not supported for string tensors');\n  } else if (x.dtype === 'complex64') {\n    const realPart = real({inputs: {input: x}, backend});\n    const r = onesLike({inputs: {x: realPart}, backend});\n    const imagPart = imag({inputs: {input: x}, backend});\n    const i = zerosLike({inputs: {x: imagPart}, backend});\n\n    const result = complex({inputs: {real: r, imag: i}, backend});\n\n    backend.disposeIntermediateTensorInfo(realPart);\n    backend.disposeIntermediateTensorInfo(r);\n    backend.disposeIntermediateTensorInfo(imagPart);\n    backend.disposeIntermediateTensorInfo(i);\n\n    return result;\n  } else {\n    return fill({backend, attrs: {shape: x.shape, value: 1, dtype: x.dtype}});\n  }\n}\n\nexport const onesLikeConfig: KernelConfig = {\n  kernelName: OnesLike,\n  backendName: 'cpu',\n  kernelFunc: onesLike as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Pack, PackAttrs, PackInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {concat} from './Concat';\nimport {expandDims} from './ExpandDims';\n\nexport function pack(\n    args: {inputs: PackInputs, backend: MathBackendCPU, attrs: PackAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {axis} = attrs;\n\n  if (inputs.length === 1) {\n    return expandDims(\n        {inputs: {input: inputs[0]}, backend, attrs: {dim: axis}});\n  }\n\n  const shape = inputs[0].shape;\n  const dtype = inputs[0].dtype;\n\n  inputs.forEach(t => {\n    util.assertShapesMatch(\n        shape, t.shape,\n        'All tensors passed to stack must have matching shapes');\n    util.assert(\n        dtype === t.dtype,\n        () => 'All tensors passed to stack must have matching dtypes');\n  });\n\n  const intermediateTensorInfos: TensorInfo[] = [];\n  const expandedTensors = inputs.map(t => {\n    const expandedT =\n        expandDims({inputs: {input: t}, backend, attrs: {dim: axis}});\n    intermediateTensorInfos.push(expandedT);\n    return expandedT;\n  });\n\n  const result = concat({inputs: expandedTensors, backend, attrs: {axis}});\n\n  intermediateTensorInfos.forEach(\n      t => backend.disposeIntermediateTensorInfo(t));\n\n  return result;\n}\n\nexport const packConfig: KernelConfig = {\n  kernelName: Pack,\n  backendName: 'cpu',\n  kernelFunc: pack as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, NumericDataType, PadV2, PadV2Attrs, PadV2Inputs, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function padV2(\n    args: {inputs: PadV2Inputs, backend: MathBackendCPU, attrs: PadV2Attrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {paddings, constantValue} = attrs;\n\n  assertNotComplex(x, 'pad');\n\n  const outShape = paddings.map(\n      (p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\n\n  const start = paddings.map(p => p[0]);\n\n  const xVals = backend.data.get(x.dataId).values as TypedArray;\n  const xSize = util.sizeFromShape(x.shape);\n  const xRank = x.shape.length;\n  const xStrides = util.computeStrides(x.shape);\n\n  const resultSize = util.sizeFromShape(outShape);\n  const resultRank = outShape.length;\n  const resultStrides = util.computeStrides(outShape);\n  const resVals =\n      util.getTypedArrayFromDType(x.dtype as NumericDataType, resultSize);\n\n  if (constantValue !== 0) {\n    resVals.fill(constantValue);\n  }\n\n  for (let i = 0; i < xSize; i++) {\n    const coords = util.indexToLoc(i, xRank, xStrides);\n    const outCoords = coords.map((c, i) => c + start[i]);\n    const outIndex = util.locToIndex(outCoords, resultRank, resultStrides);\n\n    resVals[outIndex] = xVals[i];\n  }\n\n  const outId = backend.write(resVals, outShape, x.dtype);\n\n  return {dataId: outId, shape: outShape, dtype: x.dtype};\n}\n\nexport const padV2Config: KernelConfig = {\n  kernelName: PadV2,\n  backendName: 'cpu',\n  kernelFunc: padV2 as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Pow} from '@tensorflow/tfjs-core';\n\nimport {createSimpleBinaryKernelImpl} from '../utils/binary_impl';\nimport {binaryKernelFunc} from '../utils/binary_utils';\n\nexport const powImpl =\n    createSimpleBinaryKernelImpl((a: number, b: number) => Math.pow(a, b));\nexport const pow = binaryKernelFunc(Pow, powImpl);\n\nexport const powConfig: KernelConfig = {\n  kernelName: Pow,\n  backendName: 'cpu',\n  kernelFunc: pow\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, DataType, KernelConfig, KernelFunc, Prod, ProdAttrs, ProdInputs, TensorInfo, TypedArray, upcastType, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\nimport {transpose} from './Transpose';\n\nexport function prodImpl(\n    xShape: number[], xDtype: DataType, xVals: TypedArray,\n    reductionAxes: number[]):\n    {outVals: TypedArray, outShape: number[], outDtype: DataType} {\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(xShape, reductionAxes);\n  const outDtype = upcastType(xDtype, 'int32');\n  const outVals = util.makeZerosTypedArray(\n                      util.sizeFromShape(outShape), outDtype) as TypedArray;\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  for (let i = 0; i < outVals.length; ++i) {\n    const offset = i * reduceSize;\n    let prod = 1;\n    for (let j = 0; j < reduceSize; ++j) {\n      prod *= xVals[offset + j];\n    }\n    outVals[i] = prod;\n  }\n\n  return {outVals, outShape, outDtype};\n}\n\nexport function prod(\n    args: {inputs: ProdInputs, backend: MathBackendCPU, attrs: ProdAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {axis, keepDims} = attrs;\n\n  assertNotComplex(x, 'prod');\n\n  const xRank = x.shape.length;\n  const axes = util.parseAxisParam(axis, x.shape);\n\n  const permutation = backend_util.getAxesPermutation(axes, xRank);\n  let reductionAxes = axes;\n  let permutedX = x;\n  const intermediateTensorInfos = [];\n  if (permutation != null) {\n    permutedX = transpose({inputs: {x}, backend, attrs: {perm: permutation}});\n    intermediateTensorInfos.push(permutedX);\n    reductionAxes = backend_util.getInnerMostAxes(reductionAxes.length, xRank);\n  }\n\n  const xVals = backend.data.get(permutedX.dataId).values as TypedArray;\n  const {outVals, outShape, outDtype} =\n      prodImpl(permutedX.shape, permutedX.dtype, xVals, reductionAxes);\n\n  let resultShape = outShape;\n  if (keepDims) {\n    resultShape = backend_util.expandShapeToKeepDim(outShape, axes);\n  }\n\n  intermediateTensorInfos.forEach(\n      t => backend.disposeIntermediateTensorInfo(t));\n\n  return backend.makeTensorInfo(resultShape, outDtype, outVals);\n}\n\nexport const prodConfig: KernelConfig = {\n  kernelName: Prod,\n  backendName: 'cpu',\n  kernelFunc: prod as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Range, RangeAttrs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {rangeImpl} from './Range_impl';\n\nexport function range(args: {backend: MathBackendCPU, attrs: RangeAttrs}):\n    TensorInfo {\n  const {backend, attrs} = args;\n  const {start, stop, dtype, step} = attrs;\n\n  const values = rangeImpl(start, stop, step, dtype);\n  return backend.makeTensorInfo([values.length], dtype, values);\n}\n\nexport const rangeConfig: KernelConfig = {\n  kernelName: Range,\n  backendName: 'cpu',\n  kernelFunc: range as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataTypeMap, util} from '@tensorflow/tfjs-core';\n\nexport function rangeImpl(\n    start: number, stop: number, step: number,\n    dtype: 'float32'|'int32'): DataTypeMap['float32' | 'int32'] {\n  const sameStartStop = start === stop;\n  const increasingRangeNegativeStep = start < stop && step < 0;\n  const decreasingRangePositiveStep = stop < start && step > 1;\n\n  if (sameStartStop || increasingRangeNegativeStep ||\n      decreasingRangePositiveStep) {\n    return util.makeZerosTypedArray(0, dtype);\n  }\n\n  const numElements = Math.abs(Math.ceil((stop - start) / step));\n  const values = util.makeZerosTypedArray(numElements, dtype);\n\n  if (stop < start && step === 1) {\n    // Auto adjust the step's sign if it hasn't been set\n    // (or was set to 1)\n    step = -1;\n  }\n\n  values[0] = start;\n  for (let i = 1; i < values.length; i++) {\n    values[i] = values[i - 1] + step;\n  }\n  return values;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Reciprocal} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nexport const reciprocal = unaryKernelFunc(Reciprocal, (xi) => 1 / xi);\n\nexport const reciprocalConfig: KernelConfig = {\n  kernelName: Reciprocal,\n  backendName: 'cpu',\n  kernelFunc: reciprocal,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, ResizeBilinear, ResizeBilinearAttrs, ResizeBilinearInputs, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function resizeBilinear(args: {\n  inputs: ResizeBilinearInputs,\n  backend: MathBackendCPU,\n  attrs: ResizeBilinearAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {images} = inputs;\n  const {alignCorners, halfPixelCenters, size} = attrs;\n\n  assertNotComplex(images, 'resizeBilinear');\n\n  const imagesStrides = util.computeStrides(images.shape);\n  const [newHeight, newWidth] = size;\n\n  const [batch, oldHeight, oldWidth, numChannels] = images.shape;\n  const xValues = backend.data.get(images.dataId).values as TypedArray;\n  const result = new Float32Array(\n      util.sizeFromShape([batch, newHeight, newWidth, numChannels]));\n\n  const effectiveInputSize: [number, number] = [\n    (alignCorners && newHeight > 1) ? oldHeight - 1 : oldHeight,\n    (alignCorners && newWidth > 1) ? oldWidth - 1 : oldWidth\n  ];\n\n  const effectiveOutputSize: [number, number] = [\n    (alignCorners && newHeight > 1) ? newHeight - 1 : newHeight,\n    (alignCorners && newWidth > 1) ? newWidth - 1 : newWidth\n  ];\n  let outputIdx = 0;\n  const effectiveRowSizeRatio = effectiveInputSize[0] / effectiveOutputSize[0];\n  const effectiveColSizeRatio = effectiveInputSize[1] / effectiveOutputSize[1];\n  for (let b = 0; b < batch; b++) {\n    for (let r = 0; r < newHeight; r++) {\n      let sourceFracRow: number;\n      if (halfPixelCenters) {\n        sourceFracRow = effectiveRowSizeRatio * (r + 0.5) - 0.5;\n      } else {\n        sourceFracRow = effectiveRowSizeRatio * r;\n      }\n\n      const sourceRowFloor = Math.max(0, Math.floor(sourceFracRow));\n      const rowFrac = sourceFracRow - sourceRowFloor;\n      const sourceRowCeil = Math.min(oldHeight - 1, Math.ceil(sourceFracRow));\n      const topRowOffset =\n          b * imagesStrides[0] + sourceRowFloor * imagesStrides[1];\n      const botRowOffset =\n          b * imagesStrides[0] + sourceRowCeil * imagesStrides[1];\n      for (let c = 0; c < newWidth; c++) {\n        let sourceFracCol: number;\n        if (halfPixelCenters) {\n          sourceFracCol = effectiveColSizeRatio * (c + 0.5) - 0.5;\n        } else {\n          sourceFracCol = effectiveColSizeRatio * c;\n        }\n        const sourceColFloor = Math.max(0, Math.floor(sourceFracCol));\n        const colFrac = sourceFracCol - sourceColFloor;\n        const sourceColCeil = Math.min(oldWidth - 1, Math.ceil(sourceFracCol));\n        const topLeftOffest = topRowOffset + sourceColFloor * imagesStrides[2];\n        const botLeftOffset = botRowOffset + sourceColFloor * imagesStrides[2];\n        const topRightOffset = topRowOffset + sourceColCeil * imagesStrides[2];\n        const botRightOffest = botRowOffset + sourceColCeil * imagesStrides[2];\n        for (let d = 0; d < numChannels; d++) {\n          // Begin shader.\n\n          // Compute the fractional index of the source.\n          const topLeft = xValues[topLeftOffest + d];\n          const bottomLeft = xValues[botLeftOffset + d];\n          const topRight = xValues[topRightOffset + d];\n          const bottomRight = xValues[botRightOffest + d];\n\n          const top = topLeft + (topRight - topLeft) * colFrac;\n          const bottom = bottomLeft + (bottomRight - bottomLeft) * colFrac;\n          const newValue = top + (bottom - top) * rowFrac;\n\n          result[outputIdx++] = newValue;\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(\n      [batch, newHeight, newWidth, numChannels], 'float32', result);\n}\n\nexport const resizeBilinearConfig: KernelConfig = {\n  kernelName: ResizeBilinear,\n  backendName: 'cpu',\n  kernelFunc: resizeBilinear as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, ResizeBilinearGrad, ResizeBilinearGradAttrs, ResizeBilinearGradInputs, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function resizeBilinearGrad(args: {\n  inputs: ResizeBilinearGradInputs,\n  backend: MathBackendCPU,\n  attrs: ResizeBilinearGradAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {images, dy} = inputs;\n  const {alignCorners} = attrs;\n\n  assertNotComplex([dy, images], 'resizeBilinearGrad');\n\n  const imagesStrides = util.computeStrides(images.shape);\n\n  const [batch, xHeight, xWidth, depth] = images.shape;\n  const [, yHeight, yWidth] = dy.shape;\n\n  const output = new Float32Array(batch * xHeight * xWidth * depth);\n\n  // In the backwards pass, we want to find the pixels that were generated\n  // for each pixel in the input image the forward pass and add the\n  // corresponding coefficient from dy to the gradient (with some\n  // interpolation).\n\n  const effectiveXSize: [number, number] = [\n    (alignCorners && yHeight > 1) ? xHeight - 1 : xHeight,\n    (alignCorners && yWidth > 1) ? xWidth - 1 : xWidth\n  ];\n\n  const effectiveYSize: [number, number] = [\n    (alignCorners && yHeight > 1) ? yHeight - 1 : yHeight,\n    (alignCorners && yWidth > 1) ? yWidth - 1 : yWidth\n  ];\n\n  const heightScale = effectiveXSize[0] / effectiveYSize[0];\n  const widthScale = effectiveXSize[1] / effectiveYSize[1];\n\n  // Reference implementation\n  // tslint:disable-next-line:max-line-length\n  // https://github.com/tensorflow/tensorflow/blob/3039375c86a5bbc9610c7725dcaa95d635f87ba2/tensorflow/core/kernels/resize_bilinear_op.cc#L275\n  const dyValues = backend.data.get(dy.dataId).values as TypedArray;\n  let offset = 0;\n  for (let b = 0; b < batch; b++) {\n    const bOffset = b * imagesStrides[0];\n    for (let r = 0; r < yHeight; r++) {\n      const dxR = r * heightScale;\n      const topDxRIndex = Math.floor(dxR);\n      const bottomDxRIndex = Math.min(Math.ceil(dxR), xHeight - 1);\n\n      const topDxROffset = bOffset + topDxRIndex * imagesStrides[1];\n      const bottomDxROffset = bOffset + bottomDxRIndex * imagesStrides[1];\n\n      const dxRLerp = dxR - topDxRIndex;\n      const inverseDxRLerp = 1.0 - dxRLerp;\n      for (let c = 0; c < yWidth; c++) {\n        const dxC = c * widthScale;\n        const leftDxCIndex = Math.floor(dxC);\n        const rightDxCIndex = Math.min(Math.ceil(dxC), xWidth - 1);\n        const dxCLerp = dxC - leftDxCIndex;\n        const inverseDxCLerp = 1.0 - dxCLerp;\n\n        const topLeftRCOffset = topDxROffset + leftDxCIndex * imagesStrides[2];\n        const topRightRCOffset =\n            topDxROffset + rightDxCIndex * imagesStrides[2];\n        const bottomLeftRCOffset =\n            bottomDxROffset + leftDxCIndex * imagesStrides[2];\n        const bottomRightRCOffset =\n            bottomDxROffset + rightDxCIndex * imagesStrides[2];\n\n        const inverseDxRLerpTimesInverseDxCLerp =\n            inverseDxRLerp * inverseDxCLerp;\n        const inverseDxRLerpTimesDxCLerp = inverseDxRLerp * dxCLerp;\n        const dxRLerpTimesInverseDxCLerp = dxRLerp * inverseDxCLerp;\n        const dxRLerpTimesDxCLerp = dxRLerp * dxCLerp;\n        for (let d = 0; d < depth; d++) {\n          const dyVal = dyValues[offset++];\n          output[topLeftRCOffset + d] +=\n              dyVal * inverseDxRLerpTimesInverseDxCLerp;\n          output[topRightRCOffset + d] += dyVal * inverseDxRLerpTimesDxCLerp;\n          output[bottomLeftRCOffset + d] += dyVal * dxRLerpTimesInverseDxCLerp;\n          output[bottomRightRCOffset + d] += dyVal * dxRLerpTimesDxCLerp;\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(\n      [batch, xWidth, xHeight, depth], 'float32', output);\n}\n\nexport const resizeBilinearGradConfig: KernelConfig = {\n  kernelName: ResizeBilinearGrad,\n  backendName: 'cpu',\n  kernelFunc: resizeBilinearGrad as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, ResizeNearestNeighbor, ResizeNearestNeighborAttrs, ResizeNearestNeighborInputs, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function resizeNearestNeighbor(args: {\n  inputs: ResizeNearestNeighborInputs,\n  backend: MathBackendCPU,\n  attrs: ResizeNearestNeighborAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {images} = inputs;\n  const {alignCorners, halfPixelCenters, size} = attrs;\n\n  assertNotComplex(images, 'resizeNearestNeighbor');\n\n  const imagesStrides = util.computeStrides(images.shape);\n  const [newHeight, newWidth] = size;\n\n  const [batch, oldHeight, oldWidth, numChannels] = images.shape;\n  const xValues = backend.data.get(images.dataId).values as TypedArray;\n  const output = new Float32Array(batch * newHeight * newWidth * numChannels);\n\n  const effectiveInputSize: [number, number] = [\n    (alignCorners && newHeight > 1) ? oldHeight - 1 : oldHeight,\n    (alignCorners && newWidth > 1) ? oldWidth - 1 : oldWidth\n  ];\n\n  const effectiveOutputSize: [number, number] = [\n    (alignCorners && newHeight > 1) ? newHeight - 1 : newHeight,\n    (alignCorners && newWidth > 1) ? newWidth - 1 : newWidth\n  ];\n\n  const effectiveRowSizeRatio = effectiveInputSize[0] / effectiveOutputSize[0];\n  const effectiveColSizeRatio = effectiveInputSize[1] / effectiveOutputSize[1];\n\n  let outputOffset = 0;\n  for (let b = 0; b < batch; b++) {\n    const batchOffset = b * imagesStrides[0];\n    for (let r = 0; r < newHeight; r++) {\n      const sourceFracRow = halfPixelCenters ?\n          effectiveRowSizeRatio * (r + 0.5) :\n          effectiveRowSizeRatio * r;\n      let sourceNearestRow = Math.min(\n          oldHeight - 1,\n          alignCorners ? Math.round(sourceFracRow) : Math.floor(sourceFracRow));\n      if (halfPixelCenters) {\n        sourceNearestRow = Math.max(0, sourceNearestRow);\n      }\n      const rowOffset = batchOffset + sourceNearestRow * imagesStrides[1];\n      for (let c = 0; c < newWidth; c++) {\n        const sourceFracCol = halfPixelCenters ?\n            effectiveColSizeRatio * (c + 0.5) :\n            effectiveColSizeRatio * c;\n        let sourceNearestCol = Math.min(\n            oldWidth - 1,\n            alignCorners ? Math.round(sourceFracCol) :\n                           Math.floor(sourceFracCol));\n        if (halfPixelCenters) {\n          sourceNearestCol = Math.max(0, sourceNearestCol);\n        }\n        const colOffset = rowOffset + sourceNearestCol * imagesStrides[2];\n        for (let d = 0; d < numChannels; d++) {\n          // Begin shader.\n          // Compute the fractional index of the source.\n          const newVal = xValues[colOffset + d];\n          output[outputOffset++] = newVal;\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(\n      [batch, newHeight, newWidth, numChannels], images.dtype, output);\n}\n\nexport const resizeNearestNeighborConfig: KernelConfig = {\n  kernelName: ResizeNearestNeighbor,\n  backendName: 'cpu',\n  kernelFunc: resizeNearestNeighbor as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, ResizeNearestNeighborGrad, ResizeNearestNeighborGradAttrs, ResizeNearestNeighborGradInputs, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function resizeNearestNeighborGrad(args: {\n  inputs: ResizeNearestNeighborGradInputs,\n  backend: MathBackendCPU,\n  attrs: ResizeNearestNeighborGradAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {images, dy} = inputs;\n  const {alignCorners} = attrs;\n\n  assertNotComplex([dy, images], 'resizeNearestNeighborGrad');\n\n  const imagesStrides = util.computeStrides(images.shape);\n  const dyStrides = util.computeStrides(dy.shape);\n  const [batch, xHeight, xWidth, depth] = images.shape;\n  const [, yHeight, yWidth] = dy.shape;\n\n  const output = new Float32Array(batch * xHeight * xWidth * depth);\n  const dyValues = backend.data.get(dy.dataId).values as TypedArray;\n\n  // In the backwards pass, we want to find the pixels that were generated\n  // for each pixel in the input image the forward pass\n\n  const effectiveXSize: [number, number] = [\n    (alignCorners && yHeight > 1) ? xHeight - 1 : xHeight,\n    (alignCorners && yWidth > 1) ? xWidth - 1 : xWidth\n  ];\n\n  const effectiveYSize: [number, number] = [\n    (alignCorners && yHeight > 1) ? yHeight - 1 : yHeight,\n    (alignCorners && yWidth > 1) ? yWidth - 1 : yWidth\n  ];\n\n  const heightScale = effectiveXSize[0] / effectiveYSize[0];\n  const widthScale = effectiveXSize[1] / effectiveYSize[1];\n\n  const invHeightScale = 1 / heightScale;\n  const invWidthScale = 1 / widthScale;\n\n  // This defines the size of the window of values around a particular\n  // index in dy that we want to search for contributions to dx.\n  const winHeight = (Math.ceil(invHeightScale) * 2) + 2;\n  const winWidth = (Math.ceil(invWidthScale) * 2) + 2;\n\n  // Loop over the output space.\n  for (let b = 0; b < batch; b++) {\n    const batchOffset = b * imagesStrides[0];\n    for (let r = 0; r < xHeight; r++) {\n      const rowOffset = batchOffset + r * imagesStrides[1];\n\n      // Compute bounds for where in dy we will look\n      const startRLerp = Math.floor(r * invHeightScale);\n      const startDyR = Math.floor(startRLerp - (winHeight / 2));\n      for (let c = 0; c < xWidth; c++) {\n        const colOffset = rowOffset + c * imagesStrides[2];\n\n        // Compute bounds for where in dy we will look\n        const startCLerp = Math.floor(c * invWidthScale);\n        const startDyC = Math.floor(startCLerp - (winWidth / 2));\n\n        for (let d = 0; d < depth; d++) {\n          let accum = 0;\n          // loop over dy\n\n          for (let dyRIndex = 0; dyRIndex < winHeight; dyRIndex++) {\n            const dyR = dyRIndex + startDyR;\n            // Guard against the window exceeding the bounds of dy\n            if (dyR < 0 || dyR >= yHeight) {\n              continue;\n            }\n\n            const dyROffset = batchOffset + dyR * dyStrides[1];\n            const sourceFracRow = dyR * heightScale;\n            const sourceNearestRow = Math.min(\n                xHeight - 1,\n                alignCorners ? Math.round(sourceFracRow) :\n                               Math.floor(sourceFracRow));\n            if (r !== sourceNearestRow) {\n              continue;\n            }\n            for (let dyCIndex = 0; dyCIndex < winWidth; dyCIndex++) {\n              const dyC = dyCIndex + startDyC;\n              // Guard against the window exceeding the bounds of dy\n              if (dyC < 0 || dyC >= yWidth) {\n                continue;\n              }\n\n              const dyCOffset = dyROffset + dyC * dyStrides[2];\n              const sourceFracCol = dyC * widthScale;\n              const sourceNearestCol = Math.min(\n                  xWidth - 1,\n                  alignCorners ? Math.round(sourceFracCol) :\n                                 Math.floor(sourceFracCol));\n\n              if (c === sourceNearestCol) {\n                accum += dyValues[dyCOffset + d];\n              }\n            }\n          }\n          output[colOffset + d] = accum;\n        }\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(images.shape, images.dtype, output);\n}\n\nexport const resizeNearestNeighborGradConfig: KernelConfig = {\n  kernelName: ResizeNearestNeighborGrad,\n  backendName: 'cpu',\n  kernelFunc: resizeNearestNeighborGrad as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Reverse, ReverseAttrs, ReverseInputs, TensorBuffer, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\nimport {identity} from './Identity';\n\nexport function reverse(\n    args:\n        {inputs: ReverseInputs, backend: MathBackendCPU, attrs: ReverseAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {dims} = attrs;\n\n  assertNotComplex(x, 'reverse');\n\n  const xRank = x.shape.length;\n\n  const $dims = util.parseAxisParam(dims, x.shape);\n  if (xRank === 0) {\n    return identity({inputs: {x}, backend});\n  }\n\n  const outBuf = new TensorBuffer(x.shape, x.dtype);\n  const xBuf = backend.bufferSync(x);\n\n  for (let i = 0; i < outBuf.size; i++) {\n    const outLoc = outBuf.indexToLoc(i);\n    const inLoc = outLoc.slice();\n    $dims.forEach(d => inLoc[d] = x.shape[d] - 1 - inLoc[d]);\n    outBuf.set(xBuf.get(...inLoc), ...outLoc);\n  }\n\n  return backend.makeTensorInfo(outBuf.shape, outBuf.dtype, outBuf.values);\n}\n\nexport const reverseConfig: KernelConfig = {\n  kernelName: Reverse,\n  backendName: 'cpu',\n  kernelFunc: reverse as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, NumericDataType, TypedArray} from '@tensorflow/tfjs-core';\nimport {backend_util, RotateWithOffset, RotateWithOffsetAttrs, RotateWithOffsetInputs, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nexport const rotateWithOffsetConfig: KernelConfig = {\n  kernelName: RotateWithOffset,\n  backendName: 'cpu',\n  kernelFunc: ({inputs, attrs, backend}) => {\n    const {image} = inputs as RotateWithOffsetInputs;\n    const {radians, fillValue, center} = attrs as {} as RotateWithOffsetAttrs;\n    const cpuBackend = backend as MathBackendCPU;\n\n    const output = util.getTypedArrayFromDType(\n        image.dtype as NumericDataType, util.sizeFromShape(image.shape));\n    const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n\n    const [centerX, centerY] =\n        backend_util.getImageCenter(center, imageHeight, imageWidth);\n    const fullOpacityValue = 255;\n\n    const sinFactor = Math.sin(radians);\n    const cosFactor = Math.cos(radians);\n    const imageVals = cpuBackend.data.get(image.dataId).values as TypedArray;\n\n    for (let batchIdx = 0; batchIdx < batch; batchIdx++) {\n      const batchOffset = batchIdx * imageWidth * imageHeight * numChannels;\n\n      for (let row = 0; row < imageHeight; row++) {\n        const rowOffset = row * (imageWidth * numChannels);\n\n        for (let col = 0; col < imageWidth; col++) {\n          const colOffset = col * numChannels;\n\n          for (let channel = 0; channel < numChannels; channel++) {\n            const coords = [batch, row, col, channel];\n\n            const x = coords[2];\n            const y = coords[1];\n\n            // coordX/coordY are the result of rotating and translating x/y.\n            let coordX = (x - centerX) * cosFactor - (y - centerY) * sinFactor;\n            let coordY = (x - centerX) * sinFactor + (y - centerY) * cosFactor;\n            coordX = Math.round(coordX + centerX);\n            coordY = Math.round(coordY + centerY);\n\n            let outputValue = fillValue;\n            if (typeof fillValue !== 'number') {\n              if (channel === 3) {\n                outputValue = fullOpacityValue;\n              } else {\n                outputValue = fillValue[channel];\n              }\n            }\n\n            // If the coordinate position falls within the image boundaries...\n            if (coordX >= 0 && coordX < imageWidth && coordY >= 0 &&\n                coordY < imageHeight) {\n              // set the output to the image value at the coordinate position.\n              const rotatedRowOffset = coordY * (imageWidth * numChannels);\n              const rotatedColOffset = coordX * numChannels;\n              const imageIdx =\n                  batchOffset + rotatedRowOffset + rotatedColOffset + channel;\n              outputValue = imageVals[imageIdx];\n            }\n\n            const outIdx = batchOffset + rowOffset + colOffset + channel;\n            output[outIdx] = outputValue as number;\n          }\n        }\n      }\n    }\n\n    const dataId = cpuBackend.write(output, image.shape, image.dtype);\n    return {dataId, shape: image.shape, dtype: image.dtype};\n  }\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Round} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nexport const round = unaryKernelFunc(Round, (xi) => {\n  // The algorithm is based on banker's rounding.\n  const base = Math.floor(xi);\n  if (xi - base < 0.5) {\n    return Math.floor(xi);\n  } else if (xi - base > 0.5) {\n    return Math.ceil(xi);\n  } else {\n    if (base % 2.0 === 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n});\n\nexport const roundConfig: KernelConfig = {\n  kernelName: Round,\n  backendName: 'cpu',\n  kernelFunc: round,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Rsqrt} from '@tensorflow/tfjs-core';\n\nimport {createSimpleUnaryImpl} from '../utils/unary_impl';\nimport {unaryKernelFuncFromImpl} from '../utils/unary_utils';\n\nexport const rsqrtImpl = createSimpleUnaryImpl((xi) => 1 / Math.sqrt(xi));\nexport const rsqrt = unaryKernelFuncFromImpl(Rsqrt, rsqrtImpl);\n\nexport const rsqrtConfig: KernelConfig = {\n  kernelName: Rsqrt,\n  backendName: 'cpu',\n  kernelFunc: rsqrt,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {buffer, Rank, ShapeMap, TensorBuffer, TypedArray} from '@tensorflow/tfjs-core';\n\nexport function scatterImpl<R extends Rank>(\n    indices: TensorBuffer<R>, updates: TensorBuffer<R>, shape: number[],\n    outputSize: number, sliceSize: number, numUpdates: number,\n    sliceRank: number, strides: number[], defaultValue: number,\n    sumDupeIndices: boolean): TensorBuffer<R> {\n  const flattenShape = [outputSize / sliceSize, sliceSize];\n\n  const indicesData = indices.values as TypedArray;\n  const updatesData = updates.values as TypedArray;\n\n  if (outputSize === 0) {\n    return buffer(shape as ShapeMap[R], updates.dtype);\n  }\n\n  const outBuf = buffer(flattenShape, updates.dtype);\n  (outBuf.values as TypedArray).fill(defaultValue);\n\n  for (let i = 0; i < numUpdates; i++) {\n    const index = [];\n    let flattenIndex = 0;\n    for (let j = 0; j < sliceRank; j++) {\n      const dim = indicesData[i * sliceRank + j];\n      index.push(dim);\n      flattenIndex += dim * strides[j];\n    }\n\n    if (flattenIndex < 0 || flattenIndex >= outputSize / sliceSize) {\n      throw new Error(`Invalid indices: ${index} does not index into ${shape}`);\n    }\n\n    for (let k = 0; k < sliceSize; k++) {\n      if (sumDupeIndices) {\n        outBuf.values[flattenIndex * sliceSize + k] +=\n            updatesData[i * sliceSize + k];\n      } else {\n        outBuf.values[flattenIndex * sliceSize + k] = updates.rank === 0 ?\n            updatesData[0] :\n            updatesData[i * sliceSize + k];\n      }\n    }\n  }\n\n  return outBuf as TensorBuffer<R>;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, ScatterNd, ScatterNdAttrs, ScatterNdInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {scatterImpl} from './Scatter_impl';\n\nexport function scatterNd(args: {\n  inputs: ScatterNdInputs,\n  backend: MathBackendCPU,\n  attrs: ScatterNdAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {indices, updates} = inputs;\n  const {shape} = attrs;\n\n  const {sliceRank, numUpdates, sliceSize, strides, outputSize} =\n      backend_util.calculateShapes(updates, indices, shape);\n  const sumDupeIndices = true;\n\n  const indicesBuf = backend.bufferSync(indices);\n  const updatesBuf = backend.bufferSync(updates);\n\n  const outBuf = scatterImpl(\n      indicesBuf, updatesBuf, shape, outputSize, sliceSize, numUpdates,\n      sliceRank, strides, 0 /* defaultValue */, sumDupeIndices);\n\n  return backend.makeTensorInfo(shape, outBuf.dtype, outBuf.values);\n}\n\nexport const scatterNdConfig: KernelConfig = {\n  kernelName: ScatterNd,\n  backendName: 'cpu',\n  kernelFunc: scatterNd as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Select, SelectInputs, TensorInfo, TypedArray, upcastType, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function select(args: {inputs: SelectInputs, backend: MathBackendCPU}):\n    TensorInfo {\n  const {inputs, backend} = args;\n  const {condition, t, e} = inputs;\n\n  assertNotComplex([condition, t, e], 'select');\n  const conditionRank = condition.shape.length;\n\n  const values = backend.data.get(condition.dataId).values as TypedArray;\n  const tValues = backend.data.get(t.dataId).values as TypedArray;\n  const eValues = backend.data.get(e.dataId).values as TypedArray;\n  const resultDtype = upcastType(t.dtype, e.dtype);\n  const newValues =\n      util.makeZerosTypedArray(util.sizeFromShape(t.shape), resultDtype);\n\n  let index = 0;\n  const offset =\n      conditionRank === 0 || conditionRank > 1 || t.shape.length === 1 ?\n      1 :\n      util.sizeFromShape(t.shape.slice(1));\n\n  for (let i = 0; i < values.length; i++) {\n    for (let j = 0; j < offset; j++) {\n      if (values[i] === 1) {\n        newValues[index++] = tValues[i];\n      } else {\n        newValues[index++] = eValues[i];\n      }\n    }\n  }\n\n  return backend.makeTensorInfo(t.shape, resultDtype, newValues);\n}\n\nexport const selectConfig: KernelConfig = {\n  kernelName: Select,\n  backendName: 'cpu',\n  kernelFunc: select as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, Selu} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nconst scaleAlpha = backend_util.SELU_SCALEALPHA;\nconst scale = backend_util.SELU_SCALE;\n\nexport const selu = unaryKernelFunc(Selu, (xi) => {\n  if (xi >= 0) {\n    return scale * xi;\n  } else {\n    return scaleAlpha * (Math.exp(xi) - 1);\n  }\n});\n\nexport const seluConfig: KernelConfig = {\n  kernelName: Selu,\n  backendName: 'cpu',\n  kernelFunc: selu,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Sign} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nexport const sign = unaryKernelFunc(Sign, (xi) => {\n  if (xi < 0) {\n    return -1;\n  } else if (xi > 0) {\n    return 1;\n  } else {\n    return 0;\n  }\n});\n\nexport const signConfig: KernelConfig = {\n  kernelName: Sign,\n  backendName: 'cpu',\n  kernelFunc: sign,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Sin} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nexport const sin = unaryKernelFunc(Sin, (xi) => Math.sin(xi));\n\nexport const sinConfig: KernelConfig = {\n  kernelName: Sin,\n  backendName: 'cpu',\n  kernelFunc: sin,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Sinh} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nexport const sinh = unaryKernelFunc(Sinh, (xi) => Math.sinh(xi));\n\nexport const sinhConfig: KernelConfig = {\n  kernelName: Sinh,\n  backendName: 'cpu',\n  kernelFunc: sinh,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Softplus} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\n// mirrors the implementation of tf.nn.softplus: https://goo.gl/vkcvwX\n\n// epsilon is the difference between 1.0 and the next representable float.\n// For a single precision 32 bit float this should be 2^-23, see:\n// https://math.byu.edu/~schow/work/IEEEFloatingPoint.htm\nconst epsilon = 1.1920928955078125e-7;\nconst threshold = Math.log(epsilon) + 2.0;\n\nexport const softplus = unaryKernelFunc(Softplus, (xi) => {\n  // Value above which exp(x) may overflow, but softplus(x) == x\n  // is within machine epsilon.\n  const tooLarge = xi > -threshold;\n\n  // Value below which exp(x) may underflow, but softplus(x) == exp(x)\n  // is within machine epsilon.\n  const tooSmall = xi < threshold;\n\n  const expX = Math.exp(xi);\n  let result;\n\n  if (tooSmall) {\n    result = expX;\n  } else if (tooLarge) {\n    result = xi;\n  } else {\n    result = Math.log(1.0 + expX);\n  }\n  return result;\n});\n\nexport const softplusConfig: KernelConfig = {\n  kernelName: Softplus,\n  backendName: 'cpu',\n  kernelFunc: softplus,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, ReshapeAttrs, ReshapeInputs, SpaceToBatchND, SpaceToBatchNDAttrs, SpaceToBatchNDInputs, TensorInfo, TransposeAttrs, TransposeInputs, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nimport {padV2Config} from './PadV2';\nimport {reshape} from './Reshape';\nimport {transpose} from './Transpose';\n\nexport function spaceToBatchND(args: {\n  inputs: SpaceToBatchNDInputs,\n  backend: MathBackendCPU,\n  attrs: SpaceToBatchNDAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {blockShape, paddings} = attrs;\n\n  assertNotComplex([x], 'spaceToBatchND');\n\n  const prod = util.sizeFromShape(blockShape);\n\n  const completePaddings: Array<[number, number]> = [[0, 0]];\n  completePaddings.push(...(paddings as Array<[number, number]>));\n\n  for (let i = 1 + blockShape.length; i < x.shape.length; ++i) {\n    completePaddings.push([0, 0]);\n  }\n\n  const paddedX = padV2Config.kernelFunc({\n    inputs: {x},\n    backend,\n    attrs: {paddings: completePaddings, constantValue: 0}\n  }) as TensorInfo;\n\n  const reshapedPaddedShape =\n      backend_util.getReshaped(paddedX.shape, blockShape, prod, false);\n\n  const permutedReshapedPaddedPermutation = backend_util.getPermuted(\n      reshapedPaddedShape.length, blockShape.length, false);\n\n  const flattenShape =\n      backend_util.getReshapedPermuted(paddedX.shape, blockShape, prod, false);\n\n  const reshapeInputs: ReshapeInputs = {x: paddedX};\n  const reshapeAttrs: ReshapeAttrs = {shape: reshapedPaddedShape};\n  const paddedXReshaped =\n      reshape({inputs: reshapeInputs, backend, attrs: reshapeAttrs});\n\n  const transposeInputs: TransposeInputs = {x: paddedXReshaped};\n  const transposeAttrs:\n      TransposeAttrs = {perm: permutedReshapedPaddedPermutation};\n  const paddedXT =\n      transpose({inputs: transposeInputs, backend, attrs: transposeAttrs});\n\n  const resultReshapeInputs: ReshapeInputs = {x: paddedXT};\n  const resultReshapeAttrs: ReshapeAttrs = {shape: flattenShape};\n  const result = reshape(\n      {inputs: resultReshapeInputs, backend, attrs: resultReshapeAttrs});\n\n  backend.disposeIntermediateTensorInfo(paddedX);\n  backend.disposeIntermediateTensorInfo(paddedXReshaped);\n  backend.disposeIntermediateTensorInfo(paddedXT);\n\n  return result;\n}\n\nexport const spaceToBatchNDConfig: KernelConfig = {\n  kernelName: SpaceToBatchND,\n  backendName: 'cpu',\n  kernelFunc: spaceToBatchND as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, SparseFillEmptyRows, SparseFillEmptyRowsInputs, TensorInfo, TypedArray} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nimport {sparseFillEmptyRowsImpl} from './SparseFillEmptyRows_impl';\n\nexport function sparseFillEmptyRows(args: {\n  inputs: SparseFillEmptyRowsInputs,\n  backend: MathBackendCPU\n}): [TensorInfo, TensorInfo, TensorInfo, TensorInfo] {\n  const {inputs, backend} = args;\n  const {indices, values, denseShape, defaultValue} = inputs;\n  if (denseShape.shape.length !== 1) {\n    throw new Error(`Dense shape must be a vector, saw:\n        ${denseShape.shape}`);\n  }\n  if (indices.shape.length !== 2) {\n    throw new Error(`Indices must be a matrix, saw:\n        ${indices.shape}`);\n  }\n  if (values.shape.length !== 1) {\n    throw new Error(`Values must be a vector, saw:\n        ${values.shape}`);\n  }\n  if (defaultValue.shape.length !== 0) {\n    throw new Error(`Default value must be a scalar, saw:\n        ${defaultValue.shape}`);\n  }\n\n  const $indices = backend.data.get(indices.dataId).values as TypedArray;\n  const $values = backend.data.get(values.dataId).values as TypedArray;\n  const $denseShape = backend.data.get(denseShape.dataId).values as TypedArray;\n  const $defaultValue =\n      backend.data.get(defaultValue.dataId).values[0] as number;\n\n  const [outputIndices, outputIndicesShape, outputValues,\n         emptyRowIndicator, reverseIndexMap] =\n      sparseFillEmptyRowsImpl(\n          $indices, indices.shape, indices.dtype, $values, values.dtype,\n          $denseShape, $defaultValue);\n  return [\n    backend.makeTensorInfo(outputIndicesShape, indices.dtype, outputIndices),\n    backend.makeTensorInfo(\n        [outputIndicesShape[0]], values.dtype, outputValues),\n    backend.makeTensorInfo(\n        [emptyRowIndicator.length], 'bool',\n        new Uint8Array(\n            emptyRowIndicator.map((value: boolean) => Number(value)))),\n    backend.makeTensorInfo(\n        [reverseIndexMap.length], indices.dtype,\n        new Int32Array(reverseIndexMap)),\n  ];\n}\n\nexport const sparseFillEmptyRowsConfig: KernelConfig = {\n  kernelName: SparseFillEmptyRows,\n  backendName: 'cpu',\n  kernelFunc: sparseFillEmptyRows as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, TypedArray, util} from '@tensorflow/tfjs-core';\n\nexport function sparseFillEmptyRowsImpl(\n    indices: TypedArray, indicesShape: number[], indicesDType: DataType,\n    values: TypedArray, valuesDType: DataType, denseShape: TypedArray,\n    defaultValue: number):\n    [TypedArray, number[], TypedArray, boolean[], number[]] {\n  const indicesCount = indicesShape[0];\n  const denseRows = denseShape[0];\n\n  const emptyRowIndicator: boolean[] = new Array(denseRows);\n  const reverseIndexMap: number[] = new Array(indicesCount);\n\n  const rank = indicesShape[1];\n\n  if (denseRows === 0) {\n    if (indicesCount !== 0) {\n      throw new Error(`Received SparseTensor with denseShape[0] = 0 but\n         indices.shape[0] = ${indicesCount}`);\n    }\n    const outputIndices = util.getArrayFromDType(indicesDType, 0) as TypedArray;\n    const outputValues = util.getArrayFromDType(valuesDType, 0) as TypedArray;\n    return [\n      outputIndices, [0, rank], outputValues, emptyRowIndicator, reverseIndexMap\n    ];\n  }\n\n  let rowsAreOrdered = true;\n  let lastIndicesRow = 0;\n  const csrOffset: number[] = new Array(denseRows).fill(0);\n\n  for (let i = 0; i < indicesCount; ++i) {\n    // indices is a 2d tensor with shape of [N, rank]\n    const row = indices[i * rank];\n    if (row < 0) {\n      throw new Error(`indices(${i}, 0) is invalid: ${row} < 0`);\n    }\n    if (row >= denseRows) {\n      throw new Error(`indices(${i}, 0) is invalid: ${row} >= ${denseRows}`);\n    }\n    ++csrOffset[row];\n    rowsAreOrdered = rowsAreOrdered && (row >= lastIndicesRow);\n    lastIndicesRow = row;\n  }\n\n  let allRowsFull = true;\n  for (let row = 0; row < denseRows; ++row) {\n    // csrOffset here describes the number of elements in this dense row\n    const rowEmpty = (csrOffset[row] === 0);\n    emptyRowIndicator[row] = rowEmpty;\n    allRowsFull = allRowsFull && !rowEmpty;\n    // In filled version, each row has at least one element.\n    csrOffset[row] = Math.max(csrOffset[row], 1);\n    // Update csrOffset to represent the number of elements up to and\n    // including denseRows + 1:\n    //  csrOffset[0] == #{elements of row 0}\n    //  csrOffset[1] == #{elements of row 1} + #{elements of row 0}\n    //  ..\n    //  csrOffset[i] == starting index for elements in row i + 1.\n    if (row > 0) {\n      csrOffset[row] += csrOffset[row - 1];\n    }\n  }\n\n  if (allRowsFull && rowsAreOrdered) {\n    const outputIndices: TypedArray = indices;\n    const outputValues: TypedArray = values;\n    for (let i = 0; i < indicesCount; ++i) {\n      reverseIndexMap[i] = i;\n    }\n    return [\n      outputIndices, [indicesCount, rank], outputValues, emptyRowIndicator,\n      reverseIndexMap\n    ];\n  } else {\n    const fullIndicesCount = csrOffset[denseRows - 1];\n    const outputIndices =\n        util.getArrayFromDType(indicesDType, fullIndicesCount * rank) as\n        TypedArray;\n    const outputValues =\n        util.getArrayFromDType(valuesDType, fullIndicesCount) as TypedArray;\n    const filledCount: number[] = new Array(denseRows).fill(0);\n\n    // Fill in values for rows that are not missing\n    for (let i = 0; i < indicesCount; ++i) {\n      // indices is a 2d tensor with shape of [N, rank]\n      const row = indices[i * rank];\n      const offset = filledCount[row];\n      const outputI = ((row === 0) ? 0 : csrOffset[row - 1]) + offset;\n      filledCount[row]++;  // Increment the filled count for this row.\n      for (let j = 0; j < rank; ++j) {\n        // indices and outputIndices are 2d tensors with shape of [N, rank]\n        outputIndices[outputI * rank + j] = indices[i * rank + j];\n      }\n      outputValues[outputI] = values[i];\n      // We'll need this reverse index map to backprop correctly.\n      reverseIndexMap[i] = outputI;\n    }\n\n    // Fill in values for rows that are missing\n    for (let row = 0; row < denseRows; ++row) {\n      const rowCount = filledCount[row];\n      if (rowCount === 0) {  // We haven't filled this row\n        const startingIndex = (row === 0) ? 0 : csrOffset[row - 1];\n        // Remaining index values were set to zero already.\n        // Just need to set the row index in the right location.\n        // outputIndices is a 2d tensor with shape of [N, rank]\n        outputIndices[startingIndex * rank + 0] = row;\n        for (let col = 1; col < rank; ++col) {\n          outputIndices[startingIndex * rank + col] = 0;\n        }\n        outputValues[startingIndex] = defaultValue;\n      }\n    }\n    return [\n      outputIndices, [fullIndicesCount, rank], outputValues, emptyRowIndicator,\n      reverseIndexMap\n    ];\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, SparseReshape, SparseReshapeInputs, TensorInfo, TypedArray} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nimport {sparseReshapeImpl} from './SparseReshape_impl';\n\nexport function sparseReshape(\n    args: {inputs: SparseReshapeInputs, backend: MathBackendCPU}):\n    [TensorInfo, TensorInfo] {\n  const {inputs, backend} = args;\n  const {inputIndices, inputShape, newShape} = inputs;\n  if (inputIndices.shape.length !== 2) {\n    throw new Error(`Input indices should be a matrix but received shape\n        ${inputIndices.shape}`);\n  }\n  if (inputShape.shape.length !== 1) {\n    throw new Error(`Input shape should be a vector but received shape\n        ${inputShape.shape}`);\n  }\n\n  if (newShape.shape.length !== 1) {\n    throw new Error(\n        `Target shape should be a vector but received shape ${newShape.shape}`);\n  }\n\n  const $inputShape =\n      Array.from(backend.data.get(inputShape.dataId).values as TypedArray);\n  const $inputIndices =\n      backend.data.get(inputIndices.dataId).values as TypedArray;\n  const targetShape =\n      Array.from(backend.data.get(newShape.dataId).values as TypedArray);\n\n  const [newIndices, indicesShape, outputShape] = sparseReshapeImpl(\n      $inputIndices, inputIndices.shape, inputIndices.dtype, $inputShape,\n      targetShape);\n  return [\n    backend.makeTensorInfo(indicesShape, inputIndices.dtype, newIndices),\n    backend.makeTensorInfo(\n        [outputShape.length], newShape.dtype, new Int32Array(outputShape)),\n  ];\n}\n\nexport const sparseReshapeConfig: KernelConfig = {\n  kernelName: SparseReshape,\n  backendName: 'cpu',\n  kernelFunc: sparseReshape,\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, TypedArray, util} from '@tensorflow/tfjs-core';\n\nexport function sparseReshapeImpl(\n    inputIndices: TypedArray, inputIndicesShape: number[], inputDType: DataType,\n    inputShape: number[],\n    targetShape: number[]): [TypedArray, number[], number[]] {\n  const denseSize = util.sizeFromShape(inputShape);\n  const nnz = inputIndicesShape[0];\n  const outputRank = targetShape.length;\n\n  // Compute the output shape. Determine product of specified dimensions, and\n  // find the index of the unspecified one.\n  const outputShape: number[] = [];\n  let product = 1;\n  let unknownIndex = -1;\n  for (let d = 0; d < outputRank; ++d) {\n    const size = targetShape[d];\n    if (size === -1) {\n      if (unknownIndex !== -1) {\n        throw new Error(`only one output dimension may be -1, not both ${\n            unknownIndex} and ${d}`);\n      }\n      unknownIndex = d;\n      outputShape.push(1);\n    } else {\n      if (size < 0) {\n        throw new Error(`size ${d} must be non-negative, not ${size}`);\n      }\n      product *= size;\n      outputShape.push(size);\n    }\n  }\n  if (unknownIndex !== -1) {\n    if (product <= 0) {\n      throw new Error(\n          'reshape cannot infer the missing ' +\n          'input size for an empty tensor unless all ' +\n          'specified input sizes are non-zero');\n    }\n    const missing = Math.trunc(denseSize / product);\n    if (product * missing !== denseSize) {\n      throw new Error(`Input to reshape is a SparseTensor with ${denseSize}\n          dense values, but the requested shape requires a multiple of ${\n          product}. inputShape=${inputShape} outputShape= ${outputShape}`);\n    }\n\n    outputShape[unknownIndex] = missing;\n  }\n  const outputSize = util.sizeFromShape(outputShape);\n  if (outputSize !== denseSize) {\n    throw new Error(`Input to reshape is a tensor with ${\n        denseSize} dense values, but the requested shape has ${\n        outputSize}. inputShape=${inputShape} outputShape=${outputShape}`);\n  }\n\n  const inputRank = inputShape.length;\n  const inputStrides: number[] = [];\n  if (inputRank > 0) {\n    inputStrides[inputRank - 1] = 1;\n    for (let d = inputRank - 2; d >= 0; --d) {\n      inputStrides[d] = inputStrides[d + 1] * inputShape[d + 1];\n    }\n  }\n\n  const outputStrides: number[] = [];\n  if (outputRank > 0) {\n    outputStrides[outputRank - 1] = 1;\n    for (let d = outputRank - 2; d >= 0; --d) {\n      outputStrides[d] = outputStrides[d + 1] * outputShape[d + 1];\n    }\n  }\n\n  const newIndices =\n      util.getArrayFromDType(inputDType, nnz * outputRank) as TypedArray;\n  for (let i = 0; i < nnz; ++i) {\n    let id = 0;\n    for (let j = 0; j < inputRank; ++j) {\n      // inputIndices is a 2d tensor with shape of [nnz, inputRank]\n      id += inputIndices[i * inputRank + j] * inputStrides[j];\n    }\n    for (let j = 0; j < outputRank; ++j) {\n      // newIndices is a 2d tensor with shape of [nnz, outputRank]\n      newIndices[i * outputRank + j] = Math.trunc(id / outputStrides[j]);\n      id %= outputStrides[j];\n    }\n  }\n  return [newIndices, [nnz, outputRank], outputShape];\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, TypedArray, util} from '@tensorflow/tfjs-core';\n\nexport function sparseSegmentReductionImpl(\n    input: TypedArray, inputShape: number[], inputDType: DataType,\n    indices: TypedArray, segmentIds: TypedArray, isMean = false,\n    defaultValue = 0): [TypedArray, number[]] {\n  const numIndices = indices.length;\n  if (numIndices !== segmentIds.length) {\n    throw new Error(`segmentIds and indices should have same size.`);\n  }\n\n  // Flatten the array to two dimensions\n  const inputFlat: number[] = [inputShape[0], input.length / inputShape[0]];\n  const numCol = inputFlat[1];\n  // Note that the current implementation assumes that segmentIds values are\n  // sorted.\n  const lastSegmentIdPlusOne =\n      numIndices > 0 ? segmentIds[numIndices - 1] + 1 : 0;\n  const outputRows = lastSegmentIdPlusOne;\n\n  if (outputRows < 0) {\n    throw new Error(`segment ids must be >= 0`);\n  }\n\n  const outputShape = inputShape.slice();\n  outputShape[0] = outputRows;\n\n  const outputLength =\n      outputShape.reduce((product, value) => product * value, 1);\n  // Output array is initialized with the value 0 by default.\n  const output = util.getArrayFromDType(inputDType, outputLength) as TypedArray;\n\n  // Note that we do not initialize the output buffer with a default value, so\n  // we need to explicitly set missing indices to the default value.\n  if (numIndices === 0) {\n    if (outputRows > 0) {\n      output.fill(defaultValue);\n    }\n    return [output, outputShape];\n  }\n\n  if (outputRows <= 0) {\n    throw new Error(`segment ids must be >= 0`);\n  }\n\n  let start = 0, end = 1;\n  // Index from which the output is not initialized.\n  let uninitializedIndex = 0;\n  let outIndex = segmentIds[start];\n\n  while (true) {\n    // We initialize nextIndex to 0 to avoid may be uninitialized warning\n    let nextIndex = 0;\n    if (end < numIndices) {\n      nextIndex = segmentIds[end];\n      if (outIndex === nextIndex) {\n        ++end;\n        continue;\n      }\n      // We have a new segment here.  Verify that the segment ids are growing.\n      if (outIndex >= nextIndex) {\n        throw new Error(`segment ids are not increasing`);\n      }\n    }\n\n    if (outIndex < 0 || outIndex >= outputRows) {\n      throw new Error(`Segment id ${outIndex} out of range [0, ${\n          outputRows}), possibly because segmentIds input is not sorted.`);\n    }\n\n    // If there is a gap between two indices, we need to set that gap to the\n    // default value.\n    if (outIndex > uninitializedIndex) {\n      output.fill(defaultValue, uninitializedIndex * numCol, outIndex * numCol);\n    }\n\n    for (let i = start; i < end; ++i) {\n      const index = indices[i];\n      if (index < 0 || index >= inputFlat[0]) {\n        throw new Error(`Bad: indices[${i}] == ${indices[i]} out of range [0, ${\n            inputFlat[0]})`);\n      }\n      for (let j = 0; j < numCol; j++) {\n        output[outIndex * numCol + j] += input[index * numCol + j];\n      }\n    }\n\n    if (isMean) {\n      for (let j = 0; j < numCol; j++) {\n        output[outIndex * numCol + j] /= end - start;\n      }\n    }\n\n    start = end;\n    ++end;\n    uninitializedIndex = outIndex + 1;\n    outIndex = nextIndex;\n    if (end > numIndices) {\n      break;\n    }\n  }\n\n  // Fill the gap at the end with the default value.\n  if (uninitializedIndex < outputRows) {\n    output.fill(defaultValue, uninitializedIndex * numCol, outputRows * numCol);\n  }\n\n  return [output, outputShape];\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, SparseSegmentMean, SparseSegmentMeanInputs, TensorInfo, TypedArray} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nimport {sparseSegmentReductionImpl} from './SparseSegmentReduction_impl';\n\nexport function sparseSegmentMean(\n    args: {inputs: SparseSegmentMeanInputs, backend: MathBackendCPU}):\n    TensorInfo {\n  const {inputs, backend} = args;\n  const {data, indices, segmentIds} = inputs;\n  if (data.shape.length < 1) {\n    throw new Error(\n        `Data should be at least 1 dimensional but received scalar`);\n  }\n  if (indices.shape.length !== 1) {\n    throw new Error(`Indices should be a vector but received shape\n          ${indices.shape}`);\n  }\n  if (segmentIds.shape.length !== 1) {\n    throw new Error(`Segment ids should be a vector but received shape\n          ${segmentIds.shape}`);\n  }\n\n  const $data = backend.data.get(data.dataId).values as TypedArray;\n  const $indices = backend.data.get(indices.dataId).values as TypedArray;\n  const $segmentIds = backend.data.get(segmentIds.dataId).values as TypedArray;\n\n  const [outputData, outputDataShape] = sparseSegmentReductionImpl(\n      $data, data.shape, data.dtype, $indices, $segmentIds, true);\n  return backend.makeTensorInfo(outputDataShape, data.dtype, outputData);\n}\n\nexport const sparseSegmentMeanConfig: KernelConfig = {\n  kernelName: SparseSegmentMean,\n  backendName: 'cpu',\n  kernelFunc: sparseSegmentMean,\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, SparseSegmentSum, SparseSegmentSumInputs, TensorInfo, TypedArray} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nimport {sparseSegmentReductionImpl} from './SparseSegmentReduction_impl';\n\nexport function sparseSegmentSum(\n    args: {inputs: SparseSegmentSumInputs, backend: MathBackendCPU}):\n    TensorInfo {\n  const {inputs, backend} = args;\n  const {data, indices, segmentIds} = inputs;\n  if (data.shape.length < 1) {\n    throw new Error(\n        `Data should be at least 1 dimensional but received scalar`);\n  }\n  if (indices.shape.length !== 1) {\n    throw new Error(`Indices should be a vector but received shape\n         ${indices.shape}`);\n  }\n  if (segmentIds.shape.length !== 1) {\n    throw new Error(`Segment ids should be a vector but received shape\n         ${segmentIds.shape}`);\n  }\n\n  const $data = backend.data.get(data.dataId).values as TypedArray;\n  const $indices = backend.data.get(indices.dataId).values as TypedArray;\n  const $segmentIds = backend.data.get(segmentIds.dataId).values as TypedArray;\n\n  const [outputData, outputDataShape] = sparseSegmentReductionImpl(\n      $data, data.shape, data.dtype, $indices, $segmentIds);\n  return backend.makeTensorInfo(outputDataShape, data.dtype, outputData);\n}\n\nexport const sparseSegmentSumConfig: KernelConfig = {\n  kernelName: SparseSegmentSum,\n  backendName: 'cpu',\n  kernelFunc: sparseSegmentSum,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, SparseToDense, SparseToDenseAttrs, SparseToDenseInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {scatterImpl} from './Scatter_impl';\n\nexport function sparseToDense(args: {\n  inputs: SparseToDenseInputs,\n  backend: MathBackendCPU,\n  attrs: SparseToDenseAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {sparseIndices, sparseValues, defaultValue} = inputs;\n  const {outputShape} = attrs;\n\n  const {sliceRank, numUpdates, sliceSize, strides, outputSize} =\n      backend_util.calculateShapes(sparseValues, sparseIndices, outputShape);\n  const sumDupeIndices = false;\n\n  const indicesBuf = backend.bufferSync(sparseIndices);\n  const updatesBuf = backend.bufferSync(sparseValues);\n  const $defaultValue =\n      backend.data.get(defaultValue.dataId).values[0] as number;\n\n  const outBuf = scatterImpl(\n      indicesBuf, updatesBuf, outputShape, outputSize, sliceSize, numUpdates,\n      sliceRank, strides, $defaultValue, sumDupeIndices);\n\n  return backend.makeTensorInfo(outputShape, outBuf.dtype, outBuf.values);\n}\n\nexport const sparseToDenseConfig: KernelConfig = {\n  kernelName: SparseToDense,\n  backendName: 'cpu',\n  kernelFunc: sparseToDense as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, SplitVAttrs, SplitVInputs} from '@tensorflow/tfjs-core';\nimport {KernelConfig, KernelFunc, SplitV, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {slice} from './Slice';\n\nexport function splitV(\n    args: {inputs: SplitVInputs, backend: MathBackendCPU, attrs: SplitVAttrs}):\n    TensorInfo[] {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {numOrSizeSplits, axis} = attrs;\n\n  const $axis = util.parseAxisParam(axis, x.shape)[0];\n  const splitSizes = backend_util.prepareSplitSize(x, numOrSizeSplits, $axis);\n\n  const begin = new Array(x.shape.length).fill(0);\n  const size = x.shape.slice();\n  return splitSizes.map(s => {\n    const sliceSize = [...size];\n    sliceSize[$axis] = s;\n    const sliceT =\n        slice({inputs: {x}, backend, attrs: {begin, size: sliceSize}});\n    begin[$axis] += s;\n    return sliceT;\n  });\n}\n\nexport const splitVConfig: KernelConfig = {\n  kernelName: SplitV,\n  backendName: 'cpu',\n  kernelFunc: splitV as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Sqrt} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nexport const sqrt = unaryKernelFunc(Sqrt, (xi) => Math.sqrt(xi));\n\nexport const sqrtConfig: KernelConfig = {\n  kernelName: Sqrt,\n  backendName: 'cpu',\n  kernelFunc: sqrt,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Square, SquareInputs} from '@tensorflow/tfjs-core';\nimport {KernelConfig} from '@tensorflow/tfjs-core';\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport const squareConfig: KernelConfig = {\n  kernelName: Square,\n  backendName: 'cpu',\n  kernelFunc: ({inputs, backend}) => {\n    const {x} = inputs as SquareInputs;\n    const cpuBackend = backend as MathBackendCPU;\n    assertNotComplex(x, 'square');\n\n    const values = cpuBackend.data.get(x.dataId).values as Float32Array;\n    const newValues = new Float32Array(values.length);\n    for (let i = 0; i < values.length; ++i) {\n      const value = values[i];\n      newValues[i] = value * value;\n    }\n    const dataId = cpuBackend.write(newValues, x.shape, x.dtype);\n    return {dataId, shape: x.shape, dtype: x.dtype};\n  }\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, SquaredDifference} from '@tensorflow/tfjs-core';\n\nimport {createSimpleBinaryKernelImpl} from '../utils/binary_impl';\nimport {binaryKernelFunc} from '../utils/binary_utils';\n\nexport const squaredDifferenceImpl =\n    createSimpleBinaryKernelImpl(((a: number, b: number) => {\n      const diff = a - b;\n      return diff * diff;\n    }));\nexport const squaredDifference =\n    binaryKernelFunc(SquaredDifference, squaredDifferenceImpl);\n\nexport const squaredDifferenceConfig: KernelConfig = {\n  kernelName: SquaredDifference,\n  backendName: 'cpu',\n  kernelFunc: squaredDifference\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Step, StepAttrs} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nexport const step = unaryKernelFunc(Step, (xi, attrs) => {\n  const stepAttrs = attrs as {} as StepAttrs;\n  if (isNaN(xi)) {\n    return NaN;\n  } else {\n    return xi > 0 ? 1 : stepAttrs.alpha;\n  }\n});\n\nexport const stepConfig: KernelConfig = {\n  kernelName: Step,\n  backendName: 'cpu',\n  kernelFunc: step,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, slice_util, StridedSlice, StridedSliceAttrs, StridedSliceInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\nimport {reshape} from './Reshape';\nimport {slice} from './Slice';\nimport {stridedSliceImpl} from './StridedSlice_impl';\n\nexport function stridedSlice(args: {\n  inputs: StridedSliceInputs,\n  backend: MathBackendCPU,\n  attrs: StridedSliceAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {\n    begin,\n    end,\n    strides,\n    beginMask,\n    endMask,\n    ellipsisMask,\n    newAxisMask,\n    shrinkAxisMask\n  } = attrs;\n\n  assertNotComplex(x, 'stridedSlice');\n\n  const {nonStrided, $begin, $strides, size, newShape, outShape} =\n      slice_util.sliceInfo(\n          x.shape, begin, end, strides, beginMask, endMask, ellipsisMask,\n          newAxisMask, shrinkAxisMask);\n\n  const $x = reshape({inputs: {x}, backend, attrs: {shape: newShape}});\n\n  let result;\n  if (nonStrided) {\n    const sliced =\n        slice({inputs: {x: $x}, backend, attrs: {begin: $begin, size}});\n    result = reshape({inputs: {x: sliced}, backend, attrs: {shape: outShape}});\n\n    backend.disposeIntermediateTensorInfo(sliced);\n  } else if (outShape.some(axis => axis === 0)) {\n    result = backend.makeTensorInfo(outShape, x.dtype, []);\n  } else {\n    const xBuf = backend.bufferSync($x);\n    const outBuf = stridedSliceImpl(outShape, xBuf, $strides, $begin);\n\n    result = backend.makeTensorInfo(outBuf.shape, outBuf.dtype, outBuf.values);\n  }\n\n  const resultReshaped =\n      reshape({inputs: {x: result}, backend, attrs: {shape: outShape}});\n\n  backend.disposeIntermediateTensorInfo($x);\n  backend.disposeIntermediateTensorInfo(result);\n\n  return resultReshaped;\n}\n\nexport const stridedSliceConfig: KernelConfig = {\n  kernelName: StridedSlice,\n  backendName: 'cpu',\n  kernelFunc: stridedSlice as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {buffer, Rank, TensorBuffer} from '@tensorflow/tfjs-core';\n\nexport function stridedSliceImpl<R extends Rank>(\n    outShape: number[], xBuf: TensorBuffer<R>, strides: number[],\n    begin: number[]): TensorBuffer<R> {\n  const outBuf = buffer(outShape, xBuf.dtype);\n\n  for (let i = 0; i < outBuf.size; i++) {\n    const loc = outBuf.indexToLoc(i);\n\n    const newLoc: number[] = new Array(loc.length);\n    for (let j = 0; j < newLoc.length; j++) {\n      newLoc[j] = loc[j] * strides[j] + begin[j];\n    }\n    outBuf.set(xBuf.get(...newLoc), ...loc);\n  }\n\n  return outBuf as TensorBuffer<R>;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {util} from '@tensorflow/tfjs-core';\n\n/**\n * The StringNGramsOp class creates ngrams from ragged string data.\n * The constructor contains all attributes related to the operation such as\n * padding widths and strings, and the compute function can be used to\n * compute the ngrams for different ragged tensor inputs.\n */\nclass StringNGramsOp {\n  private separator: Uint8Array;\n  private nGramWidths: number[];\n  private padWidth: number;\n  private leftPad: Uint8Array;\n  private rightPad: Uint8Array;\n  private preserveShort: boolean;\n\n  constructor(\n      separator: string, nGramWidths: number[], leftPad: string,\n      rightPad: string, padWidth: number, preserveShortSequences: boolean) {\n    this.separator = util.encodeString(separator);\n    this.nGramWidths = nGramWidths;\n    this.leftPad = util.encodeString(leftPad);\n    this.rightPad = util.encodeString(rightPad);\n    this.padWidth = padWidth;\n    this.preserveShort = preserveShortSequences;\n  }\n\n  private getPadWidth(nGramWidth: number) {\n    // Ngrams can be padded with either a fixed pad width or a dynamic pad\n    // width depending on the 'padWidth' arg, but in no case should the padding\n    // ever be wider than 'nGramWidth' - 1.\n    return Math.min(\n        this.padWidth < 0 ? nGramWidth - 1 : this.padWidth, nGramWidth - 1);\n  }\n\n  private getNumNGrams(length: number, nGramWidth: number) {\n    const padWidth = this.getPadWidth(nGramWidth);\n    return Math.max(0, ((length + 2 * padWidth) - nGramWidth) + 1);\n  }\n\n  private createNGrams(\n      data: Uint8Array[], splitIndex: number, output: Uint8Array[],\n      outputStartIndex: number, numNGrams: number, nGramWidth: number) {\n    for (let nGramIndex = 0; nGramIndex < numNGrams; ++nGramIndex) {\n      const padWidth = this.getPadWidth(nGramWidth);\n      const leftPadding = Math.max(0, padWidth - nGramIndex);\n      const rightPadding =\n          Math.max(0, padWidth - (numNGrams - (nGramIndex + 1)));\n      const numTokens = nGramWidth - (leftPadding + rightPadding);\n      const dataStartIndex =\n          splitIndex + (leftPadding > 0 ? 0 : nGramIndex - padWidth);\n\n      // Calculate the total expected size of the nGram so we can reserve the\n      // correct amount of space in the string.\n      let nGramSize = 0;\n      // Size of the left padding.\n      nGramSize += leftPadding * this.leftPad.length;\n      // Size of the tokens.\n      for (let n = 0; n < numTokens; ++n) {\n        nGramSize += data[dataStartIndex + n].length;\n      }\n      // Size of the right padding.\n      nGramSize += rightPadding * this.rightPad.length;\n      // Size of the separators.\n      const numSeparators = leftPadding + rightPadding + numTokens - 1;\n      nGramSize += numSeparators * this.separator.length;\n\n      // Build the nGram.\n      output[outputStartIndex + nGramIndex] = new Uint8Array(nGramSize);\n      const nGram = output[outputStartIndex + nGramIndex];\n\n      let nextNGramIndex = 0;\n      const appendToNGram = (str: Uint8Array) =>\n          str.forEach((value) => nGram[nextNGramIndex++] = value);\n\n      for (let n = 0; n < leftPadding; ++n) {\n        appendToNGram(this.leftPad);\n        appendToNGram(this.separator);\n      }\n      // Only output first numTokens - 1 pairs of data and separator\n      for (let n = 0; n < numTokens - 1; ++n) {\n        appendToNGram(data[dataStartIndex + n]);\n        appendToNGram(this.separator);\n      }\n      // Handle case when there are no tokens or no right padding as these\n      // can result in consecutive separators.\n      if (numTokens > 0) {\n        // If we have tokens, then output last and then pair each separator\n        // with the right padding that follows, to ensure nGram ends either with\n        // the token or with the right pad.\n        appendToNGram(data[dataStartIndex + numTokens - 1]);\n        for (let n = 0; n < rightPadding; ++n) {\n          appendToNGram(this.separator);\n          appendToNGram(this.rightPad);\n        }\n      } else {\n        // If we don't have tokens, then the last item inserted into the nGram\n        // has been the separator from the left padding loop above. Hence,\n        // output right pad and separator and make sure to finish with a\n        // padding, not a separator.\n        for (let n = 0; n < rightPadding - 1; ++n) {\n          appendToNGram(this.rightPad);\n          appendToNGram(this.separator);\n        }\n        appendToNGram(this.rightPad);\n      }\n    }\n  }\n\n  // Data and splits together form the definition of the ragged tensor,\n  // where data is 1 dimensional and contains the values of the tensor\n  // and splits denotes the indices at which each row starts.\n  public compute(data: Uint8Array[], splits: Int32Array):\n      [Uint8Array[], Int32Array] {\n    // Validate that the splits are valid indices into data, only if there are\n    // splits specified.\n    const inputDataSize = data.length;\n    const splitsSize = splits.length;\n    if (splitsSize > 0) {\n      let prevSplit = splits[0];\n      if (prevSplit !== 0) {\n        throw new Error(`First split value must be 0, got ${prevSplit}`);\n      }\n      for (let i = 1; i < splitsSize; ++i) {\n        let validSplits = splits[i] >= prevSplit;\n        validSplits = validSplits && (splits[i] <= inputDataSize);\n        if (!validSplits) {\n          throw new Error(`Invalid split value ${splits[i]}, must be in [${\n              prevSplit}, ${inputDataSize}]`);\n        }\n        prevSplit = splits[i];\n      }\n      if (prevSplit !== inputDataSize) {\n        throw new Error(`Last split value must be data size. Expected ${\n            inputDataSize}, got ${prevSplit}`);\n      }\n    }\n\n    const numBatchItems = splitsSize - 1;\n    const nGramsSplits = util.getArrayFromDType('int32', splitsSize);\n    // If there is no data or size, return an empty ragged tensor.\n    if (inputDataSize === 0 || splitsSize === 0) {\n      const empty: Uint8Array[] = new Array(inputDataSize);\n      for (let i = 0; i <= numBatchItems; ++i) {\n        nGramsSplits[i] = 0;\n      }\n      return [empty, nGramsSplits];\n    }\n\n    nGramsSplits[0] = 0;\n    for (let i = 1; i <= numBatchItems; ++i) {\n      const length = splits[i] - splits[i - 1];\n      let numNGrams = 0;\n      this.nGramWidths.forEach((nGramWidth) => {\n        numNGrams += this.getNumNGrams(length, nGramWidth);\n      });\n      if (this.preserveShort && length > 0 && numNGrams === 0) {\n        numNGrams = 1;\n      }\n      nGramsSplits[i] = nGramsSplits[i - 1] + numNGrams;\n    }\n\n    const nGrams: Uint8Array[] = new Array(nGramsSplits[numBatchItems]);\n\n    for (let i = 0; i < numBatchItems; ++i) {\n      const splitIndex = splits[i];\n      let outputStartIdx = nGramsSplits[i];\n      this.nGramWidths.forEach((nGramWidth) => {\n        const length = splits[i + 1] - splits[i];\n        const numNGrams = this.getNumNGrams(length, nGramWidth);\n        this.createNGrams(\n            data, splitIndex, nGrams, outputStartIdx, numNGrams, nGramWidth);\n        outputStartIdx += numNGrams;\n      });\n      // If we're preserving short sequences, check to see if no sequence was\n      // generated by comparing the current output start idx to the original\n      // one (nGramSplitsdata). If no ngrams were generated, then they will\n      // be equal (since we increment outputStartIdx by numNGrams every\n      // time we create a set of ngrams.)\n      if (this.preserveShort && outputStartIdx === nGramsSplits[i]) {\n        const dataLength = splits[i + 1] - splits[i];\n        // One legitimate reason to not have any ngrams when this.preserveShort\n        // is true is if the sequence itself is empty. In that case, move on.\n        if (dataLength === 0) {\n          continue;\n        }\n        // We don't have to worry about dynamic padding sizes here: if padding\n        // was dynamic, every sequence would have had sufficient padding to\n        // generate at least one nGram.\n        const nGramWidth = dataLength + 2 * this.padWidth;\n        const numNGrams = 1;\n        this.createNGrams(\n            data, splitIndex, nGrams, outputStartIdx, numNGrams, nGramWidth);\n      }\n    }\n    return [nGrams, nGramsSplits];\n  }\n}\n\nexport function stringNGramsImpl(\n    data: Uint8Array[], dataSplits: Int32Array, separator: string,\n    nGramWidths: number[], leftPad: string, rightPad: string, padWidth: number,\n    preserveShortSequences: boolean): [Uint8Array[], Int32Array] {\n  return new StringNGramsOp(\n             separator, nGramWidths, leftPad, rightPad, padWidth,\n             preserveShortSequences)\n      .compute(data, dataSplits);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, StringNGrams, StringNGramsAttrs, StringNGramsInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nimport {stringNGramsImpl} from './StringNGrams_impl';\n\nexport function stringNGrams(args: {\n  inputs: StringNGramsInputs,\n  backend: MathBackendCPU,\n  attrs: StringNGramsAttrs\n}): [TensorInfo, TensorInfo] {\n  const {inputs, backend, attrs} = args;\n  const {\n    separator,\n    nGramWidths,\n    leftPad,\n    rightPad,\n    padWidth,\n    preserveShortSequences\n  } = attrs;\n  const {data, dataSplits} = inputs;\n  const $data = backend.data.get(data.dataId).values as Uint8Array[];\n  const $dataSplits = backend.data.get(dataSplits.dataId).values as Int32Array;\n\n  const [nGrams, nGramsSplits] = stringNGramsImpl(\n      $data, $dataSplits, separator, nGramWidths, leftPad, rightPad, padWidth,\n      preserveShortSequences);\n  return [\n    backend.makeTensorInfo([nGrams.length], 'string', nGrams),\n    backend.makeTensorInfo(dataSplits.shape, 'int32', nGramsSplits),\n  ];\n}\n\nexport const stringNGramsConfig: KernelConfig = {\n  kernelName: StringNGrams,\n  backendName: 'cpu',\n  kernelFunc: stringNGrams as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {TypedArray, util} from '@tensorflow/tfjs-core';\n\nfunction split(\n    str: Uint8Array, delimiters: Uint8Array, skipEmpty: boolean): Uint8Array[] {\n  if (!str.length) {\n    return [];\n  }\n  // When the delimiter is empty, the input is split into individual characters.\n  if (delimiters.length === 0) {\n    const result: Uint8Array[] = new Array(str.length);\n    for (let i = 0; i < str.length; ++i) {\n      result[i] = str.subarray(i, i + 1);\n    }\n    return result;\n  }\n  // When there is one delimiter, the input is split only at that delimiter.\n  if (delimiters.length === 1) {\n    const delimiter = delimiters[0];\n    const result: Uint8Array[] = [];\n    let f = str.indexOf(delimiter);\n    while (f !== -1) {\n      const token = str.subarray(0, f);\n      if (!skipEmpty || token.length !== 0) {\n        result.push(token);\n      }\n      str = str.subarray(f + 1);\n      f = str.indexOf(delimiter);\n    }\n    if (!skipEmpty || str.length !== 0) {\n      result.push(str);\n    }\n    return result;\n  }\n  // When there are multiple delimiters, the input is split at every instance\n  // one of the delimiters appears.\n  const result: Uint8Array[] = [];\n  let tokenStart = 0;\n  for (let i = 0; i < str.length + 1; i++) {\n    if ((i === str.length) || (delimiters.indexOf(str[i]) !== -1)) {\n      const token = str.subarray(tokenStart, i);\n      if (!skipEmpty || token.length !== 0) {\n        result.push(token);\n      }\n      tokenStart = i + 1;\n    }\n  }\n  return result;\n}\n\nexport function stringSplitImpl(\n    input: Uint8Array[], delimiter: Uint8Array,\n    skipEmpty: boolean): [TypedArray, Uint8Array[], [number, number]] {\n  const batchSize = input.length;\n\n  // Empty delimiter means split the input character by character.\n  const tokens: Uint8Array[] = [];\n\n  let outputSize = 0;\n  let maxNumEntries = 0;\n  const numIndices: number[] = new Array(batchSize);\n  for (let i = 0; i < batchSize; ++i) {\n    const parts = split(input[i], delimiter, skipEmpty);\n    const nEntries = parts.length;\n    numIndices[i] = nEntries;\n    outputSize += nEntries;\n    maxNumEntries = Math.max(maxNumEntries, nEntries);\n    tokens.push(...parts);\n  }\n\n  const indices = util.getArrayFromDType('int32', outputSize * 2) as TypedArray;\n  const values: Uint8Array[] = new Array(outputSize);\n  const shape: [number, number] = [batchSize, maxNumEntries];\n\n  let c = 0;\n  for (let i = 0; i < batchSize; ++i) {\n    for (let j = 0; j < numIndices[i]; ++j) {\n      // indices is a 2d tensor with shape of [outputSize, 2]\n      indices[c * 2] = i;\n      indices[c * 2 + 1] = j;\n      values[c] = tokens[c];\n      ++c;\n    }\n  }\n\n  return [indices, values, shape];\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, StringSplit, StringSplitAttrs, StringSplitInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nimport {stringSplitImpl} from './StringSplit_impl';\n\nexport function stringSplit(args: {\n  inputs: StringSplitInputs,\n  backend: MathBackendCPU,\n  attrs: StringSplitAttrs\n}): [TensorInfo, TensorInfo, TensorInfo] {\n  const {inputs, backend, attrs} = args;\n  const {skipEmpty} = attrs;\n  const {input, delimiter} = inputs;\n\n  if (input.dtype !== 'string') {\n    throw new Error('Input must be of datatype string');\n  }\n  if (input.shape.length !== 1) {\n    throw new Error(`Input must be a vector, got shape: ${input.shape}`);\n  }\n  if (delimiter.shape.length !== 0) {\n    throw new Error(\n        `Delimiter must be a scalar, got shape: ${delimiter.shape}`);\n  }\n\n  const $input = backend.data.get(input.dataId).values as Uint8Array[];\n  const $delimiter = backend.data.get(delimiter.dataId).values[0] as Uint8Array;\n\n  const [indices, values, shape] =\n      stringSplitImpl($input, $delimiter, skipEmpty);\n  const outputSize = values.length;\n  return [\n    backend.makeTensorInfo([outputSize, 2], 'int32', indices),\n    backend.makeTensorInfo([outputSize], 'string', values),\n    backend.makeTensorInfo([2], 'int32', new Int32Array(shape))\n  ];\n}\n\nexport const stringSplitConfig: KernelConfig = {\n  kernelName: StringSplit,\n  backendName: 'cpu',\n  kernelFunc: stringSplit as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, StringToHashBucketFast, StringToHashBucketFastAttrs, StringToHashBucketFastInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nimport {stringToHashBucketFastImpl} from './StringToHashBucketFast_impl';\n\nexport function stringToHashBucketFast(args: {\n  inputs: StringToHashBucketFastInputs,\n  backend: MathBackendCPU,\n  attrs: StringToHashBucketFastAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {numBuckets} = attrs;\n  const {input} = inputs;\n\n  if (input.dtype !== 'string') {\n    throw new Error('Input must be of datatype string');\n  }\n  if (numBuckets <= 0) {\n    throw new Error(`Number of buckets must be at least 1`);\n  }\n\n  const $input = backend.data.get(input.dataId).values as Uint8Array[];\n\n  const output = stringToHashBucketFastImpl($input, numBuckets);\n  return backend.makeTensorInfo(input.shape, 'int32', output);\n}\n\nexport const stringToHashBucketFastConfig: KernelConfig = {\n  kernelName: StringToHashBucketFast,\n  backendName: 'cpu',\n  kernelFunc: stringToHashBucketFast as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {TypedArray, util} from '@tensorflow/tfjs-core';\n\nexport function stringToHashBucketFastImpl(\n    input: Uint8Array[], numBuckets: number): TypedArray {\n  const output = util.getArrayFromDType('int32', input.length) as TypedArray;\n\n  for (let i = 0; i < input.length; ++i) {\n    output[i] =\n        util.fingerPrint64(input[i]).modulo(numBuckets).getLowBitsUnsigned();\n  }\n\n  return output;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Tan} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nexport const tan = unaryKernelFunc(Tan, (xi) => Math.tan(xi));\n\nexport const tanConfig: KernelConfig = {\n  kernelName: Tan,\n  backendName: 'cpu',\n  kernelFunc: tan,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Tanh} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nexport const tanh = unaryKernelFunc(Tanh, (xi) => Math.tanh(xi));\n\nexport const tanhConfig: KernelConfig = {\n  kernelName: Tanh,\n  backendName: 'cpu',\n  kernelFunc: tanh,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, Tile, TileAttrs, TileInputs} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\nimport {tileImpl} from './Tile_impl';\n\nexport function tile(\n    args: {inputs: TileInputs, backend: MathBackendCPU, attrs: TileAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {reps} = attrs;\n\n  assertNotComplex(x, 'tile');\n  const outBuf = tileImpl(backend.bufferSync(x), reps);\n\n  return backend.makeTensorInfo(outBuf.shape, outBuf.dtype, outBuf.values);\n}\n\nexport const tileConfig: KernelConfig = {\n  kernelName: Tile,\n  backendName: 'cpu',\n  kernelFunc: tile as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {buffer, DataType, Rank, TensorBuffer} from '@tensorflow/tfjs-core';\n\n/**\n * An implementation of the tile kernel shared between webgl and cpu for string\n * tensors only.\n */\n\nexport function tileImpl<R extends Rank>(\n    xBuf: TensorBuffer<R, DataType>,\n    reps: number[]): TensorBuffer<R, DataType> {\n  const newShape: number[] = new Array(xBuf.rank);\n  for (let i = 0; i < newShape.length; i++) {\n    newShape[i] = xBuf.shape[i] * reps[i];\n  }\n  const result = buffer(newShape, xBuf.dtype);\n  for (let i = 0; i < result.values.length; ++i) {\n    const newLoc = result.indexToLoc(i);\n\n    const originalLoc: number[] = new Array(xBuf.rank);\n    for (let j = 0; j < originalLoc.length; j++) {\n      originalLoc[j] = newLoc[j] % xBuf.shape[j];\n    }\n\n    const originalIndex = xBuf.locToIndex(originalLoc);\n\n    result.values[i] = xBuf.values[originalIndex];\n  }\n  return result as TensorBuffer<R, DataType>;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/** An implementation of the TopK kernel shared between webgl and cpu. */\n\nimport {buffer, NumericDataType, Rank, ShapeMap, Tensor, TensorBuffer, TypedArray, util} from '@tensorflow/tfjs-core';\n\ntype Pair = {\n  value: number,\n  index: number\n};\n\nconst comparePair = (a: Pair, b: Pair) => {\n  const valueDiff = b.value - a.value;\n  return valueDiff === 0 ? a.index - b.index : valueDiff;\n};\n\n/**\n * Partitions array where all elements smaller than the (k+1) smallest element\n * are found to the left of it, and all larger to the right of it.\n * Based on the Floyd-Rivest Algorithm, ref:\n * https://en.wikipedia.org/wiki/Floyd%E2%80%93Rivest_algorithm\n * @param array: Array to partition\n * @param left: Left index for the interval\n * @param right: Right index for the interval\n * @param k: Desired index value, where array[k] is the (k+1)th smallest element\n *           when left = 0\n */\nfunction select(array: Pair[], k: number, left = 0, right = array.length - 1) {\n  while (right > left) {\n    // Use select recursively to sample a smaller set of size s\n    // the arbitrary constants 600 and 0.5 are used in the original\n    // version to minimize execution time.\n    if (right - left > 600) {\n      const n = right - left + 1;\n      const i = k - left + 1;\n      const z = Math.log(n);\n      const s = 0.5 * Math.exp(2 * z / 3);\n      const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * Math.sign(i - n / 2);\n      const newLeft = Math.max(left, Math.floor(k - i * s / n + sd));\n      const newRight = Math.min(right, Math.floor(k + (n - i) * s / n + sd));\n      select(array, k, newLeft, newRight);\n    }\n    // partition the elements between left and right around t\n    const t = array[k];\n    let i = left;\n    let j = right;\n\n    util.swap(array, left, k);\n\n    if (comparePair(array[right], t) > 0) {\n      util.swap(array, left, right);\n    }\n    while (i < j) {\n      util.swap(array, i, j);\n      i++;\n      j--;\n      while (comparePair(array[i], t) < 0) {\n        i = i + 1;\n      }\n      while (comparePair(array[j], t) > 0) {\n        j = j - 1;\n      }\n    }\n    if (comparePair(array[left], t) === 0) {\n      util.swap(array, left, j);\n    } else {\n      j = j + 1;\n      util.swap(array, j, right);\n    }\n    // Adjust left and right towards the boundaries of the subset\n    // containing the (k - left + 1)th smallest element.\n    if (j <= k) {\n      left = j + 1;\n    }\n    if (k <= j) {\n      right = j - 1;\n    }\n  }\n}\n\nexport function topKImpl<T extends Tensor, R extends Rank>(\n    x: TypedArray, xShape: number[], xDtype: NumericDataType, k: number,\n    sorted: boolean):\n    [TensorBuffer<R, NumericDataType>, TensorBuffer<R, 'int32'>] {\n  // Reshape into a 2d tensor [batch, lastDim] and compute topk along lastDim.\n  const lastDim = xShape[xShape.length - 1];\n  const [batch, size] = [x.length / lastDim, lastDim];\n  const allTopKVals = util.getTypedArrayFromDType(xDtype, batch * k);\n  const allTopKIndices = util.getTypedArrayFromDType('int32', batch * k);\n\n  for (let b = 0; b < batch; b++) {\n    const offset = b * size;\n    const vals = x.subarray(offset, offset + size);\n\n    let valAndInd: Pair[] = new Array(vals.length);\n    vals.forEach(\n        (value: number, index: number) => valAndInd[index] = {value, index});\n\n    if (k < valAndInd.length) {\n      select(valAndInd, k);\n      valAndInd = valAndInd.slice(0, k);\n    }\n\n    if (sorted) {\n      valAndInd.sort(comparePair);\n    }\n    \n    const outOffset = b * k;\n    const topKVals = allTopKVals.subarray(outOffset, outOffset + k);\n    const topKIndices = allTopKIndices.subarray(outOffset, outOffset + k);\n    for (let i = 0; i < k; i++) {\n      topKVals[i] = valAndInd[i].value;\n      topKIndices[i] = valAndInd[i].index;\n    }\n  }\n  // Reshape back to the original input shape, except that the last\n  // dimension is k.\n  const outputShape = xShape.slice();\n  outputShape[outputShape.length - 1] = k;\n\n  return [\n    buffer(outputShape as ShapeMap[R], xDtype, allTopKVals),\n    buffer(outputShape as ShapeMap[R], 'int32', allTopKIndices)\n  ];\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, NumericDataType, TensorInfo, TopK, TopKAttrs, TopKInputs, TypedArray} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\nimport {topKImpl} from './TopK_impl';\n\nexport function topK(\n    args: {inputs: TopKInputs, backend: MathBackendCPU, attrs: TopKAttrs}):\n    [TensorInfo, TensorInfo] {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {k, sorted} = attrs;\n\n  assertNotComplex(x, 'topk');\n\n  const xVals = backend.data.get(x.dataId).values as TypedArray;\n  const [allTopKVals, allTopKIndices] =\n      topKImpl(xVals, x.shape, x.dtype as NumericDataType, k, sorted);\n\n  return [\n    backend.makeTensorInfo(\n        allTopKVals.shape, allTopKVals.dtype, allTopKVals.values),\n    backend.makeTensorInfo(\n        allTopKIndices.shape, allTopKIndices.dtype, allTopKIndices.values)\n  ];\n}\n\nexport const topKConfig: KernelConfig = {\n  kernelName: TopK,\n  backendName: 'cpu',\n  kernelFunc: topK as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, NumericDataType, TensorInfo, Transform, TransformAttrs, TransformInputs, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nexport function transform(args: {\n  inputs: TransformInputs,\n  attrs: TransformAttrs,\n  backend: MathBackendCPU\n}): TensorInfo {\n  const {inputs, attrs, backend} = args;\n  const {image, transforms} = inputs;\n  const {interpolation, fillMode, fillValue, outputShape} = attrs;\n\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n  const [outHeight, outWidth] =\n      outputShape != null ? outputShape : [imageHeight, imageWidth];\n  const outShape = [batch, outHeight, outWidth, numChannels];\n\n  const strides = util.computeStrides(image.shape);\n  const batchStride = strides[0];\n  const rowStride = strides[1];\n  const colStride = strides[2];\n\n  const outVals = util.getTypedArrayFromDType(\n      image.dtype as NumericDataType, util.sizeFromShape(outShape));\n\n  outVals.fill(fillValue);\n\n  const imageVals = backend.data.get(image.dataId).values as TypedArray;\n  const transformVals =\n      backend.data.get(transforms.dataId).values as TypedArray;\n\n  // Ref TF implementation:\n  // https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/image/image_ops.h\n  for (let b = 0; b < batch; ++b) {\n    const transform = transforms.shape[0] === 1 ?\n        transformVals :\n        transformVals.subarray(b * 8, b * 8 + 8);\n\n    for (let outY = 0; outY < outHeight; ++outY) {\n      for (let outX = 0; outX < outWidth; ++outX) {\n        for (let channel = 0; channel < numChannels; ++channel) {\n          let val;\n\n          const projection = transform[6] * outX + transform[7] * outY + 1;\n\n          if (projection === 0) {\n            // Return the fill value for infinite coordinates,\n            // which are outside the input image\n            continue;\n          }\n\n          const inX =\n              (transform[0] * outX + transform[1] * outY + transform[2]) /\n              projection;\n          const inY =\n              (transform[3] * outX + transform[4] * outY + transform[5]) /\n              projection;\n\n          const x = mapCoord(inX, imageWidth, fillMode);\n          const y = mapCoord(inY, imageHeight, fillMode);\n\n          switch (interpolation) {\n            case 'nearest':\n              val = nearestInterpolation(\n                  imageVals, imageHeight, imageWidth, batchStride, rowStride,\n                  colStride, b, y, x, channel, fillValue);\n              break;\n            case 'bilinear':\n              val = bilinearInterpolation(\n                  imageVals, imageHeight, imageWidth, batchStride, rowStride,\n                  colStride, b, y, x, channel, fillValue);\n              break;\n            default:\n              throw new Error(\n                  `Error in Transform: Expect 'nearest' or ` +\n                  `'bilinear', but got ${interpolation}`);\n          }\n\n          const ind =\n              b * batchStride + outY * rowStride + outX * colStride + channel;\n\n          outVals[ind] = val;\n        }\n      }\n    }\n\n    return backend.makeTensorInfo(outShape, image.dtype, outVals);\n  }\n\n  const dataId = backend.write(outVals, outShape, image.dtype);\n  return {dataId, shape: image.shape, dtype: image.dtype};\n}\n\nexport const transformConfig: KernelConfig = {\n  kernelName: Transform,\n  backendName: 'cpu',\n  kernelFunc: transform as {} as KernelFunc\n};\n\nfunction mapCoord(\n    outCoord: number, len: number,\n    mode: 'constant'|'reflect'|'wrap'|'nearest') {\n  switch (mode) {\n    case 'reflect':\n      return mapCoordReflect(outCoord, len);\n    case 'wrap':\n      return mapCoordWrap(outCoord, len);\n    case 'nearest':\n      return mapCoordNearest(outCoord, len);\n    case 'constant':\n    default:\n      return mapCoordConstant(outCoord, len);\n  }\n}\n\nfunction mapCoordReflect(outCoord: number, len: number): number {\n  // Reflect [abcd] to [dcba|abcd|dcba].\n  let inCoord = outCoord;\n  if (inCoord < 0) {\n    if (len <= 1) {\n      inCoord = 0;\n    } else {\n      const sz2 = 2 * len;\n      if (inCoord < sz2) {\n        inCoord = sz2 * Math.trunc(-inCoord / sz2) + inCoord;\n      }\n      inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1;\n    }\n  } else if (inCoord > len - 1) {\n    if (len <= 1) {\n      inCoord = 0;\n    } else {\n      const sz2 = 2 * len;\n      inCoord -= sz2 * Math.trunc(inCoord / sz2);\n      if (inCoord >= len) {\n        inCoord = sz2 - inCoord - 1;\n      }\n    }\n  }\n  // clamp is necessary because when outCoord = 3.5 and len = 4,\n  // inCoord = 3.5 and will be rounded to 4 in nearest interpolation.\n  return util.clamp(0, inCoord, len - 1);\n}\n\nfunction mapCoordWrap(outCoord: number, len: number): number {\n  // Wrap [abcd] to [abcd|abcd|abcd].\n  let inCoord = outCoord;\n  if (inCoord < 0) {\n    if (len <= 1) {\n      inCoord = 0;\n    } else {\n      const sz = len - 1;\n      inCoord += len * (Math.trunc(-inCoord / sz) + 1);\n    }\n  } else if (inCoord > len - 1) {\n    if (len <= 1) {\n      inCoord = 0;\n    } else {\n      const sz = len - 1;\n      inCoord -= len * Math.trunc(inCoord / sz);\n    }\n  }\n  // clamp is necessary because when outCoord = -0.5 and len = 4,\n  // inCoord = 3.5 and will be rounded to 4 in nearest interpolation.\n  return util.clamp(0, inCoord, len - 1);\n}\n\nfunction mapCoordConstant(outCoord: number, len: number): number {\n  return outCoord;\n}\n\nfunction mapCoordNearest(outCoord: number, len: number): number {\n  return util.clamp(0, outCoord, len - 1);\n}\n\nfunction readWithFillValue(\n    imageVals: TypedArray, imageHeight: number, imageWidth: number,\n    batchStride: number, rowStride: number, colStride: number, batch: number,\n    y: number, x: number, channel: number, fillValue: number): number {\n  const ind = batch * batchStride + y * rowStride + x * colStride + channel;\n  if (0 <= y && y < imageHeight && 0 <= x && x < imageWidth) {\n    return imageVals[ind];\n  } else {\n    return fillValue;\n  }\n}\n\nfunction nearestInterpolation(\n    imageVals: TypedArray, imageHeight: number, imageWidth: number,\n    batchStride: number, rowStride: number, colStride: number, batch: number,\n    y: number, x: number, channel: number, fillValue: number): number {\n  const $y = Math.round(y);\n  const $x = Math.round(x);\n\n  return readWithFillValue(\n      imageVals, imageHeight, imageWidth, batchStride, rowStride, colStride,\n      batch, $y, $x, channel, fillValue);\n}\n\nfunction bilinearInterpolation(\n    imageVals: TypedArray, imageHeight: number, imageWidth: number,\n    batchStride: number, rowStride: number, colStride: number, batch: number,\n    y: number, x: number, channel: number, fillValue: number) {\n  const yFloor = Math.floor(y);\n  const xFloor = Math.floor(x);\n  const yCeil = yFloor + 1;\n  const xCeil = xFloor + 1;\n  // f(x, yFloor) = (xCeil - x) / (xCeil - xFloor) * f(xFloor, yFloor)\n  //               + (x - xFloor) / (xCeil - xFloor) * f(xCeil, yFloor)\n  const valueYFloor =\n      (xCeil - x) *\n          readWithFillValue(\n              imageVals, imageHeight, imageWidth, batchStride, rowStride,\n              colStride, batch, yFloor, xFloor, channel, fillValue) +\n      (x - xFloor) *\n          readWithFillValue(\n              imageVals, imageHeight, imageWidth, batchStride, rowStride,\n              colStride, batch, yFloor, xCeil, channel, fillValue);\n  // f(x, yCeil) = (xCeil - x) / (xCeil - xFloor) * f(xFloor, yCeil)\n  //             + (x - xFloor) / (xCeil - xFloor) * f(xCeil, yCeil)\n  const valueYCeil =\n      (xCeil - x) *\n          readWithFillValue(\n              imageVals, imageHeight, imageWidth, batchStride, rowStride,\n              colStride, batch, yCeil, xFloor, channel, fillValue) +\n      (x - xFloor) *\n          readWithFillValue(\n              imageVals, imageHeight, imageWidth, batchStride, rowStride,\n              colStride, batch, yCeil, xCeil, channel, fillValue);\n  // f(x, y) = (yCeil - y) / (yCeil - yFloor) * f(x, yFloor)\n  //         + (y - yFloor) / (yCeil - yFloor) * f(x, yCeil)\n  return (yCeil - y) * valueYFloor + (y - yFloor) * valueYCeil;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, Unique, UniqueAttrs, UniqueInputs} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nimport {uniqueImpl} from './Unique_impl';\n\nexport function unique(\n    args: {inputs: UniqueInputs, attrs: UniqueAttrs, backend: MathBackendCPU}):\n    TensorInfo[] {\n  const {inputs, attrs, backend} = args;\n  const {axis} = attrs;\n  const {x} = inputs;\n  assertNotComplex(x, 'unique');\n\n  const values = backend.data.get(x.dataId).values;\n  const {outputValues, outputShape, indices} =\n      uniqueImpl(values, axis, x.shape, x.dtype);\n  return [\n    backend.makeTensorInfo(outputShape, x.dtype, outputValues),\n    backend.makeTensorInfo([indices.length], 'int32', indices),\n  ];\n}\n\nexport const uniqueConfig: KernelConfig = {\n  kernelName: Unique,\n  backendName: 'cpu',\n  kernelFunc: unique as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BackendValues, DataType, TensorBuffer, TypedArray, util} from '@tensorflow/tfjs-core';\n\nexport function uniqueImpl(\n    values: BackendValues, axis: number, shape: number[], dtype: DataType): {\n  outputValues: BackendValues,\n  outputShape: number[],\n  indices: BackendValues\n} {\n  // Normalize and validate axis.\n  const $axis = util.parseAxisParam(axis, shape)[0];\n\n  // Calculate the new shape that is suitable for extracting data along the\n  // given axis.\n  //\n  // The rank is 3.\n  // The size of the 1st dimension is the size of all the axes < the given axis.\n  // The size of the 2nd dimension is the same as the size of the given axis.\n  // The size of the 3rd dimension is the size of all the axes > the given axis.\n  //\n  // For example, for a 4D tensor with shape=[2, 3, 5, 4] and axis=2, the\n  // newShape would be: [2*3, 5, 4].\n  //\n  // Note that this is not the final output shape. This will be the shape for an\n  // intermediate TensorBuffer (see inputBuffer below) to allow us to extract\n  // values along the given axis. To demonstrate how it works, consider the\n  // following example:\n  //\n  // Input: a 3D tensor, with shape [1, 2, 3]\n  // [\n  //   [\n  //      [1,2,3],\n  //      [4,5,6]\n  //   ]\n  // ]\n  // Axis: 2 (the last axis).\n  // Along axis 2, we expect to extract 3 tensors: [1,4], [2,5], [3,6].\n  //\n  // For this example, newShape would be: [2, 3, 1], where 2 is calculated from\n  // 1*2. The re-shaped data would look like:\n  //\n  // [\n  //   [\n  //     [1], [2], [3]\n  //   ],\n  //   [\n  //     [4], [5], [6]\n  //   ]\n  // ]\n  //\n  // Then, we can construct a 3-level nested loop by the following dimension\n  // order to extract the values along the axis (dimension1):\n  // i: dimension1       // 0,1,2 (newShape[1])\n  //   m: dimension0     // 0,1   (newShape[0])\n  //     n: dimension2   // 0     (newShape[2])\n  //\n  //                       m, i, n\n  //                      ---------\n  // Iteration 0: data at [0, 0, 0] => \"1\"\n  // Iteration 1: data at [1, 0, 0] => \"4\"\n  // We got [1,4].\n  // Iteration 2: data at [0, 1, 0] => \"2\"\n  // Iteration 3: data at [1, 1, 0] => \"5\"\n  // We got [2,5].\n  // Iteration 4: data at [0, 2, 0] => \"3\"\n  // Iteration 5: data at [1, 2, 0] => \"6\"\n  // We got [3,6].\n  const newShape = [1, shape[0], 1];\n  for (let i = 0; i < $axis; i++) {\n    newShape[0] *= shape[i];\n  }\n  newShape[1] = shape[$axis];\n  for (let i = $axis + 1; i < shape.length; i++) {\n    newShape[2] *= shape[i];\n  }\n\n  // A map from unique elements (their string representations) to their values\n  // in \"indices\" (below).\n  const uniqueElements: {[key: string]: number} = {};\n  // The indices of each unique element in the original tensor along the given\n  // axis. It is 1D and has the same size as the given axis.\n  const indices = new Int32Array(shape[$axis]);\n  // Create a buffer so we can easily extract value at a given location.\n  const inputBuffer = new TensorBuffer(newShape, dtype, values as TypedArray);\n  // The indices along the given axis that have unique elements. This is a\n  // de-duped version of \"indices\" above.\n  const uniqueIndices: number[] = [];\n  const is1DTensor = newShape[0] === 1 && newShape[2] === 1;\n  for (let i = 0; i < shape[$axis]; i++) {\n    // Extract values along the axis.\n    let element: string;\n    if (is1DTensor) {\n      // Fast path for 1D tensor input.\n      element = values[i].toString();\n    } else {\n      const axisValues = [];\n      for (let m = 0; m < newShape[0]; m++) {\n        for (let n = 0; n < newShape[2]; n++) {\n          axisValues.push(inputBuffer.get(m, i, n));\n        }\n      }\n      element = axisValues.join(',');\n    }\n\n    // Dedup and update various indices.\n    if (uniqueElements[element] !== undefined) {\n      indices[i] = uniqueElements[element];\n    } else {\n      const uniqueIndex = Object.keys(uniqueElements).length;\n      uniqueElements[element] = uniqueIndex;\n      indices[i] = uniqueIndex;\n      uniqueIndices.push(i);\n    }\n  }\n\n  // Now we know where each of the unique elements are located along the axis\n  // (uniqueIndices). Extract them from input buffer and store them in the\n  // output buffer.\n  const outputTmpShape = newShape.slice();\n  outputTmpShape[1] = Object.keys(uniqueElements).length;\n  const outputBuffer = new TensorBuffer(outputTmpShape, dtype);\n  uniqueIndices.forEach((uniqueElementIndex, i) => {\n    for (let m = 0; m < newShape[0]; m++) {\n      for (let n = 0; n < newShape[2]; n++) {\n        outputBuffer.set(inputBuffer.get(m, uniqueElementIndex, n), m, i, n);\n      }\n    }\n  });\n\n  // The output shape can be calculated from the input shape with the size of\n  // the given axis replaced by the number of unique elements along that axis.\n  const outputShape = shape.slice();\n  outputShape[$axis] = outputTmpShape[1];\n\n  return {\n    outputValues: outputBuffer.values as BackendValues,\n    outputShape,\n    indices,\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, Unpack, UnpackAttrs, UnpackInputs} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {reshape} from './Reshape';\nimport {slice} from './Slice';\n\nexport function unpack(\n    args: {inputs: UnpackInputs, backend: MathBackendCPU, attrs: UnpackAttrs}):\n    TensorInfo[] {\n  const {inputs, backend, attrs} = args;\n  const {value} = inputs;\n  let {axis} = attrs;\n\n  if (axis < 0) {\n    axis += value.shape.length;\n  }\n\n  const valueRank = value.shape.length;\n\n  const num = value.shape[axis];\n  const outShape: number[] = new Array(valueRank - 1);\n  let outIndex = 0;\n  for (let i = 0; i < valueRank; i++) {\n    if (i !== axis) {\n      outShape[outIndex++] = value.shape[i];\n    }\n  }\n\n  const begin = new Array(valueRank).fill(0);\n  const size = value.shape.slice();\n  size[axis] = 1;\n  const res = new Array(num);\n  for (let i = 0; i < res.length; i++) {\n    begin[axis] = i;\n    const tempRes = slice({inputs: {x: value}, backend, attrs: {begin, size}});\n    res[i] = reshape({inputs: {x: tempRes}, backend, attrs: {shape: outShape}});\n    backend.disposeIntermediateTensorInfo(tempRes);\n  }\n\n  return res;\n}\n\nexport const unpackConfig: KernelConfig = {\n  kernelName: Unpack,\n  backendName: 'cpu',\n  kernelFunc: unpack as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// We explicitly import the modular kernels so they get registered in the\n// global registry when we compile the library. A modular build would replace\n// the contents of this file and import only the kernels that are needed.\nimport {KernelConfig, registerKernel} from '@tensorflow/tfjs-core';\n\nimport {_fusedMatMulConfig} from './kernels/_FusedMatMul';\nimport {absConfig} from './kernels/Abs';\nimport {acosConfig} from './kernels/Acos';\nimport {acoshConfig} from './kernels/Acosh';\nimport {addConfig} from './kernels/Add';\nimport {addNConfig} from './kernels/AddN';\nimport {allConfig} from './kernels/All';\nimport {anyConfig} from './kernels/Any';\nimport {argMaxConfig} from './kernels/ArgMax';\nimport {argMinConfig} from './kernels/ArgMin';\nimport {asinConfig} from './kernels/Asin';\nimport {asinhConfig} from './kernels/Asinh';\nimport {atanConfig} from './kernels/Atan';\nimport {atan2Config} from './kernels/Atan2';\nimport {atanhConfig} from './kernels/Atanh';\nimport {avgPoolConfig} from './kernels/AvgPool';\nimport {avgPool3DConfig} from './kernels/AvgPool3D';\nimport {avgPool3DGradConfig} from './kernels/AvgPool3DGrad';\nimport {avgPoolGradConfig} from './kernels/AvgPoolGrad';\nimport {batchMatMulConfig} from './kernels/BatchMatMul';\nimport {batchNormConfig} from './kernels/BatchNorm';\nimport {batchToSpaceNDConfig} from './kernels/BatchToSpaceND';\nimport {bincountConfig} from './kernels/Bincount';\nimport {castConfig} from './kernels/Cast';\nimport {ceilConfig} from './kernels/Ceil';\nimport {clipConfig} from './kernels/Clip';\nimport {complexConfig} from './kernels/Complex';\nimport {complexAbsConfig} from './kernels/ComplexAbs';\nimport {concatConfig} from './kernels/Concat';\nimport {conv2DConfig} from './kernels/Conv2D';\nimport {conv2DBackpropFilterConfig} from './kernels/Conv2DBackpropFilter';\nimport {conv2DBackpropInputConfig} from './kernels/Conv2DBackpropInput';\nimport {conv3DConfig} from './kernels/Conv3D';\nimport {conv3DBackpropFilterV2Config} from './kernels/Conv3DBackpropFilterV2';\nimport {conv3DBackpropInputV2Config} from './kernels/Conv3DBackpropInputV2';\nimport {cosConfig} from './kernels/Cos';\nimport {coshConfig} from './kernels/Cosh';\nimport {cropAndResizeConfig} from './kernels/CropAndResize';\nimport {cumsumConfig} from './kernels/Cumsum';\nimport {denseBincountConfig} from './kernels/DenseBincount';\nimport {depthToSpaceConfig} from './kernels/DepthToSpace';\nimport {depthwiseConv2dNativeConfig} from './kernels/DepthwiseConv2dNative';\nimport {depthwiseConv2dNativeBackpropFilterConfig} from './kernels/DepthwiseConv2dNativeBackpropFilter';\nimport {depthwiseConv2dNativeBackpropInputConfig} from './kernels/DepthwiseConv2dNativeBackpropInput';\nimport {diagConfig} from './kernels/Diag';\nimport {dilation2dConfig} from './kernels/Dilation2D';\nimport {dilation2dBackpropFilterConfig} from './kernels/Dilation2DBackpropFilter';\nimport {dilation2dBackpropInputConfig} from './kernels/Dilation2DBackpropInput';\nimport {einsumConfig} from './kernels/Einsum';\nimport {eluConfig} from './kernels/Elu';\nimport {eluGradConfig} from './kernels/EluGrad';\nimport {equalConfig} from './kernels/Equal';\nimport {erfConfig} from './kernels/Erf';\nimport {expConfig} from './kernels/Exp';\nimport {expandDimsConfig} from './kernels/ExpandDims';\nimport {expm1Config} from './kernels/Expm1';\nimport {fftConfig} from './kernels/FFT';\nimport {fillConfig} from './kernels/Fill';\nimport {flipLeftRightConfig} from './kernels/FlipLeftRight';\nimport {floorConfig} from './kernels/Floor';\nimport {floorDivConfig} from './kernels/FloorDiv';\nimport {fusedConv2DConfig} from './kernels/FusedConv2D';\nimport {fusedDepthwiseConv2DConfig} from './kernels/FusedDepthwiseConv2D';\nimport {gatherNdConfig} from './kernels/GatherNd';\nimport {gatherV2Config} from './kernels/GatherV2';\nimport {greaterConfig} from './kernels/Greater';\nimport {greaterEqualConfig} from './kernels/GreaterEqual';\nimport {identityConfig} from './kernels/Identity';\nimport {ifftConfig} from './kernels/IFFT';\nimport {imagConfig} from './kernels/Imag';\nimport {isFiniteConfig} from './kernels/IsFinite';\nimport {isInfConfig} from './kernels/IsInf';\nimport {isNaNConfig} from './kernels/IsNaN';\nimport {leakyReluConfig} from './kernels/LeakyRelu';\nimport {lessConfig} from './kernels/Less';\nimport {lessEqualConfig} from './kernels/LessEqual';\nimport {linSpaceConfig} from './kernels/LinSpace';\nimport {logConfig} from './kernels/Log';\nimport {log1pConfig} from './kernels/Log1p';\nimport {logicalAndConfig} from './kernels/LogicalAnd';\nimport {logicalNotConfig} from './kernels/LogicalNot';\nimport {logicalOrConfig} from './kernels/LogicalOr';\nimport {lRNConfig} from './kernels/LRN';\nimport {lRNGradConfig} from './kernels/LRNGrad';\nimport {maxConfig} from './kernels/Max';\nimport {maximumConfig} from './kernels/Maximum';\nimport {maxPoolConfig} from './kernels/MaxPool';\nimport {maxPool3DConfig} from './kernels/MaxPool3D';\nimport {maxPool3DGradConfig} from './kernels/MaxPool3DGrad';\nimport {maxPoolGradConfig} from './kernels/MaxPoolGrad';\nimport {maxPoolWithArgmaxConfig} from './kernels/MaxPoolWithArgmax';\nimport {meanConfig} from './kernels/Mean';\nimport {minConfig} from './kernels/Min';\nimport {minimumConfig} from './kernels/Minimum';\nimport {mirrorPadConfig} from './kernels/MirrorPad';\nimport {modConfig} from './kernels/Mod';\nimport {multinomialConfig} from './kernels/Multinomial';\nimport {multiplyConfig} from './kernels/Multiply';\nimport {negConfig} from './kernels/Neg';\nimport {nonMaxSuppressionV3Config} from './kernels/NonMaxSuppressionV3';\nimport {nonMaxSuppressionV4Config} from './kernels/NonMaxSuppressionV4';\nimport {nonMaxSuppressionV5Config} from './kernels/NonMaxSuppressionV5';\nimport {notEqualConfig} from './kernels/NotEqual';\nimport {oneHotConfig} from './kernels/OneHot';\nimport {onesLikeConfig} from './kernels/OnesLike';\nimport {packConfig} from './kernels/Pack';\nimport {padV2Config} from './kernels/PadV2';\nimport {powConfig} from './kernels/Pow';\nimport {preluConfig} from './kernels/Prelu';\nimport {prodConfig} from './kernels/Prod';\nimport {rangeConfig} from './kernels/Range';\nimport {realConfig} from './kernels/Real';\nimport {realDivConfig} from './kernels/RealDiv';\nimport {reciprocalConfig} from './kernels/Reciprocal';\nimport {reluConfig} from './kernels/Relu';\nimport {relu6Config} from './kernels/Relu6';\nimport {reshapeConfig} from './kernels/Reshape';\nimport {resizeBilinearConfig} from './kernels/ResizeBilinear';\nimport {resizeBilinearGradConfig} from './kernels/ResizeBilinearGrad';\nimport {resizeNearestNeighborConfig} from './kernels/ResizeNearestNeighbor';\nimport {resizeNearestNeighborGradConfig} from './kernels/ResizeNearestNeighborGrad';\nimport {reverseConfig} from './kernels/Reverse';\nimport {rotateWithOffsetConfig} from './kernels/RotateWithOffset';\nimport {roundConfig} from './kernels/Round';\nimport {rsqrtConfig} from './kernels/Rsqrt';\nimport {scatterNdConfig} from './kernels/ScatterNd';\nimport {selectConfig} from './kernels/Select';\nimport {seluConfig} from './kernels/Selu';\nimport {sigmoidConfig} from './kernels/Sigmoid';\nimport {signConfig} from './kernels/Sign';\nimport {sinConfig} from './kernels/Sin';\nimport {sinhConfig} from './kernels/Sinh';\nimport {sliceConfig} from './kernels/Slice';\nimport {softmaxConfig} from './kernels/Softmax';\nimport {softplusConfig} from './kernels/Softplus';\nimport {spaceToBatchNDConfig} from './kernels/SpaceToBatchND';\nimport {sparseFillEmptyRowsConfig} from './kernels/SparseFillEmptyRows';\nimport {sparseReshapeConfig} from './kernels/SparseReshape';\nimport {sparseSegmentMeanConfig} from './kernels/SparseSegmentMean';\nimport {sparseSegmentSumConfig} from './kernels/SparseSegmentSum';\nimport {sparseToDenseConfig} from './kernels/SparseToDense';\nimport {splitVConfig} from './kernels/SplitV';\nimport {sqrtConfig} from './kernels/Sqrt';\nimport {squareConfig} from './kernels/Square';\nimport {squaredDifferenceConfig} from './kernels/SquaredDifference';\nimport {stepConfig} from './kernels/Step';\nimport {stridedSliceConfig} from './kernels/StridedSlice';\nimport {stringNGramsConfig} from './kernels/StringNGrams';\nimport {stringSplitConfig} from './kernels/StringSplit';\nimport {stringToHashBucketFastConfig} from './kernels/StringToHashBucketFast';\nimport {subConfig} from './kernels/Sub';\nimport {sumConfig} from './kernels/Sum';\nimport {tanConfig} from './kernels/Tan';\nimport {tanhConfig} from './kernels/Tanh';\nimport {tileConfig} from './kernels/Tile';\nimport {topKConfig} from './kernels/TopK';\nimport {transformConfig} from './kernels/Transform';\nimport {transposeConfig} from './kernels/Transpose';\nimport {uniqueConfig} from './kernels/Unique';\nimport {unpackConfig} from './kernels/Unpack';\nimport {unsortedSegmentSumConfig} from './kernels/UnsortedSegmentSum';\nimport {zerosLikeConfig} from './kernels/ZerosLike';\n\n// List all kernel configs here\nconst kernelConfigs: KernelConfig[] = [\n  _fusedMatMulConfig,\n  absConfig,\n  acosConfig,\n  acoshConfig,\n  addConfig,\n  addNConfig,\n  allConfig,\n  anyConfig,\n  argMaxConfig,\n  argMinConfig,\n  asinConfig,\n  asinhConfig,\n  atanConfig,\n  atan2Config,\n  atanhConfig,\n  avgPoolConfig,\n  avgPool3DConfig,\n  avgPool3DGradConfig,\n  avgPoolGradConfig,\n  batchMatMulConfig,\n  batchNormConfig,\n  batchToSpaceNDConfig,\n  bincountConfig,\n  castConfig,\n  ceilConfig,\n  clipConfig,\n  complexConfig,\n  complexAbsConfig,\n  concatConfig,\n  conv2DBackpropFilterConfig,\n  conv2DBackpropInputConfig,\n  conv2DConfig,\n  conv3DBackpropFilterV2Config,\n  conv3DBackpropInputV2Config,\n  conv3DConfig,\n  cosConfig,\n  coshConfig,\n  cropAndResizeConfig,\n  cumsumConfig,\n  denseBincountConfig,\n  depthToSpaceConfig,\n  depthwiseConv2dNativeConfig,\n  depthwiseConv2dNativeBackpropFilterConfig,\n  depthwiseConv2dNativeBackpropInputConfig,\n  diagConfig,\n  dilation2dConfig,\n  dilation2dBackpropInputConfig,\n  dilation2dBackpropFilterConfig,\n  realDivConfig,\n  einsumConfig,\n  eluConfig,\n  eluGradConfig,\n  equalConfig,\n  erfConfig,\n  expConfig,\n  expandDimsConfig,\n  expm1Config,\n  fftConfig,\n  fillConfig,\n  flipLeftRightConfig,\n  floorConfig,\n  floorDivConfig,\n  fusedConv2DConfig,\n  fusedDepthwiseConv2DConfig,\n  gatherNdConfig,\n  gatherV2Config,\n  greaterConfig,\n  greaterEqualConfig,\n  identityConfig,\n  ifftConfig,\n  imagConfig,\n  isFiniteConfig,\n  isInfConfig,\n  isNaNConfig,\n  leakyReluConfig,\n  lessConfig,\n  lessEqualConfig,\n  linSpaceConfig,\n  logConfig,\n  log1pConfig,\n  logicalAndConfig,\n  logicalNotConfig,\n  logicalOrConfig,\n  lRNConfig,\n  lRNGradConfig,\n  maximumConfig,\n  maxPoolConfig,\n  maxPool3DConfig,\n  maxPool3DGradConfig,\n  maxPoolGradConfig,\n  maxPoolWithArgmaxConfig,\n  maxConfig,\n  meanConfig,\n  minConfig,\n  minimumConfig,\n  mirrorPadConfig,\n  modConfig,\n  multinomialConfig,\n  multiplyConfig,\n  negConfig,\n  nonMaxSuppressionV3Config,\n  nonMaxSuppressionV4Config,\n  nonMaxSuppressionV5Config,\n  notEqualConfig,\n  oneHotConfig,\n  onesLikeConfig,\n  packConfig,\n  padV2Config,\n  powConfig,\n  preluConfig,\n  prodConfig,\n  rangeConfig,\n  realConfig,\n  reciprocalConfig,\n  reluConfig,\n  relu6Config,\n  reshapeConfig,\n  resizeBilinearConfig,\n  resizeBilinearGradConfig,\n  resizeNearestNeighborConfig,\n  resizeNearestNeighborGradConfig,\n  reverseConfig,\n  rotateWithOffsetConfig,\n  roundConfig,\n  rsqrtConfig,\n  scatterNdConfig,\n  selectConfig,\n  seluConfig,\n  sigmoidConfig,\n  signConfig,\n  sinConfig,\n  sinhConfig,\n  sliceConfig,\n  softmaxConfig,\n  softplusConfig,\n  spaceToBatchNDConfig,\n  sparseFillEmptyRowsConfig,\n  sparseReshapeConfig,\n  sparseSegmentMeanConfig,\n  sparseSegmentSumConfig,\n  sparseToDenseConfig,\n  splitVConfig,\n  sqrtConfig,\n  squareConfig,\n  squaredDifferenceConfig,\n  stepConfig,\n  stridedSliceConfig,\n  stringNGramsConfig,\n  stringSplitConfig,\n  stringToHashBucketFastConfig,\n  subConfig,\n  sumConfig,\n  tanConfig,\n  tanhConfig,\n  tileConfig,\n  topKConfig,\n  transposeConfig,\n  transformConfig,\n  uniqueConfig,\n  unpackConfig,\n  unsortedSegmentSumConfig,\n  zerosLikeConfig\n];\n\nfor (const kernelConfig of kernelConfigs) {\n  registerKernel(kernelConfig);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, UnsortedSegmentSum, UnsortedSegmentSumAttrs, UnsortedSegmentSumInputs, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\nimport {cast} from './Cast';\nimport {equal} from './Equal';\nimport {expandDims} from './ExpandDims';\nimport {multiply} from './Multiply';\nimport {pack} from './Pack';\nimport {sum} from './Sum';\n\nexport function unsortedSegmentSum(args: {\n  inputs: UnsortedSegmentSumInputs,\n  backend: MathBackendCPU,\n  attrs: UnsortedSegmentSumAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x, segmentIds} = inputs;\n  const {numSegments} = attrs;\n\n  assertNotComplex(x, 'unsortedSegmentSum');\n\n  const xRank = x.shape.length;\n  const segmentIdsRank = segmentIds.shape.length;\n  const res = [];\n  const intermediates: TensorInfo[] = [];\n\n  // Reshape the segment id's so that they can be broadcast with\n  // x. The new shape should be [segmentIds.shape, 1, ..., 1]\n  const numIters = xRank - segmentIdsRank;\n  let $segmentIds = segmentIds;\n\n  for (let i = 0; i < numIters; ++i) {\n    const expanded = expandDims(\n        {inputs: {input: $segmentIds}, backend, attrs: {dim: i + 1}});\n    $segmentIds = expanded;\n    intermediates.push(expanded);\n  }\n\n  for (let i = 0; i < numSegments; ++i) {\n    const scalarValue = util.createScalarValue(i as {} as 'int32', 'int32');\n    const segmentId = backend.makeTensorInfo([], 'int32', scalarValue);\n    const mask =\n        equal({inputs: {a: segmentId, b: $segmentIds}, backend}) as TensorInfo;\n    const maskCasted =\n        cast({inputs: {x: mask}, backend, attrs: {dtype: 'float32'}});\n    const mul =\n        multiply({inputs: {a: maskCasted, b: x}, backend}) as TensorInfo;\n    const sumTensorInfo =\n        sum({inputs: {x: mul}, backend, attrs: {axis: 0, keepDims: false}});\n    res.push(sumTensorInfo);\n    intermediates.push(segmentId);\n    intermediates.push(mask);\n    intermediates.push(maskCasted);\n    intermediates.push(mul);\n    intermediates.push(sumTensorInfo);\n  }\n\n  const result = pack({inputs: res, backend, attrs: {axis: 0}});\n\n  intermediates.forEach(t => backend.disposeIntermediateTensorInfo(t));\n\n  return result;\n}\n\nexport const unsortedSegmentSumConfig: KernelConfig = {\n  kernelName: UnsortedSegmentSum,\n  backendName: 'cpu',\n  kernelFunc: unsortedSegmentSum as {} as KernelFunc\n};\n"],"sourceRoot":""}